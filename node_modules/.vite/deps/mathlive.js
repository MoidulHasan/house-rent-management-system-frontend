import "./chunk-BQOD6VY2.js";

// node_modules/mathlive/dist/mathlive.min.mjs
function e(e5) {
  return Array.isArray(e5);
}
function t() {
  return "window" in globalThis && "document" in globalThis;
}
function i() {
  if (!t())
    throw new Error("<math-field> is an interactive component that needs to run in a browser environment\nIf you are using nextjs, see https://nextjs.org/docs/advanced-features/dynamic-import#with-no-ssr");
}
function n() {
  return !!t() && (window.matchMedia ? window.matchMedia("(any-pointer: coarse)").matches : "ontouchstart" in window || navigator.maxTouchPoints > 0);
}
function r() {
  return t() && "function" == typeof navigator.vibrate;
}
function a() {
  var e5, i2;
  if (!t())
    return "other";
  const n2 = null !== (i2 = null === (e5 = navigator.userAgentData) || void 0 === e5 ? void 0 : e5.platform) && void 0 !== i2 ? i2 : navigator.platform;
  return /^mac/i.test(n2) ? 5 === navigator.maxTouchPoints ? "ios" : "macos" : /^win/i.test(n2) ? "windows" : /android/i.test(navigator.userAgent) ? "android" : /iphone|ipod|ipad/i.test(navigator.userAgent) ? "ios" : /\bcros\b/i.test(navigator.userAgent) ? "chromeos" : "other";
}
function o() {
  if (!t())
    return true;
  if (/firefox/i.test(navigator.userAgent)) {
    const e5 = navigator.userAgent.match(/firefox\/(\d+)/i);
    return !!e5 && parseInt(e5[1]) >= 78;
  }
  if (/trident/i.test(navigator.userAgent))
    return false;
  if (/edge/i.test(navigator.userAgent)) {
    const e5 = navigator.userAgent.match(/edg\/(\d+)/i);
    return !!e5 && parseInt(e5[1]) >= 79;
  }
  return true;
}
var s = {};
var l = { 60: "\\lt", 62: "\\gt", 111: "o", 38: "\\&", 123: "\\lbrace", 125: "\\rbrace", 91: "\\lbrack", 93: "\\rbrack", 58: "\\colon", 160: "~", 172: "\\neg", 183: "\\cdot", 188: "\\frac{1}{4}", 189: "\\frac{1}{2}", 190: "\\frac{3}{4}", 8304: "^{0}", 8305: "^{i}", 185: "^{1}", 178: "^{2}", 179: "^{3}", 8224: "\\dagger", 8225: "\\ddagger", 8230: "\\ldots", 8308: "^{4}", 8309: "^{5}", 8310: "^{6}", 8311: "^{7}", 8312: "^{8}", 8313: "^{9}", 8314: "^{+}", 8315: "^{-}", 8316: "^{=}", 8319: "^{n}", 8320: "_{0}", 8321: "_{1}", 8322: "_{2}", 8323: "_{3}", 8324: "_{4}", 8325: "_{5}", 8326: "_{6}", 8327: "_{7}", 8328: "_{8}", 8329: "_{9}", 8330: "_{+}", 8331: "_{-}", 8332: "_{=}", 8336: "_{a}", 8337: "_{e}", 8338: "_{o}", 8339: "_{x}", 8242: "\\prime", 39: "\\prime", 8592: "\\gets", 8594: "\\to", 9651: "\\triangle", 9661: "\\triangledown", 8715: "\\owns", 8727: "\\ast", 8739: "\\vert", 8741: "\\Vert", 8743: "\\land", 8744: "\\lor", 8901: "\\cdot", 8904: "\\bowtie", 8800: "\\ne", 8804: "\\le", 8805: "\\ge", 8869: "\\bot", 10231: "\\biconditional", 10232: "\\impliedby", 10233: "\\implies", 10234: "\\iff", 8450: "\\mathbb{C}", 8469: "\\mathbb{N}", 8473: "\\mathbb{P}", 8474: "\\mathbb{Q}", 8477: "\\mathbb{R}", 8484: "\\mathbb{Z}", 8461: "\\mathbb{H}", 8476: "\\Re", 8465: "\\Im", 42: "\\ast", 11036: "\\square", 9633: "\\square", 8720: "\\coprod", 8716: "\\not\\ni", 9671: "\\diamond", 8846: "\\uplus", 8851: "\\sqcap", 8852: "\\sqcup", 8768: "\\wr", 8750: "\\oint", 8226: "\\textbullet", 8722: "-", 978: "\\Upsilon" };
var u = {};
var c = {};
var d = { iff: "\\;\u27FA\\;", nicefrac: "^{#1}\\!\\!/\\!_{#2}", rd: "\\mathrm{d}", rD: "\\mathrm{D}", doubleStruckCapitalN: "\\mathbb{N}", doubleStruckCapitalR: "\\mathbb{R}", doubleStruckCapitalQ: "\\mathbb{Q}", doubleStruckCapitalZ: "\\mathbb{Z}", doubleStruckCapitalP: "\\mathbb{P}", scriptCapitalE: "\\mathscr{E}", scriptCapitalH: "\\mathscr{H}", scriptCapitalL: "\\mathscr{L}", gothicCapitalC: "\\mathfrak{C}", gothicCapitalH: "\\mathfrak{H}", gothicCapitalI: "\\mathfrak{I}", gothicCapitalR: "\\mathfrak{R}", imaginaryI: "\\mathrm{i}", imaginaryJ: "\\mathrm{j}", exponentialE: "\\mathrm{e}", differentialD: "\\mathrm{d}", capitalDifferentialD: "\\mathrm{D}", "braket.sty": { package: { bra: "\\mathinner{\\langle{#1}|}", ket: "\\mathinner{|{#1}\\rangle}", braket: "\\mathinner{\\langle{#1}\\rangle}", set: "\\mathinner{\\lbrace #1 \\rbrace}", Bra: "\\left\\langle #1\\right|", Ket: "\\left|#1\\right\\rangle", Braket: "\\left\\langle{#1}\\right\\rangle", Set: "\\left\\lbrace #1 \\right\\rbrace" } }, "amsmath.sty": { package: { varGamma: "\\mathit{\\Gamma}", varDelta: "\\mathit{\\Delta}", varTheta: "\\mathit{\\Theta}", varLambda: "\\mathit{\\Lambda}", varXi: "\\mathit{\\Xi}", varPi: "\\mathit{\\Pi}", varSigma: "\\mathit{\\Sigma}", varUpsilon: "\\mathit{\\Upsilon}", varPhi: "\\mathit{\\Phi}", varPsi: "\\mathit{\\Psi}", varOmega: "\\mathit{\\Omega}", pmod: { def: "\\quad(\\operatorname{mod}\\ #1)", args: 1, expand: false }, mod: { def: "\\quad\\operatorname{mod}\\,\\,#1", args: 1, expand: false }, bmod: { def: "\\;\\mathbin{\\operatorname{mod }}", expand: false } }, expand: false }, "texvc.sty": { package: { darr: "\\downarrow", dArr: "\\Downarrow", Darr: "\\Downarrow", lang: "\\langle", rang: "\\rangle", uarr: "\\uparrow", uArr: "\\Uparrow", Uarr: "\\Uparrow", N: "\\mathbb{N}", R: "\\mathbb{R}", Z: "\\mathbb{Z}", alef: "\\aleph", alefsym: "\\aleph", Alpha: "\\mathrm{A}", Beta: "\\mathrm{B}", bull: "\\bullet", Chi: "\\mathrm{X}", clubs: "\\clubsuit", cnums: "\\mathbb{C}", Complex: "\\mathbb{C}", Dagger: "\\ddagger", diamonds: "\\diamondsuit", empty: "\\emptyset", Epsilon: "\\mathrm{E}", Eta: "\\mathrm{H}", exist: "\\exists", harr: "\\leftrightarrow", hArr: "\\Leftrightarrow", Harr: "\\Leftrightarrow", hearts: "\\heartsuit", image: "\\Im", infin: "\\infty", Iota: "\\mathrm{I}", isin: "\\in", Kappa: "\\mathrm{K}", larr: "\\leftarrow", lArr: "\\Leftarrow", Larr: "\\Leftarrow", lrarr: "\\leftrightarrow", lrArr: "\\Leftrightarrow", Lrarr: "\\Leftrightarrow", Mu: "\\mathrm{M}", natnums: "\\mathbb{N}", Nu: "\\mathrm{N}", Omicron: "\\mathrm{O}", plusmn: "\\pm", rarr: "\\rightarrow", rArr: "\\Rightarrow", Rarr: "\\Rightarrow", real: "\\Re", reals: "\\mathbb{R}", Reals: "\\mathbb{R}", Rho: "\\mathrm{P}", sdot: "\\cdot", sect: "\\S", spades: "\\spadesuit", sub: "\\subset", sube: "\\subseteq", supe: "\\supseteq", Tau: "\\mathrm{T}", thetasym: "\\vartheta", weierp: "\\wp", Zeta: "\\mathrm{Z}" }, expand: false } };
var h = { " ": 32, "\\#": 35, "\\&": 38, "\\$": 36, "\\%": 37, "\\_": 95, "\\euro": 8364, "\\maltese": 10016, "\\{": 123, "\\}": 125, "\\nobreakspace": 160, "\\ldots": 8230, "\\textellipsis": 8230, "\\backslash": 92, "`": 8216, "'": 8217, "``": 8220, "''": 8221, "\\degree": 176, "\\textasciicircum": 94, "\\textasciitilde": 126, "\\textasteriskcentered": 42, "\\textbackslash": 92, "\\textbraceleft": 123, "\\textbraceright": 125, "\\textbullet": 8226, "\\textdollar": 36, "\\textsterling": 163, "\\textdagger": 8224, "\\textdaggerdbl": 8225, "\u2013": 8211, "\u2014": 8212, "\u2018": 8216, "\u2019": 8217, "\u201C": 8220, "\u201D": 8221, '"': 8221, "\\ss": 223, "\\ae": 230, "\\oe": 339, "\\AE": 198, "\\OE": 338, "\\O": 216, "\\i": 305, "\\j": 567, "\\aa": 229, "\\AA": 197 };
var m = /[\w!@*()-=+{}[\]\\';:?/.,~<>`|$%#&^" ]/;
var p = o() ? new RegExp("\\p{Letter}", "u") : /[a-zA-Z\u0430\u0410\u0431\u0411\u0432\u0412\u0433\u0413\u0434\u0414\u0435\u0415\u0451\u0401\u0436\u0416\u0437\u0417\u0438\u0418\u0439\u0419\u043a\u041a\u043b\u041b\u043c\u041c\u043d\u041d\u043e\u041e\u043f\u041f\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0444\u0424\u0445\u0425\u0446\u0426\u0447\u0427\u0448\u0428\u0449\u0429\u044a\u042a\u044b\u042b\u044c\u042c\u044d\u042d\u044e\u042e\u044f\u0104\u0105\u0106\u0107\u0118\u0119\u0141\u0142\u0143\u0144\xd3\xf3\u015a\u015b\u0179\u017a\u017b\u017c\xe0\xe2\xe4\xf4\xe9\xe8\xeb\xea\xef\xee\xe7\xf9\xfb\xfc\xff\xe6\u0153\xc0\xc2\xc4\xd4\xc9\xc8\xcb\xca\xcf\xce\u0178\xc7\xd9\xdb\xdc\xc6\u0152\xf6\xdf\xd6\u1e9e\xec\xed\xf2\xfa\xcc\xcd\xd2\xda\xe1\xf1\xc1\xd1]/;
var f = o() ? new RegExp("[0-9\\p{Letter}]", "u") : /[\da-zA-Z\u0430\u0410\u0431\u0411\u0432\u0412\u0433\u0413\u0434\u0414\u0435\u0415\u0451\u0401\u0436\u0416\u0437\u0417\u0438\u0418\u0439\u0419\u043a\u041a\u043b\u041b\u043c\u041c\u043d\u041d\u043e\u041e\u043f\u041f\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0444\u0424\u0445\u0425\u0446\u0426\u0447\u0427\u0448\u0428\u0449\u0429\u044a\u042a\u044b\u042b\u044c\u042c\u044d\u042d\u044e\u042e\u044f\u0104\u0105\u0106\u0107\u0118\u0119\u0141\u0142\u0143\u0144\xd3\xf3\u015a\u015b\u0179\u017a\u017b\u017c\xe0\xe2\xe4\xf4\xe9\xe8\xeb\xea\xef\xee\xe7\xf9\xfb\xfc\xff\xe6\u0153\xc0\xc2\xc4\xd4\xc9\xc8\xcb\xca\xcf\xce\u0178\xc7\xd9\xdb\xdc\xc6\u0152\xf6\xdf\xd6\u1e9e\xec\xed\xf2\xfa\xcc\xcd\xd2\xda\xe1\xf1\xc1\xd1]/;
function g(e5, t2, i2 = "mord", n2) {
  void 0 !== t2 && (s[e5] = { definitionType: "symbol", type: i2, variant: n2, codepoint: t2 }, l[t2] || (l[t2] = e5), h[e5] || (h[e5] = t2));
}
function y(e5, t2, i2) {
  if ("string" != typeof e5)
    for (const [n2, r2, a2, o2] of e5)
      g(n2, r2, null != a2 ? a2 : t2, null != o2 ? o2 : i2);
  else
    for (let t3 = 0; t3 < e5.length; t3++) {
      const i3 = e5.charAt(t3);
      g(i3, i3.codePointAt(0));
    }
}
function b(e5, t2) {
  for (let i2 = e5; i2 <= t2; i2++)
    g(String.fromCodePoint(i2), i2);
}
function v(e5, t2) {
  if (void 0 === t2)
    return "";
  if ("math" === e5 && l[t2])
    return l[t2];
  if ("text" === e5) {
    let e6 = Object.keys(h).find((e7) => h[e7] === t2);
    if (!e6) {
      const i2 = t2.toString(16);
      e6 = "^".repeat(i2.length) + i2;
    }
    return e6;
  }
  return String.fromCodePoint(t2);
}
var x = { 119893: 8462, 119965: 8492, 119968: 8496, 119969: 8497, 119971: 8459, 119972: 8464, 119975: 8466, 119976: 8499, 119981: 8475, 119994: 8495, 119996: 8458, 120004: 8500, 120070: 8493, 120075: 8460, 120076: 8465, 120085: 8476, 120093: 8488, 120122: 8450, 120127: 8461, 120133: 8469, 120135: 8473, 120136: 8474, 120137: 8477, 120145: 8484 };
var k = [{ start: 119808, len: 26, offset: 65, style: "bold" }, { start: 119834, len: 26, offset: 97, style: "bold" }, { start: 119860, len: 26, offset: 65, style: "italic" }, { start: 119886, len: 26, offset: 97, style: "italic" }, { start: 119912, len: 26, offset: 65, style: "bolditalic" }, { start: 119938, len: 26, offset: 97, style: "bolditalic" }, { start: 119964, len: 26, offset: 65, variant: "script" }, { start: 119990, len: 26, offset: 97, variant: "script" }, { start: 120016, len: 26, offset: 65, variant: "script", style: "bold" }, { start: 120042, len: 26, offset: 97, variant: "script", style: "bold" }, { start: 120068, len: 26, offset: 65, variant: "fraktur" }, { start: 120094, len: 26, offset: 97, variant: "fraktur" }, { start: 120172, len: 26, offset: 65, variant: "fraktur", style: "bold" }, { start: 120198, len: 26, offset: 97, variant: "fraktur", style: "bold" }, { start: 120120, len: 26, offset: 65, variant: "double-struck" }, { start: 120146, len: 26, offset: 97, variant: "double-struck" }, { start: 120224, len: 26, offset: 65, variant: "sans-serif" }, { start: 120250, len: 26, offset: 97, variant: "sans-serif" }, { start: 120276, len: 26, offset: 65, variant: "sans-serif", style: "bold" }, { start: 120302, len: 26, offset: 97, variant: "sans-serif", style: "bold" }, { start: 120328, len: 26, offset: 65, variant: "sans-serif", style: "italic" }, { start: 120354, len: 26, offset: 97, variant: "sans-serif", style: "italic" }, { start: 120380, len: 26, offset: 65, variant: "sans-serif", style: "bolditalic" }, { start: 120406, len: 26, offset: 97, variant: "sans-serif", style: "bolditalic" }, { start: 120432, len: 26, offset: 65, variant: "monospace" }, { start: 120458, len: 26, offset: 97, variant: "monospace" }, { start: 120488, len: 25, offset: 913, style: "bold" }, { start: 120514, len: 25, offset: 945, style: "bold" }, { start: 120546, len: 25, offset: 913, style: "italic" }, { start: 120572, len: 25, offset: 945, style: "italic" }, { start: 120604, len: 25, offset: 913, style: "bolditalic" }, { start: 120630, len: 25, offset: 945, style: "bolditalic" }, { start: 120662, len: 25, offset: 913, variant: "sans-serif", style: "bold" }, { start: 120688, len: 25, offset: 945, variant: "sans-serif", style: "bold" }, { start: 120720, len: 25, offset: 913, variant: "sans-serif", style: "bolditalic" }, { start: 120746, len: 25, offset: 945, variant: "sans-serif", style: "bolditalic" }, { start: 120782, len: 10, offset: 48, variant: "main", style: "bold" }, { start: 120792, len: 10, offset: 48, variant: "double-struck" }, { start: 120803, len: 10, offset: 48, variant: "sans-serif" }, { start: 120812, len: 10, offset: 48, variant: "sans-serif", style: "bold" }, { start: 120822, len: 10, offset: 48, variant: "monospace" }];
function _(e5) {
  let t2 = "auto";
  const i2 = e5.match(/:([^=]+)/);
  return i2 && (t2 = i2[1].trim()), t2;
}
function w(e5) {
  if (!e5)
    return [];
  const t2 = [];
  let i2 = e5.split("]");
  if (i2[0].startsWith("[")) {
    t2.push({ isOptional: true, type: _(i2[0].slice(1)) });
    for (let e6 = 1; e6 <= i2.length; e6++)
      t2.push(...w(i2[e6]));
  } else if (i2 = e5.split("}"), i2[0].startsWith("{")) {
    t2.push({ isOptional: false, type: _(i2[0].slice(1)) });
    for (let e6 = 1; e6 <= i2.length; e6++)
      t2.push(...w(i2[e6]));
  }
  return t2;
}
function S(e5) {
  if (!e5)
    return "";
  let t2 = "", i2 = true;
  for (const n2 of e5)
    "string" == typeof n2.value ? t2 += n2.value : i2 = false;
  return i2 ? t2 : "";
}
function M(e5, t2, i2, n2 = false) {
  "string" == typeof e5 && (e5 = [e5]);
  const r2 = { tabular: n2, params: w(t2), createAtom: i2 };
  for (const t3 of e5)
    c[t3] = r2;
}
function N(e5, t2, i2) {
  M(e5, t2, i2, true);
}
function L(e5, t2, i2) {
  var n2, r2;
  i2 || (i2 = {});
  const a2 = { definitionType: "function", params: w(t2), ifMode: i2.ifMode, isFunction: null !== (n2 = i2.isFunction) && void 0 !== n2 && n2, applyMode: i2.applyMode, infix: null !== (r2 = i2.infix) && void 0 !== r2 && r2, createAtom: i2.createAtom, applyStyle: i2.applyStyle };
  if ("string" == typeof e5)
    u["\\" + e5] = a2;
  else
    for (const t3 of e5)
      u["\\" + t3] = a2;
}
var A;
function C(e5) {
  return A || (A = D(d)), e5 ? D({ ...A, ...e5 }) : A;
}
function E(e5, t2) {
  var i2, n2, r2, a2;
  if ("string" == typeof e5) {
    let r3 = 0;
    const a3 = e5;
    return /(^|[^\\])#1/.test(a3) && (r3 = 1), /(^|[^\\])#2/.test(a3) && (r3 = 2), /(^|[^\\])#3/.test(a3) && (r3 = 3), /(^|[^\\])#4/.test(a3) && (r3 = 4), /(^|[^\\])#5/.test(a3) && (r3 = 5), /(^|[^\\])#6/.test(a3) && (r3 = 6), /(^|[^\\])#7/.test(a3) && (r3 = 7), /(^|[^\\])#8/.test(a3) && (r3 = 8), /(^|[^\\])#9/.test(a3) && (r3 = 9), { expand: null === (i2 = null == t2 ? void 0 : t2.expand) || void 0 === i2 || i2, captureSelection: null === (n2 = null == t2 ? void 0 : t2.captureSelection) || void 0 === n2 || n2, args: r3, def: a3 };
  }
  return { expand: null === (r2 = null == t2 ? void 0 : t2.expand) || void 0 === r2 || r2, captureSelection: null === (a2 = null == t2 ? void 0 : t2.captureSelection) || void 0 === a2 || a2, args: 0, ...e5 };
}
function D(e5) {
  if (!e5)
    return {};
  const t2 = {};
  for (const i2 of Object.keys(e5)) {
    const n2 = e5[i2];
    if (null == n2)
      delete t2[i2];
    else if ("object" == typeof n2 && "package" in n2)
      for (const e6 of Object.keys(n2.package))
        t2[e6] = E(n2.package[e6], { expand: n2.expand, captureSelection: n2.captureSelection });
    else
      t2[i2] = E(n2);
  }
  return t2;
}
var T = [0, 0.69444, 0, 0];
var z = [0, 0.61111, 0, 0];
var q = [0.25, 0.75, 0, 0];
var I = [0, 0.44444, 0, 0];
var F = [0, 0.68611, 0, 0];
var O = [0.19444, 0.69444, 0, 0];
var P = [0, 0.68333, 0, 0];
var B = [0, 0.68889, 0, 0];
var $ = [0, 0.69141, 0, 0];
var V = [0, 0, 0, 0];
var K = [0, 0.64444, 0, 0];
var R = [0, 0.69224, 0, 0];
var j = [0.19444, 0.44444, 0, 0];
var H = [0.65002, 1.15, 0, 0];
var W = [0, 0.55556, 0, 0];
var Z = [0.35001, 0.85, 0, 0];
var G = [1.25003, 1.75, 0, 0];
var U = [0.95003, 1.45, 0, 0];
var J = [0, 0.75, 0, 0];
var X = [0, 0.47534, 0, 0];
var Y = [0.25001, 0.75, 0, 0];
var Q = [0.55001, 1.05, 0, 0];
var ee = [0.16667, 0.68889, 0, 0];
var te = [0.08167, 0.58167, 0, 0];
var ie = { "AMS-Regular": { 32: V, 65: B, 66: B, 67: B, 68: B, 69: B, 70: B, 71: B, 72: B, 73: B, 74: ee, 75: B, 76: B, 77: B, 78: B, 79: ee, 80: B, 81: ee, 82: B, 83: B, 84: B, 85: B, 86: B, 87: B, 88: B, 89: B, 90: B, 107: B, 160: V, 165: [0, 0.675, 0.025, 0], 174: [0.15559, 0.69224, 0, 0], 240: B, 295: B, 710: [0, 0.825, 0, 0], 732: [0, 0.9, 0, 0], 770: [0, 0.825, 0, 0], 771: [0, 0.9, 0, 0], 989: te, 1008: [0, 0.43056, 0.04028, 0], 8245: [0, 0.54986, 0, 0], 8463: B, 8487: B, 8498: B, 8502: B, 8503: B, 8504: B, 8513: B, 8592: [-0.03598, 0.46402, 0, 0], 8594: [-0.03598, 0.46402, 0, 0], 8602: [-0.13313, 0.36687, 0, 0], 8603: [-0.13313, 0.36687, 0, 0], 8606: [0.01354, 0.52239, 0, 0], 8608: [0.01354, 0.52239, 0, 0], 8610: [0.01354, 0.52239, 0, 0], 8611: [0.01354, 0.52239, 0, 0], 8619: [0, 0.54986, 0, 0], 8620: [0, 0.54986, 0, 0], 8621: [-0.13313, 0.37788, 0, 0], 8622: [-0.13313, 0.36687, 0, 0], 8624: R, 8625: R, 8630: [0, 0.43056, 0, 0], 8631: [0, 0.43056, 0, 0], 8634: [0.08198, 0.58198, 0, 0], 8635: [0.08198, 0.58198, 0, 0], 8638: [0.19444, 0.69224, 0, 0], 8639: [0.19444, 0.69224, 0, 0], 8642: [0.19444, 0.69224, 0, 0], 8643: [0.19444, 0.69224, 0, 0], 8644: [0.1808, 0.675, 0, 0], 8646: [0.1808, 0.675, 0, 0], 8647: [0.1808, 0.675, 0, 0], 8648: [0.19444, 0.69224, 0, 0], 8649: [0.1808, 0.675, 0, 0], 8650: [0.19444, 0.69224, 0, 0], 8651: [0.01354, 0.52239, 0, 0], 8652: [0.01354, 0.52239, 0, 0], 8653: [-0.13313, 0.36687, 0, 0], 8654: [-0.13313, 0.36687, 0, 0], 8655: [-0.13313, 0.36687, 0, 0], 8666: [0.13667, 0.63667, 0, 0], 8667: [0.13667, 0.63667, 0, 0], 8669: [-0.13313, 0.37788, 0, 0], 8672: [-0.064, 0.437, 0, 0], 8674: [-0.064, 0.437, 0, 0], 8705: [0, 0.825, 0, 0], 8708: B, 8709: te, 8717: [0, 0.43056, 0, 0], 8722: [-0.03598, 0.46402, 0, 0], 8724: [0.08198, 0.69224, 0, 0], 8726: te, 8733: R, 8736: R, 8737: R, 8738: [0.03517, 0.52239, 0, 0], 8739: te, 8740: [0.25142, 0.74111, 0, 0], 8741: te, 8742: [0.25142, 0.74111, 0, 0], 8756: R, 8757: R, 8764: [-0.13313, 0.36687, 0, 0], 8765: [-0.13313, 0.37788, 0, 0], 8769: [-0.13313, 0.36687, 0, 0], 8770: [-0.03625, 0.46375, 0, 0], 8774: [0.30274, 0.79383, 0, 0], 8776: [-0.01688, 0.48312, 0, 0], 8778: te, 8782: [0.06062, 0.54986, 0, 0], 8783: [0.06062, 0.54986, 0, 0], 8785: [0.08198, 0.58198, 0, 0], 8786: [0.08198, 0.58198, 0, 0], 8787: [0.08198, 0.58198, 0, 0], 8790: R, 8791: [0.22958, 0.72958, 0, 0], 8796: [0.08198, 0.91667, 0, 0], 8806: [0.25583, 0.75583, 0, 0], 8807: [0.25583, 0.75583, 0, 0], 8808: [0.25142, 0.75726, 0, 0], 8809: [0.25142, 0.75726, 0, 0], 8812: [0.25583, 0.75583, 0, 0], 8814: [0.20576, 0.70576, 0, 0], 8815: [0.20576, 0.70576, 0, 0], 8816: [0.30274, 0.79383, 0, 0], 8817: [0.30274, 0.79383, 0, 0], 8818: [0.22958, 0.72958, 0, 0], 8819: [0.22958, 0.72958, 0, 0], 8822: [0.1808, 0.675, 0, 0], 8823: [0.1808, 0.675, 0, 0], 8828: [0.13667, 0.63667, 0, 0], 8829: [0.13667, 0.63667, 0, 0], 8830: [0.22958, 0.72958, 0, 0], 8831: [0.22958, 0.72958, 0, 0], 8832: [0.20576, 0.70576, 0, 0], 8833: [0.20576, 0.70576, 0, 0], 8840: [0.30274, 0.79383, 0, 0], 8841: [0.30274, 0.79383, 0, 0], 8842: [0.13597, 0.63597, 0, 0], 8843: [0.13597, 0.63597, 0, 0], 8847: [0.03517, 0.54986, 0, 0], 8848: [0.03517, 0.54986, 0, 0], 8858: [0.08198, 0.58198, 0, 0], 8859: [0.08198, 0.58198, 0, 0], 8861: [0.08198, 0.58198, 0, 0], 8862: [0, 0.675, 0, 0], 8863: [0, 0.675, 0, 0], 8864: [0, 0.675, 0, 0], 8865: [0, 0.675, 0, 0], 8872: R, 8873: R, 8874: R, 8876: B, 8877: B, 8878: B, 8879: B, 8882: [0.03517, 0.54986, 0, 0], 8883: [0.03517, 0.54986, 0, 0], 8884: [0.13667, 0.63667, 0, 0], 8885: [0.13667, 0.63667, 0, 0], 8888: [0, 0.54986, 0, 0], 8890: [0.19444, 0.43056, 0, 0], 8891: [0.19444, 0.69224, 0, 0], 8892: [0.19444, 0.69224, 0, 0], 8901: [0, 0.54986, 0, 0], 8903: te, 8905: te, 8906: te, 8907: R, 8908: R, 8909: [-0.03598, 0.46402, 0, 0], 8910: [0, 0.54986, 0, 0], 8911: [0, 0.54986, 0, 0], 8912: [0.03517, 0.54986, 0, 0], 8913: [0.03517, 0.54986, 0, 0], 8914: [0, 0.54986, 0, 0], 8915: [0, 0.54986, 0, 0], 8916: R, 8918: [0.0391, 0.5391, 0, 0], 8919: [0.0391, 0.5391, 0, 0], 8920: [0.03517, 0.54986, 0, 0], 8921: [0.03517, 0.54986, 0, 0], 8922: [0.38569, 0.88569, 0, 0], 8923: [0.38569, 0.88569, 0, 0], 8926: [0.13667, 0.63667, 0, 0], 8927: [0.13667, 0.63667, 0, 0], 8928: [0.30274, 0.79383, 0, 0], 8929: [0.30274, 0.79383, 0, 0], 8934: [0.23222, 0.74111, 0, 0], 8935: [0.23222, 0.74111, 0, 0], 8936: [0.23222, 0.74111, 0, 0], 8937: [0.23222, 0.74111, 0, 0], 8938: [0.20576, 0.70576, 0, 0], 8939: [0.20576, 0.70576, 0, 0], 8940: [0.30274, 0.79383, 0, 0], 8941: [0.30274, 0.79383, 0, 0], 8994: [0.19444, 0.69224, 0, 0], 8995: [0.19444, 0.69224, 0, 0], 9416: [0.15559, 0.69224, 0, 0], 9484: R, 9488: R, 9492: [0, 0.37788, 0, 0], 9496: [0, 0.37788, 0, 0], 9585: [0.19444, 0.68889, 0, 0], 9586: [0.19444, 0.74111, 0, 0], 9632: [0, 0.675, 0, 0], 9633: [0, 0.675, 0, 0], 9650: [0, 0.54986, 0, 0], 9651: [0, 0.54986, 0, 0], 9654: [0.03517, 0.54986, 0, 0], 9660: [0, 0.54986, 0, 0], 9661: [0, 0.54986, 0, 0], 9664: [0.03517, 0.54986, 0, 0], 9674: [0.11111, 0.69224, 0, 0], 9733: [0.19444, 0.69224, 0, 0], 10003: R, 10016: R, 10731: [0.11111, 0.69224, 0, 0], 10846: [0.19444, 0.75583, 0, 0], 10877: [0.13667, 0.63667, 0, 0], 10878: [0.13667, 0.63667, 0, 0], 10885: [0.25583, 0.75583, 0, 0], 10886: [0.25583, 0.75583, 0, 0], 10887: [0.13597, 0.63597, 0, 0], 10888: [0.13597, 0.63597, 0, 0], 10889: [0.26167, 0.75726, 0, 0], 10890: [0.26167, 0.75726, 0, 0], 10891: [0.48256, 0.98256, 0, 0], 10892: [0.48256, 0.98256, 0, 0], 10901: [0.13667, 0.63667, 0, 0], 10902: [0.13667, 0.63667, 0, 0], 10933: [0.25142, 0.75726, 0, 0], 10934: [0.25142, 0.75726, 0, 0], 10935: [0.26167, 0.75726, 0, 0], 10936: [0.26167, 0.75726, 0, 0], 10937: [0.26167, 0.75726, 0, 0], 10938: [0.26167, 0.75726, 0, 0], 10949: [0.25583, 0.75583, 0, 0], 10950: [0.25583, 0.75583, 0, 0], 10955: [0.28481, 0.79383, 0, 0], 10956: [0.28481, 0.79383, 0, 0], 57350: te, 57351: te, 57352: te, 57353: [0, 0.43056, 0.04028, 0], 57356: [0.25142, 0.75726, 0, 0], 57357: [0.25142, 0.75726, 0, 0], 57358: [0.41951, 0.91951, 0, 0], 57359: [0.30274, 0.79383, 0, 0], 57360: [0.30274, 0.79383, 0, 0], 57361: [0.41951, 0.91951, 0, 0], 57366: [0.25142, 0.75726, 0, 0], 57367: [0.25142, 0.75726, 0, 0], 57368: [0.25142, 0.75726, 0, 0], 57369: [0.25142, 0.75726, 0, 0], 57370: [0.13597, 0.63597, 0, 0], 57371: [0.13597, 0.63597, 0, 0] }, "Caligraphic-Regular": { 32: V, 65: [0, 0.68333, 0, 0.19445], 66: [0, 0.68333, 0.03041, 0.13889], 67: [0, 0.68333, 0.05834, 0.13889], 68: [0, 0.68333, 0.02778, 0.08334], 69: [0, 0.68333, 0.08944, 0.11111], 70: [0, 0.68333, 0.09931, 0.11111], 71: [0.09722, 0.68333, 0.0593, 0.11111], 72: [0, 0.68333, 965e-5, 0.11111], 73: [0, 0.68333, 0.07382, 0], 74: [0.09722, 0.68333, 0.18472, 0.16667], 75: [0, 0.68333, 0.01445, 0.05556], 76: [0, 0.68333, 0, 0.13889], 77: [0, 0.68333, 0, 0.13889], 78: [0, 0.68333, 0.14736, 0.08334], 79: [0, 0.68333, 0.02778, 0.11111], 80: [0, 0.68333, 0.08222, 0.08334], 81: [0.09722, 0.68333, 0, 0.11111], 82: [0, 0.68333, 0, 0.08334], 83: [0, 0.68333, 0.075, 0.13889], 84: [0, 0.68333, 0.25417, 0], 85: [0, 0.68333, 0.09931, 0.08334], 86: [0, 0.68333, 0.08222, 0], 87: [0, 0.68333, 0.08222, 0.08334], 88: [0, 0.68333, 0.14643, 0.13889], 89: [0.09722, 0.68333, 0.08222, 0.08334], 90: [0, 0.68333, 0.07944, 0.13889], 160: V }, "Fraktur-Regular": { 32: V, 33: $, 34: $, 38: $, 39: $, 40: [0.24982, 0.74947, 0, 0], 41: [0.24982, 0.74947, 0, 0], 42: [0, 0.62119, 0, 0], 43: [0.08319, 0.58283, 0, 0], 44: [0, 0.10803, 0, 0], 45: [0.08319, 0.58283, 0, 0], 46: [0, 0.10803, 0, 0], 47: [0.24982, 0.74947, 0, 0], 48: X, 49: X, 50: X, 51: [0.18906, 0.47534, 0, 0], 52: [0.18906, 0.47534, 0, 0], 53: [0.18906, 0.47534, 0, 0], 54: $, 55: [0.18906, 0.47534, 0, 0], 56: $, 57: [0.18906, 0.47534, 0, 0], 58: X, 59: [0.12604, 0.47534, 0, 0], 61: [-0.13099, 0.36866, 0, 0], 63: $, 65: $, 66: $, 67: $, 68: $, 69: $, 70: [0.12604, 0.69141, 0, 0], 71: $, 72: [0.06302, 0.69141, 0, 0], 73: $, 74: [0.12604, 0.69141, 0, 0], 75: $, 76: $, 77: $, 78: $, 79: $, 80: [0.18906, 0.69141, 0, 0], 81: [0.03781, 0.69141, 0, 0], 82: $, 83: $, 84: $, 85: $, 86: $, 87: $, 88: $, 89: [0.18906, 0.69141, 0, 0], 90: [0.12604, 0.69141, 0, 0], 91: [0.24982, 0.74947, 0, 0], 93: [0.24982, 0.74947, 0, 0], 94: $, 97: X, 98: $, 99: X, 100: [0, 0.62119, 0, 0], 101: X, 102: [0.18906, 0.69141, 0, 0], 103: [0.18906, 0.47534, 0, 0], 104: [0.18906, 0.69141, 0, 0], 105: $, 106: $, 107: $, 108: $, 109: X, 110: X, 111: X, 112: [0.18906, 0.52396, 0, 0], 113: [0.18906, 0.47534, 0, 0], 114: X, 115: X, 116: [0, 0.62119, 0, 0], 117: X, 118: [0, 0.52396, 0, 0], 119: [0, 0.52396, 0, 0], 120: [0.18906, 0.47534, 0, 0], 121: [0.18906, 0.47534, 0, 0], 122: [0.18906, 0.47534, 0, 0], 160: V, 8216: $, 8217: $, 58112: [0, 0.62119, 0, 0], 58113: [0, 0.62119, 0, 0], 58114: [0.18906, 0.69141, 0, 0], 58115: [0.18906, 0.69141, 0, 0], 58116: [0.18906, 0.47534, 0, 0], 58117: $, 58118: [0, 0.62119, 0, 0], 58119: X }, "Main-Bold": { 32: V, 33: T, 34: T, 35: O, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: T, 39: T, 40: q, 41: q, 42: J, 43: [0.13333, 0.63333, 0, 0], 44: [0.19444, 0.15556, 0, 0], 45: I, 46: [0, 0.15556, 0, 0], 47: q, 48: K, 49: K, 50: K, 51: K, 52: K, 53: K, 54: K, 55: K, 56: K, 57: K, 58: I, 59: j, 60: [0.08556, 0.58556, 0, 0], 61: [-0.10889, 0.39111, 0, 0], 62: [0.08556, 0.58556, 0, 0], 63: T, 64: T, 65: F, 66: F, 67: F, 68: F, 69: F, 70: F, 71: F, 72: F, 73: F, 74: F, 75: F, 76: F, 77: F, 78: F, 79: F, 80: F, 81: [0.19444, 0.68611, 0, 0], 82: F, 83: F, 84: F, 85: F, 86: [0, 0.68611, 0.01597, 0], 87: [0, 0.68611, 0.01597, 0], 88: F, 89: [0, 0.68611, 0.02875, 0], 90: F, 91: q, 92: q, 93: q, 94: T, 95: [0.31, 0.13444, 0.03194, 0], 97: I, 98: T, 99: I, 100: T, 101: I, 102: [0, 0.69444, 0.10903, 0], 103: [0.19444, 0.44444, 0.01597, 0], 104: T, 105: T, 106: O, 107: T, 108: T, 109: I, 110: I, 111: I, 112: j, 113: j, 114: I, 115: I, 116: [0, 0.63492, 0, 0], 117: I, 118: [0, 0.44444, 0.01597, 0], 119: [0, 0.44444, 0.01597, 0], 120: I, 121: [0.19444, 0.44444, 0.01597, 0], 122: I, 123: q, 124: q, 125: q, 126: [0.35, 0.34444, 0, 0], 160: V, 163: T, 168: T, 172: I, 176: T, 177: [0.13333, 0.63333, 0, 0], 184: [0.17014, 0, 0, 0], 198: F, 215: [0.13333, 0.63333, 0, 0], 216: [0.04861, 0.73472, 0, 0], 223: T, 230: I, 247: [0.13333, 0.63333, 0, 0], 248: [0.09722, 0.54167, 0, 0], 305: I, 338: F, 339: I, 567: j, 710: T, 711: [0, 0.63194, 0, 0], 713: [0, 0.59611, 0, 0], 714: T, 715: T, 728: T, 729: T, 730: T, 732: T, 733: T, 915: F, 916: F, 920: F, 923: F, 926: F, 928: F, 931: F, 933: F, 934: F, 936: F, 937: F, 8211: [0, 0.44444, 0.03194, 0], 8212: [0, 0.44444, 0.03194, 0], 8216: T, 8217: T, 8220: T, 8221: T, 8224: O, 8225: O, 8242: W, 8407: [0, 0.72444, 0.15486, 0], 8463: T, 8465: T, 8467: T, 8472: j, 8476: T, 8501: T, 8592: [-0.10889, 0.39111, 0, 0], 8593: O, 8594: [-0.10889, 0.39111, 0, 0], 8595: O, 8596: [-0.10889, 0.39111, 0, 0], 8597: q, 8598: O, 8599: O, 8600: O, 8601: O, 8636: [-0.10889, 0.39111, 0, 0], 8637: [-0.10889, 0.39111, 0, 0], 8640: [-0.10889, 0.39111, 0, 0], 8641: [-0.10889, 0.39111, 0, 0], 8656: [-0.10889, 0.39111, 0, 0], 8657: O, 8658: [-0.10889, 0.39111, 0, 0], 8659: O, 8660: [-0.10889, 0.39111, 0, 0], 8661: q, 8704: T, 8706: [0, 0.69444, 0.06389, 0], 8707: T, 8709: [0.05556, 0.75, 0, 0], 8711: F, 8712: [0.08556, 0.58556, 0, 0], 8715: [0.08556, 0.58556, 0, 0], 8722: [0.13333, 0.63333, 0, 0], 8723: [0.13333, 0.63333, 0, 0], 8725: q, 8726: q, 8727: [-0.02778, 0.47222, 0, 0], 8728: [-0.02639, 0.47361, 0, 0], 8729: [-0.02639, 0.47361, 0, 0], 8730: [0.18, 0.82, 0, 0], 8733: I, 8734: I, 8736: R, 8739: q, 8741: q, 8743: W, 8744: W, 8745: W, 8746: W, 8747: [0.19444, 0.69444, 0.12778, 0], 8764: [-0.10889, 0.39111, 0, 0], 8768: O, 8771: [222e-5, 0.50222, 0, 0], 8776: [0.02444, 0.52444, 0, 0], 8781: [222e-5, 0.50222, 0, 0], 8801: [222e-5, 0.50222, 0, 0], 8804: [0.19667, 0.69667, 0, 0], 8805: [0.19667, 0.69667, 0, 0], 8810: [0.08556, 0.58556, 0, 0], 8811: [0.08556, 0.58556, 0, 0], 8826: [0.08556, 0.58556, 0, 0], 8827: [0.08556, 0.58556, 0, 0], 8834: [0.08556, 0.58556, 0, 0], 8835: [0.08556, 0.58556, 0, 0], 8838: [0.19667, 0.69667, 0, 0], 8839: [0.19667, 0.69667, 0, 0], 8846: W, 8849: [0.19667, 0.69667, 0, 0], 8850: [0.19667, 0.69667, 0, 0], 8851: W, 8852: W, 8853: [0.13333, 0.63333, 0, 0], 8854: [0.13333, 0.63333, 0, 0], 8855: [0.13333, 0.63333, 0, 0], 8856: [0.13333, 0.63333, 0, 0], 8857: [0.13333, 0.63333, 0, 0], 8866: T, 8867: T, 8868: T, 8869: T, 8900: [-0.02639, 0.47361, 0, 0], 8901: [-0.02639, 0.47361, 0, 0], 8902: [-0.02778, 0.47222, 0, 0], 8968: q, 8969: q, 8970: q, 8971: q, 8994: [-0.13889, 0.36111, 0, 0], 8995: [-0.13889, 0.36111, 0, 0], 9651: O, 9657: [-0.02778, 0.47222, 0, 0], 9661: O, 9667: [-0.02778, 0.47222, 0, 0], 9711: O, 9824: [0.12963, 0.69444, 0, 0], 9825: [0.12963, 0.69444, 0, 0], 9826: [0.12963, 0.69444, 0, 0], 9827: [0.12963, 0.69444, 0, 0], 9837: J, 9838: O, 9839: O, 10216: q, 10217: q, 10815: F, 10927: [0.19667, 0.69667, 0, 0], 10928: [0.19667, 0.69667, 0, 0], 57376: O }, "Main-BoldItalic": { 32: V, 33: [0, 0.69444, 0.11417, 0], 34: [0, 0.69444, 0.07939, 0], 35: [0.19444, 0.69444, 0.06833, 0], 37: [0.05556, 0.75, 0.12861, 0], 38: [0, 0.69444, 0.08528, 0], 39: [0, 0.69444, 0.12945, 0], 40: [0.25, 0.75, 0.15806, 0], 41: [0.25, 0.75, 0.03306, 0], 42: [0, 0.75, 0.14333, 0], 43: [0.10333, 0.60333, 0.03306, 0], 44: [0.19444, 0.14722, 0, 0], 45: [0, 0.44444, 0.02611, 0], 46: [0, 0.14722, 0, 0], 47: [0.25, 0.75, 0.15806, 0], 48: [0, 0.64444, 0.13167, 0], 49: [0, 0.64444, 0.13167, 0], 50: [0, 0.64444, 0.13167, 0], 51: [0, 0.64444, 0.13167, 0], 52: [0.19444, 0.64444, 0.13167, 0], 53: [0, 0.64444, 0.13167, 0], 54: [0, 0.64444, 0.13167, 0], 55: [0.19444, 0.64444, 0.13167, 0], 56: [0, 0.64444, 0.13167, 0], 57: [0, 0.64444, 0.13167, 0], 58: [0, 0.44444, 0.06695, 0], 59: [0.19444, 0.44444, 0.06695, 0], 61: [-0.10889, 0.39111, 0.06833, 0], 63: [0, 0.69444, 0.11472, 0], 64: [0, 0.69444, 0.09208, 0], 65: F, 66: [0, 0.68611, 0.0992, 0], 67: [0, 0.68611, 0.14208, 0], 68: [0, 0.68611, 0.09062, 0], 69: [0, 0.68611, 0.11431, 0], 70: [0, 0.68611, 0.12903, 0], 71: [0, 0.68611, 0.07347, 0], 72: [0, 0.68611, 0.17208, 0], 73: [0, 0.68611, 0.15681, 0], 74: [0, 0.68611, 0.145, 0], 75: [0, 0.68611, 0.14208, 0], 76: F, 77: [0, 0.68611, 0.17208, 0], 78: [0, 0.68611, 0.17208, 0], 79: [0, 0.68611, 0.09062, 0], 80: [0, 0.68611, 0.0992, 0], 81: [0.19444, 0.68611, 0.09062, 0], 82: [0, 0.68611, 0.02559, 0], 83: [0, 0.68611, 0.11264, 0], 84: [0, 0.68611, 0.12903, 0], 85: [0, 0.68611, 0.17208, 0], 86: [0, 0.68611, 0.18625, 0], 87: [0, 0.68611, 0.18625, 0], 88: [0, 0.68611, 0.15681, 0], 89: [0, 0.68611, 0.19803, 0], 90: [0, 0.68611, 0.14208, 0], 91: [0.25, 0.75, 0.1875, 0], 93: [0.25, 0.75, 0.09972, 0], 94: [0, 0.69444, 0.06709, 0], 95: [0.31, 0.13444, 0.09811, 0], 97: [0, 0.44444, 0.09426, 0], 98: [0, 0.69444, 0.07861, 0], 99: [0, 0.44444, 0.05222, 0], 100: [0, 0.69444, 0.10861, 0], 101: [0, 0.44444, 0.085, 0], 102: [0.19444, 0.69444, 0.21778, 0], 103: [0.19444, 0.44444, 0.105, 0], 104: [0, 0.69444, 0.09426, 0], 105: [0, 0.69326, 0.11387, 0], 106: [0.19444, 0.69326, 0.1672, 0], 107: [0, 0.69444, 0.11111, 0], 108: [0, 0.69444, 0.10861, 0], 109: [0, 0.44444, 0.09426, 0], 110: [0, 0.44444, 0.09426, 0], 111: [0, 0.44444, 0.07861, 0], 112: [0.19444, 0.44444, 0.07861, 0], 113: [0.19444, 0.44444, 0.105, 0], 114: [0, 0.44444, 0.11111, 0], 115: [0, 0.44444, 0.08167, 0], 116: [0, 0.63492, 0.09639, 0], 117: [0, 0.44444, 0.09426, 0], 118: [0, 0.44444, 0.11111, 0], 119: [0, 0.44444, 0.11111, 0], 120: [0, 0.44444, 0.12583, 0], 121: [0.19444, 0.44444, 0.105, 0], 122: [0, 0.44444, 0.13889, 0], 126: [0.35, 0.34444, 0.11472, 0], 160: V, 168: [0, 0.69444, 0.11473, 0], 176: T, 184: [0.17014, 0, 0, 0], 198: [0, 0.68611, 0.11431, 0], 216: [0.04861, 0.73472, 0.09062, 0], 223: [0.19444, 0.69444, 0.09736, 0], 230: [0, 0.44444, 0.085, 0], 248: [0.09722, 0.54167, 0.09458, 0], 305: [0, 0.44444, 0.09426, 0], 338: [0, 0.68611, 0.11431, 0], 339: [0, 0.44444, 0.085, 0], 567: [0.19444, 0.44444, 0.04611, 0], 710: [0, 0.69444, 0.06709, 0], 711: [0, 0.63194, 0.08271, 0], 713: [0, 0.59444, 0.10444, 0], 714: [0, 0.69444, 0.08528, 0], 715: T, 728: [0, 0.69444, 0.10333, 0], 729: [0, 0.69444, 0.12945, 0], 730: T, 732: [0, 0.69444, 0.11472, 0], 733: [0, 0.69444, 0.11472, 0], 915: [0, 0.68611, 0.12903, 0], 916: F, 920: [0, 0.68611, 0.09062, 0], 923: F, 926: [0, 0.68611, 0.15092, 0], 928: [0, 0.68611, 0.17208, 0], 931: [0, 0.68611, 0.11431, 0], 933: [0, 0.68611, 0.10778, 0], 934: [0, 0.68611, 0.05632, 0], 936: [0, 0.68611, 0.10778, 0], 937: [0, 0.68611, 0.0992, 0], 8211: [0, 0.44444, 0.09811, 0], 8212: [0, 0.44444, 0.09811, 0], 8216: [0, 0.69444, 0.12945, 0], 8217: [0, 0.69444, 0.12945, 0], 8220: [0, 0.69444, 0.16772, 0], 8221: [0, 0.69444, 0.07939, 0] }, "Main-Italic": { 32: V, 33: [0, 0.69444, 0.12417, 0], 34: [0, 0.69444, 0.06961, 0], 35: [0.19444, 0.69444, 0.06616, 0], 37: [0.05556, 0.75, 0.13639, 0], 38: [0, 0.69444, 0.09694, 0], 39: [0, 0.69444, 0.12417, 0], 40: [0.25, 0.75, 0.16194, 0], 41: [0.25, 0.75, 0.03694, 0], 42: [0, 0.75, 0.14917, 0], 43: [0.05667, 0.56167, 0.03694, 0], 44: [0.19444, 0.10556, 0, 0], 45: [0, 0.43056, 0.02826, 0], 46: [0, 0.10556, 0, 0], 47: [0.25, 0.75, 0.16194, 0], 48: [0, 0.64444, 0.13556, 0], 49: [0, 0.64444, 0.13556, 0], 50: [0, 0.64444, 0.13556, 0], 51: [0, 0.64444, 0.13556, 0], 52: [0.19444, 0.64444, 0.13556, 0], 53: [0, 0.64444, 0.13556, 0], 54: [0, 0.64444, 0.13556, 0], 55: [0.19444, 0.64444, 0.13556, 0], 56: [0, 0.64444, 0.13556, 0], 57: [0, 0.64444, 0.13556, 0], 58: [0, 0.43056, 0.0582, 0], 59: [0.19444, 0.43056, 0.0582, 0], 61: [-0.13313, 0.36687, 0.06616, 0], 63: [0, 0.69444, 0.1225, 0], 64: [0, 0.69444, 0.09597, 0], 65: P, 66: [0, 0.68333, 0.10257, 0], 67: [0, 0.68333, 0.14528, 0], 68: [0, 0.68333, 0.09403, 0], 69: [0, 0.68333, 0.12028, 0], 70: [0, 0.68333, 0.13305, 0], 71: [0, 0.68333, 0.08722, 0], 72: [0, 0.68333, 0.16389, 0], 73: [0, 0.68333, 0.15806, 0], 74: [0, 0.68333, 0.14028, 0], 75: [0, 0.68333, 0.14528, 0], 76: P, 77: [0, 0.68333, 0.16389, 0], 78: [0, 0.68333, 0.16389, 0], 79: [0, 0.68333, 0.09403, 0], 80: [0, 0.68333, 0.10257, 0], 81: [0.19444, 0.68333, 0.09403, 0], 82: [0, 0.68333, 0.03868, 0], 83: [0, 0.68333, 0.11972, 0], 84: [0, 0.68333, 0.13305, 0], 85: [0, 0.68333, 0.16389, 0], 86: [0, 0.68333, 0.18361, 0], 87: [0, 0.68333, 0.18361, 0], 88: [0, 0.68333, 0.15806, 0], 89: [0, 0.68333, 0.19383, 0], 90: [0, 0.68333, 0.14528, 0], 91: [0.25, 0.75, 0.1875, 0], 93: [0.25, 0.75, 0.10528, 0], 94: [0, 0.69444, 0.06646, 0], 95: [0.31, 0.12056, 0.09208, 0], 97: [0, 0.43056, 0.07671, 0], 98: [0, 0.69444, 0.06312, 0], 99: [0, 0.43056, 0.05653, 0], 100: [0, 0.69444, 0.10333, 0], 101: [0, 0.43056, 0.07514, 0], 102: [0.19444, 0.69444, 0.21194, 0], 103: [0.19444, 0.43056, 0.08847, 0], 104: [0, 0.69444, 0.07671, 0], 105: [0, 0.65536, 0.1019, 0], 106: [0.19444, 0.65536, 0.14467, 0], 107: [0, 0.69444, 0.10764, 0], 108: [0, 0.69444, 0.10333, 0], 109: [0, 0.43056, 0.07671, 0], 110: [0, 0.43056, 0.07671, 0], 111: [0, 0.43056, 0.06312, 0], 112: [0.19444, 0.43056, 0.06312, 0], 113: [0.19444, 0.43056, 0.08847, 0], 114: [0, 0.43056, 0.10764, 0], 115: [0, 0.43056, 0.08208, 0], 116: [0, 0.61508, 0.09486, 0], 117: [0, 0.43056, 0.07671, 0], 118: [0, 0.43056, 0.10764, 0], 119: [0, 0.43056, 0.10764, 0], 120: [0, 0.43056, 0.12042, 0], 121: [0.19444, 0.43056, 0.08847, 0], 122: [0, 0.43056, 0.12292, 0], 126: [0.35, 0.31786, 0.11585, 0], 160: V, 168: [0, 0.66786, 0.10474, 0], 176: T, 184: [0.17014, 0, 0, 0], 198: [0, 0.68333, 0.12028, 0], 216: [0.04861, 0.73194, 0.09403, 0], 223: [0.19444, 0.69444, 0.10514, 0], 230: [0, 0.43056, 0.07514, 0], 248: [0.09722, 0.52778, 0.09194, 0], 338: [0, 0.68333, 0.12028, 0], 339: [0, 0.43056, 0.07514, 0], 710: [0, 0.69444, 0.06646, 0], 711: [0, 0.62847, 0.08295, 0], 713: [0, 0.56167, 0.10333, 0], 714: [0, 0.69444, 0.09694, 0], 715: T, 728: [0, 0.69444, 0.10806, 0], 729: [0, 0.66786, 0.11752, 0], 730: T, 732: [0, 0.66786, 0.11585, 0], 733: [0, 0.69444, 0.1225, 0], 915: [0, 0.68333, 0.13305, 0], 916: P, 920: [0, 0.68333, 0.09403, 0], 923: P, 926: [0, 0.68333, 0.15294, 0], 928: [0, 0.68333, 0.16389, 0], 931: [0, 0.68333, 0.12028, 0], 933: [0, 0.68333, 0.11111, 0], 934: [0, 0.68333, 0.05986, 0], 936: [0, 0.68333, 0.11111, 0], 937: [0, 0.68333, 0.10257, 0], 8211: [0, 0.43056, 0.09208, 0], 8212: [0, 0.43056, 0.09208, 0], 8216: [0, 0.69444, 0.12417, 0], 8217: [0, 0.69444, 0.12417, 0], 8220: [0, 0.69444, 0.1685, 0], 8221: [0, 0.69444, 0.06961, 0], 8463: B }, "Main-Regular": { 32: V, 33: T, 34: T, 35: O, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: T, 39: T, 40: q, 41: q, 42: J, 43: [0.08333, 0.58333, 0, 0], 44: [0.19444, 0.10556, 0, 0], 45: [0, 0.43056, 0, 0], 46: [0, 0.10556, 0, 0], 47: q, 48: K, 49: K, 50: K, 51: K, 52: K, 53: K, 54: K, 55: K, 56: K, 57: K, 58: [0, 0.43056, 0, 0], 59: [0.19444, 0.43056, 0, 0], 60: [0.0391, 0.5391, 0, 0], 61: [-0.13313, 0.36687, 0, 0], 62: [0.0391, 0.5391, 0, 0], 63: T, 64: T, 65: P, 66: P, 67: P, 68: P, 69: P, 70: P, 71: P, 72: P, 73: P, 74: P, 75: P, 76: P, 77: P, 78: P, 79: P, 80: P, 81: [0.19444, 0.68333, 0, 0], 82: P, 83: P, 84: P, 85: P, 86: [0, 0.68333, 0.01389, 0], 87: [0, 0.68333, 0.01389, 0], 88: P, 89: [0, 0.68333, 0.025, 0], 90: P, 91: q, 92: q, 93: q, 94: T, 95: [0.31, 0.12056, 0.02778, 0], 97: [0, 0.43056, 0, 0], 98: T, 99: [0, 0.43056, 0, 0], 100: T, 101: [0, 0.43056, 0, 0], 102: [0, 0.69444, 0.07778, 0], 103: [0.19444, 0.43056, 0.01389, 0], 104: T, 105: [0, 0.66786, 0, 0], 106: [0.19444, 0.66786, 0, 0], 107: T, 108: T, 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0], 112: [0.19444, 0.43056, 0, 0], 113: [0.19444, 0.43056, 0, 0], 114: [0, 0.43056, 0, 0], 115: [0, 0.43056, 0, 0], 116: [0, 0.61508, 0, 0], 117: [0, 0.43056, 0, 0], 118: [0, 0.43056, 0.01389, 0], 119: [0, 0.43056, 0.01389, 0], 120: [0, 0.43056, 0, 0], 121: [0.19444, 0.43056, 0.01389, 0], 122: [0, 0.43056, 0, 0], 123: q, 124: q, 125: q, 126: [0.35, 0.31786, 0, 0], 160: V, 163: T, 167: O, 168: [0, 0.66786, 0, 0], 172: [0, 0.43056, 0, 0], 176: T, 177: [0.08333, 0.58333, 0, 0], 182: O, 184: [0.17014, 0, 0, 0], 198: P, 215: [0.08333, 0.58333, 0, 0], 216: [0.04861, 0.73194, 0, 0], 223: T, 230: [0, 0.43056, 0, 0], 247: [0.08333, 0.58333, 0, 0], 248: [0.09722, 0.52778, 0, 0], 305: [0, 0.43056, 0, 0], 338: P, 339: [0, 0.43056, 0, 0], 567: [0.19444, 0.43056, 0, 0], 710: T, 711: [0, 0.62847, 0, 0], 713: [0, 0.56778, 0, 0], 714: T, 715: T, 728: T, 729: [0, 0.66786, 0, 0], 730: T, 732: [0, 0.66786, 0, 0], 733: T, 915: P, 916: P, 920: P, 923: P, 926: P, 928: P, 931: P, 933: P, 934: P, 936: P, 937: P, 8211: [0, 0.43056, 0.02778, 0], 8212: [0, 0.43056, 0.02778, 0], 8216: T, 8217: T, 8220: T, 8221: T, 8224: O, 8225: O, 8230: [0, 0.12, 0, 0], 8242: W, 8407: [0, 0.71444, 0.15382, 0], 8463: B, 8465: T, 8467: [0, 0.69444, 0, 0.11111], 8472: [0.19444, 0.43056, 0, 0.11111], 8476: T, 8501: T, 8592: [-0.13313, 0.36687, 0, 0], 8593: O, 8594: [-0.13313, 0.36687, 0, 0], 8595: O, 8596: [-0.13313, 0.36687, 0, 0], 8597: q, 8598: O, 8599: O, 8600: O, 8601: O, 8614: [0.011, 0.511, 0, 0], 8617: [0.011, 0.511, 0, 0], 8618: [0.011, 0.511, 0, 0], 8636: [-0.13313, 0.36687, 0, 0], 8637: [-0.13313, 0.36687, 0, 0], 8640: [-0.13313, 0.36687, 0, 0], 8641: [-0.13313, 0.36687, 0, 0], 8652: [0.011, 0.671, 0, 0], 8656: [-0.13313, 0.36687, 0, 0], 8657: O, 8658: [-0.13313, 0.36687, 0, 0], 8659: O, 8660: [-0.13313, 0.36687, 0, 0], 8661: q, 8704: T, 8706: [0, 0.69444, 0.05556, 0.08334], 8707: T, 8709: [0.05556, 0.75, 0, 0], 8711: P, 8712: [0.0391, 0.5391, 0, 0], 8715: [0.0391, 0.5391, 0, 0], 8722: [0.08333, 0.58333, 0, 0], 8723: [0.08333, 0.58333, 0, 0], 8725: q, 8726: q, 8727: [-0.03472, 0.46528, 0, 0], 8728: [-0.05555, 0.44445, 0, 0], 8729: [-0.05555, 0.44445, 0, 0], 8730: [0.2, 0.8, 0, 0], 8733: [0, 0.43056, 0, 0], 8734: [0, 0.43056, 0, 0], 8736: R, 8739: q, 8741: q, 8743: W, 8744: W, 8745: W, 8746: W, 8747: [0.19444, 0.69444, 0.11111, 0], 8764: [-0.13313, 0.36687, 0, 0], 8768: O, 8771: [-0.03625, 0.46375, 0, 0], 8773: [-0.022, 0.589, 0, 0], 8776: [-0.01688, 0.48312, 0, 0], 8781: [-0.03625, 0.46375, 0, 0], 8784: [-0.133, 0.67, 0, 0], 8801: [-0.03625, 0.46375, 0, 0], 8804: [0.13597, 0.63597, 0, 0], 8805: [0.13597, 0.63597, 0, 0], 8810: [0.0391, 0.5391, 0, 0], 8811: [0.0391, 0.5391, 0, 0], 8826: [0.0391, 0.5391, 0, 0], 8827: [0.0391, 0.5391, 0, 0], 8834: [0.0391, 0.5391, 0, 0], 8835: [0.0391, 0.5391, 0, 0], 8838: [0.13597, 0.63597, 0, 0], 8839: [0.13597, 0.63597, 0, 0], 8846: W, 8849: [0.13597, 0.63597, 0, 0], 8850: [0.13597, 0.63597, 0, 0], 8851: W, 8852: W, 8853: [0.08333, 0.58333, 0, 0], 8854: [0.08333, 0.58333, 0, 0], 8855: [0.08333, 0.58333, 0, 0], 8856: [0.08333, 0.58333, 0, 0], 8857: [0.08333, 0.58333, 0, 0], 8866: T, 8867: T, 8868: T, 8869: T, 8872: [0.249, 0.75, 0, 0], 8900: [-0.05555, 0.44445, 0, 0], 8901: [-0.05555, 0.44445, 0, 0], 8902: [-0.03472, 0.46528, 0, 0], 8904: [5e-3, 0.505, 0, 0], 8942: [0.03, 0.9, 0, 0], 8943: [-0.19, 0.31, 0, 0], 8945: [-0.1, 0.82, 0, 0], 8968: q, 8969: q, 8970: q, 8971: q, 8994: [-0.14236, 0.35764, 0, 0], 8995: [-0.14236, 0.35764, 0, 0], 9136: [0.244, 0.744, 0, 0], 9137: [0.244, 0.744, 0, 0], 9651: O, 9657: [-0.03472, 0.46528, 0, 0], 9661: O, 9667: [-0.03472, 0.46528, 0, 0], 9711: O, 9824: [0.12963, 0.69444, 0, 0], 9825: [0.12963, 0.69444, 0, 0], 9826: [0.12963, 0.69444, 0, 0], 9827: [0.12963, 0.69444, 0, 0], 9837: J, 9838: O, 9839: O, 10216: q, 10217: q, 10222: [0.244, 0.744, 0, 0], 10223: [0.244, 0.744, 0, 0], 10229: [0.011, 0.511, 0, 0], 10230: [0.011, 0.511, 0, 0], 10231: [0.011, 0.511, 0, 0], 10232: [0.024, 0.525, 0, 0], 10233: [0.024, 0.525, 0, 0], 10234: [0.024, 0.525, 0, 0], 10236: [0.011, 0.511, 0, 0], 10815: P, 10927: [0.13597, 0.63597, 0, 0], 10928: [0.13597, 0.63597, 0, 0], 57376: O }, "Math-BoldItalic": { 32: V, 48: I, 49: I, 50: I, 51: j, 52: j, 53: j, 54: K, 55: j, 56: K, 57: j, 65: F, 66: [0, 0.68611, 0.04835, 0], 67: [0, 0.68611, 0.06979, 0], 68: [0, 0.68611, 0.03194, 0], 69: [0, 0.68611, 0.05451, 0], 70: [0, 0.68611, 0.15972, 0], 71: F, 72: [0, 0.68611, 0.08229, 0], 73: [0, 0.68611, 0.07778, 0], 74: [0, 0.68611, 0.10069, 0], 75: [0, 0.68611, 0.06979, 0], 76: F, 77: [0, 0.68611, 0.11424, 0], 78: [0, 0.68611, 0.11424, 0], 79: [0, 0.68611, 0.03194, 0], 80: [0, 0.68611, 0.15972, 0], 81: [0.19444, 0.68611, 0, 0], 82: [0, 0.68611, 421e-5, 0], 83: [0, 0.68611, 0.05382, 0], 84: [0, 0.68611, 0.15972, 0], 85: [0, 0.68611, 0.11424, 0], 86: [0, 0.68611, 0.25555, 0], 87: [0, 0.68611, 0.15972, 0], 88: [0, 0.68611, 0.07778, 0], 89: [0, 0.68611, 0.25555, 0], 90: [0, 0.68611, 0.06979, 0], 97: I, 98: T, 99: I, 100: T, 101: I, 102: [0.19444, 0.69444, 0.11042, 0], 103: [0.19444, 0.44444, 0.03704, 0], 104: T, 105: [0, 0.69326, 0, 0], 106: [0.19444, 0.69326, 0.0622, 0], 107: [0, 0.69444, 0.01852, 0], 108: [0, 0.69444, 88e-4, 0], 109: I, 110: I, 111: I, 112: j, 113: [0.19444, 0.44444, 0.03704, 0], 114: [0, 0.44444, 0.03194, 0], 115: I, 116: [0, 0.63492, 0, 0], 117: I, 118: [0, 0.44444, 0.03704, 0], 119: [0, 0.44444, 0.02778, 0], 120: I, 121: [0.19444, 0.44444, 0.03704, 0], 122: [0, 0.44444, 0.04213, 0], 160: V, 915: [0, 0.68611, 0.15972, 0], 916: F, 920: [0, 0.68611, 0.03194, 0], 923: F, 926: [0, 0.68611, 0.07458, 0], 928: [0, 0.68611, 0.08229, 0], 931: [0, 0.68611, 0.05451, 0], 933: [0, 0.68611, 0.15972, 0], 934: F, 936: [0, 0.68611, 0.11653, 0], 937: [0, 0.68611, 0.04835, 0], 945: I, 946: [0.19444, 0.69444, 0.03403, 0], 947: [0.19444, 0.44444, 0.06389, 0], 948: [0, 0.69444, 0.03819, 0], 949: I, 950: [0.19444, 0.69444, 0.06215, 0], 951: [0.19444, 0.44444, 0.03704, 0], 952: [0, 0.69444, 0.03194, 0], 953: I, 954: I, 955: T, 956: j, 957: [0, 0.44444, 0.06898, 0], 958: [0.19444, 0.69444, 0.03021, 0], 959: I, 960: [0, 0.44444, 0.03704, 0], 961: j, 962: [0.09722, 0.44444, 0.07917, 0], 963: [0, 0.44444, 0.03704, 0], 964: [0, 0.44444, 0.13472, 0], 965: [0, 0.44444, 0.03704, 0], 966: j, 967: j, 968: [0.19444, 0.69444, 0.03704, 0], 969: [0, 0.44444, 0.03704, 0], 977: T, 981: O, 982: [0, 0.44444, 0.03194, 0], 1009: j, 1013: I, 57649: I, 57911: j }, "Math-Italic": { 32: V, 48: [0, 0.43056, 0, 0], 49: [0, 0.43056, 0, 0], 50: [0, 0.43056, 0, 0], 51: [0.19444, 0.43056, 0, 0], 52: [0.19444, 0.43056, 0, 0], 53: [0.19444, 0.43056, 0, 0], 54: K, 55: [0.19444, 0.43056, 0, 0], 56: K, 57: [0.19444, 0.43056, 0, 0], 65: [0, 0.68333, 0, 0.13889], 66: [0, 0.68333, 0.05017, 0.08334], 67: [0, 0.68333, 0.07153, 0.08334], 68: [0, 0.68333, 0.02778, 0.05556], 69: [0, 0.68333, 0.05764, 0.08334], 70: [0, 0.68333, 0.13889, 0.08334], 71: [0, 0.68333, 0, 0.08334], 72: [0, 0.68333, 0.08125, 0.05556], 73: [0, 0.68333, 0.07847, 0.11111], 74: [0, 0.68333, 0.09618, 0.16667], 75: [0, 0.68333, 0.07153, 0.05556], 76: [0, 0.68333, 0, 0.02778], 77: [0, 0.68333, 0.10903, 0.08334], 78: [0, 0.68333, 0.10903, 0.08334], 79: [0, 0.68333, 0.02778, 0.08334], 80: [0, 0.68333, 0.13889, 0.08334], 81: [0.19444, 0.68333, 0, 0.08334], 82: [0, 0.68333, 773e-5, 0.08334], 83: [0, 0.68333, 0.05764, 0.08334], 84: [0, 0.68333, 0.13889, 0.08334], 85: [0, 0.68333, 0.10903, 0.02778], 86: [0, 0.68333, 0.22222, 0], 87: [0, 0.68333, 0.13889, 0], 88: [0, 0.68333, 0.07847, 0.08334], 89: [0, 0.68333, 0.22222, 0], 90: [0, 0.68333, 0.07153, 0.08334], 97: [0, 0.43056, 0, 0], 98: T, 99: [0, 0.43056, 0, 0.05556], 100: [0, 0.69444, 0, 0.16667], 101: [0, 0.43056, 0, 0.05556], 102: [0.19444, 0.69444, 0.10764, 0.16667], 103: [0.19444, 0.43056, 0.03588, 0.02778], 104: T, 105: [0, 0.65952, 0, 0], 106: [0.19444, 0.65952, 0.05724, 0], 107: [0, 0.69444, 0.03148, 0], 108: [0, 0.69444, 0.01968, 0.08334], 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0.05556], 112: [0.19444, 0.43056, 0, 0.08334], 113: [0.19444, 0.43056, 0.03588, 0.08334], 114: [0, 0.43056, 0.02778, 0.05556], 115: [0, 0.43056, 0, 0.05556], 116: [0, 0.61508, 0, 0.08334], 117: [0, 0.43056, 0, 0.02778], 118: [0, 0.43056, 0.03588, 0.02778], 119: [0, 0.43056, 0.02691, 0.08334], 120: [0, 0.43056, 0, 0.02778], 121: [0.19444, 0.43056, 0.03588, 0.05556], 122: [0, 0.43056, 0.04398, 0.05556], 160: V, 915: [0, 0.68333, 0.13889, 0.08334], 916: [0, 0.68333, 0, 0.16667], 920: [0, 0.68333, 0.02778, 0.08334], 923: [0, 0.68333, 0, 0.16667], 926: [0, 0.68333, 0.07569, 0.08334], 928: [0, 0.68333, 0.08125, 0.05556], 931: [0, 0.68333, 0.05764, 0.08334], 933: [0, 0.68333, 0.13889, 0.05556], 934: [0, 0.68333, 0, 0.08334], 936: [0, 0.68333, 0.11, 0.05556], 937: [0, 0.68333, 0.05017, 0.08334], 945: [0, 0.43056, 37e-4, 0.02778], 946: [0.19444, 0.69444, 0.05278, 0.08334], 947: [0.19444, 0.43056, 0.05556, 0], 948: [0, 0.69444, 0.03785, 0.05556], 949: [0, 0.43056, 0, 0.08334], 950: [0.19444, 0.69444, 0.07378, 0.08334], 951: [0.19444, 0.43056, 0.03588, 0.05556], 952: [0, 0.69444, 0.02778, 0.08334], 953: [0, 0.43056, 0, 0.05556], 954: [0, 0.43056, 0, 0], 955: T, 956: [0.19444, 0.43056, 0, 0.02778], 957: [0, 0.43056, 0.06366, 0.02778], 958: [0.19444, 0.69444, 0.04601, 0.11111], 959: [0, 0.43056, 0, 0.05556], 960: [0, 0.43056, 0.03588, 0], 961: [0.19444, 0.43056, 0, 0.08334], 962: [0.09722, 0.43056, 0.07986, 0.08334], 963: [0, 0.43056, 0.03588, 0], 964: [0, 0.43056, 0.1132, 0.02778], 965: [0, 0.43056, 0.03588, 0.02778], 966: [0.19444, 0.43056, 0, 0.08334], 967: [0.19444, 0.43056, 0, 0.05556], 968: [0.19444, 0.69444, 0.03588, 0.11111], 969: [0, 0.43056, 0.03588, 0], 977: [0, 0.69444, 0, 0.08334], 981: [0.19444, 0.69444, 0, 0.08334], 982: [0, 0.43056, 0.02778, 0], 1009: [0.19444, 0.43056, 0, 0.08334], 1013: [0, 0.43056, 0, 0.05556], 57649: [0, 0.43056, 0, 0.02778], 57911: [0.19444, 0.43056, 0, 0.08334] }, "SansSerif-Bold": { 32: V, 33: T, 34: T, 35: O, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: T, 39: T, 40: q, 41: q, 42: J, 43: [0.11667, 0.61667, 0, 0], 44: [0.10556, 0.13056, 0, 0], 45: [0, 0.45833, 0, 0], 46: [0, 0.13056, 0, 0], 47: q, 48: T, 49: T, 50: T, 51: T, 52: T, 53: T, 54: T, 55: T, 56: T, 57: T, 58: [0, 0.45833, 0, 0], 59: [0.10556, 0.45833, 0, 0], 61: [-0.09375, 0.40625, 0, 0], 63: T, 64: T, 65: T, 66: T, 67: T, 68: T, 69: T, 70: T, 71: T, 72: T, 73: T, 74: T, 75: T, 76: T, 77: T, 78: T, 79: T, 80: T, 81: [0.10556, 0.69444, 0, 0], 82: T, 83: T, 84: T, 85: T, 86: [0, 0.69444, 0.01528, 0], 87: [0, 0.69444, 0.01528, 0], 88: T, 89: [0, 0.69444, 0.0275, 0], 90: T, 91: q, 93: q, 94: T, 95: [0.35, 0.10833, 0.03056, 0], 97: [0, 0.45833, 0, 0], 98: T, 99: [0, 0.45833, 0, 0], 100: T, 101: [0, 0.45833, 0, 0], 102: [0, 0.69444, 0.07639, 0], 103: [0.19444, 0.45833, 0.01528, 0], 104: T, 105: T, 106: O, 107: T, 108: T, 109: [0, 0.45833, 0, 0], 110: [0, 0.45833, 0, 0], 111: [0, 0.45833, 0, 0], 112: [0.19444, 0.45833, 0, 0], 113: [0.19444, 0.45833, 0, 0], 114: [0, 0.45833, 0.01528, 0], 115: [0, 0.45833, 0, 0], 116: [0, 0.58929, 0, 0], 117: [0, 0.45833, 0, 0], 118: [0, 0.45833, 0.01528, 0], 119: [0, 0.45833, 0.01528, 0], 120: [0, 0.45833, 0, 0], 121: [0.19444, 0.45833, 0.01528, 0], 122: [0, 0.45833, 0, 0], 126: [0.35, 0.34444, 0, 0], 160: V, 168: T, 176: T, 180: T, 184: [0.17014, 0, 0, 0], 305: [0, 0.45833, 0, 0], 567: [0.19444, 0.45833, 0, 0], 710: T, 711: [0, 0.63542, 0, 0], 713: [0, 0.63778, 0, 0], 728: T, 729: T, 730: T, 732: T, 733: T, 915: T, 916: T, 920: T, 923: T, 926: T, 928: T, 931: T, 933: T, 934: T, 936: T, 937: T, 8211: [0, 0.45833, 0.03056, 0], 8212: [0, 0.45833, 0.03056, 0], 8216: T, 8217: T, 8220: T, 8221: T }, "SansSerif-Italic": { 32: V, 33: [0, 0.69444, 0.05733, 0], 34: [0, 0.69444, 316e-5, 0], 35: [0.19444, 0.69444, 0.05087, 0], 36: [0.05556, 0.75, 0.11156, 0], 37: [0.05556, 0.75, 0.03126, 0], 38: [0, 0.69444, 0.03058, 0], 39: [0, 0.69444, 0.07816, 0], 40: [0.25, 0.75, 0.13164, 0], 41: [0.25, 0.75, 0.02536, 0], 42: [0, 0.75, 0.11775, 0], 43: [0.08333, 0.58333, 0.02536, 0], 44: [0.125, 0.08333, 0, 0], 45: [0, 0.44444, 0.01946, 0], 46: [0, 0.08333, 0, 0], 47: [0.25, 0.75, 0.13164, 0], 48: [0, 0.65556, 0.11156, 0], 49: [0, 0.65556, 0.11156, 0], 50: [0, 0.65556, 0.11156, 0], 51: [0, 0.65556, 0.11156, 0], 52: [0, 0.65556, 0.11156, 0], 53: [0, 0.65556, 0.11156, 0], 54: [0, 0.65556, 0.11156, 0], 55: [0, 0.65556, 0.11156, 0], 56: [0, 0.65556, 0.11156, 0], 57: [0, 0.65556, 0.11156, 0], 58: [0, 0.44444, 0.02502, 0], 59: [0.125, 0.44444, 0.02502, 0], 61: [-0.13, 0.37, 0.05087, 0], 63: [0, 0.69444, 0.11809, 0], 64: [0, 0.69444, 0.07555, 0], 65: T, 66: [0, 0.69444, 0.08293, 0], 67: [0, 0.69444, 0.11983, 0], 68: [0, 0.69444, 0.07555, 0], 69: [0, 0.69444, 0.11983, 0], 70: [0, 0.69444, 0.13372, 0], 71: [0, 0.69444, 0.11983, 0], 72: [0, 0.69444, 0.08094, 0], 73: [0, 0.69444, 0.13372, 0], 74: [0, 0.69444, 0.08094, 0], 75: [0, 0.69444, 0.11983, 0], 76: T, 77: [0, 0.69444, 0.08094, 0], 78: [0, 0.69444, 0.08094, 0], 79: [0, 0.69444, 0.07555, 0], 80: [0, 0.69444, 0.08293, 0], 81: [0.125, 0.69444, 0.07555, 0], 82: [0, 0.69444, 0.08293, 0], 83: [0, 0.69444, 0.09205, 0], 84: [0, 0.69444, 0.13372, 0], 85: [0, 0.69444, 0.08094, 0], 86: [0, 0.69444, 0.1615, 0], 87: [0, 0.69444, 0.1615, 0], 88: [0, 0.69444, 0.13372, 0], 89: [0, 0.69444, 0.17261, 0], 90: [0, 0.69444, 0.11983, 0], 91: [0.25, 0.75, 0.15942, 0], 93: [0.25, 0.75, 0.08719, 0], 94: [0, 0.69444, 0.0799, 0], 95: [0.35, 0.09444, 0.08616, 0], 97: [0, 0.44444, 981e-5, 0], 98: [0, 0.69444, 0.03057, 0], 99: [0, 0.44444, 0.08336, 0], 100: [0, 0.69444, 0.09483, 0], 101: [0, 0.44444, 0.06778, 0], 102: [0, 0.69444, 0.21705, 0], 103: [0.19444, 0.44444, 0.10836, 0], 104: [0, 0.69444, 0.01778, 0], 105: [0, 0.67937, 0.09718, 0], 106: [0.19444, 0.67937, 0.09162, 0], 107: [0, 0.69444, 0.08336, 0], 108: [0, 0.69444, 0.09483, 0], 109: [0, 0.44444, 0.01778, 0], 110: [0, 0.44444, 0.01778, 0], 111: [0, 0.44444, 0.06613, 0], 112: [0.19444, 0.44444, 0.0389, 0], 113: [0.19444, 0.44444, 0.04169, 0], 114: [0, 0.44444, 0.10836, 0], 115: [0, 0.44444, 0.0778, 0], 116: [0, 0.57143, 0.07225, 0], 117: [0, 0.44444, 0.04169, 0], 118: [0, 0.44444, 0.10836, 0], 119: [0, 0.44444, 0.10836, 0], 120: [0, 0.44444, 0.09169, 0], 121: [0.19444, 0.44444, 0.10836, 0], 122: [0, 0.44444, 0.08752, 0], 126: [0.35, 0.32659, 0.08826, 0], 160: V, 168: [0, 0.67937, 0.06385, 0], 176: T, 184: [0.17014, 0, 0, 0], 305: [0, 0.44444, 0.04169, 0], 567: [0.19444, 0.44444, 0.04169, 0], 710: [0, 0.69444, 0.0799, 0], 711: [0, 0.63194, 0.08432, 0], 713: [0, 0.60889, 0.08776, 0], 714: [0, 0.69444, 0.09205, 0], 715: T, 728: [0, 0.69444, 0.09483, 0], 729: [0, 0.67937, 0.07774, 0], 730: T, 732: [0, 0.67659, 0.08826, 0], 733: [0, 0.69444, 0.09205, 0], 915: [0, 0.69444, 0.13372, 0], 916: T, 920: [0, 0.69444, 0.07555, 0], 923: T, 926: [0, 0.69444, 0.12816, 0], 928: [0, 0.69444, 0.08094, 0], 931: [0, 0.69444, 0.11983, 0], 933: [0, 0.69444, 0.09031, 0], 934: [0, 0.69444, 0.04603, 0], 936: [0, 0.69444, 0.09031, 0], 937: [0, 0.69444, 0.08293, 0], 8211: [0, 0.44444, 0.08616, 0], 8212: [0, 0.44444, 0.08616, 0], 8216: [0, 0.69444, 0.07816, 0], 8217: [0, 0.69444, 0.07816, 0], 8220: [0, 0.69444, 0.14205, 0], 8221: [0, 0.69444, 316e-5, 0] }, "SansSerif-Regular": { 32: V, 33: T, 34: T, 35: O, 36: [0.05556, 0.75, 0, 0], 37: [0.05556, 0.75, 0, 0], 38: T, 39: T, 40: q, 41: q, 42: J, 43: [0.08333, 0.58333, 0, 0], 44: [0.125, 0.08333, 0, 0], 45: I, 46: [0, 0.08333, 0, 0], 47: q, 48: [0, 0.65556, 0, 0], 49: [0, 0.65556, 0, 0], 50: [0, 0.65556, 0, 0], 51: [0, 0.65556, 0, 0], 52: [0, 0.65556, 0, 0], 53: [0, 0.65556, 0, 0], 54: [0, 0.65556, 0, 0], 55: [0, 0.65556, 0, 0], 56: [0, 0.65556, 0, 0], 57: [0, 0.65556, 0, 0], 58: I, 59: [0.125, 0.44444, 0, 0], 61: [-0.13, 0.37, 0, 0], 63: T, 64: T, 65: T, 66: T, 67: T, 68: T, 69: T, 70: T, 71: T, 72: T, 73: T, 74: T, 75: T, 76: T, 77: T, 78: T, 79: T, 80: T, 81: [0.125, 0.69444, 0, 0], 82: T, 83: T, 84: T, 85: T, 86: [0, 0.69444, 0.01389, 0], 87: [0, 0.69444, 0.01389, 0], 88: T, 89: [0, 0.69444, 0.025, 0], 90: T, 91: q, 93: q, 94: T, 95: [0.35, 0.09444, 0.02778, 0], 97: I, 98: T, 99: I, 100: T, 101: I, 102: [0, 0.69444, 0.06944, 0], 103: [0.19444, 0.44444, 0.01389, 0], 104: T, 105: [0, 0.67937, 0, 0], 106: [0.19444, 0.67937, 0, 0], 107: T, 108: T, 109: I, 110: I, 111: I, 112: j, 113: j, 114: [0, 0.44444, 0.01389, 0], 115: I, 116: [0, 0.57143, 0, 0], 117: I, 118: [0, 0.44444, 0.01389, 0], 119: [0, 0.44444, 0.01389, 0], 120: I, 121: [0.19444, 0.44444, 0.01389, 0], 122: I, 126: [0.35, 0.32659, 0, 0], 160: V, 168: [0, 0.67937, 0, 0], 176: T, 184: [0.17014, 0, 0, 0], 305: I, 567: j, 710: T, 711: [0, 0.63194, 0, 0], 713: [0, 0.60889, 0, 0], 714: T, 715: T, 728: T, 729: [0, 0.67937, 0, 0], 730: T, 732: [0, 0.67659, 0, 0], 733: T, 915: T, 916: T, 920: T, 923: T, 926: T, 928: T, 931: T, 933: T, 934: T, 936: T, 937: T, 8211: [0, 0.44444, 0.02778, 0], 8212: [0, 0.44444, 0.02778, 0], 8216: T, 8217: T, 8220: T, 8221: T }, "Script-Regular": { 32: V, 65: [0, 0.7, 0.22925, 0], 66: [0, 0.7, 0.04087, 0], 67: [0, 0.7, 0.1689, 0], 68: [0, 0.7, 0.09371, 0], 69: [0, 0.7, 0.18583, 0], 70: [0, 0.7, 0.13634, 0], 71: [0, 0.7, 0.17322, 0], 72: [0, 0.7, 0.29694, 0], 73: [0, 0.7, 0.19189, 0], 74: [0.27778, 0.7, 0.19189, 0], 75: [0, 0.7, 0.31259, 0], 76: [0, 0.7, 0.19189, 0], 77: [0, 0.7, 0.15981, 0], 78: [0, 0.7, 0.3525, 0], 79: [0, 0.7, 0.08078, 0], 80: [0, 0.7, 0.08078, 0], 81: [0, 0.7, 0.03305, 0], 82: [0, 0.7, 0.06259, 0], 83: [0, 0.7, 0.19189, 0], 84: [0, 0.7, 0.29087, 0], 85: [0, 0.7, 0.25815, 0], 86: [0, 0.7, 0.27523, 0], 87: [0, 0.7, 0.27523, 0], 88: [0, 0.7, 0.26006, 0], 89: [0, 0.7, 0.2939, 0], 90: [0, 0.7, 0.24037, 0], 160: V }, "Size1-Regular": { 32: V, 40: Z, 41: Z, 47: Z, 91: Z, 92: Z, 93: Z, 123: Z, 125: Z, 160: V, 710: [0, 0.72222, 0, 0], 732: [0, 0.72222, 0, 0], 770: [0, 0.72222, 0, 0], 771: [0, 0.72222, 0, 0], 8214: [-99e-5, 0.601, 0, 0], 8593: [1e-5, 0.6, 0, 0], 8595: [1e-5, 0.6, 0, 0], 8657: [1e-5, 0.6, 0, 0], 8659: [1e-5, 0.6, 0, 0], 8719: Y, 8720: Y, 8721: Y, 8730: Z, 8739: [-599e-5, 0.606, 0, 0], 8741: [-599e-5, 0.606, 0, 0], 8747: [0.30612, 0.805, 0.19445, 0], 8748: [0.306, 0.805, 0.19445, 0], 8749: [0.306, 0.805, 0.19445, 0], 8750: [0.30612, 0.805, 0.19445, 0], 8896: Y, 8897: Y, 8898: Y, 8899: Y, 8968: Z, 8969: Z, 8970: Z, 8971: Z, 9168: [-99e-5, 0.601, 0, 0], 10216: Z, 10217: Z, 10752: Y, 10753: Y, 10754: Y, 10756: Y, 10758: Y }, "Size2-Regular": { 32: V, 40: H, 41: H, 47: H, 91: H, 92: H, 93: H, 123: H, 125: H, 160: V, 710: J, 732: J, 770: J, 771: J, 8719: Q, 8720: Q, 8721: Q, 8730: H, 8747: [0.86225, 1.36, 0.44445, 0], 8748: [0.862, 1.36, 0.44445, 0], 8749: [0.862, 1.36, 0.44445, 0], 8750: [0.86225, 1.36, 0.44445, 0], 8896: Q, 8897: Q, 8898: Q, 8899: Q, 8968: H, 8969: H, 8970: H, 8971: H, 10216: H, 10217: H, 10752: Q, 10753: Q, 10754: Q, 10756: Q, 10758: Q }, "Size3-Regular": { 32: V, 40: U, 41: U, 47: U, 91: U, 92: U, 93: U, 123: U, 125: U, 160: V, 710: J, 732: J, 770: J, 771: J, 8730: U, 8968: U, 8969: U, 8970: U, 8971: U, 10216: U, 10217: U }, "Size4-Regular": { 32: V, 40: G, 41: G, 47: G, 91: G, 92: G, 93: G, 123: G, 125: G, 160: V, 710: [0, 0.825, 0, 0], 732: [0, 0.825, 0, 0], 770: [0, 0.825, 0, 0], 771: [0, 0.825, 0, 0], 8730: G, 8968: G, 8969: G, 8970: G, 8971: G, 9115: [0.64502, 1.155, 0, 0], 9116: [1e-5, 0.6, 0, 0], 9117: [0.64502, 1.155, 0, 0], 9118: [0.64502, 1.155, 0, 0], 9119: [1e-5, 0.6, 0, 0], 9120: [0.64502, 1.155, 0, 0], 9121: [0.64502, 1.155, 0, 0], 9122: [-99e-5, 0.601, 0, 0], 9123: [0.64502, 1.155, 0, 0], 9124: [0.64502, 1.155, 0, 0], 9125: [-99e-5, 0.601, 0, 0], 9126: [0.64502, 1.155, 0, 0], 9127: [1e-5, 0.9, 0, 0], 9128: H, 9129: [0.90001, 0, 0, 0], 9130: [0, 0.3, 0, 0], 9131: [1e-5, 0.9, 0, 0], 9132: H, 9133: [0.90001, 0, 0, 0], 9143: [0.88502, 0.915, 0, 0], 10216: G, 10217: G, 57344: [-499e-5, 0.605, 0, 0], 57345: [-499e-5, 0.605, 0, 0], 57680: [0, 0.12, 0, 0], 57681: [0, 0.12, 0, 0], 57682: [0, 0.12, 0, 0], 57683: [0, 0.12, 0, 0] }, "Typewriter-Regular": { 32: V, 33: z, 34: z, 35: z, 36: [0.08333, 0.69444, 0, 0], 37: [0.08333, 0.69444, 0, 0], 38: z, 39: z, 40: [0.08333, 0.69444, 0, 0], 41: [0.08333, 0.69444, 0, 0], 42: [0, 0.52083, 0, 0], 43: [-0.08056, 0.53055, 0, 0], 44: [0.13889, 0.125, 0, 0], 45: [-0.08056, 0.53055, 0, 0], 46: [0, 0.125, 0, 0], 47: [0.08333, 0.69444, 0, 0], 48: z, 49: z, 50: z, 51: z, 52: z, 53: z, 54: z, 55: z, 56: z, 57: z, 58: [0, 0.43056, 0, 0], 59: [0.13889, 0.43056, 0, 0], 60: [-0.05556, 0.55556, 0, 0], 61: [-0.19549, 0.41562, 0, 0], 62: [-0.05556, 0.55556, 0, 0], 63: z, 64: z, 65: z, 66: z, 67: z, 68: z, 69: z, 70: z, 71: z, 72: z, 73: z, 74: z, 75: z, 76: z, 77: z, 78: z, 79: z, 80: z, 81: [0.13889, 0.61111, 0, 0], 82: z, 83: z, 84: z, 85: z, 86: z, 87: z, 88: z, 89: z, 90: z, 91: [0.08333, 0.69444, 0, 0], 92: [0.08333, 0.69444, 0, 0], 93: [0.08333, 0.69444, 0, 0], 94: z, 95: [0.09514, 0, 0, 0], 96: z, 97: [0, 0.43056, 0, 0], 98: z, 99: [0, 0.43056, 0, 0], 100: z, 101: [0, 0.43056, 0, 0], 102: z, 103: [0.22222, 0.43056, 0, 0], 104: z, 105: z, 106: [0.22222, 0.61111, 0, 0], 107: z, 108: z, 109: [0, 0.43056, 0, 0], 110: [0, 0.43056, 0, 0], 111: [0, 0.43056, 0, 0], 112: [0.22222, 0.43056, 0, 0], 113: [0.22222, 0.43056, 0, 0], 114: [0, 0.43056, 0, 0], 115: [0, 0.43056, 0, 0], 116: [0, 0.55358, 0, 0], 117: [0, 0.43056, 0, 0], 118: [0, 0.43056, 0, 0], 119: [0, 0.43056, 0, 0], 120: [0, 0.43056, 0, 0], 121: [0.22222, 0.43056, 0, 0], 122: [0, 0.43056, 0, 0], 123: [0.08333, 0.69444, 0, 0], 124: [0.08333, 0.69444, 0, 0], 125: [0.08333, 0.69444, 0, 0], 126: z, 127: z, 160: V, 176: z, 184: [0.19445, 0, 0, 0], 305: [0, 0.43056, 0, 0], 567: [0.22222, 0.43056, 0, 0], 711: [0, 0.56597, 0, 0], 713: [0, 0.56555, 0, 0], 714: z, 715: z, 728: z, 730: z, 770: z, 771: z, 776: z, 915: z, 916: z, 920: z, 923: z, 926: z, 928: z, 931: z, 933: z, 934: z, 936: z, 937: z, 8216: z, 8217: z, 8242: z, 9251: [0.11111, 0.21944, 0, 0] } };
var ne = /[\u3040-\u309F]|[\u30A0-\u30FF]|[\u4E00-\u9FAF]|[\uAC00-\uD7AF]/;
var re = { slant: [0.25, 0.25, 0.25], space: [0, 0, 0], stretch: [0, 0, 0], shrink: [0, 0, 0], xHeight: [0.431, 0.431, 0.431], quad: [1, 1.171, 1.472], extraSpace: [0, 0, 0], num1: [0.677, 0.732, 0.925], num2: [0.394, 0.384, 0.387], num3: [0.444, 0.471, 0.504], denom1: [0.686, 0.752, 1.025], denom2: [0.345, 0.344, 0.532], sup1: [0.413, 0.503, 0.504], sup2: [0.363, 0.431, 0.404], sup3: [0.289, 0.286, 0.294], sub1: [0.15, 0.143, 0.2], sub2: [0.247, 0.286, 0.4], supDrop: [0.386, 0.353, 0.494], subDrop: [0.05, 0.071, 0.1], delim1: [2.39, 1.7, 1.98], delim2: [1.01, 1.157, 1.42], axisHeight: [0.25, 0.25, 0.25], defaultRuleThickness: [0.04, 0.049, 0.049], bigOpSpacing1: [0.111, 0.111, 0.111], bigOpSpacing2: [0.166, 0.166, 0.166], bigOpSpacing3: [0.2, 0.2, 0.2], bigOpSpacing4: [0.6, 0.611, 0.611], bigOpSpacing5: [0.1, 0.143, 0.143], sqrtRuleThickness: [0.04, 0.04, 0.04] };
var ae = [0, 0.5, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488];
var oe = { "\xA0": " ", "\u200B": " ", \u00C5: "A", \u00C7: "C", \u00D0: "D", \u00DE: "o", \u00E5: "a", \u00E7: "c", \u00F0: "d", \u00FE: "o", \u0410: "A", \u0411: "B", \u0412: "B", \u0413: "F", \u0414: "A", \u0415: "E", \u0416: "K", \u0417: "3", \u0418: "N", \u0419: "N", \u041A: "K", \u041B: "N", \u041C: "M", \u041D: "H", \u041E: "O", \u041F: "N", \u0420: "P", \u0421: "C", \u0422: "T", \u0423: "y", \u0424: "O", \u0425: "X", \u0426: "U", \u0427: "h", \u0428: "W", \u0429: "W", \u042A: "B", \u042B: "X", \u042C: "B", \u042D: "3", \u042E: "X", \u042F: "R", \u0430: "a", \u0431: "b", \u0432: "a", \u0433: "r", \u0434: "y", \u0435: "e", \u0436: "m", \u0437: "e", \u0438: "n", \u0439: "n", \u043A: "n", \u043B: "n", \u043C: "m", \u043D: "n", \u043E: "o", \u043F: "n", \u0440: "p", \u0441: "c", \u0442: "o", \u0443: "y", \u0444: "b", \u0445: "x", \u0446: "n", \u0447: "n", \u0448: "w", \u0449: "w", \u044A: "a", \u044B: "m", \u044C: "a", \u044D: "e", \u044E: "m", \u044F: "r" };
function se(e5, t2) {
  void 0 === e5 && (e5 = 77);
  const i2 = ie[t2][e5];
  if (i2)
    return { defaultMetrics: false, depth: i2[0], height: i2[1], italic: i2[2], skew: i2[3] };
  if (11034 === e5)
    return { defaultMetrics: true, depth: 0.2, height: 0.8, italic: 0, skew: 0 };
  const n2 = String.fromCodePoint(e5);
  if (n2 in oe)
    e5 = oe[n2].codePointAt(0);
  else if (ne.test(n2))
    return e5 = 77, { defaultMetrics: true, depth: 0.2, height: 0.9, italic: 0, skew: 0 };
  return { defaultMetrics: true, depth: 0.2, height: 0.7, italic: 0, skew: 0 };
}
var le = class {
  constructor(e5, t2, i2) {
    this.id = e5, this.sizeDelta = t2, this.cramped = i2;
    const n2 = { "-4": 2, "-3": 1, 0: 0 }[t2];
    this.metrics = Object.keys(re).reduce((e6, t3) => ({ ...e6, [t3]: re[t3][n2] }), {});
  }
  getFontSize(e5) {
    return Math.max(1, e5 + this.sizeDelta);
  }
  get sup() {
    return ue[[0, 1, 0, 1, 2, 3, 2, 3][this.id]];
  }
  get sub() {
    return ue[[0, 0, 0, 0, 2, 2, 2, 2][this.id]];
  }
  get fracNum() {
    return ue[[0, 1, 0, 1, 2, 3, 4, 5][this.id]];
  }
  get fracDen() {
    return ue[[0, 0, 0, 0, 2, 2, 4, 4][this.id]];
  }
  get cramp() {
    return ue[[0, 0, 2, 2, 4, 4, 6, 6][this.id]];
  }
  get isTight() {
    return this.sizeDelta < 0;
  }
};
var ue = { 7: new le(7, 0, false), 6: new le(6, 0, true), 5: new le(5, 0, false), 4: new le(4, 0, true), 3: new le(3, -3, false), 2: new le(2, -3, true), 1: new le(1, -4, false), 0: new le(0, -4, true) };
function ce(e5, t2) {
  return null === e5 ? 0 : function(e6, t3) {
    var i2;
    if (!e6)
      return 0;
    const n2 = { pt: 1, mm: 7227 / 2540, cm: 7227 / 254, ex: 35271 / 8192, px: 3 / 4, em: 10, bp: 1.00375, dd: 1238 / 1157, pc: 12, in: 72.27, mu: 10 / 18 }[null !== (i2 = e6.unit) && void 0 !== i2 ? i2 : "pt"];
    if (Number.isFinite(t3)) {
      const i3 = 10 ** t3;
      return Math.round(e6.dimension / 10 * n2 * i3) / i3;
    }
    return e6.dimension * n2;
  }(e5, t2) / 10;
}
function de(e5) {
  var t2;
  return `${e5.dimension}${null !== (t2 = e5.unit) && void 0 !== t2 ? t2 : "pt"}`;
}
ue.displaystyle = ue[7], ue.textstyle = ue[5], ue.scriptstyle = ue[3], ue.scriptscriptstyle = ue[1];
var he = class {
  constructor(e5, t2, i2) {
    var n2, r2, a2, o2, s2, l2;
    e5 instanceof he && (this.parent = e5), e5 instanceof he || (this.registers = null !== (n2 = e5.registers) && void 0 !== n2 ? n2 : {}), this.isPhantom = null !== (o2 = null !== (r2 = null == t2 ? void 0 : t2.isPhantom) && void 0 !== r2 ? r2 : null === (a2 = this.parent) || void 0 === a2 ? void 0 : a2.isPhantom) && void 0 !== o2 && o2;
    const u2 = { ...e5 };
    let c2;
    if (t2 && (t2.letterShapeStyle && "auto" !== t2.letterShapeStyle && (u2.letterShapeStyle = t2.letterShapeStyle), t2.color && "none" !== t2.color && (u2.color = t2.color), t2.backgroundColor && "none" !== t2.backgroundColor && (u2.backgroundColor = t2.backgroundColor), t2.fontSize && "auto" !== t2.fontSize && t2.fontSize !== (null === (s2 = this.parent) || void 0 === s2 ? void 0 : s2._size) && (this._size = t2.fontSize)), this.letterShapeStyle = null !== (l2 = u2.letterShapeStyle) && void 0 !== l2 ? l2 : "tex", this.color = u2.color, this.backgroundColor = u2.backgroundColor, "string" == typeof i2) {
      if (e5 instanceof he)
        switch (i2) {
          case "cramp":
            c2 = e5.mathstyle.cramp;
            break;
          case "superscript":
            c2 = e5.mathstyle.sup;
            break;
          case "subscript":
            c2 = e5.mathstyle.sub;
            break;
          case "numerator":
            c2 = e5.mathstyle.fracNum;
            break;
          case "denominator":
            c2 = e5.mathstyle.fracDen;
        }
      switch (i2) {
        case "textstyle":
          c2 = ue.textstyle;
          break;
        case "displaystyle":
          c2 = ue.displaystyle;
          break;
        case "scriptstyle":
          c2 = ue.scriptstyle;
          break;
        case "scriptscriptstyle":
          c2 = ue.scriptscriptstyle;
      }
    }
    this._mathstyle = c2, this.atomIdsSettings = e5.atomIdsSettings, this.renderPlaceholder = u2.renderPlaceholder;
  }
  get mathstyle() {
    let e5 = this._mathstyle, t2 = this.parent;
    for (; !e5; )
      e5 = t2._mathstyle, t2 = t2.parent;
    return e5;
  }
  getRegister(e5) {
    var t2;
    return (null === (t2 = this.registers) || void 0 === t2 ? void 0 : t2[e5]) ? this.registers[e5] : this.parent ? this.parent.getRegister(e5) : void 0;
  }
  getRegisterAsGlue(e5) {
    var t2;
    if (null === (t2 = this.registers) || void 0 === t2 ? void 0 : t2[e5]) {
      const t3 = this.registers[e5];
      return "object" == typeof t3 && "glue" in t3 ? t3 : "object" == typeof t3 && "dimension" in t3 ? { glue: { dimension: t3.dimension } } : "number" == typeof t3 ? { glue: { dimension: t3 } } : void 0;
    }
    if (this.parent)
      return this.parent.getRegisterAsGlue(e5);
  }
  getRegisterAsEm(e5) {
    return ce(this.getRegisterAsDimension(e5));
  }
  getRegisterAsDimension(e5) {
    var t2;
    if (null === (t2 = this.registers) || void 0 === t2 ? void 0 : t2[e5]) {
      const t3 = this.registers[e5];
      return "object" == typeof t3 && "glue" in t3 ? t3.glue : "object" == typeof t3 && "dimension" in t3 ? t3 : "number" == typeof t3 ? { dimension: t3 } : void 0;
    }
    if (this.parent)
      return this.parent.getRegisterAsDimension(e5);
  }
  setRegister(e5, t2) {
    void 0 !== t2 ? this.registers[e5] = t2 : delete this.registers[e5];
  }
  setGlobalRegister(e5, t2) {
    let i2 = this;
    for (; i2.parent; )
      i2.setRegister(e5, void 0), i2 = i2.parent;
    i2.setRegister(e5, t2);
  }
  get size() {
    let e5 = this._size, t2 = this.parent;
    for (; !e5; )
      e5 = t2._size, t2 = t2.parent;
    return e5;
  }
  makeID() {
    if (!this.atomIdsSettings)
      return;
    if (this.atomIdsSettings.overrideID)
      return this.atomIdsSettings.overrideID;
    if ("number" != typeof this.atomIdsSettings.seed)
      return Date.now().toString(36).slice(-2) + Math.floor(1e5 * Math.random()).toString(36);
    const e5 = this.atomIdsSettings.seed.toString(36);
    return this.atomIdsSettings.seed += 1, e5;
  }
  scale(e5) {
    return e5 * this.effectiveFontSize;
  }
  get scalingFactor() {
    return this.parent ? this.effectiveFontSize / this.parent.effectiveFontSize : 1;
  }
  get isDisplayStyle() {
    return 7 === this.mathstyle.id || 6 === this.mathstyle.id;
  }
  get isCramped() {
    return this.mathstyle.cramped;
  }
  get isTight() {
    return this.mathstyle.isTight;
  }
  get effectiveFontSize() {
    return ae[Math.max(1, this.size + this.mathstyle.sizeDelta)];
  }
  get computedColor() {
    let e5 = this.color, t2 = this.parent;
    return !e5 && t2 && (e5 = t2.color, t2 = t2.parent), null != e5 ? e5 : "";
  }
  get computedBackgroundColor() {
    let e5 = this.backgroundColor, t2 = this.parent;
    return !e5 && t2 && (e5 = t2.backgroundColor, t2 = t2.parent), null != e5 ? e5 : "";
  }
  get metrics() {
    return this.mathstyle.metrics;
  }
};
var me = { overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"], overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"], underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"], underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"], xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"], xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"], Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"], xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"], xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"], overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"], xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"], xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"], overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"], xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"], xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"], xlongequal: [["longequal"], 0.888, 334, "xMinYMin"], xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"], xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"], overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522], overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548], underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548], underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522], xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522], xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560], xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716], xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716], xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522], xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522], overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522], underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522], overgroup: [["leftgroup", "rightgroup"], 0.888, 342], undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342], xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522], xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528], xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901], xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716], xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716] };
var pe = { widehat1: [1062, 239, 0.24], widehat2: [2364, 300, 0.3], widehat3: [2364, 360, 0.36], widehat4: [2364, 420, 0.42], widecheck1: [1062, 239, 0.24], widecheck2: [2364, 300, 0.3], widecheck3: [2364, 360, 0.36], widecheck4: [2364, 420, 0.42], widetilde1: [600, 260, 0.26], widetilde2: [1033, 286, 0.286], widetilde3: [2339, 306, 0.306], widetilde4: [2340, 312, 0.34], overarc: [1061, 159, 0.3], underarc: [1061, 159, 0.3] };
var fe = { doubleleftarrow: "M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z", doublerightarrow: "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z", leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z", leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z", leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z", overarc: "M529 0c179 0 524 115 524 115 5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2s-338-93-512-92c-174 0-513 92-513 92h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13 0 0 342-115 520-115z", underarc: "m 529 160\n  c -179 0 -524 -115 -524 -115\n  c -5 -1 -9 -5 -9 -10\n  c 0 -1 1 -2 1 -3\n  l 4 -22\n  c 1 -5 5 -9 11 -9\n  h 2\n  s 338 93 512 92\n  c 174 0 513 -92 513 -92\n  h 2\n  c 5 0 9 4 11 9\n  l 5 22\n  c 1 6 -2 12 -8 13\n  c 0 0 -342 115 -520 115\n  z\n  ", leftgroup: "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z", leftgroupunder: "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z", leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z", leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z", leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z", leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z", lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z", leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z", leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z", leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z", longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z", midbrace: "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z", midbraceunder: "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z", oiintSize1: "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z", oiintSize2: "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z", oiiintSize1: "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z", oiiintSize2: "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z", rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z", rightbrace: "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z", rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z", rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z", rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z", rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z", rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z", rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z", rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z", righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z", rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z", rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z", twoheadleftarrow: "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z", twoheadrightarrow: "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z", widetilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z", widetilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z", widetilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z", widetilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z", vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z", widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z", widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", widecheck1: "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z", widecheck2: "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", widecheck3: "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", widecheck4: "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", baraboveleftarrow: "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z", rightarrowabovebar: "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z", baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z", rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z", shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z", shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z" };
var ge = class {
  constructor(e5) {
    ge._registry[e5] = this;
  }
  static createAtom(e5, t2, i2, n2) {
    return ge._registry[e5].createAtom(t2, i2, n2);
  }
  static serialize(e5, t2) {
    return ge._registry[e5[0].mode].serialize(e5, t2);
  }
  static applyStyle(e5, t2, i2) {
    return ge._registry[e5].applyStyle(t2, i2);
  }
};
function ye(e5, t2) {
  const i2 = [];
  let n2, r2 = [];
  for (const a2 of e5)
    if ("first" !== a2.type) {
      let e6;
      "variant" === t2 ? (e6 = a2.style.variant, a2.style.variantStyle && "up" !== a2.style.variantStyle && (e6 += "-" + a2.style.variantStyle)) : "cssClass" === t2 ? "group" === a2.type && (e6 = a2.customClass) : e6 = a2.style[t2], e6 === n2 ? r2.push(a2) : (r2.length > 0 && i2.push(r2), r2 = [a2], n2 = e6);
    }
  return r2.length > 0 && i2.push(r2), i2;
}
ge._registry = {};
var be = { m0: "#3F3D99", m1: "#993D71", m2: "#998B3D", m3: "#3D9956", m4: "#3D5A99", m5: "#993D90", m6: "#996D3D", m7: "#43993D", m8: "#3D7999", m9: "#843D99" };
var ve = { blue: "#0072BD", orange: "#D95319", yellow: "#EDB120", purple: "#7E2F8E", green: "#77AC30", cyan: "#4DBEEE", red: "#A2142F" };
var xe = { red: "#fbbbb6", orange: "#ffe0c2", yellow: "#fff1c2", lime: "#d0e8b9", green: "#bceac4", teal: "#b9f1f1", blue: "#b6d9fb", indigo: "#d1c2f0", purple: "#e3baf8", magenta: "#f9c8e0", black: "#353535", "dark-grey": "#8C8C8C", grey: "#D0D0D0", "light-grey": "#F0F0F0", white: "#ffffff" };
var ke = { red: "#d7170b", orange: "#fe8a2b", yellow: "#ffc02b", lime: "#63b215", green: "#21ba3a", teal: "#17cfcf", blue: "#0d80f2", indigo: "#63c", purple: "#a219e6", magenta: "#eb4799", black: "#000", "dark-grey": "#666", grey: "#A6A6A6", "light-grey": "#d4d5d2", white: "#ffffff" };
var _e = { Red: "red", Orange: "orange", Yellow: "yellow", LimeGreen: "lime", Green: "green", TealBlue: "teal", Blue: "blue", Violet: "indigo", Purple: "purple", Magenta: "magenta", Black: "black", Gray: "grey", White: "white" };
var we = { Apricot: "#FBB982", Aquamarine: "#00B5BE", Bittersweet: "#C04F17", Black: "#221E1F", Blue: "#2D2F92", BlueGreen: "#00B3B8", BlueViolet: "#473992", BrickRed: "#B6321C", Brown: "#792500", BurntOrange: "#F7921D", CadetBlue: "#74729A", CarnationPink: "#F282B4", Cerulean: "#00A2E3", CornflowerBlue: "#41B0E4", Cyan: "#00AEEF", Dandelion: "#FDBC42", DarkOrchid: "#A4538A", Emerald: "#00A99D", ForestGreen: "#009B55", Fuchsia: "#8C368C", Goldenrod: "#FFDF42", Gray: "#949698", Green: "#00A64F", GreenYellow: "#DFE674", JungleGreen: "#00A99A", Lavender: "#F49EC4", Limegreen: "#8DC73E", Magenta: "#EC008C", Mahogany: "#A9341F", Maroon: "#AF3235", Melon: "#F89E7B", MidnightBlue: "#006795", Mulberry: "#A93C93", NavyBlue: "#006EB8", OliveGreen: "#3C8031", Orange: "#F58137", OrangeRed: "#ED135A", Orchid: "#AF72B0", Peach: "#F7965A", Periwinkle: "#7977B8", PineGreen: "#008B72", Plum: "#92268F", ProcessBlue: "#00B0F0", Purple: "#99479B", RawSienna: "#974006", Red: "#ED1B23", RedOrange: "#F26035", RedViolet: "#A1246B", Rhodamine: "#EF559F", RoyalBlue: "#0071BC", RoyalPurple: "#613F99", RubineRed: "#ED017D", Salmon: "#F69289", SeaGreen: "#3FBC9D", Sepia: "#671800", SkyBlue: "#46C5DD", SpringGreen: "#C6DC67", Tan: "#DA9D76", TealBlue: "#00AEB3", Thistle: "#D883B7", Turquoise: "#00B4CE", Violet: "#58429B", VioletRed: "#EF58A0", White: "#FFFFFF", WildStrawberry: "#EE2967", Yellow: "#FFF200", YellowGreen: "#98CC70", YellowOrange: "#FAA21A" };
function Se(e5) {
  var t2, i2, n2, r2, a2, o2;
  const s2 = e5.split("!");
  let l2, u2, c2, d2 = 255, h2 = 255, m2 = 255, p2 = -1;
  const f2 = s2.length > 0 && s2[0].startsWith("-");
  f2 && (s2[0] = s2[0].slice(1));
  for (let e6 = 0; e6 < s2.length; e6++) {
    l2 = d2, u2 = h2, c2 = m2;
    const f3 = null === (t2 = s2[e6].trim().match(/^([A-Za-z\d]+)/)) || void 0 === t2 ? void 0 : t2[1], g2 = null == f3 ? void 0 : f3.toLowerCase(), y2 = f3 && null !== (o2 = null !== (a2 = null !== (r2 = null !== (n2 = null !== (i2 = ke[g2]) && void 0 !== i2 ? i2 : ke[_e[f3]]) && void 0 !== n2 ? n2 : ve[f3]) && void 0 !== r2 ? r2 : we[f3]) && void 0 !== a2 ? a2 : be[f3]) && void 0 !== o2 ? o2 : s2[e6].trim();
    let b2 = y2.match(/^#([\da-f]{2})([\da-f]{2})([\da-f]{2})$/i);
    if ((null == b2 ? void 0 : b2[1]) && b2[2] && b2[3])
      d2 = Math.max(0, Math.min(255, Number.parseInt(b2[1], 16))), h2 = Math.max(0, Math.min(255, Number.parseInt(b2[2], 16))), m2 = Math.max(0, Math.min(255, Number.parseInt(b2[3], 16)));
    else if (b2 = y2.match(/^#([\da-f]{3})$/i), null == b2 ? void 0 : b2[1]) {
      const e7 = Number.parseInt(b2[1][0], 16), t3 = Number.parseInt(b2[1][1], 16), i3 = Number.parseInt(b2[1][2], 16);
      d2 = Math.max(0, Math.min(255, 16 * e7 + e7)), h2 = Math.max(0, Math.min(255, 16 * t3 + t3)), m2 = Math.max(0, Math.min(255, 16 * i3 + i3));
    } else {
      if (b2 = y2.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i), !((null == b2 ? void 0 : b2[1]) && b2[2] && b2[3]))
        return;
      d2 = Math.max(0, Math.min(255, Number.parseInt(b2[1]))), h2 = Math.max(0, Math.min(255, Number.parseInt(b2[2]))), m2 = Math.max(0, Math.min(255, Number.parseInt(b2[3])));
    }
    p2 >= 0 && (d2 = (1 - p2) * d2 + p2 * l2, h2 = (1 - p2) * h2 + p2 * u2, m2 = (1 - p2) * m2 + p2 * c2, p2 = -1), e6 + 1 < s2.length && (p2 = Math.max(0, Math.min(100, Number.parseInt(s2[++e6]))) / 100);
  }
  return p2 >= 0 && (d2 = p2 * d2 + (1 - p2) * l2, h2 = p2 * h2 + (1 - p2) * u2, m2 = p2 * m2 + (1 - p2) * c2), f2 && (d2 = 255 - d2, h2 = 255 - h2, m2 = 255 - m2), "#" + ("00" + Math.round(d2).toString(16)).slice(-2) + ("00" + Math.round(h2).toString(16)).slice(-2) + ("00" + Math.round(m2).toString(16)).slice(-2);
}
function Me(e5) {
  var t2, i2;
  return e5 = e5.trim(), null !== (i2 = null !== (t2 = xe[e5.toLowerCase()]) && void 0 !== t2 ? t2 : xe[_e[e5]]) && void 0 !== i2 ? i2 : Se(e5);
}
function Ne(e5, t2, i2) {
  return i2 < 0 && (i2 += 6), i2 >= 6 && (i2 -= 6), i2 < 1 ? (t2 - e5) * i2 + e5 : i2 < 3 ? t2 : i2 < 4 ? (t2 - e5) * (4 - i2) + e5 : e5;
}
function Le(e5) {
  return e5 < 0 ? 0 : e5 > 255 ? 255 : Math.round(e5);
}
function Ae(e5) {
  let t2 = function(e6) {
    if (!e6)
      return;
    if ("#" !== e6[0])
      return;
    let t3;
    return (e6 = e6.slice(1)).length <= 4 ? (t3 = { r: parseInt(e6[0] + e6[0], 16), g: parseInt(e6[1] + e6[1], 16), b: parseInt(e6[2] + e6[2], 16) }, 4 === e6.length && (t3.a = parseInt(e6[3] + e6[3], 16) / 255)) : (t3 = { r: parseInt(e6[0] + e6[1], 16), g: parseInt(e6[2] + e6[3], 16), b: parseInt(e6[4] + e6[5], 16) }, 8 === e6.length && (t3.a = parseInt(e6[6] + e6[7], 16) / 255)), t3 && void 0 === t3.a && (t3.a = 1), t3;
  }(e5);
  if (!t2)
    return e5;
  let { h: i2, s: n2, l: r2 } = function(e6) {
    let { r: t3, g: i3, b: n3 } = e6;
    t3 /= 255, i3 /= 255, n3 /= 255;
    const r3 = Math.min(t3, i3, n3), a2 = Math.max(t3, i3, n3), o2 = a2 - r3;
    let s2, l2;
    a2 === r3 ? s2 = 0 : t3 === a2 ? s2 = (i3 - n3) / o2 : i3 === a2 ? s2 = 2 + (n3 - t3) / o2 : n3 === a2 && (s2 = 4 + (t3 - i3) / o2), s2 = Math.min(60 * s2, 360), s2 < 0 && (s2 += 360);
    const u2 = (r3 + a2) / 2;
    return l2 = a2 === r3 ? 0 : u2 <= 0.5 ? o2 / (a2 + r3) : o2 / (2 - a2 - r3), { h: s2, s: l2, l: u2 };
  }(t2);
  return n2 += 0.1, r2 -= 0.1, function(e6) {
    const { r: t3, g: i3, b: n3 } = e6;
    let r3 = ((1 << 24) + (Le(t3) << 16) + (Le(i3) << 8) + Le(n3)).toString(16).slice(1);
    return r3[0] === r3[1] && r3[2] === r3[3] && r3[4] === r3[5] && r3[6] === r3[7] && (r3 = r3[0] + r3[2] + r3[4]), "#" + r3;
  }(function(e6) {
    let [t3, i3, n3] = [e6.h, e6.s, e6.l];
    t3 = (t3 + 360) % 360 / 60, n3 = Math.max(0, Math.min(n3, 1)), i3 = Math.max(0, Math.min(i3, 1));
    const r3 = n3 <= 0.5 ? n3 * (i3 + 1) : n3 + i3 - n3 * i3, a2 = 2 * n3 - r3;
    return { r: Math.round(255 * Ne(a2, r3, t3 + 2)), g: Math.round(255 * Ne(a2, r3, t3)), b: Math.round(255 * Ne(a2, r3, t3 - 2)) };
  }({ h: i2, s: n2, l: r2 }));
}
var Ce = ["", "chem", "mord", "mbin", "mop", "mrel", "mopen", "mclose", "mpunct", "minner", "spacing", "first", "latex", "composition", "error", "placeholder", "supsub", "none", "mathfield"];
var Ee = { mord: { mop: 3, mbin: 4, mrel: 5, minner: 3 }, mop: { mord: 3, mop: 3, rel: 5, minner: 3 }, mbin: { mord: 4, mop: 4, mopen: 4, minner: 4 }, mrel: { mord: 5, mop: 5, mopen: 5, minner: 5 }, mclose: { mop: 3, mbin: 4, mrel: 5, minner: 3 }, mpunct: { mord: 3, mop: 3, mrel: 3, mopen: 3, mpunct: 3, minner: 3 }, minner: { mord: 3, mop: 3, mbin: 4, mrel: 5, mopen: 3, mpunct: 3, minner: 3 } };
var De = { mord: { mop: 3 }, mop: { mord: 3, mop: 3 }, mclose: { mop: 3 }, minner: { mop: 3 } };
function Te(e5, t2) {
  if ("string" == typeof e5)
    return e5;
  if ("number" == typeof e5) {
    const i2 = Math.ceil(100 * e5) / 100;
    return 0 === i2 ? "0" : i2.toString() + (null != t2 ? t2 : "");
  }
  return "";
}
var ze = class {
  constructor(t2, i2) {
    var n2, r2, a2, o2, s2, l2;
    if ("number" == typeof t2 ? this.value = String.fromCodePoint(t2) : "string" == typeof t2 ? this.value = t2 : e(t2) ? this.children = t2.filter((e5) => null !== e5) : t2 && t2 instanceof ze && (this.children = [t2]), this.type = null !== (n2 = null == i2 ? void 0 : i2.type) && void 0 !== n2 ? n2 : "", this.isSelected = false, this.isTight = null !== (r2 = null == i2 ? void 0 : i2.isTight) && void 0 !== r2 && r2, this.newList = null !== (a2 = null == i2 ? void 0 : i2.newList) && void 0 !== a2 && a2, null == i2 ? void 0 : i2.properties)
      for (const e5 of Object.keys(i2.properties))
        this.setStyle(e5, i2.properties[e5]);
    (null == i2 ? void 0 : i2.attributes) && (this.attributes = i2.attributes), this.classes = null !== (o2 = null == i2 ? void 0 : i2.classes) && void 0 !== o2 ? o2 : "";
    let u2 = (null == i2 ? void 0 : i2.fontFamily) || "Main-Regular";
    if ((null == i2 ? void 0 : i2.style) && this.value && (u2 = ge.applyStyle(null !== (s2 = i2.mode) && void 0 !== s2 ? s2 : "math", this, i2.style) || "Main-Regular"), this.height = 0, this.depth = 0, this.skew = 0, this.italic = 0, this.maxFontSize = 0, "latex" === this.type)
      this.height = 0.8, this.depth = 0.2;
    else if ("number" == typeof t2) {
      const e5 = se(t2, u2);
      this.height = e5.height, this.depth = e5.depth, this.skew = e5.skew, this.italic = e5.italic;
    } else if (this.value) {
      this.height = -1 / 0, this.depth = -1 / 0, this.skew = -1 / 0, this.italic = -1 / 0;
      for (let e5 = 0; e5 < this.value.length; e5++) {
        const t3 = se(this.value.codePointAt(e5), u2 || "Main-Regular");
        this.height = Math.max(this.height, t3.height), this.depth = Math.max(this.depth, t3.depth), this.skew = t3.skew, this.italic = t3.italic;
      }
    } else if (this.children && this.children.length > 0)
      if (1 === this.children.length) {
        const e5 = this.children[0];
        this.height = e5.height, this.depth = e5.depth, this.maxFontSize = e5.maxFontSize, this.skew = e5.skew, this.italic = e5.italic;
      } else {
        let e5 = -1 / 0, t3 = -1 / 0, i3 = 0;
        for (const n3 of this.children)
          n3.height > e5 && (e5 = n3.height), n3.depth > t3 && (t3 = n3.depth), i3 = Math.max(i3, null !== (l2 = n3.maxFontSize) && void 0 !== l2 ? l2 : 0);
        this.height = e5, this.depth = t3, this.maxFontSize = i3;
      }
    void 0 !== (null == i2 ? void 0 : i2.height) && (this.height = i2.height), void 0 !== (null == i2 ? void 0 : i2.depth) && (this.depth = i2.depth), void 0 !== (null == i2 ? void 0 : i2.maxFontSize) && (this.maxFontSize = i2.maxFontSize);
  }
  set atomID(e5) {
    void 0 !== e5 && 0 !== e5.length && (this.attributes || (this.attributes = {}), this.attributes["data-atom-id"] = e5);
  }
  selected(e5) {
    if (this.isSelected !== e5 && (this.isSelected = e5, this.children))
      for (const t2 of this.children)
        t2.selected(e5);
  }
  setStyle(e5, t2, i2) {
    if (void 0 === t2)
      return;
    const n2 = Te(t2, i2);
    n2.length > 0 && (this.cssProperties || (this.cssProperties = {}), this.cssProperties[e5] = n2);
  }
  setTop(e5) {
    Number.isFinite(e5) && Math.abs(e5) > 0.01 && (this.cssProperties || (this.cssProperties = {}), this.cssProperties.top = Te(e5, "em"), this.height -= e5, this.depth += e5);
  }
  get left() {
    var e5;
    return (null === (e5 = this.cssProperties) || void 0 === e5 ? void 0 : e5["margin-left"]) ? Number.parseFloat(this.cssProperties["margin-left"]) : 0;
  }
  set left(e5) {
    Number.isFinite(e5) && (0 === e5 ? this.cssProperties && delete this.cssProperties["margin-left"] : (this.cssProperties || (this.cssProperties = {}), this.cssProperties["margin-left"] = Te(e5, "em")));
  }
  set right(e5) {
    Number.isFinite(e5) && (0 === e5 ? this.cssProperties && delete this.cssProperties["margin-right"] : (this.cssProperties || (this.cssProperties = {}), this.cssProperties["margin-right"] = Te(e5, "em")));
  }
  set width(e5) {
    Number.isFinite(e5) && (0 === e5 ? this.cssProperties && delete this.cssProperties.width : (this.cssProperties || (this.cssProperties = {}), this.cssProperties.width = Te(e5, "em")));
  }
  wrap(e5, t2) {
    const i2 = e5.parent;
    if (!i2)
      return this;
    e5.isPhantom && this.setStyle("opacity", 0);
    let n2 = e5.computedColor;
    n2 === i2.computedColor && (n2 = ""), this.setStyle("color", n2);
    const r2 = e5.effectiveFontSize === i2.effectiveFontSize ? void 0 : e5.effectiveFontSize;
    let a2, o2 = e5.computedBackgroundColor;
    if (this.isSelected && (o2 = Ae(o2)), o2 === i2.computedBackgroundColor && (o2 = ""), !(r2 || o2 || t2 && (t2.classes || t2.type)))
      return this;
    o2 ? (a2 = Be(this, t2), a2.selected(this.isSelected), a2.setStyle("background-color", o2), a2.setStyle("display", "inline-block")) : a2 = new ze(this, t2);
    const s2 = e5.scalingFactor;
    return 1 !== s2 && (a2.setStyle("font-size", 100 * s2, "%"), a2.height *= s2, a2.depth *= s2, a2.italic *= s2, a2.skew *= s2), a2;
  }
  wrapSelect(e5) {
    if (!this.isSelected)
      return this;
    if (!e5.parent)
      return this;
    const t2 = Ae(e5.computedBackgroundColor), i2 = Be(this);
    return i2.selected(true), i2.setStyle("background-color", t2), i2.setStyle("display", "inline-block"), i2;
  }
  toMarkup() {
    var e5, t2, i2;
    let n2 = null !== (e5 = this.value) && void 0 !== e5 ? e5 : "";
    if (this.children)
      for (const e6 of this.children)
        n2 += e6.toMarkup();
    const r2 = this.classes.split(" ");
    r2.push(null !== (t2 = { latex: "ML__latex", placeholder: "ML__placeholder", error: "ML__error" }[this.type]) && void 0 !== t2 ? t2 : ""), "latex" === this.caret && r2.push("ML__latex-caret");
    const a2 = 1 === r2.length ? r2[0] : r2.filter((e6, t3, i3) => e6.length > 0 && i3.indexOf(e6) === t3).join(" ");
    let o2 = "";
    if (n2.length > 0 && "\u200B" !== n2 || a2.length > 0 || this.cssId || this.htmlData || this.htmlStyle || this.attributes || this.cssProperties || this.svgBody || this.svgOverlay) {
      let e6 = "";
      if (this.cssId && (e6 += ` id=${this.cssId.replace(/ /g, "-")} `), this.htmlData) {
        const t4 = this.htmlData.split(",");
        for (const i3 of t4) {
          const t5 = i3.match(/([^=]+)=(.+$)/);
          if (t5) {
            const i4 = t5[1].trim().replace(/ /g, "-");
            i4 && (e6 += ` data-${i4}=${t5[2]} `);
          } else {
            const t6 = i3.trim().replace(/ /g, "-");
            t6 && (e6 += ` data-${t6} `);
          }
        }
      }
      if (this.htmlStyle) {
        const t4 = this.htmlStyle.split(";");
        let i3 = "";
        for (const e7 of t4) {
          const t5 = e7.match(/([^=]+):(.+$)/);
          if (t5) {
            const e8 = t5[1].trim().replace(/ /g, "-");
            e8 && (i3 += `${e8}:${t5[2]};`);
          }
        }
        i3 && (e6 += ` style="${i3}"`);
      }
      if (this.attributes && (e6 += " " + Object.keys(this.attributes).map((e7) => `${e7}="${this.attributes[e7]}"`).join(" ")), a2.length > 0 && (e6 += ` class="${a2}"`), this.cssProperties) {
        const t4 = Object.keys(this.cssProperties).map((e7) => `${e7}:${this.cssProperties[e7]}`).join(";");
        t4.length > 0 && (e6 += ` style="${t4}"`);
      }
      let t3 = "";
      this.svgBody ? t3 = function(e7) {
        if (pe[e7]) {
          const [t5, i4, n4] = pe[e7];
          return `<span style="display:inline-block;height:${n4 / 2}em;min-width:0"><span class="stretchy" style="height:${n4}em"><svg width="100%" height="${n4}em" viewBox="0 0 ${t5} ${i4}" preserveAspectRatio="none" ><path fill="currentcolor" d="${fe[e7]}"></path></svg></span></span>`;
        }
        const [t4, i3, n3, r3] = me[e7];
        let a3, o3;
        const s2 = n3 / 1e3;
        3 === t4.length ? (a3 = ["slice-1-of-3", "slice-2-of-3", "slice-3-of-3"], o3 = ["xMinYMin", "xMidYMin", "xMaxYMin"]) : 2 === t4.length ? (a3 = ["slice-1-of-2", "slice-2-of-2"], o3 = ["xMinYMin", "xMaxYMin"]) : (a3 = ["slice-1-of-1"], o3 = [r3]);
        const l2 = t4.map((e8, t5) => `<span class="${a3[t5]}" style=height:${s2}em><svg width=400em height=${s2}em viewBox="0 0 400000 ${n3}" preserveAspectRatio="${o3[t5]} slice"><path fill="currentcolor" d="${fe[e8]}"></path></svg></span>`).join("");
        return `<span style="display:inline-block;height:${s2}em;min-width:${i3}em;">${l2}</span>`;
      }(this.svgBody) : this.svgOverlay && (t3 = '<span style="', t3 += "display: inline-block;", t3 += `height:${this.height + this.depth}em;`, t3 += `vertical-align:${this.depth}em;`, t3 += '">', t3 += n2, t3 += "</span>", t3 += '<svg style="position:absolute;overflow:overlay;', t3 += `height:${this.height + this.depth}em;`, (null === (i2 = this.cssProperties) || void 0 === i2 ? void 0 : i2.padding) ? (t3 += `top:${this.cssProperties.padding}em;`, t3 += `left:${this.cssProperties.padding}em;`, t3 += `width:calc(100% - 2 * ${this.cssProperties.padding}em );`) : t3 += "top:0;left:0;width:100%;", t3 += "z-index:2;", t3 += '"', this.svgStyle && (t3 += ` style="${this.svgStyle}"`), t3 += `>${this.svgOverlay}</svg>`), o2 = `<span${e6}>${n2}${t3}</span>`;
    }
    return "text" === this.caret ? o2 += '<span class="ML__text-caret"></span>' : "math" === this.caret && (o2 += '<span class="ML__caret"></span>'), o2;
  }
  tryCoalesceWith(e5) {
    if (this.type !== e5.type)
      return false;
    if (!/ML__text/.test(this.classes) && !["mord", "mbin", "mrel"].includes(this.type))
      return false;
    if (this.svgBody || !this.value)
      return false;
    if (e5.svgBody || !e5.value)
      return false;
    const t2 = this.children && this.children.length > 0, i2 = e5.children && e5.children.length > 0;
    if (t2 || i2)
      return false;
    const n2 = this.cssProperties ? Object.keys(this.cssProperties).length : 0;
    if (n2 !== (e5.cssProperties ? Object.keys(e5.cssProperties).length : 0))
      return false;
    if (n2 > 0) {
      for (const t3 of Object.keys(this.cssProperties))
        if (this.cssProperties[t3] !== e5.cssProperties[t3])
          return false;
    }
    const r2 = this.classes.trim().replace(/\s+/g, " ").split(" "), a2 = e5.classes.trim().replace(/\s+/g, " ").split(" ");
    if (r2.length !== a2.length)
      return false;
    r2.sort(), a2.sort();
    for (const [e6, t3] of r2.entries()) {
      if ("vertical-separator" === t3)
        return false;
      if (t3 !== a2[e6])
        return false;
    }
    return this.value += e5.value, this.height = Math.max(this.height, e5.height), this.depth = Math.max(this.depth, e5.depth), this.maxFontSize = Math.max(this.maxFontSize, e5.maxFontSize), this.italic = e5.italic, true;
  }
};
function qe(e5) {
  if (!e5 || 0 === e5.length)
    return [];
  e5[0].children = qe(e5[0].children);
  const t2 = [e5[0]];
  for (let i2 = 1; i2 < e5.length; i2++)
    t2[t2.length - 1].tryCoalesceWith(e5[i2]) || (e5[i2].children = qe(e5[i2].children), t2.push(e5[i2]));
  return t2;
}
function Ie(e5) {
  return e5.children && (e5.children = qe(e5.children)), e5;
}
function Fe(e5, t2, i2) {
  t2.newList && (e5 = null);
  const n2 = t2.type;
  if ("first" === n2)
    return null;
  if ("spacing" === n2)
    return e5;
  if (i2(e5, t2), t2.children) {
    let r2 = null;
    void 0 !== n2 && 0 !== n2.length || (r2 = e5);
    for (const e6 of t2.children)
      r2 = Fe(r2, e6, i2);
    void 0 !== n2 && 0 !== n2.length || (e5 = r2);
  }
  return "supsub" !== n2 && void 0 !== n2 && n2.length > 0 && (e5 = t2), e5;
}
function Oe(e5, t2) {
  e5 && Fe(null, e5, t2);
}
function Pe(e5, t2 = 1) {
  return function(e6) {
    Oe(e6, (e7, t3) => {
      "mbin" !== t3.type || e7 && !/first|none|mbin|mop|mrel|mopen|mpunct/.test(e7.type) || (t3.type = "mord"), e7 && "mbin" === e7.type && /mrel|mclose|mpunct|placeholder/.test(t3.type) && (e7.type = "mord");
    });
  }(e5), function(e6, t3) {
    Oe(e6, (e7, i2) => {
      var n2, r2, a2, o2;
      const s2 = null !== (n2 = null == e7 ? void 0 : e7.type) && void 0 !== n2 ? n2 : "none", l2 = i2.isTight ? null !== (r2 = De[s2]) && void 0 !== r2 ? r2 : null : null !== (a2 = Ee[s2]) && void 0 !== a2 ? a2 : null, u2 = l2 && null !== (o2 = l2[i2.type]) && void 0 !== o2 ? o2 : 0;
      u2 && (i2.left += t3 * (u2 / 18));
    });
  }(e5, t2), e5;
}
function Be(e5, t2) {
  if (!e5)
    return new ze(null, t2);
  const i2 = new ze(null, { classes: "ML__strut" });
  i2.setStyle("height", Math.max(0, e5.height), "em");
  const n2 = [i2];
  if (0 !== e5.depth) {
    const t3 = new ze(null, { classes: "ML__strut--bottom" });
    t3.setStyle("height", e5.height + e5.depth, "em"), t3.setStyle("vertical-align", -e5.depth, "em"), n2.push(t3);
  }
  return n2.push(e5), new ze(n2, t2);
}
function $e(e5) {
  const t2 = function(e6) {
    return me[e6] ? me[e6][2] / 1e3 : pe[e6][2];
  }(e5) / 2, i2 = new ze(null, { height: t2 + 0.166, depth: t2 - 0.166, maxFontSize: 0 });
  return i2.svgBody = e5, i2;
}
var Ve = class extends ze {
  constructor(e5, t2) {
    var i2;
    const [n2, r2, a2] = function(e6) {
      var t3;
      const [i3, n3] = function(e7) {
        if ("individualShift" in e7) {
          const t4 = e7.individualShift;
          let i4 = t4[0];
          const n4 = [i4], r4 = -i4.shift - i4.box.depth;
          let a4 = r4;
          for (let e8 = 1; e8 < t4.length; e8++) {
            const r5 = t4[e8], o3 = -r5.shift - a4 - r5.box.depth, s3 = o3 - (i4.box.height + i4.box.depth);
            a4 += o3, n4.push(s3), n4.push(r5), i4 = r5;
          }
          return [n4, r4];
        }
        if ("top" in e7) {
          let t4 = e7.top;
          for (const i4 of e7.children)
            t4 -= "number" == typeof i4 ? i4 : i4.box.height + i4.box.depth;
          return [e7.children, t4];
        }
        if ("bottom" in e7)
          return [e7.children, -e7.bottom];
        if ("firstBaseline" in e7) {
          const t4 = e7.firstBaseline[0];
          if ("number" == typeof t4)
            throw new Error("First child must be an element.");
          return [e7.firstBaseline, -t4.box.depth];
        }
        if ("shift" in e7) {
          const t4 = e7.children[0];
          if ("number" == typeof t4)
            throw new Error("First child must be an element.");
          return [e7.children, -t4.box.depth - e7.shift];
        }
        return [null, 0];
      }(e6);
      if (!i3)
        return [[], 0, 0];
      let r3 = 0;
      for (const e7 of i3)
        if ("number" != typeof e7) {
          const t4 = e7.box;
          r3 = Math.max(r3, t4.maxFontSize, t4.height);
        }
      r3 += 2;
      const a3 = new ze(null, { classes: "pstrut" });
      a3.setStyle("height", r3, "em");
      const o2 = [];
      let s2 = n3, l2 = n3, u2 = n3;
      for (const e7 of i3) {
        if ("number" == typeof e7)
          u2 += e7;
        else {
          const i4 = e7.box, n4 = null !== (t3 = e7.classes) && void 0 !== t3 ? t3 : [], s3 = new ze([a3, i4], { classes: n4.join(" "), style: e7.style });
          s3.setStyle("top", -r3 - u2 - i4.depth, "em"), e7.marginLeft && s3.setStyle("margin-left", e7.marginLeft, "em"), e7.marginRight && s3.setStyle("margin-right", e7.marginRight, "em"), o2.push(s3), u2 += i4.height + i4.depth;
        }
        s2 = Math.min(s2, u2), l2 = Math.max(l2, u2);
      }
      const c2 = new ze(o2, { classes: "vlist" });
      let d2;
      if (c2.setStyle("height", l2, "em"), s2 < 0) {
        const e7 = new ze(new ze(null), { classes: "vlist" });
        e7.setStyle("height", -s2, "em");
        const t4 = new ze(8203, { classes: "vlist-s", maxFontSize: 0, height: 0, depth: 0 });
        d2 = [new ze([c2, t4], { classes: "vlist-r" }), new ze(e7, { classes: "vlist-r" })];
      } else
        d2 = [new ze(c2, { classes: "vlist-r" })];
      return [d2, l2, -s2];
    }(e5);
    super(1 === n2.length ? n2[0] : n2, { classes: (null !== (i2 = null == t2 ? void 0 : t2.classes) && void 0 !== i2 ? i2 : "") + " vlist-t" + (2 === n2.length ? " vlist-t2" : ""), height: r2, depth: a2, type: null == t2 ? void 0 : t2.type });
  }
};
var Ke = [[8205, 1], [65038, 2], [127995, 5], [129456, 4], [917536, 96]];
var Re;
var je = [127462, 127487];
function He(e5) {
  var t2;
  if (void 0 === Re) {
    Re = {};
    for (const e6 of Ke)
      for (let t3 = e6[0]; t3 <= e6[0] + e6[1] - 1; t3++)
        Re[t3] = true;
  }
  return null !== (t2 = Re[e5]) && void 0 !== t2 && t2;
}
function We(e5) {
  return e5 >= je[0] && e5 <= je[1];
}
function Ze(e5) {
  if (/^[\u0020-\u00FF]*$/.test(e5))
    return e5;
  const t2 = [], i2 = function(e6) {
    const t3 = [];
    for (let i3 = 0; i3 < e6.length; i3++) {
      let n3 = e6.charCodeAt(i3);
      if (13 === n3 && 10 === e6.charCodeAt(i3 + 1) && (n3 = 10, i3++), 13 !== n3 && 12 !== n3 || (n3 = 10), 0 === n3 && (n3 = 65533), n3 >= 55296 && n3 <= 56319) {
        const t4 = e6.charCodeAt(i3 + 1);
        t4 >= 56320 && t4 <= 57343 && (n3 = 65536 + 1024 * (n3 - 55296) + (t4 - 56320), i3++);
      }
      t3.push(n3);
    }
    return t3;
  }(e5);
  let n2 = 0;
  for (; n2 < i2.length; ) {
    const e6 = i2[n2++], r2 = i2[n2];
    if (8205 === r2) {
      const e7 = n2 - 1;
      for (n2 += 2; 8205 === i2[n2]; )
        n2 += 2;
      t2.push(String.fromCodePoint(...i2.slice(e7, n2 - e7 + 1)));
    } else if (He(r2)) {
      const e7 = n2 - 1;
      for (; He(i2[n2]); )
        n2 += 8205 === i2[n2] ? 2 : 1;
      t2.push(String.fromCodePoint(...i2.slice(e7, 2 * n2 - e7 - 1)));
    } else
      We(e6) ? (n2 += 1, t2.push(String.fromCodePoint(...i2.slice(n2 - 2, 2)))) : t2.push(String.fromCodePoint(e6));
  }
  return t2;
}
var Ge = class {
  constructor(e5) {
    this.s = Ze(e5), this.pos = 0, this.obeyspaces = false;
  }
  end() {
    return this.pos >= this.s.length;
  }
  get() {
    return this.pos < this.s.length ? this.s[this.pos++] : "";
  }
  peek() {
    return this.s[this.pos];
  }
  match(e5) {
    const t2 = "string" == typeof this.s ? e5.exec(this.s.slice(this.pos)) : e5.exec(this.s.slice(this.pos).join(""));
    return (null == t2 ? void 0 : t2[0]) ? (this.pos += t2[0].length, t2[0]) : "";
  }
  next() {
    if (this.end())
      return null;
    if (!this.obeyspaces && this.match(/^[ \f\n\r\t\v\u00A0\u2028\u2029]+/))
      return "<space>";
    if (this.obeyspaces && this.match(/^[ \f\n\r\t\v\u00A0\u2028\u2029]/))
      return "<space>";
    const e5 = this.get();
    if ("\\" === e5) {
      if (!this.end()) {
        let e6 = this.match(/^[a-zA-Z\*]+/);
        if (e6)
          this.match(/^[ \f\n\r\t\v\u00A0\u2028\u2029]*/);
        else if (e6 = this.get(), " " === e6)
          return "<space>";
        return "\\" + e6;
      }
    } else {
      if ("{" === e5)
        return "<{>";
      if ("}" === e5)
        return "<}>";
      if ("^" === e5) {
        if ("^" === this.peek()) {
          this.get();
          const e6 = this.match(/^(\^(\^(\^(\^[\da-f])?[\da-f])?[\da-f])?[\da-f])?[\da-f]{2}/);
          if (e6)
            return String.fromCodePoint(Number.parseInt(e6.slice(e6.lastIndexOf("^") + 1), 16));
        }
        return e5;
      }
      if ("#" === e5) {
        if (!this.end()) {
          let e6 = false;
          if (/[\d?@]/.test(this.peek()) && (e6 = true, this.pos + 1 < this.s.length)) {
            const t2 = this.s[this.pos + 1];
            e6 = /[^\dA-Za-z]/.test(t2);
          }
          return e6 ? "#" + this.get() : "#";
        }
      } else if ("$" === e5)
        return "$" === this.peek() ? (this.get(), "<$$>") : "<$>";
    }
    return e5;
  }
};
function Ue(e5, t2) {
  var i2, n2, r2, a2;
  const o2 = [];
  let s2 = e5.next();
  if (s2)
    if ("\\relax" === s2)
      ;
    else if ("\\noexpand" === s2)
      s2 = e5.next(), s2 && o2.push(s2);
    else if ("\\obeyspaces" === s2)
      e5.obeyspaces = true;
    else if ("\\space" === s2 || "~" === s2)
      o2.push("<space>");
    else if ("\\bgroup" === s2)
      o2.push("<{>");
    else if ("\\egroup" === s2)
      o2.push("<}>");
    else if ("\\string" === s2) {
      if (s2 = e5.next(), s2)
        if (s2.startsWith("\\"))
          for (const e6 of s2)
            o2.push("\\" === e6 ? "\\backslash" : e6);
        else
          "<{>" === s2 ? o2.push("\\{") : "<space>" === s2 ? o2.push("~") : "<}>" === s2 && o2.push("\\}");
    } else if ("\\csname" === s2) {
      for (; "<space>" === e5.peek(); )
        e5.next();
      let r3 = "", a3 = false, l2 = [];
      do {
        if (0 === l2.length)
          if (/^#[\d?@]$/.test(e5.peek())) {
            const r4 = e5.get().slice(1);
            l2 = Je(null !== (n2 = null !== (i2 = null == t2 ? void 0 : t2(r4)) && void 0 !== i2 ? i2 : null == t2 ? void 0 : t2("?")) && void 0 !== n2 ? n2 : "\\placeholder{}", t2), s2 = l2[0];
          } else
            s2 = e5.next(), l2 = s2 ? [s2] : [];
        a3 = 0 === l2.length, a3 || "\\endcsname" !== s2 || (a3 = true, l2.shift()), a3 || (a3 = "<$>" === s2 || "<$$>" === s2 || "<{>" === s2 || "<}>" === s2 || "string" == typeof s2 && s2.length > 1 && s2.startsWith("\\")), a3 || (r3 += l2.shift());
      } while (!a3);
      r3 && o2.push("\\" + r3), o2.push(...l2);
    } else if ("\\endcsname" === s2)
      ;
    else if (s2.length > 1 && s2.startsWith("#")) {
      const e6 = s2.slice(1);
      o2.push(...Je(null !== (a2 = null !== (r2 = null == t2 ? void 0 : t2(e6)) && void 0 !== r2 ? r2 : null == t2 ? void 0 : t2("?")) && void 0 !== a2 ? a2 : "\\placeholder{}", t2));
    } else
      o2.push(s2);
  return o2;
}
function Je(e5, t2 = null) {
  const i2 = [];
  let n2 = "";
  for (const t3 of e5.toString().split(/\r?\n/)) {
    n2 && i2.push(n2), n2 = " ";
    const e6 = t3.match(/((?:\\%)|[^%])*/);
    null !== e6 && i2.push(e6[0]);
  }
  const r2 = new Ge(i2.join("")), a2 = [];
  do {
    a2.push(...Ue(r2, t2));
  } while (!r2.end());
  return a2;
}
function Xe(e5) {
  let t2 = "";
  const i2 = [];
  for (const n2 of e5)
    n2 && (/[a-zA-Z\*]/.test(n2[0]) && i2.push(t2), i2.push(n2), /\\[a-zA-Z]+\*?[\"\'][^\ ]+$/.test(n2) && i2.push(" "), t2 = /\\[a-zA-Z]+\*?$/.test(n2) ? " " : "");
  return i2.join("");
}
function Ye(e5) {
  return Xe(e5.map((e6) => {
    var t2;
    return null !== (t2 = { "<space>": " ", "<$$>": "$$", "<$>": "$", "<{>": "{", "<}>": "}" }[e6]) && void 0 !== t2 ? t2 : e6;
  }));
}
var Qe = class extends ze {
  constructor(e5, t2, i2) {
    super(null, i2), this.placeholderId = e5, this.element = t2, this.htmlData = `placeholder-id=${e5}`, this.height = "" === t2.style.fontSize ? 1 : t2.clientHeight / parseInt(t2.style.fontSize) * 0.6;
  }
  toMarkup() {
    let e5 = "";
    const t2 = this.classes.split(" "), i2 = 1 === t2.length ? t2[0] : t2.filter((e6, t3, i3) => e6.length > 0 && i3.indexOf(e6) === t3).join(" ");
    if (this.cssId && (e5 += ` id=${this.cssId.replace(/ /g, "-")} `), this.htmlData) {
      const t3 = this.htmlData.split(",");
      for (const i3 of t3) {
        const t4 = i3.match(/([^=]+)=(.+$)/);
        if (t4) {
          const i4 = t4[1].trim().replace(/ /g, "-");
          i4 && (e5 += ` data-${i4}=${t4[2]} `);
        } else {
          const t5 = i3.trim().replace(/ /g, "-");
          t5 && (e5 += ` data-${t5} `);
        }
      }
    }
    if (this.htmlStyle) {
      const t3 = this.htmlStyle.split(";");
      let i3 = "";
      for (const e6 of t3) {
        const t4 = e6.match(/([^=]+):(.+$)/);
        if (t4) {
          const e7 = t4[1].trim().replace(/ /g, "-");
          e7 && (i3 += `${e7}:${t4[2]};`);
        }
      }
      i3 && (e5 += ` style="${i3}"`);
    }
    return this.attributes && (e5 += " " + Object.keys(this.attributes).map((e6) => `${e6}="${this.attributes[e6]}"`).join(" ")), i2.length > 0 && (e5 += ` class="${i2}"`), e5 += ` style="display: inline-block; width:${this.element.clientWidth}px; height:${this.element.clientHeight}px; "`, `<span ${e5}></span>`;
  }
};
var et = ["above", "body", "below", "superscript", "subscript"];
function tt(e5) {
  return "string" == typeof e5 && et.includes(e5);
}
function it(e5) {
  return void 0 !== e5 && Array.isArray(e5) && 2 === e5.length;
}
var nt = class {
  constructor(e5, t2, i2) {
    var n2, r2, a2, o2, s2, l2;
    this.id = void 0, this.verbatimLatex = void 0, this._isDirty = false, this._changeCounter = 0, this.subsupPlacement = void 0, this.explicitSubsupPlacement = false, this.skipBoundary = false, this.captureSelection = false, this.type = e5, this.context = t2, "string" == typeof (null == i2 ? void 0 : i2.value) && (this.value = i2.value), this.command = null !== (r2 = null !== (n2 = null == i2 ? void 0 : i2.command) && void 0 !== n2 ? n2 : this.value) && void 0 !== r2 ? r2 : "", this.mode = null !== (a2 = null == i2 ? void 0 : i2.mode) && void 0 !== a2 ? a2 : "math", this.isFunction = null !== (o2 = null == i2 ? void 0 : i2.isFunction) && void 0 !== o2 && o2, this.subsupPlacement = null == i2 ? void 0 : i2.limits, this.style = null !== (s2 = null == i2 ? void 0 : i2.style) && void 0 !== s2 ? s2 : {}, this.displayContainsHighlight = null !== (l2 = null == i2 ? void 0 : i2.displayContainsHighlight) && void 0 !== l2 && l2, (null == i2 ? void 0 : i2.serialize) && (nt.customSerializer[i2.command] = i2.serialize);
  }
  static createBox(e5, t2, i2) {
    var n2, r2, a2;
    if (!t2)
      return null;
    const o2 = function(e6) {
      let t3;
      const i3 = [];
      let n3 = [];
      for (const r3 of e6) {
        const e7 = r3.computedStyle;
        t3 || r3.style ? t3 && e7.color === t3.color && e7.backgroundColor === t3.backgroundColor && e7.fontSize === t3.fontSize ? n3.push(r3) : (n3.length > 0 && i3.push(n3), n3 = [r3], t3 = r3.computedStyle) : n3.push(r3);
      }
      return n3.length > 0 && i3.push(n3), i3;
    }(t2);
    if (1 === o2.length) {
      const t3 = o2[0];
      return t3[0].style ? at(e5, t3, { ...i2, style: { color: t3[0].style.color, backgroundColor: t3[0].style.backgroundColor, fontSize: t3[0].style.fontSize } }) : at(e5, t3, i2);
    }
    const s2 = [];
    let l2 = null == i2 ? void 0 : i2.newList;
    for (const t3 of o2) {
      const i3 = at(new he(e5, { color: null === (n2 = t3[0].style) || void 0 === n2 ? void 0 : n2.color, backgroundColor: null === (r2 = t3[0].style) || void 0 === r2 ? void 0 : r2.backgroundColor, fontSize: null === (a2 = t3[0].style) || void 0 === a2 ? void 0 : a2.fontSize }), t3, { newList: l2 });
      i3 && (l2 = false, s2.push(i3));
    }
    return 0 === s2.length ? null : 1 !== s2.length || (null == i2 ? void 0 : i2.classes) || (null == i2 ? void 0 : i2.type) ? new ze(s2, { classes: null == i2 ? void 0 : i2.classes, type: null == i2 ? void 0 : i2.type, newList: null == i2 ? void 0 : i2.newList }).wrap(e5) : s2[0].wrap(e5);
  }
  static serialize(t2, i2) {
    return e(t2) ? rt(t2, i2) : "number" == typeof t2 || "boolean" == typeof t2 ? t2.toString() : "string" == typeof t2 ? t2.replace(/\s/g, "~") : void 0 === t2 ? "" : i2.expandMacro || "string" != typeof t2.verbatimLatex ? t2.command && nt.customSerializer[t2.command] ? nt.customSerializer[t2.command](t2, i2) : t2.serialize(i2) : t2.verbatimLatex;
  }
  static commonAncestor(e5, t2) {
    if (e5 === t2)
      return e5.parent;
    if (e5.parent === t2.parent)
      return e5.parent;
    const i2 = /* @__PURE__ */ new WeakSet();
    let { parent: n2 } = e5;
    for (; n2; )
      i2.add(n2), n2 = n2.parent;
    for (n2 = t2.parent; n2; ) {
      if (i2.has(n2))
        return n2;
      n2 = n2.parent;
    }
  }
  static fromJson(e5, t2) {
    const i2 = new nt(e5.type, t2, e5);
    for (const t3 of et)
      e5[t3] && i2.setChildren(e5[t3], t3);
    return i2;
  }
  toJson() {
    const e5 = { type: this.type };
    if ("math" !== this.mode && (e5.mode = this.mode), this.command && this.command !== this.value && (e5.command = this.command), void 0 !== this.value && (e5.value = this.value), this.style && Object.keys(this.style).length > 0 && (e5.style = { ...this.style }), void 0 !== this.verbatimLatex && (e5.verbatimLatex = this.verbatimLatex), this.subsupPlacement && (e5.subsupPlacement = this.subsupPlacement), this.explicitSubsupPlacement && (e5.explicitSubsupPlacement = true), this.isFunction && (e5.isFunction = true), this.displayContainsHighlight && (e5.displayContainsHighlight = true), this.isExtensibleSymbol && (e5.isExtensibleSymbol = true), this.skipBoundary && (e5.skipBoundary = true), this.captureSelection && (e5.captureSelection = true), this._branches)
      for (const t2 of Object.keys(this._branches))
        this._branches[t2] && (e5[t2] = this._branches[t2].filter((e6) => "first" !== e6.type).map((e6) => e6.toJson()));
    return e5;
  }
  get changeCounter() {
    return this._changeCounter;
  }
  get isDirty() {
    return this._isDirty;
  }
  set isDirty(e5) {
    if (this._isDirty = e5, e5) {
      this._changeCounter++, this.verbatimLatex = void 0, this._children = void 0;
      let { parent: e6 } = this;
      for (; e6; )
        e6._isDirty = true, e6._changeCounter++, e6.verbatimLatex = void 0, e6._children = void 0, e6 = e6.parent;
    }
  }
  serialize(e5) {
    var t2;
    return this.body && this.command ? Xe([this.command, "{", this.bodyToLatex(e5), "}", this.supsubToLatex(e5)]) : this.body ? Xe([this.bodyToLatex(e5), this.supsubToLatex(e5)]) : this.value && "\u200B" !== this.value ? null !== (t2 = this.command) && void 0 !== t2 ? t2 : function(e6, t3) {
      var i2;
      if ("text" === e6)
        return null !== (i2 = v(e6, t3.codePointAt(0))) && void 0 !== i2 ? i2 : t3;
      let n2;
      if (n2 = v(e6, t3.codePointAt(0)), n2)
        return n2;
      const r2 = function(e7) {
        var t4;
        if ((e7 < 119808 || e7 > 120831) && (e7 < 8448 || e7 > 8527))
          return { char: String.fromCodePoint(e7) };
        for (const i3 in x)
          if (x[i3] === e7) {
            e7 = null !== (t4 = i3.codePointAt(0)) && void 0 !== t4 ? t4 : 0;
            break;
          }
        for (const t5 of k)
          if (e7 >= t5.start && e7 < t5.start + t5.len)
            return { char: String.fromCodePoint(e7 - t5.start + t5.offset), variant: t5.variant, style: t5.style };
        return { char: String.fromCodePoint(e7) };
      }(t3.codePointAt(0));
      return r2.style || r2.variant ? (n2 = r2.char, r2.variant && (n2 = "\\" + r2.variant + "{" + n2 + "}"), "bold" === r2.style ? n2 = "\\mathbf{" + n2 + "}" : "italic" === r2.style ? n2 = "\\mathit{" + n2 + "}" : "bolditalic" === r2.style && (n2 = "\\mathbfit{" + n2 + "}"), "\\mathord{" + n2 + "}") : "";
    }(this.mode, this.value) : "";
  }
  bodyToLatex(e5) {
    return rt(this.body, e5);
  }
  aboveToLatex(e5) {
    return rt(this.above, e5);
  }
  belowToLatex(e5) {
    return rt(this.below, e5);
  }
  supsubToLatex(e5) {
    let t2 = "";
    if (void 0 !== this.branch("subscript")) {
      const i2 = rt(this.subscript, e5);
      0 === i2.length ? t2 += "_{}" : 1 === i2.length ? t2 += "_" + i2 : t2 += `_{${i2}}`;
    }
    if (void 0 !== this.branch("superscript")) {
      const i2 = rt(this.superscript, e5);
      0 === i2.length ? t2 += "^{}" : 1 === i2.length ? t2 += "\u2032" === i2 ? "^\\prime " : "\u2033" === i2 ? "^\\doubleprime " : "^" + i2 : t2 += `^{${i2}}`;
    }
    return t2;
  }
  get treeDepth() {
    let e5 = 1, t2 = this.parent;
    for (; t2; )
      t2 = t2.parent, e5 += 1;
    return e5;
  }
  get inCaptureSelection() {
    let e5 = false, t2 = this;
    for (; t2; ) {
      if (t2.captureSelection) {
        e5 = true;
        break;
      }
      t2 = t2.parent;
    }
    return e5;
  }
  branch(e5) {
    if (tt(e5) && this._branches)
      return this._branches[e5];
  }
  get branches() {
    if (!this._branches)
      return [];
    const e5 = [];
    for (const t2 of et)
      this._branches[t2] && e5.push(t2);
    return e5;
  }
  createBranch(e5) {
    return tt(e5) ? (this._branches ? this._branches[e5] || (this._branches[e5] = [this.makeFirstAtom(e5)]) : this._branches = { [e5]: [this.makeFirstAtom(e5)] }, this.isDirty = true, this._branches[e5]) : [];
  }
  get row() {
    return it(this.treeBranch) ? this.treeBranch[0] : -1;
  }
  get col() {
    return it(this.treeBranch) ? this.treeBranch[1] : -1;
  }
  get body() {
    var e5;
    return null === (e5 = this._branches) || void 0 === e5 ? void 0 : e5.body;
  }
  set body(e5) {
    this.setChildren(e5, "body");
  }
  get superscript() {
    var e5;
    return null === (e5 = this._branches) || void 0 === e5 ? void 0 : e5.superscript;
  }
  set superscript(e5) {
    this.setChildren(e5, "superscript");
  }
  get subscript() {
    var e5;
    return null === (e5 = this._branches) || void 0 === e5 ? void 0 : e5.subscript;
  }
  set subscript(e5) {
    this.setChildren(e5, "subscript");
  }
  get above() {
    var e5;
    return null === (e5 = this._branches) || void 0 === e5 ? void 0 : e5.above;
  }
  set above(e5) {
    this.setChildren(e5, "above");
  }
  get below() {
    var e5;
    return null === (e5 = this._branches) || void 0 === e5 ? void 0 : e5.below;
  }
  set below(e5) {
    this.setChildren(e5, "below");
  }
  get computedStyle() {
    var e5;
    if (!this.parent)
      return { ...null !== (e5 = this.style) && void 0 !== e5 ? e5 : {} };
    const t2 = void 0 !== this.style.verbatimColor, i2 = void 0 !== this.style.verbatimBackgroundColor, n2 = { ...this.parent.computedStyle, ...this.style };
    return delete n2.variant, delete n2.variantStyle, i2 || delete n2.verbatimBackgroundColor, t2 || delete n2.verbatimColor, n2;
  }
  applyStyle(e5) {
    this.isDirty = true, this.style = { ...this.style, ...e5 }, "none" === this.style.fontFamily && delete this.style.fontFamily, "auto" === this.style.fontShape && delete this.style.fontShape, "auto" === this.style.fontSeries && delete this.style.fontSeries, "none" === this.style.color && (delete this.style.color, delete this.style.verbatimColor), "none" === this.style.backgroundColor && (delete this.style.backgroundColor, delete this.style.verbatimBackgroundColor), "auto" === this.style.fontSize && delete this.style.fontSize;
    for (const t2 of this.children)
      t2.applyStyle(e5);
  }
  getInitialBaseElement() {
    let e5;
    return this.hasEmptyBranch("body") || (e5 = this.body[1].getInitialBaseElement()), null != e5 ? e5 : this;
  }
  getFinalBaseElement() {
    return this.hasEmptyBranch("body") ? this : this.body[this.body.length - 1].getFinalBaseElement();
  }
  isCharacterBox() {
    const e5 = this.getInitialBaseElement();
    return /mord/.test(e5.type);
  }
  hasEmptyBranch(e5) {
    const t2 = this.branch(e5);
    return !t2 || 1 === t2.length;
  }
  setChildren(e5, t2) {
    if (!e5)
      return;
    if (!tt(t2))
      return;
    const i2 = [this.makeFirstAtom(t2), ...e5];
    this._branches ? this._branches[t2] = i2 : this._branches = { [t2]: i2 };
    for (const i3 of e5)
      i3.parent = this, i3.treeBranch = t2;
    this.isDirty = true;
  }
  makeFirstAtom(e5) {
    const t2 = new nt("first", this.context, { mode: this.mode });
    return t2.parent = this, t2.treeBranch = e5, t2;
  }
  addChild(e5, t2) {
    this.createBranch(t2).push(e5), this.isDirty = true, e5.parent = this, e5.treeBranch = t2;
  }
  addChildBefore(e5, t2) {
    const i2 = this.createBranch(t2.treeBranch);
    i2.splice(i2.indexOf(t2), 0, e5), this.isDirty = true, e5.parent = this, e5.treeBranch = t2.treeBranch;
  }
  addChildAfter(e5, t2) {
    const i2 = this.createBranch(t2.treeBranch);
    i2.splice(i2.indexOf(t2) + 1, 0, e5), this.isDirty = true, e5.parent = this, e5.treeBranch = t2.treeBranch;
  }
  addChildren(e5, t2) {
    for (const i2 of e5)
      this.addChild(i2, t2);
  }
  addChildrenAfter(e5, t2) {
    const i2 = this.createBranch(t2.treeBranch);
    i2.splice(i2.indexOf(t2) + 1, 0, ...e5), this.isDirty = true;
    for (const i3 of e5)
      i3.parent = this, i3.treeBranch = t2.treeBranch;
    return e5[e5.length - 1];
  }
  removeBranch(e5) {
    const t2 = this.branch(e5);
    if (tt(e5) && (this._branches[e5] = void 0), !t2)
      return [];
    for (const e6 of t2)
      e6.parent = void 0, e6.treeBranch = void 0;
    return t2.shift(), this.isDirty = true, t2;
  }
  removeChild(e5) {
    if ("first" === e5.type)
      return;
    const t2 = this.branch(e5.treeBranch), i2 = t2.indexOf(e5);
    t2.splice(i2, 1), this.isDirty = true, e5.parent = void 0, e5.treeBranch = void 0;
  }
  get siblings() {
    return "root" === this.type ? [] : this.parent.branch(this.treeBranch);
  }
  get firstSibling() {
    return this.siblings[0];
  }
  get lastSibling() {
    const { siblings: e5 } = this;
    return e5[e5.length - 1];
  }
  get isFirstSibling() {
    return this === this.firstSibling;
  }
  get isLastSibling() {
    return this === this.lastSibling;
  }
  get hasNoSiblings() {
    return 1 === this.siblings.length;
  }
  get leftSibling() {
    const e5 = this.parent.branch(this.treeBranch);
    return e5[e5.indexOf(this) - 1];
  }
  get rightSibling() {
    const e5 = this.parent.branch(this.treeBranch);
    return e5[e5.indexOf(this) + 1];
  }
  get hasChildren() {
    return Boolean(this._branches && this.children.length > 0);
  }
  get firstChild() {
    return this.children[0];
  }
  get lastChild() {
    const { children: e5 } = this;
    return e5[e5.length - 1];
  }
  get children() {
    if (this._children)
      return this._children;
    if (!this._branches)
      return [];
    const e5 = [];
    for (const t2 of et)
      if (this._branches[t2])
        for (const i2 of this._branches[t2])
          e5.push(...i2.children), e5.push(i2);
    return this._children = e5, e5;
  }
  render(e5, t2) {
    if ("first" === this.type && !e5.atomIdsSettings)
      return null;
    const i2 = new he(e5, this.style);
    let n2 = "";
    "root" === this.type && (n2 += " ML__base"), this.isSelected && (n2 += " ML__selected");
    let r2 = this.createBox(i2, { classes: n2, newList: true === (null == t2 ? void 0 : t2.newList) || "first" === this.type });
    return r2 ? (this.subsupPlacement || !this.superscript && !this.subscript || (r2 = this.attachSupsub(i2, { base: r2 })), r2.wrap(i2)) : null;
  }
  attachSupsub(e5, t2) {
    var i2, n2;
    const r2 = t2.base, a2 = this.superscript, o2 = this.subscript;
    if (!a2 && !o2)
      return r2;
    let s2 = null, l2 = null;
    const u2 = null !== (i2 = t2.isCharacterBox) && void 0 !== i2 ? i2 : this.isCharacterBox();
    let c2 = 0;
    if (a2) {
      const t3 = new he(e5, void 0, "superscript");
      s2 = nt.createBox(t3, a2, { newList: true }), u2 || (c2 = r2.height - e5.metrics.supDrop * t3.scalingFactor);
    }
    let d2, h2 = 0;
    if (o2) {
      const t3 = new he(e5, void 0, "subscript");
      l2 = nt.createBox(t3, o2, { newList: true }), u2 || (h2 = r2.depth + e5.metrics.subDrop * t3.scalingFactor);
    }
    d2 = e5.isDisplayStyle ? e5.metrics.sup1 : e5.isCramped ? e5.metrics.sup3 : e5.metrics.sup2;
    const m2 = 0.05 / e5.scalingFactor;
    let p2 = null;
    if (l2 && s2) {
      c2 = Math.max(c2, d2, s2.depth + 0.25 * e5.metrics.xHeight), h2 = Math.max(h2, e5.metrics.sub2);
      const t3 = e5.metrics.defaultRuleThickness;
      if (c2 - s2.depth - (l2.height - h2) < 4 * t3) {
        h2 = 4 * t3 - (c2 - s2.depth) + l2.height;
        const i4 = 0.8 * e5.metrics.xHeight - (c2 - s2.depth);
        i4 > 0 && (c2 += i4, h2 -= i4);
      }
      const i3 = this.isExtensibleSymbol && r2.italic ? -r2.italic : 0;
      p2 = new Ve({ individualShift: [{ box: l2, shift: h2, marginLeft: i3 }, { box: s2, shift: -c2 }] }).wrap(e5);
    } else
      l2 && !s2 ? (h2 = Math.max(h2, e5.metrics.sub1, l2.height - 0.3448), p2 = new Ve({ shift: h2, children: [{ box: l2, marginRight: m2, marginLeft: this.isCharacterBox() ? -(null !== (n2 = r2.italic) && void 0 !== n2 ? n2 : 0) : 0 }] })) : !l2 && s2 && (c2 = Math.max(c2, d2, s2.depth + 0.10775), p2 = new Ve({ shift: -c2, children: [{ box: s2, marginRight: m2 }] }), p2.wrap(e5));
    const f2 = new ze(p2, { classes: "msubsup" + (this.isSelected ? " ML__selected" : "") });
    return this.caret && (f2.caret = this.caret), new ze([r2, f2], { type: t2.type });
  }
  attachLimits(e5, t2) {
    var i2;
    const n2 = this.superscript ? nt.createBox(new he(e5, this.style, "superscript"), this.superscript, { newList: true }) : null, r2 = this.subscript ? nt.createBox(new he(e5, this.style, "subscript"), this.subscript, { newList: true }) : null;
    return n2 || r2 ? function(e6, t3) {
      var i3, n3, r3, a2, o2;
      const s2 = e6.metrics, l2 = new ze(t3.base), u2 = null !== (i3 = t3.baseShift) && void 0 !== i3 ? i3 : 0, c2 = null !== (n3 = t3.slant) && void 0 !== n3 ? n3 : 0;
      let d2 = 0, h2 = 0;
      t3.above && (d2 = null !== (r3 = t3.aboveShift) && void 0 !== r3 ? r3 : Math.max(s2.bigOpSpacing1, s2.bigOpSpacing3 - t3.above.depth)), t3.below && (h2 = null !== (a2 = t3.belowShift) && void 0 !== a2 ? a2 : Math.max(s2.bigOpSpacing2, s2.bigOpSpacing4 - t3.below.height));
      let m2 = null;
      if (t3.below && t3.above) {
        const i4 = s2.bigOpSpacing5 + t3.below.height + t3.below.depth + h2 + l2.depth + u2;
        m2 = new Ve({ bottom: i4, children: [s2.bigOpSpacing5, { box: t3.below, marginLeft: -c2, classes: ["ML__center"] }, h2, { box: l2, classes: ["ML__center"] }, d2, { box: t3.above, marginLeft: c2, classes: ["ML__center"] }, s2.bigOpSpacing5] }).wrap(e6);
      } else if (t3.below && !t3.above)
        m2 = new Ve({ top: l2.height - u2, children: [s2.bigOpSpacing5, { box: t3.below, marginLeft: -c2, classes: ["ML__center"] }, h2, { box: l2, classes: ["ML__center"] }] }).wrap(e6);
      else if (!t3.below && t3.above) {
        const i4 = l2.depth + u2;
        m2 = new Ve({ bottom: i4, children: [{ box: l2, classes: ["ML__center"] }, d2, { box: t3.above, marginLeft: c2, classes: ["ML__center"] }, s2.bigOpSpacing5] }).wrap(e6);
      } else {
        const t4 = l2.depth + u2;
        m2 = new Ve({ bottom: t4, children: [{ box: l2 }, s2.bigOpSpacing5] }).wrap(e6);
      }
      return new ze(m2, { type: null !== (o2 = t3.type) && void 0 !== o2 ? o2 : "mop" });
    }(e5, { ...t2, above: n2, below: r2, type: null !== (i2 = null == t2 ? void 0 : t2.type) && void 0 !== i2 ? i2 : "mop" }) : t2.base.wrap(e5);
  }
  bind(e5, t2) {
    if (!t2 || e5.isPhantom || "\u200B" === this.value)
      return t2;
    let i2 = this.parent;
    for (; i2 && !i2.captureSelection; )
      i2 = i2.parent;
    return (null == i2 ? void 0 : i2.captureSelection) || (this.id || (this.id = e5.makeID()), t2.atomID = this.id), t2;
  }
  createMathfieldBox(e5, t2) {
    var i2;
    const n2 = null !== (i2 = null == t2 ? void 0 : t2.classes) && void 0 !== i2 ? i2 : "", r2 = new Qe(t2.placeholderId, t2.element, { type: "mathfield", mode: this.mode, maxFontSize: e5.scalingFactor, style: { variant: "normal", ...this.style, letterShapeStyle: e5.letterShapeStyle, fontSize: Math.max(1, e5.size + e5.mathstyle.sizeDelta) }, classes: n2, newList: null == t2 ? void 0 : t2.newList });
    return e5.isTight && (r2.isTight = true), "math" === this.mode && "main" !== this.style.variant || (r2.italic = 0), r2.right = r2.italic, this.bind(e5, r2), r2;
  }
  createBox(e5, t2) {
    var i2, n2, r2, a2;
    const o2 = null !== (i2 = this.value) && void 0 !== i2 ? i2 : this.body, s2 = function(e6) {
      return Ce.includes(e6);
    }(this.type) ? this.type : void 0;
    let l2 = null !== (n2 = null == t2 ? void 0 : t2.classes) && void 0 !== n2 ? n2 : "";
    "text" === this.mode && (l2 += " ML__text");
    const u2 = "string" == typeof o2 || void 0 === o2 ? new ze(null !== (r2 = o2) && void 0 !== r2 ? r2 : null, { type: s2, mode: this.mode, maxFontSize: e5.scalingFactor, style: { variant: "normal", ...this.style, letterShapeStyle: e5.letterShapeStyle, fontSize: Math.max(1, e5.size + e5.mathstyle.sizeDelta) }, classes: l2, newList: null == t2 ? void 0 : t2.newList }) : null !== (a2 = nt.createBox(e5, o2, { type: s2, mode: this.mode, style: this.style, classes: l2, newList: null == t2 ? void 0 : t2.newList })) && void 0 !== a2 ? a2 : new ze(null);
    return e5.isTight && (u2.isTight = true), "math" === this.mode && "main" !== this.style.variant || (u2.italic = 0), u2.right = u2.italic, this.bind(e5, u2), this.caret && (this.superscript || this.subscript || (u2.caret = this.caret)), u2;
  }
  isDigit() {
    var e5;
    return "mord" === this.type && this.value ? /^[\d,.]$/.test(this.value) : "group" === this.type && 2 === (null === (e5 = this.body) || void 0 === e5 ? void 0 : e5.length) && "first" === this.body[0].type && "," === this.body[1].value;
  }
  asDigit() {
    var e5;
    return "mord" === this.type && this.value && /^[\d,.]$/.test(this.value) ? this.value : "group" === this.type && 2 === (null === (e5 = this.body) || void 0 === e5 ? void 0 : e5.length) && "first" === this.body[0].type && "," === this.body[1].value ? "." : "";
  }
};
function rt(e5, t2) {
  if (!e5 || 0 === e5.length)
    return "";
  if ("first" === e5[0].type) {
    if (1 === e5.length)
      return "";
    e5 = e5.slice(1);
  }
  return 0 === e5.length ? "" : Xe(ye(e5, "cssClass").map((e6) => Xe(ye(e6, "color").map((e7) => Xe(function(e8) {
    const t3 = [];
    let i2 = [], n2 = "NONE";
    for (const r2 of e8)
      "first" !== r2.type && (r2.mode !== n2 ? (i2.length > 0 && t3.push(i2), i2 = [r2], n2 = r2.mode) : i2.push(r2));
    return i2.length > 0 && t3.push(i2), t3;
  }(e7).map((e8) => ge.serialize(e8, t2)))))));
}
function at(e5, t2, i2) {
  var n2, r2, a2, o2;
  function s2(e6) {
    return "text" === e6.mode;
  }
  if (!t2 || 0 === t2.length)
    return null;
  const l2 = new he(e5, null == i2 ? void 0 : i2.style), u2 = !l2.atomIdsSettings || !l2.atomIdsSettings.groupNumbers;
  let c2, d2 = [], h2 = null !== (n2 = null == i2 ? void 0 : i2.newList) && void 0 !== n2 && n2;
  if (1 === t2.length) {
    const e6 = t2[0], i3 = e6.render(l2, { newList: h2 });
    i3 && (u2 && e6.isSelected && i3.selected(true), d2 = [i3]);
  } else {
    let e6 = "", i3 = true;
    for (const n3 of t2) {
      (null === (r2 = l2.atomIdsSettings) || void 0 === r2 ? void 0 : r2.groupNumbers) && e6 && (i3 && n3.isDigit() || !i3 && s2(n3)) && (l2.atomIdsSettings.overrideID = e6);
      const t3 = n3.render(l2, { newList: h2 });
      l2.atomIdsSettings && (l2.atomIdsSettings.overrideID = void 0), t3 && (h2 = "group" === n3.type && !n3.boxType, (null === (a2 = l2.atomIdsSettings) || void 0 === a2 ? void 0 : a2.groupNumbers) && ((n3.isDigit() || s2(n3)) && (e6 && i3 === n3.isDigit() || (i3 = n3.isDigit(), e6 = null !== (o2 = n3.id) && void 0 !== o2 ? o2 : "")), !e6 || (n3.isDigit() || s2(n3)) && n3.hasEmptyBranch("superscript") && n3.hasEmptyBranch("subscript") || (e6 = "")), u2 && n3.isSelected && t3.selected(true), d2.push(t3));
    }
  }
  return 0 === d2.length ? null : (i2 || l2.isTight || d2.length > 1 ? (c2 = new ze(d2, { isTight: l2.isTight, ...null != i2 ? i2 : {} }), c2.isSelected = d2.every((e6) => e6.isSelected)) : c2 = d2[0], c2.wrap(l2).wrap(e5));
}
nt.customSerializer = {};
var ot = class extends nt {
  constructor(e5, t2, i2) {
    var n2, r2, a2;
    super("group", t2, { command: null == i2 ? void 0 : i2.command, mode: null !== (n2 = null == i2 ? void 0 : i2.mode) && void 0 !== n2 ? n2 : "math", serialize: null == i2 ? void 0 : i2.serialize, style: null == i2 ? void 0 : i2.style, displayContainsHighlight: true }), this.body = e5, this.mathstyleName = null == i2 ? void 0 : i2.mathstyleName, this.latexOpen = null == i2 ? void 0 : i2.latexOpen, this.latexClose = null == i2 ? void 0 : i2.latexClose, this.cssId = null == i2 ? void 0 : i2.cssId, this.htmlData = null == i2 ? void 0 : i2.htmlData, this.htmlStyle = null == i2 ? void 0 : i2.htmlStyle, this.customClass = null == i2 ? void 0 : i2.customClass, this.boxType = null == i2 ? void 0 : i2.boxType, this.skipBoundary = true, this.captureSelection = null !== (r2 = null == i2 ? void 0 : i2.captureSelection) && void 0 !== r2 && r2, this.changeMode = null !== (a2 = null == i2 ? void 0 : i2.changeMode) && void 0 !== a2 && a2, this.displayContainsHighlight = false, e5 && 1 === e5.length && "," === e5[0].command && (this.captureSelection = true);
  }
  static fromJson(e5, t2) {
    return new ot(e5.body, t2, e5);
  }
  toJson() {
    const e5 = {};
    return this.mathstyleName && (e5.mathstyleName = this.mathstyleName), this.latexOpen && (e5.latexOpen = this.latexOpen), this.latexClose && (e5.latexClose = this.latexClose), this.cssId && (e5.cssId = this.cssId), this.htmlData && (e5.htmlData = this.htmlData), this.htmlStyle && (e5.htmlStyle = this.htmlStyle), this.customClass && (e5.customClass = this.customClass), this.boxType && (e5.boxType = this.boxType), this.captureSelection && (e5.captureSelection = true), this.changeMode && (e5.changeMode = true), { ...super.toJson(), ...e5 };
  }
  render(e5) {
    const t2 = new he(e5, this.style, this.mathstyleName), i2 = nt.createBox(t2, this.body, { type: this.boxType, classes: this.customClass, mode: this.mode, style: { backgroundColor: this.style.backgroundColor }, newList: !this.boxType });
    return i2 ? (this.cssId && (i2.cssId = this.cssId), this.htmlData && (i2.htmlData = this.htmlData), this.htmlStyle && (i2.htmlStyle = this.htmlStyle), this.caret && (i2.caret = this.caret), this.bind(e5, i2)) : null;
  }
  serialize(e5) {
    let t2 = this.bodyToLatex(e5);
    return "string" == typeof this.latexOpen && (t2 = this.latexOpen + t2 + this.latexClose), this.htmlData && (t2 = `\\htmlData{${this.htmlData}}{${t2}}`), this.htmlStyle && (t2 = `\\htmlStyle{${this.htmlStyle}}{${t2}}`), this.customClass && (t2 = `\\class{${this.customClass}}{${t2}}`), this.cssId && (t2 = `\\cssId{${this.cssId}}{${t2}}`), t2;
  }
};
var st = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("spacing", i2, { command: e5, style: t2 }), this.width = n2;
  }
  static fromJson(e5, t2) {
    return new st(e5.command, e5.style, t2, e5.width);
  }
  toJson() {
    const e5 = {};
    return this.width && (e5.width = this.width), { ...super.toJson(), ...e5 };
  }
  render(e5) {
    var t2;
    let i2;
    if (this.width)
      i2 = new ze(null, { classes: "mspace" }), i2.left = ce(this.width.glue);
    else {
      const e6 = null !== (t2 = { "\\qquad": "qquad", "\\quad": "quad", "\\enspace": "enspace", "\\;": "thickspace", "\\:": "mediumspace", "\\,": "thinspace", "\\!": "negativethinspace" }[this.command]) && void 0 !== t2 ? t2 : "mediumspace";
      i2 = new ze(null, { classes: e6 });
    }
    return i2 = this.bind(e5, i2), this.caret && (i2.caret = this.caret), i2;
  }
  serialize(e5) {
    var t2;
    let i2 = null !== (t2 = this.command) && void 0 !== t2 ? t2 : "";
    return "\\hspace" === this.command || "\\hspace*" === this.command ? Number.isFinite(this.width) ? i2 += `{${this.width}em'}` : i2 += "{0pt}" : Number.isFinite(this.width) && (i2 += ` ${this.width}em`), i2;
  }
};
var lt = { "(": ")", "{": "}", "[": "]", "|": "|", "\\lbrace": "\\rbrace", "\\lparen": "\\rparen", "\\{": "\\}", "\\langle": "\\rangle", "\\lfloor": "\\rfloor", "\\lceil": "\\rceil", "\\vert": "\\vert", "\\lvert": "\\rvert", "\\Vert": "\\Vert", "\\lVert": "\\rVert", "\\lbrack": "\\rbrack", "\\ulcorner": "\\urcorner", "\\llcorner": "\\lrcorner", "\\lgroup": "\\rgroup", "\\lmoustache": "\\rmoustache" };
var ut = Object.fromEntries(Object.entries(lt).map(([e5, t2]) => [t2, e5]));
function ct(e5) {
  var t2;
  return null !== (t2 = { "[": 91, "]": 93, "(": 40, ")": 41, "\\mid": 8739, "|": 8739, "\u2223": 8739, "\u2225": 8741, "\\|": 8739, "\\{": 123, "\\}": 125, "\\lbrace": 123, "\\rbrace": 125, "\\lparen": 40, "\\rparen": 41, "\\lbrack": 91, "\\rbrack": 93, "\\vert": 8739, "\\lvert": 8739, "\\mvert": 8739, "\\rvert": 8739, "\\Vert": 8741, "\\lVert": 8741, "\\mVert": 8741, "\\rVert": 8741, "\\parallel": 8741, "\\shortparallel": 8741, "\\langle": 10216, "\\rangle": 10217, "\\lfloor": 8970, "\\rfloor": 8971, "\\lceil": 8968, "\\rceil": 8969, "\\ulcorner": 9484, "\\urcorner": 9488, "\\llcorner": 9492, "\\lrcorner": 9496, "\\lgroup": 10222, "\\rgroup": 10223, "\\lmoustache": 9136, "\\rmoustache": 9137, "\\surd": 8730 }[e5]) && void 0 !== t2 ? t2 : e5.codePointAt(0);
}
function dt(e5, t2, i2, n2, r2) {
  const a2 = new he(n2, null == r2 ? void 0 : r2.style, "textstyle"), o2 = new ze(ct(e5), { fontFamily: "Size" + t2 + "-Regular", classes: "ML__delim-size" + t2 }).wrap(a2);
  return i2 && o2.setTop(0.25 * (1 - a2.scalingFactor)), o2;
}
function ht(e5, t2, i2, n2, r2) {
  var a2;
  let o2, s2, l2, u2;
  o2 = l2 = u2 = ct(e5), s2 = null;
  let c2 = "Size1-Regular";
  "\\vert" === e5 || "\\lvert" === e5 || "\\rvert" === e5 || "\\mvert" === e5 || "\\mid" === e5 ? l2 = o2 = u2 = 8739 : "\\Vert" === e5 || "\\lVert" === e5 || "\\rVert" === e5 || "\\mVert" === e5 || "\\|" === e5 ? l2 = o2 = u2 = 8741 : "\\uparrow" === e5 ? l2 = u2 = 9168 : "\\Uparrow" === e5 ? l2 = u2 = 8214 : "\\downarrow" === e5 ? o2 = l2 = 9168 : "\\Downarrow" === e5 ? o2 = l2 = 8214 : "\\updownarrow" === e5 ? (o2 = 8593, l2 = 9168, u2 = 8595) : "\\Updownarrow" === e5 ? (o2 = 8657, l2 = 8214, u2 = 8659) : "[" === e5 || "\\lbrack" === e5 ? (o2 = 9121, l2 = 9122, u2 = 9123, c2 = "Size4-Regular") : "]" === e5 || "\\rbrack" === e5 ? (o2 = 9124, l2 = 9125, u2 = 9126, c2 = "Size4-Regular") : "\\lfloor" === e5 || "\u230A" === e5 ? (l2 = o2 = 9122, u2 = 9123, c2 = "Size4-Regular") : "\\lceil" === e5 || "\u2308" === e5 ? (o2 = 9121, l2 = u2 = 9122, c2 = "Size4-Regular") : "\\rfloor" === e5 || "\u230B" === e5 ? (l2 = o2 = 9125, u2 = 9126, c2 = "Size4-Regular") : "\\rceil" === e5 || "\u2309" === e5 ? (o2 = 9124, l2 = u2 = 9125, c2 = "Size4-Regular") : "(" === e5 || "\\lparen" === e5 ? (o2 = 9115, l2 = 9116, u2 = 9117, c2 = "Size4-Regular") : ")" === e5 || "\\rparen" === e5 ? (o2 = 9118, l2 = 9119, u2 = 9120, c2 = "Size4-Regular") : "\\{" === e5 || "\\lbrace" === e5 ? (o2 = 9127, s2 = 9128, u2 = 9129, l2 = 9130, c2 = "Size4-Regular") : "\\}" === e5 || "\\rbrace" === e5 ? (o2 = 9131, s2 = 9132, u2 = 9133, l2 = 9130, c2 = "Size4-Regular") : "\\lgroup" === e5 || "\u27EE" === e5 ? (o2 = 9127, u2 = 9129, l2 = 9130, c2 = "Size4-Regular") : "\\rgroup" === e5 || "\u27EF" === e5 ? (o2 = 9131, u2 = 9133, l2 = 9130, c2 = "Size4-Regular") : "\\lmoustache" === e5 || "\u23B0" === e5 ? (o2 = 9127, u2 = 9133, l2 = 9130, c2 = "Size4-Regular") : "\\rmoustache" === e5 || "\u23B1" === e5 ? (o2 = 9131, u2 = 9129, l2 = 9130, c2 = "Size4-Regular") : "\\surd" === e5 ? (o2 = 57345, u2 = 9143, l2 = 57344, c2 = "Size4-Regular") : "\\ulcorner" === e5 ? (o2 = 9484, l2 = u2 = 32) : "\\urcorner" === e5 ? (o2 = 9488, l2 = u2 = 32) : "\\llcorner" === e5 ? (u2 = 9492, l2 = o2 = 32) : "\\lrcorner" === e5 && (o2 = 9496, l2 = o2 = 32);
  const d2 = se(o2, c2), h2 = d2.height + d2.depth, m2 = se(l2, c2), p2 = m2.height + m2.depth, f2 = se(u2, c2), g2 = f2.height + f2.depth;
  let y2 = 0, b2 = 1;
  if (null !== s2) {
    const e6 = se(s2, c2);
    y2 = e6.height + e6.depth, b2 = 2;
  }
  const v2 = h2 + g2 + y2, x2 = Math.max(0, Math.ceil((t2 - v2) / (b2 * p2))), k2 = v2 + x2 * b2 * p2;
  let _2 = 0.25;
  i2 && (_2 *= n2.scalingFactor);
  const w2 = k2 / 2 - _2, S2 = [];
  S2.push({ box: new ze(u2, { fontFamily: c2 }) }), S2.push(-8e-3);
  const M2 = new ze(l2, { fontFamily: c2 });
  if (null === s2)
    for (let e6 = 0; e6 < x2; e6++)
      S2.push({ box: M2 });
  else {
    for (let e6 = 0; e6 < x2; e6++)
      S2.push({ box: M2 });
    S2.push(-8e-3), S2.push({ box: new ze(s2, { fontFamily: c2 }) }), S2.push(-8e-3);
    for (let e6 = 0; e6 < x2; e6++)
      S2.push({ box: M2 });
  }
  S2.push(-8e-3), S2.push({ box: new ze(o2, { fontFamily: c2 }) });
  let N2 = "";
  "Size1-Regular" === c2 ? N2 = " delim-size1" : "Size4-Regular" === c2 && (N2 = " delim-size4");
  const L2 = new Ve({ bottom: w2, children: S2 }, { classes: N2 });
  return new ze(L2, { ...null != r2 ? r2 : {}, classes: (null !== (a2 = null == r2 ? void 0 : r2.classes) && void 0 !== a2 ? a2 : "") + " ML__delim-mult" });
}
var mt = /* @__PURE__ */ new Set(["(", ")", "\\lparen", "\\rparen", "[", "]", "\\lbrack", "\\rbrack", "\\{", "\\}", "\\lbrace", "\\rbrace", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "\\surd", "\u230A", "\u230B", "\u2308", "\u2309"]);
var pt = /* @__PURE__ */ new Set(["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\mvert", "\\mid", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache", "\u27EE", "\u27EF", "\u23B0", "\u23B1"]);
var ft = /* @__PURE__ */ new Set(["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"]);
var gt = [0, 1.2, 1.8, 2.4, 3];
var yt = [{ type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "scriptstyle" }, { type: "small", mathstyle: "textstyle" }, { type: "large", size: 1 }, { type: "large", size: 2 }, { type: "large", size: 3 }, { type: "large", size: 4 }];
var bt = [{ type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "textstyle" }, { type: "stack" }];
var vt = [{ type: "small", mathstyle: "scriptscriptstyle" }, { type: "small", mathstyle: "scriptstyle" }, { type: "small", mathstyle: "textstyle" }, { type: "large", size: 1 }, { type: "large", size: 2 }, { type: "large", size: 3 }, { type: "large", size: 4 }, { type: "stack" }];
function xt(e5, t2, i2, n2, r2, a2) {
  var o2;
  if (!t2 || 0 === t2.length || "." === t2)
    return _t(r2, e5, e5);
  let s2;
  "<" === t2 || "\\lt" === t2 ? t2 = "\\langle" : ">" !== t2 && "\\gt" !== t2 || (t2 = "\\rangle"), s2 = ft.has(t2) ? yt : mt.has(t2) ? vt : bt;
  const l2 = function(e6, t3, i3, n3) {
    for (let a3 = { "-4": 0, "-3": 1, 0: 2 }[n3.mathstyle.sizeDelta]; a3 < i3.length && "stack" !== i3[a3].type; a3++) {
      const o3 = se(e6, "small" === (r3 = i3[a3]).type ? "Main-Regular" : "large" === r3.type ? "Size" + r3.size + "-Regular" : "Size4-Regular");
      if (o3.defaultMetrics)
        return { type: "small", mathstyle: "scriptstyle" };
      let s3 = o3.height + o3.depth;
      if ("small" === i3[a3].type && ("scriptscriptstyle" === i3[a3].mathstyle ? s3 *= ae[Math.max(1, n3.size - 2)] : "scriptstyle" === i3[a3].mathstyle && (s3 *= ae[Math.max(1, n3.size - 1)])), s3 > t3)
        return i3[a3];
    }
    var r3;
    return i3[i3.length - 1];
  }(ct(t2), i2, s2, r2), u2 = new he(r2, null == a2 ? void 0 : a2.style, l2.mathstyle);
  return "small" === l2.type ? function(e6, t3, i3, n3) {
    const r3 = new ze(ct(e6), { fontFamily: "Main-Regular" }).wrap(t3, n3);
    return i3 && r3.setTop(0.25 * (1 - t3.scalingFactor)), r3;
  }(t2, u2, n2, { type: e5, classes: "ML__small-delim " + (null !== (o2 = null == a2 ? void 0 : a2.classes) && void 0 !== o2 ? o2 : "") }) : "large" === l2.type ? dt(t2, l2.size, n2, u2, { ...a2, type: e5 }) : ht(t2, i2, n2, u2, { ...a2, type: e5 });
}
function kt(e5, t2, i2, n2, r2, a2) {
  if ("." === t2)
    return _t(r2, e5, null == a2 ? void 0 : a2.classes);
  const o2 = 0.25 * r2.scalingFactor, s2 = Math.max(i2 - o2, n2 + o2);
  return xt(e5, t2, Math.max(s2 / 500 * 901, 2 * s2 - 0.5), true, r2, a2);
}
function _t(e5, t2, i2) {
  const n2 = new he(e5, void 0, "textstyle");
  return new ze(null, { classes: " nulldelimiter " + (null != i2 ? i2 : ""), type: t2 }).wrap(n2);
}
var wt = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("leftright", i2, { style: n2.style, displayContainsHighlight: true }), this.variant = e5, this.body = t2, this.leftDelim = n2.leftDelim, this.rightDelim = n2.rightDelim;
  }
  static fromJson(e5, t2) {
    var i2;
    return new wt(null !== (i2 = e5.variant) && void 0 !== i2 ? i2 : "", e5.body, t2, e5);
  }
  toJson() {
    const e5 = super.toJson();
    return this.variant && (e5.variant = this.variant), this.leftDelim && (e5.leftDelim = this.leftDelim), this.rightDelim && (e5.rightDelim = this.rightDelim), e5;
  }
  serialize(e5) {
    var t2, i2;
    const n2 = this.matchingRightDelim();
    return "left...right" === this.variant ? Xe(["\\left" + (null !== (t2 = this.leftDelim) && void 0 !== t2 ? t2 : "."), this.bodyToLatex(e5), "\\right" + n2]) : "mleft...mright" === this.variant ? Xe(["\\mleft" + (null !== (i2 = this.leftDelim) && void 0 !== i2 ? i2 : "."), this.bodyToLatex(e5), "\\mright" + n2]) : Xe([this.leftDelim && "." !== this.leftDelim ? this.leftDelim : "", this.bodyToLatex(e5), n2]);
  }
  matchingRightDelim() {
    var e5, t2;
    if (this.rightDelim && "?" !== this.rightDelim)
      return this.rightDelim;
    const i2 = null !== (e5 = this.leftDelim) && void 0 !== e5 ? e5 : ".";
    return null !== (t2 = lt[i2]) && void 0 !== t2 ? t2 : i2;
  }
  render(e5) {
    var t2, i2, n2;
    const r2 = new he(e5, this.style), a2 = new he(e5, this.style, "textstyle"), o2 = null !== (t2 = nt.createBox(r2, this.body, { newList: true })) && void 0 !== t2 ? t2 : new ze(null, { newList: true }), s2 = o2.height / a2.scalingFactor, l2 = o2.depth / a2.scalingFactor, u2 = [];
    if (this.leftDelim && u2.push(this.bind(a2, kt("mopen", this.leftDelim, s2, l2, a2, { classes: "ML__open" + (this.containsCaret ? " ML__contains-caret" : ""), mode: this.mode, style: this.style }))), o2) {
      if (o2.children)
        for (let e6 = 0; e6 < o2.children.length; e6++) {
          const t3 = o2.children[e6];
          if (t3.delim) {
            const i3 = t3.caret;
            o2.children[e6] = this.bind(r2, kt("minner", t3.delim, s2, l2, r2)), o2.children[e6].caret = i3;
          }
        }
      u2.push(o2);
    }
    if (this.rightDelim) {
      let e6 = this.containsCaret ? " ML__contains-caret" : "", t3 = this.rightDelim;
      "?" === t3 && (this.context.smartFence ? (t3 = this.matchingRightDelim(), e6 += " ML__smart-fence__close") : t3 = "."), u2.push(this.bind(a2, kt("mclose", t3, s2, l2, a2, { classes: e6 + " ML__close", mode: this.mode, style: this.style })));
    }
    const c2 = null !== (n2 = "mleft...mright" === this.variant || (null === (i2 = this.leftSibling) || void 0 === i2 ? void 0 : i2.isFunction)) && void 0 !== n2 && n2, d2 = new ze(u2, { type: c2 ? "mclose" : "minner", classes: "left-right" });
    return this.caret && (d2.caret = this.caret), this.bind(r2, d2.wrap(r2));
  }
};
var St = class extends nt {
  constructor(e5, t2) {
    super("msubsup", e5, { style: null == t2 ? void 0 : t2.style });
  }
  static fromJson(e5, t2) {
    const i2 = new St(t2, e5);
    for (const t3 of et)
      e5[t3] && i2.setChildren(e5[t3], t3);
    return i2;
  }
  toJson() {
    return super.toJson();
  }
  render(e5) {
    var t2;
    const i2 = new he(e5, { isPhantom: true }), n2 = null !== (t2 = this.leftSibling.render(i2)) && void 0 !== t2 ? t2 : new ze(null), r2 = new ze(null, { height: n2.height, depth: n2.depth });
    return this.attachSupsub(e5, { base: r2, isCharacterBox: this.leftSibling.isCharacterBox(), type: "supsub" });
  }
  serialize(e5) {
    return this.supsubToLatex(e5);
  }
};
var Mt = class extends nt {
  constructor(e5, t2) {
    var i2;
    const n2 = (null == t2 ? void 0 : t2.value) || e5.placeholderSymbol;
    super("placeholder", e5, { mode: null !== (i2 = null == t2 ? void 0 : t2.mode) && void 0 !== i2 ? i2 : "math", style: null == t2 ? void 0 : t2.style, value: n2, command: "\\placeholder" }), this.captureSelection = true, this.placeholderId = null == t2 ? void 0 : t2.placeholderId, this.defaultValue = null == t2 ? void 0 : t2.default;
  }
  static fromJson(e5, t2) {
    return new Mt(t2, e5);
  }
  toJson() {
    const e5 = super.toJson();
    return this.placeholderId && (e5.placeholderId = this.placeholderId), this.value === this.context.placeholderSymbol && delete e5.value, this.defaultValue && (e5.defaultValue = this.defaultValue.map((e6) => e6.toJson())), e5;
  }
  render(e5) {
    if ("function" == typeof e5.renderPlaceholder)
      return e5.renderPlaceholder(e5, this);
    let t2 = "";
    return this.caret && (t2 += "ML__placeholder-selected"), this.isSelected && (t2 += "ML__selected"), this.createBox(e5, { classes: t2 });
  }
  serialize(e5) {
    var t2;
    let i2 = null !== (t2 = this.value) && void 0 !== t2 ? t2 : "";
    return i2 === this.context.placeholderSymbol && (i2 = ""), `\\placeholder${this.placeholderId ? `[${this.placeholderId}]` : ""}${this.defaultValue ? `[${nt.serialize(this.defaultValue, e5)}]` : ""}{${i2}}`;
  }
};
var Nt = class extends nt {
  constructor(e5, t2) {
    super("error", t2, { value: e5, command: e5, mode: "math" }), this.verbatimLatex = e5;
  }
  static fromJson(e5, t2) {
    return new Nt(e5.command, t2);
  }
  toJson() {
    return super.toJson();
  }
  render(e5) {
    const t2 = this.createBox(e5, { classes: "ML__error" });
    return this.caret && (t2.caret = this.caret), t2;
  }
};
var Lt = class extends nt {
  constructor(e5, t2, i2) {
    var n2, r2;
    super("macro", t2, { command: e5 }), this.body = i2.body, void 0 === i2.captureSelection ? i2.args ? this.captureSelection = false : this.captureSelection = true : this.captureSelection = i2.captureSelection, this.macroArgs = null !== (n2 = i2.args) && void 0 !== n2 ? n2 : "", this.expand = null !== (r2 = i2.expand) && void 0 !== r2 && r2;
  }
  static fromJson(e5, t2) {
    return new Lt(e5.command, t2, e5);
  }
  toJson() {
    const e5 = super.toJson();
    return this.expand && (e5.expand = true), void 0 !== this.captureSelection && (e5.captureSelection = this.captureSelection), this.macroArgs && (e5.args = this.macroArgs), e5;
  }
  serialize(e5) {
    return e5.expandMacro && this.expand ? this.bodyToLatex(e5) : this.command + this.macroArgs;
  }
  render(e5) {
    const t2 = nt.createBox(e5, this.body);
    return t2 ? (this.caret && (t2.caret = this.caret), this.bind(e5, t2)) : null;
  }
};
var At = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("text", n2, { command: e5, mode: "text", displayContainsHighlight: true }), this.value = t2, this.verbatimLatex = t2, this.applyStyle(i2);
  }
  static fromJson(e5, t2) {
    return new At(e5.command, e5.value, e5.style, t2);
  }
  toJson() {
    return super.toJson();
  }
  render(e5) {
    const t2 = this.createBox(e5);
    return this.caret && (t2.caret = this.caret), t2;
  }
  serialize(e5) {
    var t2;
    return null !== (t2 = this.verbatimLatex) && void 0 !== t2 ? t2 : v("text", this.value.codePointAt(0));
  }
};
function Ct(e5) {
  return !/^<({|}|\$|\$\$|space)>$/.test(e5);
}
var Et = class {
  constructor(e5, t2, i2) {
    var n2, r2, a2, o2, s2, l2;
    this.index = 0, this.endCount = 0, this.tokens = e5, this.context = t2, this.errors = [], this.args = null !== (n2 = i2.args) && void 0 !== n2 ? n2 : null, this.smartFence = null !== (r2 = i2.smartFence) && void 0 !== r2 ? r2 : t2.smartFence, this._currentParsingContext = { parent: void 0, mathlist: [], style: null !== (a2 = i2.style) && void 0 !== a2 ? a2 : {}, parseMode: null !== (o2 = i2.parseMode) && void 0 !== o2 ? o2 : "math", mathstyle: null !== (s2 = i2.mathstyle) && void 0 !== s2 ? s2 : "displaystyle", registers: null !== (l2 = i2.registers) && void 0 !== l2 ? l2 : t2.registers, tabular: false };
  }
  get currentContext() {
    return this._currentParsingContext;
  }
  get rootContext() {
    let e5 = this._currentParsingContext;
    for (; e5.parent; )
      e5 = e5.parent;
    return e5;
  }
  beginContext(e5) {
    var t2, i2, n2;
    const r2 = { parent: this.currentContext, mathlist: [], style: { ...this.currentContext.style }, parseMode: null !== (t2 = null == e5 ? void 0 : e5.mode) && void 0 !== t2 ? t2 : this.currentContext.parseMode, mathstyle: null !== (i2 = null == e5 ? void 0 : e5.mathstyle) && void 0 !== i2 ? i2 : this.currentContext.mathstyle, registers: null, tabular: null !== (n2 = null == e5 ? void 0 : e5.tabular) && void 0 !== n2 && n2 };
    this._currentParsingContext = r2;
  }
  endContext() {
    this._currentParsingContext = this._currentParsingContext.parent;
  }
  onError(e5) {
    this.errors.push({ before: Ye(this.tokens.slice(this.index, this.index + 10)), after: Ye(this.tokens.slice(Math.max(0, this.index - 10), this.index)), ...e5 });
  }
  get mathlist() {
    return this.currentContext.mathlist;
  }
  set mathlist(e5) {
    this.currentContext.mathlist = e5;
  }
  get parseMode() {
    return this.currentContext.parseMode;
  }
  set parseMode(e5) {
    this.currentContext.parseMode = e5;
  }
  get tabularMode() {
    return this.currentContext.tabular;
  }
  get style() {
    let e5 = this.currentContext;
    for (; e5; ) {
      if (e5.style)
        return e5.style;
      e5 = e5.parent;
    }
    return {};
  }
  set style(e5) {
    this.currentContext.style = e5;
  }
  getRegister(e5) {
    var t2, i2, n2;
    if (e5.startsWith("global "))
      return null !== (i2 = null === (t2 = this.rootContext.registers) || void 0 === t2 ? void 0 : t2[e5.slice(7)]) && void 0 !== i2 ? i2 : 0;
    let r2 = this.currentContext;
    for (; r2; ) {
      if (null === (n2 = r2.registers) || void 0 === n2 ? void 0 : n2[e5])
        return r2.registers[e5];
      r2 = r2.parent;
    }
    return 0;
  }
  setRegister(e5, t2) {
    var i2;
    if (e5.startsWith("global ")) {
      e5 = e5.slice(7);
      let n2 = this.currentContext;
      for (; n2; )
        (null === (i2 = n2.registers) || void 0 === i2 ? void 0 : i2[e5]) && delete n2.registers[e5], n2 = n2.parent;
      this.rootContext.registers[e5] = t2;
    } else
      this.currentContext.registers || (this.currentContext.registers = {}), this.currentContext.registers[e5] = t2;
  }
  end() {
    return this.endCount++, this.index >= this.tokens.length || this.endCount > 1e3;
  }
  get() {
    return this.endCount = 0, this.index < this.tokens.length ? this.tokens[this.index++] : "";
  }
  peek() {
    return this.tokens[this.index];
  }
  match(e5) {
    return this.tokens[this.index] === e5 && (this.index++, true);
  }
  lastSubsupAtom() {
    let e5;
    if (this.mathlist.length > 0) {
      if (e5 = this.mathlist[this.mathlist.length - 1], "msubsup" === e5.type)
        return e5;
      if (void 0 !== e5.subsupPlacement)
        return e5;
    }
    return e5 = new St(this.context, { style: this.style }), this.mathlist.push(e5), e5;
  }
  hasPattern(e5) {
    return e5.test(this.tokens[this.index]);
  }
  hasInfixCommand() {
    var e5;
    const { index: t2 } = this;
    if (t2 < this.tokens.length && this.tokens[t2].startsWith("\\")) {
      const i2 = this.context.getDefinition(this.tokens[t2], this.parseMode);
      return !(!i2 || "symbol" === i2.definitionType) && !(i2.ifMode && !i2.ifMode.includes(this.parseMode)) && null !== (e5 = i2.infix) && void 0 !== e5 && e5;
    }
    return false;
  }
  matchColumnSeparator() {
    const { index: e5 } = this;
    return !(!this.tabularMode || "&" !== this.tokens[e5] || (this.index++, 0));
  }
  matchRowSeparator() {
    const { index: e5 } = this;
    return !(!this.tabularMode || "\\\\" !== this.tokens[e5] && "\\cr" !== this.tokens[e5] || (this.index++, 0));
  }
  placeholder() {
    var e5;
    const t2 = null === (e5 = this.args) || void 0 === e5 ? void 0 : e5.call(this, "?");
    return t2 ? Dt(t2, this.context, { parseMode: this.parseMode, mathstyle: "textstyle" }) : [new Mt(this.context, { mode: this.parseMode, style: this.style })];
  }
  matchWhitespace() {
    let e5 = false;
    for (; this.match("<space>"); )
      e5 = true;
    return e5;
  }
  skipUntilToken(e5) {
    let t2 = this.tokens[this.index];
    for (; t2 && t2 !== e5; )
      t2 = this.tokens[++this.index];
    t2 === e5 && this.index++;
  }
  skipFiller() {
    let e5 = false;
    do {
      const t2 = this.matchWhitespace(), i2 = this.match("\\relax");
      e5 = !t2 && !i2;
    } while (!e5);
  }
  matchKeyword(e5) {
    const t2 = this.index;
    let i2 = this.end(), n2 = "";
    for (; !i2; ) {
      const t3 = this.get();
      Ct(t3) ? (n2 += t3, i2 = this.end() || n2.length >= e5.length) : i2 = true;
    }
    const r2 = e5.toUpperCase() === n2.toUpperCase();
    return r2 || (this.index = t2), r2;
  }
  scanString() {
    let e5 = "";
    for (; !this.end(); )
      if (this.match("<space>"))
        e5 += " ";
      else {
        const t2 = this.peek();
        if ("]" === t2)
          break;
        if (Ct(t2))
          e5 += this.get();
        else {
          if (!t2.startsWith("\\"))
            break;
          this.onError({ code: "unbalanced-braces" }), e5 += this.get();
        }
      }
    return e5;
  }
  scanBalancedString() {
    let e5 = "", t2 = this.end(), i2 = 1;
    for (; !t2; ) {
      if (this.match("<space>"))
        e5 += " ";
      else {
        const t3 = this.get();
        "<{>" === t3 ? (e5 += "{", i2 += 1) : "<}>" === t3 ? (i2 -= 1, i2 > 0 ? e5 += "}" : this.index -= 1) : e5 += "<$>" === t3 ? "$" : "<$$>" === t3 ? "$$" : t3;
      }
      t2 = 0 === i2 || this.end();
    }
    return e5;
  }
  matchLiteralArg() {
    var e5;
    let t2 = "";
    if (this.match("<{>")) {
      let i2 = 1;
      for (; i2 > 0 && !this.end(); ) {
        const n2 = this.get();
        "<}>" === n2 ? (i2 -= 1, i2 > 0 && (t2 += "}")) : "<{>" === n2 ? (i2 += 1, t2 += "{") : t2 += null !== (e5 = { "<space>": " ", "<$$>": "$$", "<$>": "$" }[n2]) && void 0 !== e5 ? e5 : n2;
      }
    }
    return t2;
  }
  scanNumber(e5 = true) {
    var t2, i2;
    let n2 = false, r2 = this.peek();
    for (; "<space>" === r2 || "+" === r2 || "-" === r2; )
      this.get(), "-" === r2 && (n2 = !n2), r2 = this.peek();
    e5 = Boolean(e5);
    let a2 = 10, o2 = /\d/;
    if (this.match("'"))
      a2 = 8, o2 = /[0-7]/, e5 = true;
    else if (this.match('"') || this.match("x"))
      a2 = 16, o2 = /[\dA-F]/, e5 = true;
    else if (this.match("`"))
      return r2 = this.get(), r2 ? r2.startsWith("\\") && 2 === r2.length ? (n2 ? -1 : 1) * (null !== (t2 = r2.codePointAt(1)) && void 0 !== t2 ? t2 : 0) : (n2 ? -1 : 1) * (null !== (i2 = r2.codePointAt(0)) && void 0 !== i2 ? i2 : 0) : null;
    let s2 = "";
    for (; this.hasPattern(o2); )
      s2 += this.get();
    if (!e5 && (this.match(".") || this.match(",")))
      for (s2 += "."; this.hasPattern(o2); )
        s2 += this.get();
    const l2 = e5 ? Number.parseInt(s2, a2) : Number.parseFloat(s2);
    return Number.isNaN(l2) ? null : n2 ? -l2 : l2;
  }
  scanDimen() {
    var e5, t2, i2;
    let n2, r2 = this.scanNumber(false);
    if (null === r2) {
      if (!(null === (e5 = this.peek()) || void 0 === e5 ? void 0 : e5.startsWith("\\")))
        return null;
      r2 = 1;
    }
    return this.matchWhitespace(), this.matchKeyword("pt") ? n2 = { dimension: r2, unit: "pt" } : this.matchKeyword("mm") ? n2 = { dimension: r2, unit: "mm" } : this.matchKeyword("cm") ? n2 = { dimension: r2, unit: "cm" } : this.matchKeyword("ex") ? n2 = { dimension: r2, unit: "ex" } : this.matchKeyword("px") ? n2 = { dimension: r2, unit: "px" } : this.matchKeyword("em") ? n2 = { dimension: r2, unit: "em" } : this.matchKeyword("bp") ? n2 = { dimension: r2, unit: "bp" } : this.matchKeyword("dd") ? n2 = { dimension: r2, unit: "dd" } : this.matchKeyword("pc") ? n2 = { dimension: r2, unit: "pc" } : this.matchKeyword("in") ? n2 = { dimension: r2, unit: "in" } : this.matchKeyword("mu") ? n2 = { dimension: r2, unit: "mu" } : (null === (t2 = this.peek()) || void 0 === t2 ? void 0 : t2.startsWith("\\")) ? (n2 = null !== (i2 = qt(this.getRegister(this.get().slice(1)), this.context)) && void 0 !== i2 ? i2 : { dimension: 0 }, n2.dimension *= r2) : (this.match("\\relax") || this.onError({ code: "missing-unit" }), n2 = { dimension: r2, unit: "pt" }), n2;
  }
  scanGlue() {
    const e5 = this.scanDimen();
    if (null === e5)
      return null;
    const t2 = { glue: e5 };
    return this.matchWhitespace(), this.match("\\relax") || (this.matchKeyword("plus") && this.scanDimen(), this.matchWhitespace(), this.match("\\relax") || (this.matchWhitespace(), this.matchKeyword("minus") && this.scanDimen())), t2;
  }
  scanColspec() {
    this.matchWhitespace();
    const e5 = [];
    for (; !this.end() && "<}>" !== this.peek() && "]" !== this.peek(); ) {
      const t2 = this.get();
      "c" === t2 || "r" === t2 || "l" === t2 ? e5.push({ align: t2 }) : "|" === t2 ? e5.push({ separator: "solid" }) : ":" === t2 ? e5.push({ separator: "dashed" }) : "@" === t2 && (this.match("<{>") && (this.beginContext({ mode: "math" }), e5.push({ gap: this.parse((e6) => "<}>" === e6) }), this.endContext()), this.match("<}>") || this.onError({ code: "unbalanced-braces" }));
    }
    return e5;
  }
  parseModeSet() {
    let e5 = "";
    if (this.match("\\(") && (e5 = "\\)"), !e5 && this.match("\\[") && (e5 = "\\]"), !e5)
      return null;
    this.beginContext({ mode: "math", mathstyle: "\\)" === e5 ? "textstyle" : "displaystyle" });
    const t2 = new ot(this.parse((t3) => t3 === e5), this.context, { mathstyleName: "\\)" === e5 ? "textstyle" : "displaystyle", latexOpen: "\\]" === e5 ? "\\[" : "\\(", latexClose: e5, boxType: "mord" });
    return this.match(e5) || this.onError({ code: "unbalanced-mode-shift" }), this.endContext(), t2.hasEmptyBranch("body") ? null : t2;
  }
  parseModeShift() {
    let e5 = "";
    if (this.match("<$>") && (e5 = "<$>"), !e5 && this.match("<$$>") && (e5 = "<$$>"), !e5)
      return null;
    this.beginContext({ mode: "math", mathstyle: "textstyle" });
    const t2 = new ot(this.parse((t3) => t3 === e5), this.context, { mathstyleName: "<$>" === e5 ? "textstyle" : "displaystyle", latexOpen: "<$>" === e5 ? "$ " : "$$ ", latexClose: "<$>" === e5 ? " $" : " $$" });
    return this.match(e5) || this.onError({ code: "unbalanced-mode-shift" }), this.endContext(), t2.hasEmptyBranch("body") ? null : t2;
  }
  parseEnvironment() {
    if (!this.match("\\begin"))
      return null;
    const e5 = this.parseArgument("string");
    if (!e5)
      return null;
    const t2 = function(e6) {
      var t3;
      return null !== (t3 = c[e6]) && void 0 !== t3 ? t3 : null;
    }(e5);
    if (!t2)
      return this.onError({ code: "unknown-environment", arg: e5 }), null;
    const i2 = [];
    if (t2.params)
      for (const n3 of t2.params)
        if (n3.isOptional)
          i2.push(this.parseOptionalArgument(n3.type));
        else {
          const t3 = this.parseArgument(n3.type);
          t3 || this.onError({ code: "missing-argument", arg: e5 }), i2.push(t3);
        }
    this.beginContext({ tabular: t2.tabular });
    const n2 = [], r2 = [];
    let a2 = [], o2 = false;
    do {
      if (this.end() && (this.onError({ code: "unbalanced-environment", arg: e5 }), o2 = true), !o2 && this.match("\\end") && (this.parseArgument("string") !== e5 && this.onError({ code: "unbalanced-environment", arg: e5 }), o2 = true), !o2)
        if (this.matchColumnSeparator())
          a2.push(this.mathlist), this.mathlist = [];
        else if (this.matchRowSeparator()) {
          a2.push(this.mathlist), this.mathlist = [];
          let e6 = null;
          this.matchWhitespace(), this.match("[") && (e6 = this.scanDimen(), this.matchWhitespace(), this.match("]")), r2.push(null != e6 ? e6 : { dimension: 0 }), n2.push(a2), a2 = [];
        } else
          this.mathlist.push(...this.parse((e6) => "<}>" === e6 || "&" === e6 || "\\end" === e6 || "\\cr" === e6 || "\\\\" === e6));
    } while (!o2);
    return a2.push(this.mathlist), a2.length > 0 && n2.push(a2), this.endContext(), t2.createAtom(this.context, e5, n2, r2, i2);
  }
  parse(e5) {
    this.beginContext(), e5 || (e5 = (e6) => "<}>" === e6);
    let t2 = "", i2 = null, n2 = [], r2 = null;
    const a2 = this.mathlist;
    for (this.mathlist = []; !this.end() && !e5(this.peek()); )
      this.hasInfixCommand() && !t2 ? (t2 = this.get(), i2 = this.context.getDefinition(t2, "math"), i2 && (n2 = this.parseArguments(i2)[1]), r2 = this.mathlist, this.mathlist = []) : this.parseToken();
    let o2;
    return t2 ? (n2.unshift(this.mathlist), this.mathlist = a2, r2 && n2.unshift(r2), o2 = [i2.createAtom(t2, n2, this.style, this.context)]) : (o2 = this.mathlist, this.mathlist = a2), this.endContext(), o2;
  }
  parseGroup() {
    if (!this.match("<{>"))
      return null;
    const e5 = new ot(this.parse((e6) => "<}>" === e6), this.context, { mode: this.parseMode, latexOpen: "{", latexClose: "}" });
    return this.match("<}>") || this.onError({ code: "unbalanced-braces" }), e5;
  }
  scanSmartFence() {
    if (this.matchWhitespace(), !this.match("("))
      return null;
    this.beginContext();
    let e5 = 1;
    for (; !this.end() && 0 !== e5; )
      this.match("(") && (e5 += 1), this.match(")") && (e5 -= 1), 0 !== e5 && this.parseToken();
    0 === e5 && this.match(")");
    const t2 = new wt("", this.mathlist, this.context, { leftDelim: "(", rightDelim: 0 === e5 ? ")" : "?" });
    return this.endContext(), t2;
  }
  scanDelim() {
    this.matchWhitespace();
    const e5 = this.get();
    if (!e5)
      return this.onError({ code: "unexpected-end-of-string" }), null;
    let t2 = ".";
    (e5.startsWith("\\") || Ct(e5)) && (t2 = e5);
    const i2 = this.context.getDefinition(t2, "math");
    return i2 ? "function" === i2.definitionType && i2.ifMode && !i2.ifMode.includes(this.parseMode) ? (this.onError({ code: "unexpected-delimiter", arg: t2 }), null) : "symbol" !== i2.definitionType || "mopen" !== i2.type && "mclose" !== i2.type ? /^(\.|\?|\||<|>|\\vert|\\Vert|\\\||\\surd|\\uparrow|\\downarrow|\\Uparrow|\\Downarrow|\\updownarrow|\\Updownarrow|\\mid|\\mvert|\\mVert)$/.test(t2) ? t2 : (this.onError({ code: "unexpected-delimiter", arg: t2 }), null) : t2 : (this.onError({ code: "unknown-command", arg: t2 }), null);
  }
  parseLeftRight() {
    var e5;
    if (this.match("\\right") || this.match("\\mright"))
      return this.onError({ code: "unbalanced-braces" }), null;
    let t2 = "\\right";
    if (!this.match("\\left")) {
      if (!this.match("\\mleft"))
        return null;
      t2 = "\\mright";
    }
    const i2 = this.scanDelim();
    if (!i2)
      return null;
    for (this.beginContext(); !this.end() && !this.match(t2); )
      this.parseToken();
    const n2 = this.mathlist;
    this.endContext();
    const r2 = null !== (e5 = this.scanDelim()) && void 0 !== e5 ? e5 : ".";
    return new wt("\\right" === t2 ? "left...right" : "mleft...mright", n2, this.context, { leftDelim: i2, rightDelim: r2, style: this.style });
  }
  parseSupSub() {
    if ("math" !== this.parseMode)
      return false;
    let e5 = this.peek();
    if ("^" !== e5 && "_" !== e5 && "'" !== e5)
      return false;
    for (; "^" === e5 || "_" === e5 || "'" === e5; ) {
      if (this.match("'"))
        this.match("'") ? this.lastSubsupAtom().addChild(new nt("mord", this.context, { command: "\\doubleprime", mode: "math", value: "\u2032\u2032" }), "superscript") : this.lastSubsupAtom().addChild(new nt("mord", this.context, { command: "\\prime", mode: "math", value: "\u2032" }), "superscript");
      else if (this.match("^") || this.match("_")) {
        const t2 = this.parseArgument("math");
        t2 ? this.lastSubsupAtom().addChildren(t2, "_" === e5 ? "subscript" : "superscript") : this.lastSubsupAtom().createBranch("_" === e5 ? "subscript" : "superscript");
      }
      e5 = this.peek();
    }
    return true;
  }
  parseLimits() {
    const e5 = this.match("\\limits"), t2 = !e5 && this.match("\\nolimits"), i2 = !t2 && !e5 && this.match("\\displaylimits");
    if (!e5 && !t2 && !i2)
      return false;
    const n2 = this.mathlist.length > 0 ? this.mathlist[this.mathlist.length - 1] : null;
    return !(null === n2 || "mop" !== n2.type || (e5 ? (n2.subsupPlacement = "over-under", n2.explicitSubsupPlacement = true, 0) : t2 ? (n2.subsupPlacement = "adjacent", n2.explicitSubsupPlacement = true, 0) : !i2 || (n2.subsupPlacement = "auto", n2.explicitSubsupPlacement = true, 0)));
  }
  parseArguments(e5) {
    if (!e5 || !e5.params)
      return [void 0, []];
    let t2;
    const i2 = [];
    let n2 = e5.infix ? 2 : 0;
    for (; n2 < e5.params.length; ) {
      const r2 = e5.params[n2];
      if ("rest" === r2.type)
        i2.push(this.parse((e6) => "<}>" === e6 || "&" === e6 || "\\end" === e6 || "\\cr" === e6 || "\\\\" === e6));
      else if (r2.isOptional)
        i2.push(this.parseOptionalArgument(r2.type));
      else if (r2.type.endsWith("*"))
        t2 = r2.type.slice(0, -1);
      else {
        const e6 = this.parseArgument(r2.type);
        if (null !== e6)
          i2.push(e6);
        else
          switch (this.onError({ code: "missing-argument" }), r2.type) {
            case "number":
              i2.push(0);
              break;
            case "dimen":
              i2.push({ dimension: 0, unit: "pt" });
              break;
            case "glue":
              i2.push({ glue: { dimension: 0, unit: "pt" } });
              break;
            case "string":
            case "balanced-string":
              i2.push("");
              break;
            case "delim":
              i2.push(".");
              break;
            case "colspec":
              i2.push("llllllllll");
              break;
            default:
              i2.push(this.placeholder());
          }
      }
      n2 += 1;
    }
    return [t2, i2];
  }
  parseArgument(e5) {
    var t2, i2;
    this.skipFiller(), "auto" === e5 && (e5 = this.parseMode);
    let n2 = null;
    const r2 = "<{>" === this.peek();
    if (!r2) {
      if ("delim" === e5)
        return null !== (t2 = this.scanDelim()) && void 0 !== t2 ? t2 : ".";
      if ("text" === e5 || "math" === e5) {
        this.beginContext();
        const e6 = this.parseSimpleToken();
        return this.endContext(), e6;
      }
    }
    if (r2 && this.get(), "text" === e5 || "math" === e5) {
      this.beginContext({ mode: e5 });
      do {
        this.mathlist.push(...this.parse());
      } while (!this.match("<}>") && !this.end());
    } else if (this.beginContext(), "string" === e5 ? n2 = this.scanString() : "balanced-string" === e5 ? n2 = this.scanBalancedString() : "number" === e5 ? n2 = this.scanNumber() : "colspec" === e5 ? n2 = this.scanColspec() : "dimen" === e5 ? n2 = this.scanDimen() : "glue" === e5 ? n2 = this.scanGlue() : "delim" === e5 && (n2 = null !== (i2 = this.scanDelim()) && void 0 !== i2 ? i2 : "."), r2 && this.skipUntilToken("<}>"), null === n2)
      return this.endContext(), null;
    const a2 = this.mathlist;
    return this.endContext(), null != n2 ? n2 : a2;
  }
  parseOptionalArgument(e5) {
    var t2, i2;
    if (e5 = "auto" === e5 ? this.parseMode : e5, this.matchWhitespace(), !this.match("["))
      return null;
    let n2 = null;
    for (; !this.end() && !this.match("]"); )
      if ("string" === e5)
        n2 = this.scanString();
      else if ("number" === e5)
        n2 = this.scanNumber();
      else if ("dimen" === e5)
        n2 = this.scanDimen();
      else if ("glue" === e5)
        n2 = this.scanGlue();
      else if ("colspec" === e5)
        n2 = this.scanColspec();
      else if ("bbox" === e5) {
        const e6 = this.scanString().toLowerCase().trim().split(/,(?![^(]*\)(?:(?:[^(]*\)){2})*[^"]*$)/), r2 = {};
        for (const n3 of e6) {
          const e7 = null === (i2 = (t2 = this.context).backgroundColorMap) || void 0 === i2 ? void 0 : i2.call(t2, n3);
          if (e7)
            r2.backgroundcolor = e7;
          else {
            const e8 = n3.match(/^\s*([\d.]+)\s*([a-z]{2})/);
            if (e8)
              r2.padding = e8[0];
            else {
              const e9 = n3.match(/^\s*border\s*:\s*(.*)/);
              e9 && (r2.border = e9[1]);
            }
          }
        }
        n2 = r2;
      } else
        "math" === e5 && (this.beginContext({ mode: "math" }), n2 = this.mathlist.concat(this.parse((e6) => "]" === e6)), this.endContext());
    return n2;
  }
  parseCommand(e5) {
    var t2, i2, n2, r2, a2, o2, s2;
    if ("\\placeholder" === e5)
      return [new Mt(this.context, { mode: this.parseMode, placeholderId: this.parseOptionalArgument("string"), value: null !== (t2 = this.parseArgument("string")) && void 0 !== t2 ? t2 : void 0, style: this.style })];
    let l2 = null;
    if ("\\char" === e5) {
      const e6 = this.index;
      let t3 = Math.floor(null !== (i2 = this.scanNumber(true)) && void 0 !== i2 ? i2 : Number.NaN);
      (!Number.isFinite(t3) || t3 < 0 || t3 > 1114111) && (t3 = 10067);
      const n3 = "\\char" + Ye(this.tokens.slice(e6, this.index));
      return l2 = new nt("math" === this.parseMode ? "mord" : "text", this.context, { command: "\\char", mode: this.parseMode, value: String.fromCodePoint(t3), serialize: () => n3 }), l2.verbatimLatex = n3, [l2];
    }
    if ("\\hskip" === e5 || "\\kern" === e5) {
      const t3 = this.scanGlue();
      return t3 ? [new st(e5, this.style, this.context, t3)] : null;
    }
    if (l2 = this.scanMacro(e5), l2)
      return [l2];
    const u2 = this.context.getDefinition(e5, this.parseMode);
    if (!u2)
      return this.onError({ code: "unknown-command", arg: e5 }), [new Nt(e5, this.context)];
    const c2 = this.index;
    if ("symbol" === u2.definitionType) {
      const t3 = { ...this.style };
      u2.variant && (t3.variant = u2.variant), l2 = new nt(null !== (n2 = u2.type) && void 0 !== n2 ? n2 : "mop", this.context, { command: e5, style: t3, value: String.fromCodePoint(u2.codepoint), mode: this.parseMode });
    } else {
      if (u2.ifMode && !u2.ifMode.includes(this.parseMode))
        return [];
      const t3 = this.parseMode;
      u2.applyMode && (this.parseMode = u2.applyMode);
      const [i3, n3] = this.parseArguments(u2);
      if (this.parseMode = t3, !n3)
        return null;
      if (u2.applyMode && !u2.applyStyle && !u2.createAtom)
        return n3[0];
      if (u2.infix)
        return this.onError({ code: "too-many-infix-commands", arg: e5 }), null;
      if ("function" == typeof u2.createAtom)
        l2 = u2.createAtom(e5, n3, this.style, this.context), i3 && (l2.body = null !== (r2 = this.parseArgument(i3)) && void 0 !== r2 ? r2 : void 0);
      else if ("function" == typeof u2.applyStyle) {
        const t4 = u2.applyStyle(e5, n3, this.context), r3 = this.parseMode;
        if (u2.applyMode && (this.parseMode = u2.applyMode), i3) {
          const e6 = this.style;
          this.style = { ...this.style, ...t4 };
          const n4 = this.parseArgument(i3);
          return this.style = e6, this.parseMode = r3, n4;
        }
        this.style = { ...this.style, ...t4 }, this.parseMode = r3;
      } else
        l2 = new nt("mop", this.context, { command: null !== (a2 = u2.command) && void 0 !== a2 ? a2 : e5, style: { ...this.style }, value: e5, mode: null !== (o2 = u2.applyMode) && void 0 !== o2 ? o2 : this.parseMode });
    }
    if (l2 instanceof nt && void 0 === l2.verbatimLatex && !/^\\(llap|rlap|class|cssId|htmlData)$/.test(e5) && (l2.verbatimLatex = (null !== (s2 = l2.command) && void 0 !== s2 ? s2 : "") + Ye(this.tokens.slice(c2, this.index)), 0 === l2.verbatimLatex.length && (l2.verbatimLatex = void 0), l2.isFunction && this.smartFence)) {
      const e6 = this.scanSmartFence();
      if (e6)
        return [l2, e6];
    }
    return l2 ? [l2] : null;
  }
  parseLiteral(e5) {
    const t2 = ge.createAtom(this.parseMode, e5, this.context, { ...this.style });
    if (!t2)
      return null;
    if (t2.isFunction && this.smartFence) {
      const e6 = this.scanSmartFence();
      if (e6)
        return [t2, e6];
    }
    return [t2];
  }
  parseSimpleToken() {
    const e5 = this.get();
    return e5 ? "<space>" === e5 ? "text" === this.parseMode ? [new At(" ", " ", this.style, this.context)] : null : e5.startsWith("\\") ? this.parseCommand(e5) : Ct(e5) ? this.parseLiteral(e5) : ("<}>" === e5 ? this.onError({ latex: "", code: "unbalanced-braces" }) : this.onError({ latex: "", code: "unexpected-token", arg: e5 }), null) : null;
  }
  scanMacro(e5) {
    var t2;
    const i2 = this.context.getMacro(e5);
    if (!i2)
      return null;
    const n2 = this.index, r2 = i2.args, a2 = { "?": null === (t2 = this.args) || void 0 === t2 ? void 0 : t2.call(this, "?") };
    for (let e6 = 1; e6 <= r2; e6++)
      a2[e6] = this.matchLiteralArg();
    return new Lt(e5, this.context, { expand: i2.expand, captureSelection: i2.captureSelection, args: Ye(this.tokens.slice(n2, this.index)), body: Dt(i2.def, this.context, { parseMode: this.parseMode, args: (e6) => a2[e6], mathstyle: this.currentContext.mathstyle }) });
  }
  parseToken() {
    var t2, i2, n2, r2;
    let a2 = null !== (r2 = null !== (n2 = null !== (i2 = null !== (t2 = this.parseEnvironment()) && void 0 !== t2 ? t2 : this.parseModeShift()) && void 0 !== i2 ? i2 : this.parseModeSet()) && void 0 !== n2 ? n2 : this.parseGroup()) && void 0 !== r2 ? r2 : this.parseLeftRight();
    if (null === a2) {
      if (this.parseSupSub())
        return true;
      if (this.parseLimits())
        return true;
      a2 = this.parseSimpleToken();
    }
    return e(a2) ? this.mathlist.push(...a2) : a2 && this.mathlist.push(a2), null !== a2;
  }
};
function Dt(e5, t2, i2) {
  var n2, r2, a2;
  const o2 = null !== (n2 = null == i2 ? void 0 : i2.args) && void 0 !== n2 ? n2 : null, s2 = new Et(Je(e5, o2), t2, { args: o2, mathstyle: null !== (r2 = null == i2 ? void 0 : i2.mathstyle) && void 0 !== r2 ? r2 : "displaystyle", parseMode: null !== (a2 = null == i2 ? void 0 : i2.parseMode) && void 0 !== a2 ? a2 : "math" }), l2 = [];
  for (; !s2.end(); )
    l2.push(...s2.parse());
  return l2;
}
function Tt(e5, t2, i2) {
  var n2;
  const r2 = new Et(Je(e5, null), t2, { args: null, mathstyle: "displaystyle", parseMode: null !== (n2 = null == i2 ? void 0 : i2.parseMode) && void 0 !== n2 ? n2 : "math" });
  for (; !r2.end(); )
    r2.parse();
  return r2.errors;
}
function zt(e5, t2, i2) {
  return "object" == typeof e5 && "glue" in e5 ? e5 : "object" == typeof e5 && "dimension" in e5 ? { glue: e5 } : "number" == typeof e5 ? { glue: { dimension: e5 } } : new Et(Je(e5), t2, { registers: i2 }).scanGlue();
}
function qt(e5, t2, i2) {
  return "number" == typeof e5 ? { dimension: e5, unit: "pt" } : ("object" == typeof e5 && "glue" in e5 && (e5 = e5.glue), "object" == typeof e5 && "dimension" in e5 ? e5 : new Et(Je(e5), t2, { registers: i2 }).scanDimen());
}
var It = '.ML__sr-only{clip:rect(0,0,0,0);border:0;-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.ML__base,.ML__isInline{display:inline-block}.ML__base{border:0;box-sizing:content-box;cursor:text;font-family:inherit;font-style:inherit;font-weight:inherit;margin:0;outline:0;padding:0;position:relative;text-decoration:none;vertical-align:baseline;visibility:inherit;width:min-content}body.ML__fonts-loading .ML__base{visibility:hidden}.ML__strut,.ML__strut--bottom{display:inline-block;min-height:.5em}.ML__small-delim{font-family:KaTeX_Main}.ML__text{font-family:var(--text-font-family,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto","Oxygen","Ubuntu","Cantarell","Fira Sans","Droid Sans","Helvetica Neue",sans-serif);white-space:pre}.ML__cmr{font-family:KaTeX_Main;font-style:normal}.ML__mathit{font-family:KaTeX_Math;font-style:italic}.ML__mathbf{font-family:KaTeX_Main;font-weight:700}.lcGreek.ML__mathbf{font-family:KaTeX_Math;font-weight:400}.ML__mathbfit{font-family:KaTeX_Math;font-style:italic;font-weight:700}.ML__ams,.ML__bb{font-family:KaTeX_AMS}.ML__cal{font-family:KaTeX_Caligraphic}.ML__frak{font-family:KaTeX_Fraktur}.ML__tt{font-family:KaTeX_Typewriter}.ML__script{font-family:KaTeX_Script}.ML__sans{font-family:KaTeX_SansSerif}.ML__series_el,.ML__series_ul{font-weight:100}.ML__series_l{font-weight:200}.ML__series_sl{font-weight:300}.ML__series_sb{font-weight:500}.ML__bold,.ML__boldsymbol{font-weight:700}.ML__series_eb{font-weight:800}.ML__series_ub{font-weight:900}.ML__series_uc{font-stretch:ultra-condensed}.ML__series_ec{font-stretch:extra-condensed}.ML__series_c{font-stretch:condensed}.ML__series_sc{font-stretch:semi-condensed}.ML__series_sx{font-stretch:semi-expanded}.ML__series_x{font-stretch:expanded}.ML__series_ex{font-stretch:extra-expanded}.ML__series_ux{font-stretch:ultra-expanded}.ML__it{font-style:italic}.ML__shape_ol{-webkit-text-stroke:1px #000;text-stroke:1px #000;color:transparent}.ML__shape_sc{font-variant:small-caps}.ML__shape_sl{font-style:oblique}.ML__emph{color:#bc2612}.ML__emph .ML__emph{color:#0c7f99}.ML__highlight{background:#edd1b0;color:#007cb2}.ML__center{text-align:center}.ML__label_padding{padding:0 .5em}.ML__frac-line{min-height:1px;width:100%}.ML__frac-line:after{background:currentColor;box-sizing:content-box;content:"";display:block;margin-top:-.04em;min-height:.04em;transform:translate(0)}.ML__sqrt,.ML__sqrt-sign{display:inline-block}.ML__sqrt-sign{font-family:KaTeX_Main;position:relative}.ML__sqrt-line{display:inline-block;height:.04em;width:100%}.ML__sqrt-line:before{background:currentColor;content:"";display:block;margin-top:-.04em;min-height:.04em;transform:translate(0)}.ML__sqrt-line:after{border-bottom-width:1px;content:" ";display:block;margin-top:-.1em}.ML__sqrt-index{margin-left:.27777778em;margin-right:-.55555556em}.ML__delim-size1{font-family:KaTeX_Size1}.ML__delim-size2{font-family:KaTeX_Size2}.ML__delim-size3{font-family:KaTeX_Size3}.ML__delim-size4{font-family:KaTeX_Size4}.ML__delim-mult .delim-size1>span{font-family:KaTeX_Size1}.ML__delim-mult .delim-size4>span{font-family:KaTeX_Size4}.ML__accent-body>span{font-family:KaTeX_Main;width:0}.ML__accent-vec>span{left:.24em;position:relative}.ML__mathlive{word-wrap:normal;direction:ltr;display:inline-block;font-family:KaTeX_Main,Times New Roman,serif;font-size-adjust:none;font-stretch:normal;font-style:normal;font-variant-caps:normal;letter-spacing:normal;line-height:1.2;text-align:left;text-indent:0;text-rendering:auto;text-shadow:none;-webkit-user-select:none;user-select:none;white-space:nowrap;width:min-content;word-spacing:normal}.ML__mathlive .style-wrap{position:relative}.ML__mathlive .left-right,.ML__mathlive .mfrac{display:inline-block}.ML__mathlive .vlist-t{border-collapse:collapse;display:inline-table;table-layout:fixed}.ML__mathlive .vlist-r{display:table-row}.ML__mathlive .vlist{display:table-cell;position:relative;vertical-align:bottom}.ML__mathlive .vlist>span{display:block;height:0;position:relative}.ML__mathlive .vlist>span>span{display:inline-block}.ML__mathlive .vlist>span>.pstrut{overflow:hidden;width:0}.ML__mathlive .vlist-t2{margin-right:-2px}.ML__mathlive .vlist-s{display:table-cell;font-size:1px;min-width:2px;vertical-align:bottom;width:2px}.ML__mathlive .msubsup{text-align:left}.ML__mathlive .negativethinspace{display:inline-block;height:.71em;margin-left:-.16667em}.ML__mathlive .thinspace{display:inline-block;height:.71em;width:.16667em}.ML__mathlive .mediumspace{display:inline-block;height:.71em;width:.22222em}.ML__mathlive .thickspace{display:inline-block;height:.71em;width:.27778em}.ML__mathlive .enspace{display:inline-block;height:.71em;width:.5em}.ML__mathlive .quad{display:inline-block;height:.71em;width:1em}.ML__mathlive .qquad{display:inline-block;height:.71em;width:2em}.ML__mathlive .llap,.ML__mathlive .rlap{display:inline-block;position:relative;width:0}.ML__mathlive .llap>.inner,.ML__mathlive .rlap>.inner{position:absolute}.ML__mathlive .llap>.fix,.ML__mathlive .rlap>.fix{display:inline-block}.ML__mathlive .llap>.inner{right:0}.ML__mathlive .rlap>.inner{left:0}.ML__mathlive .rule{border:0 solid;box-sizing:border-box;display:inline-block;position:relative}.ML__mathlive .overline .overline-line,.ML__mathlive .underline .underline-line{width:100%}.ML__mathlive .overline .overline-line:before,.ML__mathlive .underline .underline-line:before{border-bottom-style:solid;border-bottom-width:.04em;content:"";display:block}.ML__mathlive .overline .overline-line:after,.ML__mathlive .underline .underline-line:after{border-bottom-style:solid;border-bottom-width:.04em;content:"";display:block;margin-top:-1px;min-height:thin}.ML__mathlive .stretchy{display:block;left:0;overflow:hidden;position:absolute;width:100%}.ML__mathlive .stretchy:after,.ML__mathlive .stretchy:before{content:""}.ML__mathlive .stretchy svg{fill:currentColor;stroke:currentColor;fill-rule:nonzero;fill-opacity:1;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;display:block;height:inherit;position:absolute;width:100%}.ML__mathlive .slice-1-of-2{left:0}.ML__mathlive .slice-1-of-2,.ML__mathlive .slice-2-of-2{display:inline-flex;overflow:hidden;position:absolute;width:50.2%}.ML__mathlive .slice-2-of-2{right:0}.ML__mathlive .slice-1-of-3{display:inline-flex;left:0;overflow:hidden;position:absolute;width:25.1%}.ML__mathlive .slice-2-of-3{display:inline-flex;left:25%;overflow:hidden;position:absolute;width:50%}.ML__mathlive .slice-3-of-3{display:inline-flex;overflow:hidden;position:absolute;right:0;width:25.1%}.ML__mathlive .slice-1-of-1{display:inline-flex;left:0;overflow:hidden;position:absolute;width:100%}.ML__mathlive .nulldelimiter{display:inline-block;width:.12em}.ML__mathlive .op-group{display:inline-block}.ML__mathlive .op-symbol{position:relative}.ML__mathlive .op-symbol.small-op{font-family:KaTeX_Size1}.ML__mathlive .op-symbol.large-op{font-family:KaTeX_Size2}.ML__mathlive .accent>.vlist>span{text-align:center}.ML__mathlive .mtable .vertical-separator{box-sizing:border-box;display:inline-block;min-width:1px}.ML__mathlive .mtable .arraycolsep{display:inline-block}.ML__mathlive .mtable .col-align-m>.vlist-t{text-align:center}.ML__mathlive .mtable .col-align-c>.vlist-t{text-align:center}.ML__mathlive .mtable .col-align-l>.vlist-t{text-align:left}.ML__mathlive .mtable .col-align-r>.vlist-t{text-align:right}.ML__error{background-image:radial-gradient(ellipse at center,#cc0041,transparent 70%);background-position:0 98%;background-repeat:repeat-x;background-size:3px 3px}.ML__composition{background:#fff1c2;color:#000;-webkit-text-decoration:underline var(--caret-color-computed,var(--ML__caret-color));text-decoration:underline var(--caret-color-computed,var(--ML__caret-color))}@media (prefers-color-scheme:dark){.ML__composition{background:#69571c;color:#fff}}.ML__placeholder{color:var(--placeholder-color,var(--ML__placeholder-color));font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;opacity:var(--placeholder-opacity,.4);padding-left:.4ex;padding-right:.4ex}.ML__placeholdercontainer{display:none}.ML__isReadOnly .ML__placeholdercontainer{display:block}';
function Ft(e5, t2, n2) {
  var r2, a2;
  if (i(), !t2)
    return null;
  let o2 = null !== (r2 = null == e5 ? void 0 : e5.getRootNode()) && void 0 !== r2 ? r2 : null === document || void 0 === document ? void 0 : document.head;
  if (!o2)
    return null;
  o2 === document && (o2 = document.head);
  const s2 = o2.querySelector(`style[data-id="${n2}"]`);
  if (s2) {
    const e6 = Number.parseFloat(null !== (a2 = s2.getAttribute("data-refcount")) && void 0 !== a2 ? a2 : "0");
    s2.dataset.refcount = Number(e6 + 1).toString();
  } else {
    const e6 = document.createElement("style");
    e6.dataset.id = n2, e6.dataset.refcount = "1", e6.append(document.createTextNode(t2)), o2.appendChild(e6);
  }
  return { release: () => {
    var e6;
    const t3 = document.head.querySelector(`style[data-id="${n2}"]`);
    if (t3) {
      const i2 = Number.parseFloat(null !== (e6 = t3.getAttribute("data-refcount")) && void 0 !== e6 ? e6 : "0");
      1 === i2 ? t3.remove() : t3.dataset.refcount = Number(i2 - 1).toString();
    }
  } };
}
function Ot(e5) {
  let t2 = 0;
  for (let i2 = 0; i2 < e5.length; i2++)
    t2 = Math.imul(31, t2) + e5.charCodeAt(i2) | 0;
  return Math.abs(t2);
}
var Pt = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("accent", i2, { command: e5, style: n2.style }), n2.accentChar ? this.accent = n2.accentChar : this.svgAccent = null == n2 ? void 0 : n2.svgAccent, this.body = t2, this.skipBoundary = true;
  }
  static fromJson(e5, t2) {
    return new Pt(e5.command, e5.body, t2, { accentChar: e5.accentChar, svgAccent: e5.svgAccent, style: e5.style });
  }
  toJson() {
    return { ...super.toJson(), accentChar: this.accent, svgAccent: this.svgAccent };
  }
  render(e5) {
    var t2;
    const i2 = new he(e5, this.style, "cramp"), n2 = null !== (t2 = nt.createBox(i2, this.body)) && void 0 !== t2 ? t2 : new ze(null);
    let r2 = 0;
    !this.hasEmptyBranch("body") && 2 === this.body.length && this.body[1].isCharacterBox() && (r2 = n2.skew);
    let a2, o2 = Math.min(n2.height, 0.431);
    if (this.svgAccent)
      a2 = $e(this.svgAccent), o2 = i2.metrics.bigOpSpacing1 - o2;
    else if (this.accent) {
      const e6 = new ze(this.accent, { fontFamily: "Main-Regular" });
      e6.italic = 0;
      const t3 = 8407 === this.accent ? " ML__accent-vec" : "";
      a2 = new ze(new ze(e6), { classes: "ML__accent-body" + t3 });
    }
    a2 = new Ve({ shift: 0, children: [{ box: new ze(n2) }, -o2, { box: a2, marginLeft: n2.left + 2 * r2, classes: ["ML__center"] }] });
    const s2 = new ze(a2, { newList: true, type: "mord" });
    return this.caret && (s2.caret = this.caret), this.bind(i2, s2.wrap(i2)), this.attachSupsub(i2, { base: s2 });
  }
};
var Bt = class extends nt {
  constructor(e5, t2, i2, n2, r2 = {}) {
    var a2, o2;
    super("array", e5), this.environmentName = t2, this.rowGaps = n2, r2.mathstyleName && (this.mathstyleName = r2.mathstyleName), r2.columns && (0 === r2.columns.length ? this.colFormat = [{ align: "l" }] : this.colFormat = r2.columns), this.colFormat || (this.colFormat = [{ align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }, { align: "l" }]), this.array = function(e6, t3, i3, n3) {
      let r3 = 0;
      for (const e7 of n3)
        "align" in e7 && (r3 += 1);
      let a3 = 0;
      const o3 = [];
      for (const n4 of i3) {
        let i4 = 0;
        for (a3 = Math.max(a3, Math.min(n4.length, r3)); i4 < n4.length; ) {
          const a4 = [], s3 = Math.min(n4.length, i4 + r3);
          for (; i4 < s3; )
            0 === n4[i4].length ? a4.push([new nt("first", e6, { mode: t3.mode })]) : "first" !== n4[i4][0].type ? a4.push([new nt("first", e6, { mode: t3.mode }), ...n4[i4]]) : a4.push(n4[i4]), i4 += 1;
          o3.push(a4);
        }
      }
      1 === o3[o3.length - 1].length && 0 === o3[o3.length - 1][0].length && o3.pop();
      const s2 = [];
      for (const i4 of o3) {
        if (i4.length !== a3)
          for (let n4 = i4.length; n4 < a3; n4++)
            i4.push([new nt("first", e6, { mode: t3.mode }), new Mt(e6)]);
        s2.push(i4);
      }
      let l2 = 0, u2 = 0;
      for (const e7 of s2) {
        u2 = 0;
        for (const i4 of e7) {
          for (const e8 of i4)
            e8.parent = t3, e8.treeBranch = [l2, u2];
          u2 += 1;
        }
        l2 += 1;
      }
      return t3.isDirty = true, s2;
    }(e5, this, i2, this.colFormat), r2.leftDelim && (this.leftDelim = r2.leftDelim), r2.rightDelim && (this.rightDelim = r2.rightDelim), void 0 !== r2.jot && (this.jot = r2.jot), r2.arraycolsep && (this.arraycolsep = r2.arraycolsep), this.colSeparationType = r2.colSeparationType, this.arraystretch = null !== (a2 = r2.arraystretch) && void 0 !== a2 ? a2 : 1, this.minColumns = null !== (o2 = r2.minColumns) && void 0 !== o2 ? o2 : 1;
  }
  static fromJson(e5, t2) {
    return new Bt(t2, e5.environmentName, e5.array, e5.rowGaps, e5);
  }
  toJson() {
    const e5 = { ...super.toJson(), environmentName: this.environmentName, array: this.array.map((e6) => e6.map((e7) => e7.map((e8) => e8.toJson()))), rowGaps: this.rowGaps, columns: this.colFormat, colSeparationType: this.colSeparationType };
    return 1 !== this.arraystretch && (e5.arraystretch = this.arraystretch), this.arraycolsep && (e5.arraycolsep = this.arraycolsep), this.leftDelim && (e5.leftDelim = this.leftDelim), this.rightDelim && (e5.rightDelim = this.rightDelim), void 0 !== this.jot && (e5.jot = this.jot), e5;
  }
  branch(e5) {
    var t2;
    if (it(e5))
      return null !== (t2 = this.array[e5[0]][e5[1]]) && void 0 !== t2 ? t2 : void 0;
  }
  get branches() {
    const e5 = super.branches;
    return this.array.forEach((t2, i2) => {
      this.array[i2].forEach((t3, n2) => {
        this.array[i2][n2] && e5.push([i2, n2]);
      });
    }), e5;
  }
  createBranch(e5) {
    var t2;
    return it(e5) ? (this.isDirty = true, null !== (t2 = this.branch(e5)) && void 0 !== t2 ? t2 : []) : [];
  }
  get rowCount() {
    return this.array.length;
  }
  get colCount() {
    return this.array[0].length;
  }
  get maxColumns() {
    return this.colFormat.filter((e5) => Boolean(e5.align)).length;
  }
  removeBranch(e5) {
    if (tt(e5))
      return super.removeBranch(e5);
    const t2 = this.branch(e5);
    return this.array[e5[0]][e5[1]] = void 0, t2.forEach((e6) => {
      e6.parent = void 0, e6.treeBranch = void 0;
    }), t2.shift(), this.isDirty = true, t2;
  }
  get hasChildren() {
    return this.children.length > 0;
  }
  get children() {
    const e5 = [];
    for (const t2 of this.array)
      for (const i2 of t2)
        if (i2)
          for (const t3 of i2)
            e5.push(...t3.children), e5.push(t3);
    return [...e5, ...super.children];
  }
  render(e5) {
    var t2, i2, n2, r2, a2;
    const o2 = new he(e5, this.style, this.mathstyleName), s2 = o2.getRegisterAsEm("arrayrulewidth"), l2 = o2.getRegisterAsEm("arraycolsep"), u2 = o2.getRegisterAsEm("doublerulesep"), c2 = null !== (t2 = this.arraystretch) && void 0 !== t2 ? t2 : 1;
    let d2 = "number" == typeof this.arraycolsep ? this.arraycolsep : l2;
    "small" === this.colSeparationType && (d2 = new he(e5, void 0, "scriptstyle").scalingFactor / e5.scalingFactor * 0.2778);
    const h2 = 1.2 * c2, m2 = 0.7 * h2, p2 = 0.3 * h2;
    let f2 = 0;
    const g2 = [];
    let y2 = 0;
    const b2 = this.array.length;
    for (let e6 = 0; e6 < b2; ++e6) {
      const t3 = this.array[e6];
      y2 = Math.max(y2, t3.length);
      const r3 = new he(o2, this.style, this.mathstyleName);
      let a3 = m2 / r3.scalingFactor, s3 = p2 / r3.scalingFactor;
      const l3 = { cells: [], height: 0, depth: 0, pos: 0 };
      for (const e7 of t3) {
        const t4 = null !== (i2 = nt.createBox(r3, e7, { newList: true })) && void 0 !== i2 ? i2 : new ze(null, { newList: true });
        s3 = Math.max(s3, t4.depth), a3 = Math.max(a3, t4.height), l3.cells.push(t4);
      }
      let u3 = null !== (n2 = ce(this.rowGaps[e6])) && void 0 !== n2 ? n2 : 0;
      u3 > 0 && (u3 += p2, s3 = Math.max(s3, u3), u3 = 0), void 0 !== this.jot && (s3 += this.jot), l3.height = a3, l3.depth = s3, f2 += a3, l3.pos = f2, f2 += s3 + u3, g2.push(l3);
    }
    const v2 = f2 / 2 + 0.25, x2 = [];
    for (let e6 = 0; e6 < y2; e6++) {
      const t3 = [];
      for (const i3 of g2) {
        const n3 = i3.cells[e6];
        n3.depth = i3.depth, n3.height = i3.height, t3.push({ box: n3, shift: i3.pos - v2 });
      }
      t3.length > 0 && x2.push(new Ve({ individualShift: t3 }));
    }
    const k2 = [];
    let _2 = false, w2 = false, S2 = 0, M2 = !this.leftDelim;
    const { colFormat: N2 } = this;
    for (const t3 of N2) {
      if ("align" in t3 && S2 >= x2.length)
        break;
      if ("align" in t3)
        _2 ? k2.push(Vt(2 * d2)) : (w2 || M2) && k2.push(Vt(d2)), k2.push(new ze(x2[S2], { classes: "col-align-" + t3.align })), S2++, _2 = true, w2 = false, M2 = false;
      else if ("gap" in t3) {
        if ("number" == typeof t3.gap)
          k2.push(Vt(t3.gap));
        else {
          const i3 = Kt(e5, g2, v2, t3.gap);
          i3 && k2.push(i3);
        }
        _2 = false, w2 = false, M2 = false;
      } else if ("separator" in t3) {
        const e6 = new ze(null, { classes: "vertical-separator" });
        e6.setStyle("height", f2, "em"), e6.setStyle("border-right", `${s2}em ${t3.separator} currentColor`), e6.setStyle("vertical-align", -(f2 - v2), "em");
        let i3 = 0;
        w2 ? i3 = u2 - s2 : _2 && (i3 = d2 - s2), e6.left = i3, k2.push(e6), _2 = false, w2 = true, M2 = false;
      }
    }
    _2 && !this.rightDelim && k2.push(Vt(d2));
    const L2 = new ze(k2, { classes: "mtable" });
    if (!(this.leftDelim && "." !== this.leftDelim || this.rightDelim && "." !== this.rightDelim))
      return this.caret && (L2.caret = this.caret), L2;
    const A2 = L2.height, C2 = L2.depth, E2 = this.bind(e5, new ze([this.bind(e5, kt("mopen", null !== (r2 = this.leftDelim) && void 0 !== r2 ? r2 : ".", A2, C2, o2)), L2, this.bind(e5, kt("mclose", null !== (a2 = this.rightDelim) && void 0 !== a2 ? a2 : ".", A2, C2, o2))], { type: "mord" }));
    return E2 ? (this.caret && (E2.caret = this.caret), this.attachSupsub(e5, { base: E2 })) : null;
  }
  serialize(e5) {
    let t2 = "\\begin{" + this.environmentName + "}";
    if ("array" === this.environmentName) {
      if (t2 += "{", void 0 !== this.colFormat)
        for (const e6 of this.colFormat)
          "align" in e6 ? t2 += e6.align : "separator" in e6 && "solid" === e6.separator ? t2 += "|" : "separator" in e6 && "dashed" === e6.separator && (t2 += ":");
      t2 += "}";
    }
    for (let i2 = 0; i2 < this.array.length; i2++) {
      for (let n2 = 0; n2 < this.array[i2].length; n2++)
        n2 > 0 && (t2 += " & "), t2 = Xe([t2, nt.serialize(this.array[i2][n2], e5)]);
      i2 < this.array.length - 1 && (t2 += " \\\\ ");
    }
    return t2 += "\\end{" + this.environmentName + "}", t2;
  }
  getCell(e5, t2) {
    return this.array[e5][t2];
  }
  setCell(e5, t2, i2) {
    for (const i3 of this.array[e5][t2])
      i3.parent = void 0, i3.treeBranch = void 0;
    let n2 = i2;
    0 !== i2.length && "first" === i2[0].type || (n2 = [new nt("first", this.context, { mode: this.mode }), ...i2]), this.array[e5][t2] = n2;
    for (const i3 of n2)
      i3.parent = this, i3.treeBranch = [e5, t2];
    this.isDirty = true;
  }
  addRowBefore(e5) {
    const t2 = [];
    for (let e6 = 0; e6 < this.colCount; e6++)
      t2.push($t(this));
    this.array.splice(e5, 0, t2);
    for (let t3 = e5; t3 < this.rowCount; t3++)
      for (let e6 = 0; e6 < this.colCount; e6++) {
        const i2 = this.array[t3][e6];
        if (i2)
          for (const n2 of i2)
            n2.treeBranch = [t3, e6];
      }
    this.isDirty = true;
  }
  addRowAfter(e5) {
    const t2 = [];
    for (let e6 = 0; e6 < this.colCount; e6++)
      t2.push($t(this));
    this.array.splice(e5 + 1, 0, t2);
    for (let t3 = e5 + 1; t3 < this.rowCount; t3++)
      for (let e6 = 0; e6 < this.colCount; e6++) {
        const i2 = this.array[t3][e6];
        if (i2)
          for (const n2 of i2)
            n2.treeBranch = [t3, e6];
      }
    this.isDirty = true;
  }
  removeRow(e5) {
    const t2 = this.array.splice(e5, 1);
    for (const e6 of t2)
      for (const t3 of e6)
        if (t3)
          for (const e7 of t3)
            e7.parent = void 0, e7.treeBranch = void 0;
    for (let t3 = e5; t3 < this.rowCount; t3++)
      for (let e6 = 0; e6 < this.colCount; e6++) {
        const i2 = this.array[t3][e6];
        if (i2)
          for (const n2 of i2)
            n2.treeBranch = [t3, e6];
      }
    this.isDirty = true;
  }
  addColumnBefore(e5) {
    for (const t2 of this.array)
      t2.splice(e5, 0, $t(this));
    for (let t2 = 0; t2 < this.rowCount; t2++)
      for (let i2 = e5; i2 < this.colCount; i2++) {
        const e6 = this.array[t2][i2];
        if (e6)
          for (const n2 of e6)
            n2.treeBranch = [t2, i2];
      }
    this.isDirty = true;
  }
  addColumnAfter(e5) {
    for (const t2 of this.array)
      t2.splice(e5 + 1, 0, $t(this));
    for (let t2 = 0; t2 < this.rowCount; t2++)
      for (let i2 = e5 + 1; i2 < this.colCount; i2++) {
        const e6 = this.array[t2][i2];
        if (e6)
          for (const n2 of e6)
            n2.treeBranch = [t2, i2];
      }
    this.isDirty = true;
  }
  addColumn() {
    this.addColumnAfter(this.colCount - 1);
  }
  removeColumn(e5) {
    for (const t2 of this.array) {
      const i2 = t2.splice(e5, 1);
      for (const e6 of i2)
        if (e6)
          for (const t3 of e6)
            t3.parent = void 0, t3.treeBranch = void 0;
    }
    for (let t2 = 0; t2 < this.rowCount; t2++)
      for (let i2 = e5; i2 < this.colCount; i2++) {
        const e6 = this.array[t2][i2];
        if (e6)
          for (const n2 of e6)
            n2.treeBranch = [t2, i2];
      }
    this.isDirty = true;
  }
  get cells() {
    const e5 = [];
    for (const t2 of this.array)
      for (const i2 of t2)
        i2 && e5.push(i2);
    return e5;
  }
};
function $t(e5) {
  const t2 = new nt("first", e5.context, { mode: e5.mode });
  t2.parent = e5;
  const i2 = new Mt(e5.context, { mode: e5.mode });
  return i2.parent = e5, [t2, i2];
}
function Vt(e5) {
  const t2 = new ze(null, { classes: "arraycolsep" });
  return t2.width = e5, t2;
}
function Kt(e5, t2, i2, n2) {
  if (!n2)
    return null;
  const r2 = [];
  for (const a2 of t2) {
    const t3 = nt.createBox(e5, n2, { newList: true });
    t3 && (t3.depth = a2.depth, t3.height = a2.height, r2.push({ box: t3, shift: a2.pos - i2 }));
  }
  return new Ve({ individualShift: r2 }).wrap(e5);
}
var Rt = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("box", i2, { command: e5, serialize: n2.serialize, style: n2.style }), this.body = t2, this.framecolor = n2.framecolor, this.verbatimFramecolor = n2.verbatimBackgroundcolor, this.backgroundcolor = n2.backgroundcolor, this.verbatimBackgroundcolor = n2.verbatimBackgroundcolor, this.padding = n2.padding, this.border = n2.border;
  }
  static fromJson(e5, t2) {
    return new Rt(e5.command, e5.body, t2, e5);
  }
  toJson() {
    return { ...super.toJson(), framecolor: this.framecolor, verbatimFramecolor: this.verbatimFramecolor, backgroundcolor: this.backgroundcolor, verbatimBackgroundcolor: this.verbatimBackgroundcolor, padding: this.padding, border: this.border };
  }
  render(e5) {
    const t2 = new he(e5, this.style), i2 = ce(t2.getRegisterAsDimension("fboxsep")), n2 = void 0 === this.padding ? i2 : ce(qt(this.padding, { ...this.context, registers: e5.registers })), r2 = nt.createBox(e5, this.body);
    if (!r2)
      return null;
    r2.setStyle("vertical-align", -r2.height, "em");
    const a2 = new ze(r2, { type: "mord" }), o2 = new ze(null, { classes: "ML__box" });
    o2.height = a2.height + n2, o2.depth = a2.depth + n2, o2.setStyle("box-sizing", "border-box"), o2.setStyle("position", "absolute"), o2.setStyle("height", a2.height + a2.depth + 2 * n2, "em"), 0 === n2 ? o2.setStyle("width", "100%") : (o2.setStyle("width", `calc(100% + ${2 * n2}em)`), o2.setStyle("top", i2, "em"), o2.setStyle("left", -n2, "em")), o2.setStyle("z-index", "-1"), this.backgroundcolor && o2.setStyle("background-color", this.backgroundcolor), this.framecolor && o2.setStyle("border", `${ce(t2.getRegisterAsDimension("fboxrule"))}em solid ${this.framecolor}`), this.border && o2.setStyle("border", this.border), a2.setStyle("display", "inline-block"), a2.setStyle("height", r2.height + r2.depth, "em"), a2.setStyle("vertical-align", -n2, "em");
    const s2 = new ze([o2, a2]);
    return s2.setStyle("position", "relative"), s2.setStyle("display", "inline-block"), s2.setStyle("line-height", 0), s2.height = a2.height + n2, s2.depth = a2.depth + n2, s2.left = n2, s2.right = n2, s2.setStyle("height", a2.height + n2, "em"), s2.setStyle("top", a2.depth - a2.height, "em"), s2.setStyle("vertical-align", a2.depth + n2, "em"), this.caret && (s2.caret = this.caret), this.attachSupsub(e5, { base: s2 });
  }
};
var jt = class extends nt {
  constructor(e5, t2, i2) {
    var n2;
    super("composition", t2, { mode: null !== (n2 = null == i2 ? void 0 : i2.mode) && void 0 !== n2 ? n2 : "math", value: e5 });
  }
  static fromJson(e5, t2) {
    return new jt(e5.value, t2, e5);
  }
  toJson() {
    return super.toJson();
  }
  get computedStyle() {
    return {};
  }
  render(e5) {
    const t2 = new ze(this.value, { classes: "ML__composition", type: "composition" });
    return this.bind(e5, t2), this.caret && (t2.caret = this.caret), t2;
  }
  serialize(e5) {
    return "";
  }
};
var Ht = class extends nt {
  constructor(e5, t2, i2) {
    super("chem", i2, { command: e5, mode: "math" });
    const n2 = Ut.go(Wt.go(t2, "\\pu" === e5 ? "pu" : "ce"), false);
    this.body = Dt(n2, i2), this.verbatimLatex = e5 + "{" + t2 + "}", this.arg = t2, this.captureSelection = true;
  }
  static fromJson(e5, t2) {
    return new Ht(e5.command, e5.arg, t2);
  }
  toJson() {
    return { ...super.toJson(), arg: this.arg };
  }
  render(e5) {
    const t2 = nt.createBox(e5, this.body, { type: "chem", newList: true });
    return this.caret && (t2.caret = this.caret), this.bind(e5, t2);
  }
  serialize(e5) {
    return this.verbatimLatex;
  }
};
L(["ce", "pu"], "{chemformula:balanced-string}", { createAtom: (e5, t2, i2, n2) => new Ht(e5, t2[0], n2) });
var Wt = { go: function(e5, t2) {
  if (!e5)
    return [];
  void 0 === t2 && (t2 = "ce");
  var i2, n2 = "0", r2 = { parenthesisLevel: 0 };
  e5 = (e5 = (e5 = e5.replace(/\n/g, " ")).replace(/[\u2212\u2013\u2014\u2010]/g, "-")).replace(/[\u2026]/g, "...");
  for (var a2 = 10, o2 = []; ; ) {
    i2 !== e5 ? (a2 = 10, i2 = e5) : a2--;
    var s2 = Wt.stateMachines[t2], l2 = s2.transitions[n2] || s2.transitions["*"];
    e:
      for (var u2 = 0; u2 < l2.length; u2++) {
        var c2 = Wt.patterns.match_(l2[u2].pattern, e5);
        if (c2) {
          for (var d2 = l2[u2].task, h2 = 0; h2 < d2.action_.length; h2++) {
            var m2;
            if (s2.actions[d2.action_[h2].type_])
              m2 = s2.actions[d2.action_[h2].type_](r2, c2.match_, d2.action_[h2].option);
            else {
              if (!Wt.actions[d2.action_[h2].type_])
                throw ["MhchemBugA", "mhchem bug A. Please report. (" + d2.action_[h2].type_ + ")"];
              m2 = Wt.actions[d2.action_[h2].type_](r2, c2.match_, d2.action_[h2].option);
            }
            Wt.concatArray(o2, m2);
          }
          if (n2 = d2.nextState || n2, !(e5.length > 0))
            return o2;
          if (d2.revisit || (e5 = c2.remainder), !d2.toContinue)
            break e;
        }
      }
    if (a2 <= 0)
      throw ["MhchemBugU", "mhchem bug U. Please report."];
  }
}, concatArray: function(e5, t2) {
  if (t2)
    if (Array.isArray(t2))
      for (var i2 = 0; i2 < t2.length; i2++)
        e5.push(t2[i2]);
    else
      e5.push(t2);
}, patterns: { patterns: { empty: /^$/, else: /^./, else2: /^./, space: /^\s/, "space A": /^\s(?=[A-Z\\$])/, space$: /^\s$/, "a-z": /^[a-z]/, x: /^x/, x$: /^x$/, i$: /^i$/, letters: /^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/, "\\greek": /^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/, "one lowercase latin letter $": /^(?:([a-z])(?:$|[^a-zA-Z]))$/, "$one lowercase latin letter$ $": /^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/, "one lowercase greek letter $": /^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/, digits: /^[0-9]+/, "-9.,9": /^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/, "-9.,9 no missing 0": /^[+\-]?[0-9]+(?:[.,][0-9]+)?/, "(-)(9.,9)(e)(99)": function(e5) {
  var t2 = e5.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:([eE]|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);
  return t2 && t2[0] ? { match_: t2.splice(1), remainder: e5.substr(t2[0].length) } : null;
}, "(-)(9)^(-9)": function(e5) {
  var t2 = e5.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/);
  return t2 && t2[0] ? { match_: t2.splice(1), remainder: e5.substr(t2[0].length) } : null;
}, "state of aggregation $": function(e5) {
  var t2 = Wt.patterns.findObserveGroups(e5, "", /^\([a-z]{1,3}(?=[\),])/, ")", "");
  if (t2 && t2.remainder.match(/^($|[\s,;\)\]\}])/))
    return t2;
  var i2 = e5.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);
  return i2 ? { match_: i2[0], remainder: e5.substr(i2[0].length) } : null;
}, "_{(state of aggregation)}$": /^_\{(\([a-z]{1,3}\))\}/, "{[(": /^(?:\\\{|\[|\()/, ")]}": /^(?:\)|\]|\\\})/, ", ": /^[,;]\s*/, ",": /^[,;]/, ".": /^[.]/, ". ": /^([.\u22C5\u00B7\u2022])\s*/, "...": /^\.\.\.(?=$|[^.])/, "* ": /^([*])\s*/, "^{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "^{", "", "", "}");
}, "^($...$)": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "^", "$", "$", "");
}, "^a": /^\^([0-9]+|[^\\_])/, "^\\x{}{}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "^", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
}, "^\\x{}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "^", /^\\[a-zA-Z]+\{/, "}", "");
}, "^\\x": /^\^(\\[a-zA-Z]+)\s*/, "^(-1)": /^\^(-?\d+)/, "'": /^'/, "_{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "_{", "", "", "}");
}, "_($...$)": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "_", "$", "$", "");
}, _9: /^_([+\-]?[0-9]+|[^\\])/, "_\\x{}{}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "_", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
}, "_\\x{}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "_", /^\\[a-zA-Z]+\{/, "}", "");
}, "_\\x": /^_(\\[a-zA-Z]+)\s*/, "^_": /^(?:\^(?=_)|\_(?=\^)|[\^_]$)/, "{}": /^\{\}/, "{...}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "", "{", "}", "");
}, "{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "{", "", "", "}");
}, "$...$": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "", "$", "$", "");
}, "${(...)}$": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "${", "", "", "}$");
}, "$(...)$": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "$", "", "", "$");
}, "=<>": /^[=<>]/, "#": /^[#\u2261]/, "+": /^\+/, "-$": /^-(?=[\s_},;\]/]|$|\([a-z]+\))/, "-9": /^-(?=[0-9])/, "- orbital overlap": /^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/, "-": /^-/, "pm-operator": /^(?:\\pm|\$\\pm\$|\+-|\+\/-)/, operator: /^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/, arrowUpDown: /^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/, "\\bond{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\bond{", "", "", "}");
}, "->": /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/, CMT: /^[CMT](?=\[)/, "[(...)]": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "[", "", "", "]");
}, "1st-level escape": /^(&|\\\\|\\hline)\s*/, "\\,": /^(?:\\[,\ ;:])/, "\\x{}{}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true);
}, "\\x{}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "", /^\\[a-zA-Z]+\{/, "}", "");
}, "\\ca": /^\\ca(?:\s+|(?![a-zA-Z]))/, "\\x": /^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/, orbital: /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/, others: /^[\/~|]/, "\\frac{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\frac{", "", "", "}", "{", "", "", "}");
}, "\\overset{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\overset{", "", "", "}", "{", "", "", "}");
}, "\\underset{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\underset{", "", "", "}", "{", "", "", "}");
}, "\\underbrace{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\underbrace{", "", "", "}_", "{", "", "", "}");
}, "\\color{(...)}0": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\color{", "", "", "}");
}, "\\color{(...)}{(...)}1": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\color{", "", "", "}", "{", "", "", "}");
}, "\\color(...){(...)}2": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\color", "\\", "", /^(?=\{)/, "{", "", "", "}");
}, "\\ce{(...)}": function(e5) {
  return Wt.patterns.findObserveGroups(e5, "\\ce{", "", "", "}");
}, oxidation$: /^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/, "d-oxidation$": /^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/, "roman numeral": /^[IVX]+/, "1/2$": /^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/, amount: function(e5) {
  var t2;
  if (t2 = e5.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/))
    return { match_: t2[0], remainder: e5.substr(t2[0].length) };
  var i2 = Wt.patterns.findObserveGroups(e5, "", "$", "$", "");
  return i2 && (t2 = i2.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/)) ? { match_: t2[0], remainder: e5.substr(t2[0].length) } : null;
}, amount2: function(e5) {
  return this.amount(e5);
}, "(KV letters),": /^(?:[A-Z][a-z]{0,2}|i)(?=,)/, formula$: function(e5) {
  if (e5.match(/^\([a-z]+\)$/))
    return null;
  var t2 = e5.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);
  return t2 ? { match_: t2[0], remainder: e5.substr(t2[0].length) } : null;
}, uprightEntities: /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/, "/": /^\s*(\/)\s*/, "//": /^\s*(\/\/)\s*/, "*": /^\s*[*.]\s*/ }, findObserveGroups: function(e5, t2, i2, n2, r2, a2, o2, s2, l2, u2) {
  var c2 = function(e6, t3) {
    if ("string" == typeof t3)
      return 0 !== e6.indexOf(t3) ? null : t3;
    var i3 = e6.match(t3);
    return i3 ? i3[0] : null;
  }, d2 = c2(e5, t2);
  if (null === d2)
    return null;
  if (e5 = e5.substr(d2.length), null === (d2 = c2(e5, i2)))
    return null;
  var h2 = function(e6, t3, i3) {
    for (var n3 = 0; t3 < e6.length; ) {
      var r3 = e6.charAt(t3), a3 = c2(e6.substr(t3), i3);
      if (null !== a3 && 0 === n3)
        return { endMatchBegin: t3, endMatchEnd: t3 + a3.length };
      if ("{" === r3)
        n3++;
      else if ("}" === r3) {
        if (0 === n3)
          throw ["ExtraCloseMissingOpen", "Extra close brace or missing open brace"];
        n3--;
      }
      t3++;
    }
    return null;
  }(e5, d2.length, n2 || r2);
  if (null === h2)
    return null;
  var m2 = e5.substring(0, n2 ? h2.endMatchEnd : h2.endMatchBegin);
  if (a2 || o2) {
    var p2 = this.findObserveGroups(e5.substr(h2.endMatchEnd), a2, o2, s2, l2);
    if (null === p2)
      return null;
    var f2 = [m2, p2.match_];
    return { match_: u2 ? f2.join("") : f2, remainder: p2.remainder };
  }
  return { match_: m2, remainder: e5.substr(h2.endMatchEnd) };
}, match_: function(e5, t2) {
  var i2 = Wt.patterns.patterns[e5];
  if (void 0 === i2)
    throw ["MhchemBugP", "mhchem bug P. Please report. (" + e5 + ")"];
  if ("function" == typeof i2)
    return Wt.patterns.patterns[e5](t2);
  var n2 = t2.match(i2);
  return n2 ? { match_: n2[2] ? [n2[1], n2[2]] : n2[1] ? n2[1] : n2[0], remainder: t2.substr(n2[0].length) } : null;
} }, actions: { "a=": function(e5, t2) {
  e5.a = (e5.a || "") + t2;
}, "b=": function(e5, t2) {
  e5.b = (e5.b || "") + t2;
}, "p=": function(e5, t2) {
  e5.p = (e5.p || "") + t2;
}, "o=": function(e5, t2) {
  e5.o = (e5.o || "") + t2;
}, "q=": function(e5, t2) {
  e5.q = (e5.q || "") + t2;
}, "d=": function(e5, t2) {
  e5.d = (e5.d || "") + t2;
}, "rm=": function(e5, t2) {
  e5.rm = (e5.rm || "") + t2;
}, "text=": function(e5, t2) {
  e5.text_ = (e5.text_ || "") + t2;
}, insert: function(e5, t2, i2) {
  return { type_: i2 };
}, "insert+p1": function(e5, t2, i2) {
  return { type_: i2, p1: t2 };
}, "insert+p1+p2": function(e5, t2, i2) {
  return { type_: i2, p1: t2[0], p2: t2[1] };
}, copy: function(e5, t2) {
  return t2;
}, rm: function(e5, t2) {
  return { type_: "rm", p1: t2 || "" };
}, text: function(e5, t2) {
  return Wt.go(t2, "text");
}, "{text}": function(e5, t2) {
  var i2 = ["{"];
  return Wt.concatArray(i2, Wt.go(t2, "text")), i2.push("}"), i2;
}, "tex-math": function(e5, t2) {
  return Wt.go(t2, "tex-math");
}, "tex-math tight": function(e5, t2) {
  return Wt.go(t2, "tex-math tight");
}, bond: function(e5, t2, i2) {
  return { type_: "bond", kind_: i2 || t2 };
}, "color0-output": function(e5, t2) {
  return { type_: "color0", color: t2[0] };
}, ce: function(e5, t2) {
  return Wt.go(t2);
}, "1/2": function(e5, t2) {
  var i2 = [];
  t2.match(/^[+\-]/) && (i2.push(t2.substr(0, 1)), t2 = t2.substr(1));
  var n2 = t2.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);
  return n2[1] = n2[1].replace(/\$/g, ""), i2.push({ type_: "frac", p1: n2[1], p2: n2[2] }), n2[3] && (n2[3] = n2[3].replace(/\$/g, ""), i2.push({ type_: "tex-math", p1: n2[3] })), i2;
}, "9,9": function(e5, t2) {
  return Wt.go(t2, "9,9");
} }, createTransitions: function(e5) {
  var t2, i2, n2, r2, a2 = {};
  for (t2 in e5)
    for (i2 in e5[t2])
      for (n2 = i2.split("|"), e5[t2][i2].stateArray = n2, r2 = 0; r2 < n2.length; r2++)
        a2[n2[r2]] = [];
  for (t2 in e5)
    for (i2 in e5[t2])
      for (n2 = e5[t2][i2].stateArray || [], r2 = 0; r2 < n2.length; r2++) {
        var o2 = e5[t2][i2];
        if (o2.action_) {
          o2.action_ = [].concat(o2.action_);
          for (var s2 = 0; s2 < o2.action_.length; s2++)
            "string" == typeof o2.action_[s2] && (o2.action_[s2] = { type_: o2.action_[s2] });
        } else
          o2.action_ = [];
        for (var l2 = t2.split("|"), u2 = 0; u2 < l2.length; u2++)
          if ("*" === n2[r2])
            for (var c2 in a2)
              a2[c2].push({ pattern: l2[u2], task: o2 });
          else
            a2[n2[r2]].push({ pattern: l2[u2], task: o2 });
      }
  return a2;
}, stateMachines: {} };
Wt.stateMachines = { ce: { transitions: Wt.createTransitions({ empty: { "*": { action_: "output" } }, else: { "0|1|2": { action_: "beginsWithBond=false", revisit: true, toContinue: true } }, oxidation$: { 0: { action_: "oxidation-output" } }, CMT: { r: { action_: "rdt=", nextState: "rt" }, rd: { action_: "rqt=", nextState: "rdt" } }, arrowUpDown: { "0|1|2|as": { action_: ["sb=false", "output", "operator"], nextState: "1" } }, uprightEntities: { "0|1|2": { action_: ["o=", "output"], nextState: "1" } }, orbital: { "0|1|2|3": { action_: "o=", nextState: "o" } }, "->": { "0|1|2|3": { action_: "r=", nextState: "r" }, "a|as": { action_: ["output", "r="], nextState: "r" }, "*": { action_: ["output", "r="], nextState: "r" } }, "+": { o: { action_: "d= kv", nextState: "d" }, "d|D": { action_: "d=", nextState: "d" }, q: { action_: "d=", nextState: "qd" }, "qd|qD": { action_: "d=", nextState: "qd" }, dq: { action_: ["output", "d="], nextState: "d" }, 3: { action_: ["sb=false", "output", "operator"], nextState: "0" } }, amount: { "0|2": { action_: "a=", nextState: "a" } }, "pm-operator": { "0|1|2|a|as": { action_: ["sb=false", "output", { type_: "operator", option: "\\pm" }], nextState: "0" } }, operator: { "0|1|2|a|as": { action_: ["sb=false", "output", "operator"], nextState: "0" } }, "-$": { "o|q": { action_: ["charge or bond", "output"], nextState: "qd" }, d: { action_: "d=", nextState: "d" }, D: { action_: ["output", { type_: "bond", option: "-" }], nextState: "3" }, q: { action_: "d=", nextState: "qd" }, qd: { action_: "d=", nextState: "qd" }, "qD|dq": { action_: ["output", { type_: "bond", option: "-" }], nextState: "3" } }, "-9": { "3|o": { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "3" } }, "- orbital overlap": { o: { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "2" }, d: { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "2" } }, "-": { "0|1|2": { action_: [{ type_: "output", option: 1 }, "beginsWithBond=true", { type_: "bond", option: "-" }], nextState: "3" }, 3: { action_: { type_: "bond", option: "-" } }, a: { action_: ["output", { type_: "insert", option: "hyphen" }], nextState: "2" }, as: { action_: [{ type_: "output", option: 2 }, { type_: "bond", option: "-" }], nextState: "3" }, b: { action_: "b=" }, o: { action_: { type_: "- after o/d", option: false }, nextState: "2" }, q: { action_: { type_: "- after o/d", option: false }, nextState: "2" }, "d|qd|dq": { action_: { type_: "- after o/d", option: true }, nextState: "2" }, "D|qD|p": { action_: ["output", { type_: "bond", option: "-" }], nextState: "3" } }, amount2: { "1|3": { action_: "a=", nextState: "a" } }, letters: { "0|1|2|3|a|as|b|p|bp|o": { action_: "o=", nextState: "o" }, "q|dq": { action_: ["output", "o="], nextState: "o" }, "d|D|qd|qD": { action_: "o after d", nextState: "o" } }, digits: { o: { action_: "q=", nextState: "q" }, "d|D": { action_: "q=", nextState: "dq" }, q: { action_: ["output", "o="], nextState: "o" }, a: { action_: "o=", nextState: "o" } }, "space A": { "b|p|bp": {} }, space: { a: { nextState: "as" }, 0: { action_: "sb=false" }, "1|2": { action_: "sb=true" }, "r|rt|rd|rdt|rdq": { action_: "output", nextState: "0" }, "*": { action_: ["output", "sb=true"], nextState: "1" } }, "1st-level escape": { "1|2": { action_: ["output", { type_: "insert+p1", option: "1st-level escape" }] }, "*": { action_: ["output", { type_: "insert+p1", option: "1st-level escape" }], nextState: "0" } }, "[(...)]": { "r|rt": { action_: "rd=", nextState: "rd" }, "rd|rdt": { action_: "rq=", nextState: "rdq" } }, "...": { "o|d|D|dq|qd|qD": { action_: ["output", { type_: "bond", option: "..." }], nextState: "3" }, "*": { action_: [{ type_: "output", option: 1 }, { type_: "insert", option: "ellipsis" }], nextState: "1" } }, ". |* ": { "*": { action_: ["output", { type_: "insert", option: "addition compound" }], nextState: "1" } }, "state of aggregation $": { "*": { action_: ["output", "state of aggregation"], nextState: "1" } }, "{[(": { "a|as|o": { action_: ["o=", "output", "parenthesisLevel++"], nextState: "2" }, "0|1|2|3": { action_: ["o=", "output", "parenthesisLevel++"], nextState: "2" }, "*": { action_: ["output", "o=", "output", "parenthesisLevel++"], nextState: "2" } }, ")]}": { "0|1|2|3|b|p|bp|o": { action_: ["o=", "parenthesisLevel--"], nextState: "o" }, "a|as|d|D|q|qd|qD|dq": { action_: ["output", "o=", "parenthesisLevel--"], nextState: "o" } }, ", ": { "*": { action_: ["output", "comma"], nextState: "0" } }, "^_": { "*": {} }, "^{(...)}|^($...$)": { "0|1|2|as": { action_: "b=", nextState: "b" }, p: { action_: "b=", nextState: "bp" }, "3|o": { action_: "d= kv", nextState: "D" }, q: { action_: "d=", nextState: "qD" }, "d|D|qd|qD|dq": { action_: ["output", "d="], nextState: "D" } }, "^a|^\\x{}{}|^\\x{}|^\\x|'": { "0|1|2|as": { action_: "b=", nextState: "b" }, p: { action_: "b=", nextState: "bp" }, "3|o": { action_: "d= kv", nextState: "d" }, q: { action_: "d=", nextState: "qd" }, "d|qd|D|qD": { action_: "d=" }, dq: { action_: ["output", "d="], nextState: "d" } }, "_{(state of aggregation)}$": { "d|D|q|qd|qD|dq": { action_: ["output", "q="], nextState: "q" } }, "_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x": { "0|1|2|as": { action_: "p=", nextState: "p" }, b: { action_: "p=", nextState: "bp" }, "3|o": { action_: "q=", nextState: "q" }, "d|D": { action_: "q=", nextState: "dq" }, "q|qd|qD|dq": { action_: ["output", "q="], nextState: "q" } }, "=<>": { "0|1|2|3|a|as|o|q|d|D|qd|qD|dq": { action_: [{ type_: "output", option: 2 }, "bond"], nextState: "3" } }, "#": { "0|1|2|3|a|as|o": { action_: [{ type_: "output", option: 2 }, { type_: "bond", option: "#" }], nextState: "3" } }, "{}": { "*": { action_: { type_: "output", option: 1 }, nextState: "1" } }, "{...}": { "0|1|2|3|a|as|b|p|bp": { action_: "o=", nextState: "o" }, "o|d|D|q|qd|qD|dq": { action_: ["output", "o="], nextState: "o" } }, "$...$": { a: { action_: "a=" }, "0|1|2|3|as|b|p|bp|o": { action_: "o=", nextState: "o" }, "as|o": { action_: "o=" }, "q|d|D|qd|qD|dq": { action_: ["output", "o="], nextState: "o" } }, "\\bond{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "bond"], nextState: "3" } }, "\\frac{(...)}": { "*": { action_: [{ type_: "output", option: 1 }, "frac-output"], nextState: "3" } }, "\\overset{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "overset-output"], nextState: "3" } }, "\\underset{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "underset-output"], nextState: "3" } }, "\\underbrace{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "underbrace-output"], nextState: "3" } }, "\\color{(...)}{(...)}1|\\color(...){(...)}2": { "*": { action_: [{ type_: "output", option: 2 }, "color-output"], nextState: "3" } }, "\\color{(...)}0": { "*": { action_: [{ type_: "output", option: 2 }, "color0-output"] } }, "\\ce{(...)}": { "*": { action_: [{ type_: "output", option: 2 }, "ce"], nextState: "3" } }, "\\,": { "*": { action_: [{ type_: "output", option: 1 }, "copy"], nextState: "1" } }, "\\x{}{}|\\x{}|\\x": { "0|1|2|3|a|as|b|p|bp|o|c0": { action_: ["o=", "output"], nextState: "3" }, "*": { action_: ["output", "o=", "output"], nextState: "3" } }, others: { "*": { action_: [{ type_: "output", option: 1 }, "copy"], nextState: "3" } }, else2: { a: { action_: "a to o", nextState: "o", revisit: true }, as: { action_: ["output", "sb=true"], nextState: "1", revisit: true }, "r|rt|rd|rdt|rdq": { action_: ["output"], nextState: "0", revisit: true }, "*": { action_: ["output", "copy"], nextState: "3" } } }), actions: { "o after d": function(e5, t2) {
  var i2;
  if ((e5.d || "").match(/^[0-9]+$/)) {
    var n2 = e5.d;
    e5.d = void 0, i2 = this.output(e5), e5.b = n2;
  } else
    i2 = this.output(e5);
  return Wt.actions["o="](e5, t2), i2;
}, "d= kv": function(e5, t2) {
  e5.d = t2, e5.dType = "kv";
}, "charge or bond": function(e5, t2) {
  if (e5.beginsWithBond) {
    var i2 = [];
    return Wt.concatArray(i2, this.output(e5)), Wt.concatArray(i2, Wt.actions.bond(e5, t2, "-")), i2;
  }
  e5.d = t2;
}, "- after o/d": function(e5, t2, i2) {
  var n2 = Wt.patterns.match_("orbital", e5.o || ""), r2 = Wt.patterns.match_("one lowercase greek letter $", e5.o || ""), a2 = Wt.patterns.match_("one lowercase latin letter $", e5.o || ""), o2 = Wt.patterns.match_("$one lowercase latin letter$ $", e5.o || ""), s2 = "-" === t2 && (n2 && "" === n2.remainder || r2 || a2 || o2);
  !s2 || e5.a || e5.b || e5.p || e5.d || e5.q || n2 || !a2 || (e5.o = "$" + e5.o + "$");
  var l2 = [];
  return s2 ? (Wt.concatArray(l2, this.output(e5)), l2.push({ type_: "hyphen" })) : (n2 = Wt.patterns.match_("digits", e5.d || ""), i2 && n2 && "" === n2.remainder ? (Wt.concatArray(l2, Wt.actions["d="](e5, t2)), Wt.concatArray(l2, this.output(e5))) : (Wt.concatArray(l2, this.output(e5)), Wt.concatArray(l2, Wt.actions.bond(e5, t2, "-")))), l2;
}, "a to o": function(e5) {
  e5.o = e5.a, e5.a = void 0;
}, "sb=true": function(e5) {
  e5.sb = true;
}, "sb=false": function(e5) {
  e5.sb = false;
}, "beginsWithBond=true": function(e5) {
  e5.beginsWithBond = true;
}, "beginsWithBond=false": function(e5) {
  e5.beginsWithBond = false;
}, "parenthesisLevel++": function(e5) {
  e5.parenthesisLevel++;
}, "parenthesisLevel--": function(e5) {
  e5.parenthesisLevel--;
}, "state of aggregation": function(e5, t2) {
  return { type_: "state of aggregation", p1: Wt.go(t2, "o") };
}, comma: function(e5, t2) {
  var i2 = t2.replace(/\s*$/, "");
  return i2 !== t2 && 0 === e5.parenthesisLevel ? { type_: "comma enumeration L", p1: i2 } : { type_: "comma enumeration M", p1: i2 };
}, output: function(e5, t2, i2) {
  var n2, r2, a2;
  for (var o2 in e5.r ? (r2 = "M" === e5.rdt ? Wt.go(e5.rd, "tex-math") : "T" === e5.rdt ? [{ type_: "text", p1: e5.rd || "" }] : Wt.go(e5.rd), a2 = "M" === e5.rqt ? Wt.go(e5.rq, "tex-math") : "T" === e5.rqt ? [{ type_: "text", p1: e5.rq || "" }] : Wt.go(e5.rq), n2 = { type_: "arrow", r: e5.r, rd: r2, rq: a2 }) : (n2 = [], (e5.a || e5.b || e5.p || e5.o || e5.q || e5.d || i2) && (e5.sb && n2.push({ type_: "entitySkip" }), e5.o || e5.q || e5.d || e5.b || e5.p || 2 === i2 ? e5.o || e5.q || e5.d || !e5.b && !e5.p ? e5.o && "kv" === e5.dType && Wt.patterns.match_("d-oxidation$", e5.d || "") ? e5.dType = "oxidation" : e5.o && "kv" === e5.dType && !e5.q && (e5.dType = void 0) : (e5.o = e5.a, e5.d = e5.b, e5.q = e5.p, e5.a = e5.b = e5.p = void 0) : (e5.o = e5.a, e5.a = void 0), n2.push({ type_: "chemfive", a: Wt.go(e5.a, "a"), b: Wt.go(e5.b, "bd"), p: Wt.go(e5.p, "pq"), o: Wt.go(e5.o, "o"), q: Wt.go(e5.q, "pq"), d: Wt.go(e5.d, "oxidation" === e5.dType ? "oxidation" : "bd"), dType: e5.dType }))), e5)
    "parenthesisLevel" !== o2 && "beginsWithBond" !== o2 && delete e5[o2];
  return n2;
}, "oxidation-output": function(e5, t2) {
  var i2 = ["{"];
  return Wt.concatArray(i2, Wt.go(t2, "oxidation")), i2.push("}"), i2;
}, "frac-output": function(e5, t2) {
  return { type_: "frac-ce", p1: Wt.go(t2[0]), p2: Wt.go(t2[1]) };
}, "overset-output": function(e5, t2) {
  return { type_: "overset", p1: Wt.go(t2[0]), p2: Wt.go(t2[1]) };
}, "underset-output": function(e5, t2) {
  return { type_: "underset", p1: Wt.go(t2[0]), p2: Wt.go(t2[1]) };
}, "underbrace-output": function(e5, t2) {
  return { type_: "underbrace", p1: Wt.go(t2[0]), p2: Wt.go(t2[1]) };
}, "color-output": function(e5, t2) {
  return { type_: "color", color1: t2[0], color2: Wt.go(t2[1]) };
}, "r=": function(e5, t2) {
  e5.r = t2;
}, "rdt=": function(e5, t2) {
  e5.rdt = t2;
}, "rd=": function(e5, t2) {
  e5.rd = t2;
}, "rqt=": function(e5, t2) {
  e5.rqt = t2;
}, "rq=": function(e5, t2) {
  e5.rq = t2;
}, operator: function(e5, t2, i2) {
  return { type_: "operator", kind_: i2 || t2 };
} } }, a: { transitions: Wt.createTransitions({ empty: { "*": {} }, "1/2$": { 0: { action_: "1/2" } }, else: { 0: { nextState: "1", revisit: true } }, "$(...)$": { "*": { action_: "tex-math tight", nextState: "1" } }, ",": { "*": { action_: { type_: "insert", option: "commaDecimal" } } }, else2: { "*": { action_: "copy" } } }), actions: {} }, o: { transitions: Wt.createTransitions({ empty: { "*": {} }, "1/2$": { 0: { action_: "1/2" } }, else: { 0: { nextState: "1", revisit: true } }, letters: { "*": { action_: "rm" } }, "\\ca": { "*": { action_: { type_: "insert", option: "circa" } } }, "\\x{}{}|\\x{}|\\x": { "*": { action_: "copy" } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "{(...)}": { "*": { action_: "{text}" } }, else2: { "*": { action_: "copy" } } }), actions: {} }, text: { transitions: Wt.createTransitions({ empty: { "*": { action_: "output" } }, "{...}": { "*": { action_: "text=" } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "\\greek": { "*": { action_: ["output", "rm"] } }, "\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: ["output", "copy"] } }, else: { "*": { action_: "text=" } } }), actions: { output: function(e5) {
  if (e5.text_) {
    var t2 = { type_: "text", p1: e5.text_ };
    for (var i2 in e5)
      delete e5[i2];
    return t2;
  }
} } }, pq: { transitions: Wt.createTransitions({ empty: { "*": {} }, "state of aggregation $": { "*": { action_: "state of aggregation" } }, i$: { 0: { nextState: "!f", revisit: true } }, "(KV letters),": { 0: { action_: "rm", nextState: "0" } }, formula$: { 0: { nextState: "f", revisit: true } }, "1/2$": { 0: { action_: "1/2" } }, else: { 0: { nextState: "!f", revisit: true } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "{(...)}": { "*": { action_: "text" } }, "a-z": { f: { action_: "tex-math" } }, letters: { "*": { action_: "rm" } }, "-9.,9": { "*": { action_: "9,9" } }, ",": { "*": { action_: { type_: "insert+p1", option: "comma enumeration S" } } }, "\\color{(...)}{(...)}1|\\color(...){(...)}2": { "*": { action_: "color-output" } }, "\\color{(...)}0": { "*": { action_: "color0-output" } }, "\\ce{(...)}": { "*": { action_: "ce" } }, "\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "copy" } }, else2: { "*": { action_: "copy" } } }), actions: { "state of aggregation": function(e5, t2) {
  return { type_: "state of aggregation subscript", p1: Wt.go(t2, "o") };
}, "color-output": function(e5, t2) {
  return { type_: "color", color1: t2[0], color2: Wt.go(t2[1], "pq") };
} } }, bd: { transitions: Wt.createTransitions({ empty: { "*": {} }, x$: { 0: { nextState: "!f", revisit: true } }, formula$: { 0: { nextState: "f", revisit: true } }, else: { 0: { nextState: "!f", revisit: true } }, "-9.,9 no missing 0": { "*": { action_: "9,9" } }, ".": { "*": { action_: { type_: "insert", option: "electron dot" } } }, "a-z": { f: { action_: "tex-math" } }, x: { "*": { action_: { type_: "insert", option: "KV x" } } }, letters: { "*": { action_: "rm" } }, "'": { "*": { action_: { type_: "insert", option: "prime" } } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, "{(...)}": { "*": { action_: "text" } }, "\\color{(...)}{(...)}1|\\color(...){(...)}2": { "*": { action_: "color-output" } }, "\\color{(...)}0": { "*": { action_: "color0-output" } }, "\\ce{(...)}": { "*": { action_: "ce" } }, "\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "copy" } }, else2: { "*": { action_: "copy" } } }), actions: { "color-output": function(e5, t2) {
  return { type_: "color", color1: t2[0], color2: Wt.go(t2[1], "bd") };
} } }, oxidation: { transitions: Wt.createTransitions({ empty: { "*": {} }, "roman numeral": { "*": { action_: "roman-numeral" } }, "${(...)}$|$(...)$": { "*": { action_: "tex-math" } }, else: { "*": { action_: "copy" } } }), actions: { "roman-numeral": function(e5, t2) {
  return { type_: "roman numeral", p1: t2 || "" };
} } }, "tex-math": { transitions: Wt.createTransitions({ empty: { "*": { action_: "output" } }, "\\ce{(...)}": { "*": { action_: ["output", "ce"] } }, "{...}|\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "o=" } }, else: { "*": { action_: "o=" } } }), actions: { output: function(e5) {
  if (e5.o) {
    var t2 = { type_: "tex-math", p1: e5.o };
    for (var i2 in e5)
      delete e5[i2];
    return t2;
  }
} } }, "tex-math tight": { transitions: Wt.createTransitions({ empty: { "*": { action_: "output" } }, "\\ce{(...)}": { "*": { action_: ["output", "ce"] } }, "{...}|\\,|\\x{}{}|\\x{}|\\x": { "*": { action_: "o=" } }, "-|+": { "*": { action_: "tight operator" } }, else: { "*": { action_: "o=" } } }), actions: { "tight operator": function(e5, t2) {
  e5.o = (e5.o || "") + "{" + t2 + "}";
}, output: function(e5) {
  if (e5.o) {
    var t2 = { type_: "tex-math", p1: e5.o };
    for (var i2 in e5)
      delete e5[i2];
    return t2;
  }
} } }, "9,9": { transitions: Wt.createTransitions({ empty: { "*": {} }, ",": { "*": { action_: "comma" } }, else: { "*": { action_: "copy" } } }), actions: { comma: function() {
  return { type_: "commaDecimal" };
} } }, pu: { transitions: Wt.createTransitions({ empty: { "*": { action_: "output" } }, space$: { "*": { action_: ["output", "space"] } }, "{[(|)]}": { "0|a": { action_: "copy" } }, "(-)(9)^(-9)": { 0: { action_: "number^", nextState: "a" } }, "(-)(9.,9)(e)(99)": { 0: { action_: "enumber", nextState: "a" } }, space: { "0|a": {} }, "pm-operator": { "0|a": { action_: { type_: "operator", option: "\\pm" }, nextState: "0" } }, operator: { "0|a": { action_: "copy", nextState: "0" } }, "//": { d: { action_: "o=", nextState: "/" } }, "/": { d: { action_: "o=", nextState: "/" } }, "{...}|else": { "0|d": { action_: "d=", nextState: "d" }, a: { action_: ["space", "d="], nextState: "d" }, "/|q": { action_: "q=", nextState: "q" } } }), actions: { enumber: function(e5, t2) {
  var i2 = [];
  return "+-" === t2[0] || "+/-" === t2[0] ? i2.push("\\pm ") : t2[0] && i2.push(t2[0]), t2[1] && (Wt.concatArray(i2, Wt.go(t2[1], "pu-9,9")), t2[2] && (t2[2].match(/[,.]/) ? Wt.concatArray(i2, Wt.go(t2[2], "pu-9,9")) : i2.push(t2[2])), t2[3] = t2[4] || t2[3], t2[3] && (t2[3] = t2[3].trim(), "e" === t2[3] || "*" === t2[3].substr(0, 1) ? i2.push({ type_: "cdot" }) : i2.push({ type_: "times" }))), t2[3] && i2.push("10^{" + t2[5] + "}"), i2;
}, "number^": function(e5, t2) {
  var i2 = [];
  return "+-" === t2[0] || "+/-" === t2[0] ? i2.push("\\pm ") : t2[0] && i2.push(t2[0]), Wt.concatArray(i2, Wt.go(t2[1], "pu-9,9")), i2.push("^{" + t2[2] + "}"), i2;
}, operator: function(e5, t2, i2) {
  return { type_: "operator", kind_: i2 || t2 };
}, space: function() {
  return { type_: "pu-space-1" };
}, output: function(e5) {
  var t2, i2 = Wt.patterns.match_("{(...)}", e5.d || "");
  i2 && "" === i2.remainder && (e5.d = i2.match_);
  var n2 = Wt.patterns.match_("{(...)}", e5.q || "");
  if (n2 && "" === n2.remainder && (e5.q = n2.match_), e5.d && (e5.d = e5.d.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C"), e5.d = e5.d.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F")), e5.q) {
    e5.q = e5.q.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C"), e5.q = e5.q.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
    var r2 = { d: Wt.go(e5.d, "pu"), q: Wt.go(e5.q, "pu") };
    "//" === e5.o ? t2 = { type_: "pu-frac", p1: r2.d, p2: r2.q } : (t2 = r2.d, r2.d.length > 1 || r2.q.length > 1 ? t2.push({ type_: " / " }) : t2.push({ type_: "/" }), Wt.concatArray(t2, r2.q));
  } else
    t2 = Wt.go(e5.d, "pu-2");
  for (var a2 in e5)
    delete e5[a2];
  return t2;
} } }, "pu-2": { transitions: Wt.createTransitions({ empty: { "*": { action_: "output" } }, "*": { "*": { action_: ["output", "cdot"], nextState: "0" } }, "\\x": { "*": { action_: "rm=" } }, space: { "*": { action_: ["output", "space"], nextState: "0" } }, "^{(...)}|^(-1)": { 1: { action_: "^(-1)" } }, "-9.,9": { 0: { action_: "rm=", nextState: "0" }, 1: { action_: "^(-1)", nextState: "0" } }, "{...}|else": { "*": { action_: "rm=", nextState: "1" } } }), actions: { cdot: function() {
  return { type_: "tight cdot" };
}, "^(-1)": function(e5, t2) {
  e5.rm += "^{" + t2 + "}";
}, space: function() {
  return { type_: "pu-space-2" };
}, output: function(e5) {
  var t2 = [];
  if (e5.rm) {
    var i2 = Wt.patterns.match_("{(...)}", e5.rm || "");
    t2 = i2 && "" === i2.remainder ? Wt.go(i2.match_, "pu") : { type_: "rm", p1: e5.rm };
  }
  for (var n2 in e5)
    delete e5[n2];
  return t2;
} } }, "pu-9,9": { transitions: Wt.createTransitions({ empty: { 0: { action_: "output-0" }, o: { action_: "output-o" } }, ",": { 0: { action_: ["output-0", "comma"], nextState: "o" } }, ".": { 0: { action_: ["output-0", "copy"], nextState: "o" } }, else: { "*": { action_: "text=" } } }), actions: { comma: function() {
  return { type_: "commaDecimal" };
}, "output-0": function(e5) {
  var t2 = [];
  if (e5.text_ = e5.text_ || "", e5.text_.length > 4) {
    var i2 = e5.text_.length % 3;
    0 === i2 && (i2 = 3);
    for (var n2 = e5.text_.length - 3; n2 > 0; n2 -= 3)
      t2.push(e5.text_.substr(n2, 3)), t2.push({ type_: "1000 separator" });
    t2.push(e5.text_.substr(0, i2)), t2.reverse();
  } else
    t2.push(e5.text_);
  for (var r2 in e5)
    delete e5[r2];
  return t2;
}, "output-o": function(e5) {
  var t2 = [];
  if (e5.text_ = e5.text_ || "", e5.text_.length > 4) {
    for (var i2 = e5.text_.length - 3, n2 = 0; n2 < i2; n2 += 3)
      t2.push(e5.text_.substr(n2, 3)), t2.push({ type_: "1000 separator" });
    t2.push(e5.text_.substr(n2));
  } else
    t2.push(e5.text_);
  for (var r2 in e5)
    delete e5[r2];
  return t2;
} } } };
var Zt;
var Gt;
var Ut = { go: function(e5, t2) {
  if (!e5)
    return "";
  for (var i2 = "", n2 = false, r2 = 0; r2 < e5.length; r2++) {
    var a2 = e5[r2];
    "string" == typeof a2 ? i2 += a2 : (i2 += Ut._go2(a2), "1st-level escape" === a2.type_ && (n2 = true));
  }
  return t2 || n2 || !i2 || (i2 = "{" + i2 + "}"), i2;
}, _goInner: function(e5) {
  return e5 ? Ut.go(e5, true) : e5;
}, _go2: function(e5) {
  var t2;
  switch (e5.type_) {
    case "chemfive":
      t2 = "";
      var i2 = { a: Ut._goInner(e5.a), b: Ut._goInner(e5.b), p: Ut._goInner(e5.p), o: Ut._goInner(e5.o), q: Ut._goInner(e5.q), d: Ut._goInner(e5.d) };
      i2.a && (i2.a.match(/^[+\-]/) && (i2.a = "{" + i2.a + "}"), t2 += i2.a + "\\,"), (i2.b || i2.p) && (t2 += "{\\vphantom{X}}", t2 += "^{\\hphantom{" + (i2.b || "") + "}}_{\\hphantom{" + (i2.p || "") + "}}", t2 += "{\\vphantom{X}}", t2 += "^{\\smash[t]{\\vphantom{2}}\\mathllap{" + (i2.b || "") + "}}", t2 += "_{\\vphantom{2}\\mathllap{\\smash[t]{" + (i2.p || "") + "}}}"), i2.o && (i2.o.match(/^[+\-]/) && (i2.o = "{" + i2.o + "}"), t2 += i2.o), "kv" === e5.dType ? ((i2.d || i2.q) && (t2 += "{\\vphantom{X}}"), i2.d && (t2 += "^{" + i2.d + "}"), i2.q && (t2 += "_{\\smash[t]{" + i2.q + "}}")) : "oxidation" === e5.dType ? (i2.d && (t2 += "{\\vphantom{X}}", t2 += "^{" + i2.d + "}"), i2.q && (t2 += "{\\vphantom{X}}", t2 += "_{\\smash[t]{" + i2.q + "}}")) : (i2.q && (t2 += "{\\vphantom{X}}", t2 += "_{\\smash[t]{" + i2.q + "}}"), i2.d && (t2 += "{\\vphantom{X}}", t2 += "^{" + i2.d + "}"));
      break;
    case "rm":
    case "roman numeral":
      t2 = "\\mathrm{" + e5.p1 + "}";
      break;
    case "text":
      e5.p1.match(/[\^_]/) ? (e5.p1 = e5.p1.replace(" ", "~").replace("-", "\\text{-}"), t2 = "\\mathrm{" + e5.p1 + "}") : t2 = "\\text{" + e5.p1 + "}";
      break;
    case "state of aggregation":
      t2 = "\\mskip2mu " + Ut._goInner(e5.p1);
      break;
    case "state of aggregation subscript":
      t2 = "\\mskip1mu " + Ut._goInner(e5.p1);
      break;
    case "bond":
      if (!(t2 = Ut._getBond(e5.kind_)))
        throw ["MhchemErrorBond", "mhchem Error. Unknown bond type (" + e5.kind_ + ")"];
      break;
    case "frac":
      var n2 = "\\frac{" + e5.p1 + "}{" + e5.p2 + "}";
      t2 = "\\mathchoice{\\textstyle" + n2 + "}{" + n2 + "}{" + n2 + "}{" + n2 + "}";
      break;
    case "pu-frac":
      var r2 = "\\frac{" + Ut._goInner(e5.p1) + "}{" + Ut._goInner(e5.p2) + "}";
      t2 = "\\mathchoice{\\textstyle" + r2 + "}{" + r2 + "}{" + r2 + "}{" + r2 + "}";
      break;
    case "tex-math":
    case "1st-level escape":
      t2 = e5.p1 + " ";
      break;
    case "frac-ce":
      t2 = "\\frac{" + Ut._goInner(e5.p1) + "}{" + Ut._goInner(e5.p2) + "}";
      break;
    case "overset":
      t2 = "\\overset{" + Ut._goInner(e5.p1) + "}{" + Ut._goInner(e5.p2) + "}";
      break;
    case "underset":
      t2 = "\\underset{" + Ut._goInner(e5.p1) + "}{" + Ut._goInner(e5.p2) + "}";
      break;
    case "underbrace":
      t2 = "\\underbrace{" + Ut._goInner(e5.p1) + "}_{" + Ut._goInner(e5.p2) + "}";
      break;
    case "color":
      t2 = "{\\color{" + e5.color1 + "}{" + Ut._goInner(e5.color2) + "}}";
      break;
    case "color0":
      t2 = "\\color{" + e5.color + "}";
      break;
    case "arrow":
      var a2 = { rd: Ut._goInner(e5.rd), rq: Ut._goInner(e5.rq) }, o2 = "\\x" + Ut._getArrow(e5.r);
      a2.rq && (o2 += "[{" + a2.rq + "}]"), t2 = o2 += a2.rd ? "{" + a2.rd + "}" : "{}";
      break;
    case "operator":
      t2 = Ut._getOperator(e5.kind_);
      break;
    case "space":
      t2 = " ";
      break;
    case "entitySkip":
    case "pu-space-1":
      t2 = "~";
      break;
    case "pu-space-2":
      t2 = "\\mkern3mu ";
      break;
    case "1000 separator":
      t2 = "\\mkern2mu ";
      break;
    case "commaDecimal":
      t2 = "{,}";
      break;
    case "comma enumeration L":
      t2 = "{" + e5.p1 + "}\\mkern6mu ";
      break;
    case "comma enumeration M":
      t2 = "{" + e5.p1 + "}\\mkern3mu ";
      break;
    case "comma enumeration S":
      t2 = "{" + e5.p1 + "}\\mkern1mu ";
      break;
    case "hyphen":
      t2 = "\\text{-}";
      break;
    case "addition compound":
      t2 = "\\,{\\cdot}\\,";
      break;
    case "electron dot":
      t2 = "\\mkern1mu \\bullet\\mkern1mu ";
      break;
    case "KV x":
      t2 = "{\\times}";
      break;
    case "prime":
      t2 = "\\prime ";
      break;
    case "cdot":
      t2 = "\\cdot ";
      break;
    case "tight cdot":
      t2 = "\\mkern1mu{\\cdot}\\mkern1mu ";
      break;
    case "times":
      t2 = "\\times ";
      break;
    case "circa":
      t2 = "{\\sim}";
      break;
    case "^":
      t2 = "uparrow";
      break;
    case "v":
      t2 = "downarrow";
      break;
    case "ellipsis":
      t2 = "\\ldots ";
      break;
    case "/":
      t2 = "/";
      break;
    case " / ":
      t2 = "\\,/\\,";
      break;
    default:
      throw ["MhchemBugT", "mhchem bug T. Please report."];
  }
  return t2;
}, _getArrow: function(e5) {
  switch (e5) {
    case "->":
    case "\u2192":
    case "\u27F6":
      return "rightarrow";
    case "<-":
      return "leftarrow";
    case "<->":
      return "leftrightarrow";
    case "<-->":
      return "rightleftarrows";
    case "<=>":
    case "\u21CC":
      return "rightleftharpoons";
    case "<=>>":
      return "rightequilibrium";
    case "<<=>":
      return "leftequilibrium";
    default:
      throw ["MhchemBugT", "mhchem bug T. Please report."];
  }
}, _getBond: function(e5) {
  switch (e5) {
    case "-":
    case "1":
      return "{-}";
    case "=":
    case "2":
      return "{=}";
    case "#":
    case "3":
      return "{\\equiv}";
    case "~":
      return "{\\tripledash}";
    case "~-":
      return "{\\mathrlap{\\raisebox{-.1em}{$-$}}\\raisebox{.1em}{$\\tripledash$}}";
    case "~=":
    case "~--":
      return "{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$\\tripledash$}}-}";
    case "-~-":
      return "{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$-$}}\\tripledash}";
    case "...":
      return "{{\\cdot}{\\cdot}{\\cdot}}";
    case "....":
      return "{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";
    case "->":
      return "{\\rightarrow}";
    case "<-":
      return "{\\leftarrow}";
    case "<":
      return "{<}";
    case ">":
      return "{>}";
    default:
      throw ["MhchemBugT", "mhchem bug T. Please report."];
  }
}, _getOperator: function(e5) {
  switch (e5) {
    case "+":
      return " {}+{} ";
    case "-":
      return " {}-{} ";
    case "=":
      return " {}={} ";
    case "<":
      return " {}<{} ";
    case ">":
      return " {}>{} ";
    case "<<":
      return " {}\\ll{} ";
    case ">>":
      return " {}\\gg{} ";
    case "\\pm":
      return " {}\\pm{} ";
    case "\\approx":
    case "$\\approx$":
      return " {}\\approx{} ";
    case "v":
    case "(v)":
      return " \\downarrow{} ";
    case "^":
    case "(^)":
      return " \\uparrow{} ";
    default:
      throw ["MhchemBugT", "mhchem bug T. Please report."];
  }
} };
var Jt = class extends nt {
  constructor(e5, t2) {
    super("choice", t2), this.choices = e5, this.skipBoundary = true;
  }
  static fromJson(e5, t2) {
    return new Jt([ci(e5.choices[0], t2), ci(e5.choices[1], t2), ci(e5.choices[2], t2), ci(e5.choices[3], t2)], t2);
  }
  toJson() {
    const e5 = [];
    for (const t2 of this.choices)
      e5.push(t2.filter((e6) => "first" !== e6.type).map((e6) => e6.toJson()));
    return { ...super.toJson(), choices: e5 };
  }
  render(e5) {
    const t2 = nt.createBox(e5, this.choices[Math.floor(e5.mathstyle.id / 2)]);
    return t2 ? (this.caret && (t2.caret = this.caret), this.bind(e5, t2)) : null;
  }
  serialize(e5) {
    return `\\mathchoice{${nt.serialize(this.choices[0], e5)}}{${nt.serialize(this.choices[1], e5)}}{${nt.serialize(this.choices[2], e5)}}{${nt.serialize(this.choices[3], e5)}}`;
  }
};
var Xt = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("delim", i2, { command: e5, style: null == n2 ? void 0 : n2.style }), this.value = t2, this.size = null == n2 ? void 0 : n2.size;
  }
  static fromJson(e5, t2) {
    return new Xt(e5.command, e5.delim, t2, e5);
  }
  toJson() {
    return { ...super.toJson(), delim: this.value, size: this.size };
  }
  render(e5) {
    const t2 = new ze(null);
    return t2.delim = this.value, t2;
  }
  serialize(e5) {
    return 1 === this.value.length ? this.command + this.value : `${this.command}{${this.value}}`;
  }
};
var Yt = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("sizeddelim", i2, { command: e5, style: n2.style }), this.value = t2, this.delimClass = n2.delimClass, this.size = n2.size;
  }
  static fromJson(e5, t2) {
    return new Yt(e5.command, e5.delim, t2, e5);
  }
  toJson() {
    return { ...super.toJson(), delim: this.value, size: this.size, delimClass: this.delimClass };
  }
  render(e5) {
    let t2 = function(e6, t3, i2, n2) {
      var r2;
      return void 0 === e6 || "." === e6 ? _t(i2, null !== (r2 = n2.type) && void 0 !== r2 ? r2 : "minner", n2.classes) : ("<" === e6 || "\\lt" === e6 || "\u27E8" === e6 ? e6 = "\\langle" : ">" !== e6 && "\\gt" !== e6 && "\u27E9" !== e6 || (e6 = "\\rangle"), mt.has(e6) || ft.has(e6) ? dt(e6, t3, false, i2, n2) : pt.has(e6) ? ht(e6, gt[t3], false, i2, n2) : null);
    }(this.value, this.size, e5, { classes: this.delimClass });
    return t2 ? (t2 = this.bind(e5, t2), this.caret && (t2.caret = this.caret), t2) : null;
  }
  serialize(e5) {
    return 1 === this.value.length ? this.command + this.value : `${this.command}{${this.value}}`;
  }
};
var Qt = class extends nt {
  constructor(e5, t2, i2, n2, r2) {
    super("enclose", n2, { command: e5, style: r2.style }), this.body = t2, this.backgroundcolor = r2.backgroundcolor, i2.updiagonalarrow && (i2.updiagonalstrike = false), i2.box && (i2.left = false, i2.right = false, i2.bottom = false, i2.top = false), this.notation = i2, this.shadow = r2.shadow, this.strokeWidth = r2.strokeWidth, this.strokeStyle = r2.strokeStyle, this.svgStrokeStyle = r2.svgStrokeStyle, this.strokeColor = r2.strokeColor, this.borderStyle = r2.borderStyle, this.padding = r2.padding, this.captureSelection = true;
  }
  static fromJson(e5, t2) {
    return new Qt(e5.command, e5.body, e5.notation, t2, e5);
  }
  toJson() {
    const e5 = {};
    return this.notation.downdiagonalstrike && (e5.downdiagonalstrike = true), this.notation.updiagonalstrike && (e5.downdiagonalstrike = true), this.notation.verticalstrike && (e5.downdiagonalstrike = true), this.notation.horizontalstrike && (e5.downdiagonalstrike = true), this.notation.updiagonalarrow && (e5.downdiagonalstrike = true), this.notation.right && (e5.downdiagonalstrike = true), this.notation.bottom && (e5.downdiagonalstrike = true), this.notation.left && (e5.downdiagonalstrike = true), this.notation.top && (e5.downdiagonalstrike = true), this.notation.circle && (e5.downdiagonalstrike = true), this.notation.roundedbox && (e5.downdiagonalstrike = true), this.notation.madruwb && (e5.downdiagonalstrike = true), this.notation.actuarial && (e5.downdiagonalstrike = true), this.notation.box && (e5.downdiagonalstrike = true), { ...super.toJson(), notation: e5, shadow: this.shadow, strokeWidth: this.strokeWidth, strokeStyle: this.strokeStyle, svgStrokeStyle: this.svgStrokeStyle, strokeColor: this.strokeColor, borderStyle: this.borderStyle, padding: this.padding };
  }
  serialize(e5) {
    var t2;
    let i2 = null !== (t2 = this.command) && void 0 !== t2 ? t2 : "";
    if ("\\enclose" === this.command) {
      i2 += "{" + Object.keys(this.notation).join(" ") + "}";
      let e6 = "", t3 = "";
      this.backgroundcolor && "transparent" !== this.backgroundcolor && (e6 += t3 + 'mathbackground="' + this.backgroundcolor + '"', t3 = ","), this.shadow && "auto" !== this.shadow && (e6 += t3 + 'shadow="' + this.shadow + '"', t3 = ","), this.strokeWidth || "solid" !== this.strokeStyle ? (e6 += t3 + this.borderStyle, t3 = ",") : this.strokeColor && "currentColor" !== this.strokeColor && (e6 += t3 + 'mathcolor="' + this.strokeColor + '"', t3 = ","), e6 && (i2 += `[${e6}]`);
    }
    return i2 += `{${this.bodyToLatex(e5)}}`, i2;
  }
  render(e5) {
    var t2;
    const i2 = new he(e5, this.style), n2 = nt.createBox(i2, this.body);
    if (!n2)
      return null;
    const r2 = null !== (t2 = ce(this.padding && "auto" !== this.padding ? qt(this.padding, { ...this.context, registers: e5.registers }) : i2.getRegisterAsDimension("fboxsep"))) && void 0 !== t2 ? t2 : 0, a2 = new ze(null, { classes: "ML__notation" });
    a2.setStyle("position", "absolute"), a2.setStyle("height", n2.height + n2.depth + 2 * r2, "em"), a2.height = n2.height + r2, a2.depth = n2.depth + r2, 0 !== r2 ? a2.setStyle("width", `calc(100% + ${2 * r2}em)`) : a2.setStyle("width", "100%"), a2.setStyle("top", -n2.height + 2 * r2, "em"), a2.setStyle("left", -r2, "em"), a2.setStyle("z-index", "-1"), a2.setStyle("box-sizing", "border-box"), this.backgroundcolor && a2.setStyle("background-color", this.backgroundcolor), this.notation.box && a2.setStyle("border", this.borderStyle), this.notation.actuarial && (a2.setStyle("border-top", this.borderStyle), a2.setStyle("border-right", this.borderStyle)), this.notation.madruwb && (a2.setStyle("border-bottom", this.borderStyle), a2.setStyle("border-right", this.borderStyle)), this.notation.roundedbox && (a2.setStyle("border-radius", (n2.height + n2.depth) / 2, "em"), a2.setStyle("border", this.borderStyle)), this.notation.circle && (a2.setStyle("border-radius", "50%"), a2.setStyle("border", this.borderStyle)), this.notation.top && a2.setStyle("border-top", this.borderStyle), this.notation.left && a2.setStyle("border-left", this.borderStyle), this.notation.right && a2.setStyle("border-right", this.borderStyle), this.notation.bottom && a2.setStyle("border-bottom", this.borderStyle);
    let o2 = "";
    if (this.notation.horizontalstrike && (o2 += '<line x1="3%"  y1="50%" x2="97%" y2="50%"', o2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, o2 += ' stroke-linecap="round"', this.svgStrokeStyle && (o2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), o2 += "/>"), this.notation.verticalstrike && (o2 += '<line x1="50%"  y1="3%" x2="50%" y2="97%"', o2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, o2 += ' stroke-linecap="round"', this.svgStrokeStyle && (o2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), o2 += "/>"), this.notation.updiagonalstrike && (o2 += '<line x1="3%"  y1="97%" x2="97%" y2="3%"', o2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, o2 += ' stroke-linecap="round"', this.svgStrokeStyle && (o2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), o2 += "/>"), this.notation.downdiagonalstrike && (o2 += '<line x1="3%"  y1="3%" x2="97%" y2="97%"', o2 += ` stroke-width="${this.strokeWidth}" stroke="${this.strokeColor}"`, o2 += ' stroke-linecap="round"', this.svgStrokeStyle && (o2 += ` stroke-dasharray="${this.svgStrokeStyle}"`), o2 += "/>"), o2) {
      let e6;
      "none" !== this.shadow && (e6 = "auto" === this.shadow ? "filter: drop-shadow(0 0 .5px rgba(255, 255, 255, .7)) drop-shadow(1px 1px 2px #333)" : "filter: drop-shadow(" + this.shadow + ")"), function(e7, t3, i3) {
        e7.svgOverlay = t3, e7.svgStyle = i3;
      }(a2, o2, e6);
    }
    const s2 = new ze([a2, n2]);
    return s2.setStyle("position", "relative"), s2.setStyle("display", "inline"), s2.height = n2.height + r2, s2.depth = n2.depth + r2, s2.left = r2, s2.right = r2, this.caret && (s2.caret = this.caret), s2.wrap(i2);
  }
};
var ei = class extends nt {
  constructor(e5, t2, i2, n2, r2) {
    var a2, o2;
    super("genfrac", n2, { style: r2.style, command: e5, serialize: r2.serialize, displayContainsHighlight: true }), this.above = t2, this.below = i2, this.hasBarLine = null === (a2 = null == r2 ? void 0 : r2.hasBarLine) || void 0 === a2 || a2, this.continuousFraction = null !== (o2 = null == r2 ? void 0 : r2.continuousFraction) && void 0 !== o2 && o2, this.numerPrefix = null == r2 ? void 0 : r2.numerPrefix, this.denomPrefix = null == r2 ? void 0 : r2.denomPrefix, this.mathstyleName = null == r2 ? void 0 : r2.mathstyleName, this.leftDelim = null == r2 ? void 0 : r2.leftDelim, this.rightDelim = null == r2 ? void 0 : r2.rightDelim;
  }
  static fromJson(e5, t2) {
    return new ei(e5.command, e5.above, e5.below, t2, e5);
  }
  toJson() {
    const e5 = {};
    return this.continuousFraction && (e5.continuousFraction = true), this.numerPrefix && (e5.numerPrefix = this.numerPrefix), this.denomPrefix && (e5.denomPrefix = this.denomPrefix), this.leftDelim && (e5.leftDelim = this.leftDelim), this.rightDelim && (e5.rightDelim = this.rightDelim), this.hasBarLine || (e5.hasBarLine = false), this.mathstyleName && (e5.mathstyleName = this.mathstyleName), { ...super.toJson(), ...e5 };
  }
  serialize(e5) {
    return this.command + `{${this.aboveToLatex(e5)}}{${this.belowToLatex(e5)}}`;
  }
  get children() {
    if (this._children)
      return this._children;
    const e5 = [];
    if ("numerator-denominator" === this.context.fractionNavigationOrder) {
      for (const t2 of this.above)
        e5.push(...t2.children), e5.push(t2);
      for (const t2 of this.below)
        e5.push(...t2.children), e5.push(t2);
    } else {
      for (const t2 of this.below)
        e5.push(...t2.children), e5.push(t2);
      for (const t2 of this.above)
        e5.push(...t2.children), e5.push(t2);
    }
    return this._children = e5, e5;
  }
  render(e5) {
    var t2, i2;
    const n2 = new he(e5, this.style, this.mathstyleName), r2 = n2.metrics, a2 = new he(n2, this.style, this.continuousFraction ? "" : "numerator"), o2 = this.numerPrefix ? new ze([new ze(this.numerPrefix), nt.createBox(a2, this.above)], { isTight: a2.isTight, newList: true }) : null !== (t2 = nt.createBox(a2, this.above, { newList: true })) && void 0 !== t2 ? t2 : new ze(null, { newList: true }), s2 = new he(n2, this.style, this.continuousFraction ? "" : "denominator"), l2 = this.denomPrefix ? new ze([new ze(this.denomPrefix), nt.createBox(s2, this.below, { newList: true })]) : null !== (i2 = nt.createBox(s2, this.below, { newList: true })) && void 0 !== i2 ? i2 : new ze(null, { newList: true }), u2 = this.hasBarLine ? r2.defaultRuleThickness : 0;
    let c2, d2, h2 = 0;
    n2.isDisplayStyle ? (c2 = r2.num1, h2 = u2 > 0 ? 3 * u2 : 7 * u2, d2 = r2.denom1) : (u2 > 0 ? (c2 = r2.num2, h2 = u2) : (c2 = r2.num3, h2 = 3 * u2), d2 = r2.denom2);
    const m2 = [];
    this.isSelected && m2.push("ML__selected");
    const p2 = o2.depth, f2 = l2.height;
    let g2;
    if (u2 <= 0) {
      const e6 = c2 - p2 - (f2 - d2);
      e6 < h2 && (c2 += (h2 - e6) / 2, d2 += (h2 - e6) / 2), g2 = new Ve({ individualShift: [{ box: o2, shift: -c2, classes: [...m2, "ML__center"] }, { box: l2, shift: d2, classes: [...m2, "ML__center"] }] }).wrap(n2);
    } else {
      const e6 = 0.25 + u2 / 2, t3 = 0.25 - u2 / 2;
      c2 < h2 + p2 + e6 && (c2 = h2 + p2 + e6), d2 < h2 + f2 - t3 && (d2 = h2 + f2 - t3);
      const i3 = new ze(null, { classes: "ML__frac-line", mode: this.mode, style: this.style });
      i3.height = u2 / 2, i3.depth = u2 / 2, g2 = new Ve({ individualShift: [{ box: l2, shift: d2, classes: [...m2, "ML__center"] }, { box: i3, shift: u2 / 2 - t3, classes: m2 }, { box: o2, shift: -c2, classes: [...m2, "ML__center"] }] }).wrap(n2);
    }
    const y2 = n2.isDisplayStyle ? r2.delim1 : r2.delim2, b2 = this.isSelected ? " ML__selected" : "", v2 = this.leftDelim ? this.bind(e5, xt("mopen", this.leftDelim, y2, true, e5, { style: this.style, mode: this.mode, classes: b2 })) : _t(n2, "mopen");
    let x2 = null;
    x2 = this.continuousFraction ? new ze(null, { type: "mclose" }) : this.rightDelim ? this.bind(e5, xt("mclose", this.rightDelim, y2, true, e5, { style: this.style, mode: this.mode, classes: b2 })) : _t(n2, "mclose");
    const k2 = this.bind(e5, new ze([v2, g2, x2], { isTight: n2.isTight, type: "mord", classes: "mfrac" }));
    return k2 ? (this.caret && (k2.caret = this.caret), this.attachSupsub(e5, { base: k2 })) : null;
  }
};
var ti = class extends nt {
  constructor(e5, t2, i2) {
    var n2;
    super("latex", t2, { value: e5, mode: "latex" }), this.isSuggestion = null !== (n2 = null == i2 ? void 0 : i2.isSuggestion) && void 0 !== n2 && n2, this.isError = false, this.verbatimLatex = e5;
  }
  static fromJson(e5, t2) {
    const i2 = new ti(e5.command, t2);
    return e5.isSuggestion && (i2.isSuggestion = true), e5.isError && (i2.isError = true), i2;
  }
  toJson() {
    const e5 = {};
    return this.isSuggestion && (e5.isSuggestion = true), this.isError && (e5.isError = true), { ...super.toJson(), ...e5 };
  }
  get computedStyle() {
    return {};
  }
  render(e5) {
    const t2 = new ze(this.value, { classes: this.isSuggestion ? "ML__suggestion" : this.isError ? "ML__error" : "", type: "latex", maxFontSize: 1 });
    return t2 ? (this.caret && (t2.caret = this.caret), this.bind(e5, t2)) : null;
  }
};
var ii = class extends nt {
  constructor(e5, t2) {
    super("latexgroup", t2, { mode: "latex" }), this.body = [...e5].map((e6) => new ti(e6, t2)), this.skipBoundary = false;
  }
  static fromJson(e5, t2) {
    return new ii("", t2);
  }
  toJson() {
    return super.toJson();
  }
  render(e5) {
    const t2 = nt.createBox(e5, this.body, { newList: true });
    return t2 ? (this.caret && (t2.caret = this.caret), this.bind(e5, t2)) : null;
  }
  serialize(e5) {
    var t2, i2;
    return null !== (i2 = null === (t2 = this.body) || void 0 === t2 ? void 0 : t2.map((e6) => e6.value).join("")) && void 0 !== i2 ? i2 : "";
  }
};
var ni = class extends nt {
  constructor(e5, t2, i2, n2) {
    super("line", i2, { command: e5, style: n2.style }), this.skipBoundary = true, this.body = t2, this.position = n2.position;
  }
  static fromJson(e5, t2) {
    return new ni(e5.command, e5.body, t2, e5);
  }
  toJson() {
    return { ...super.toJson(), position: this.position };
  }
  render(e5) {
    const t2 = new he(e5, this.style, "cramp"), i2 = nt.createBox(t2, this.body);
    if (!i2)
      return null;
    const n2 = t2.metrics.defaultRuleThickness / t2.scalingFactor, r2 = new ze(null, { classes: this.position + "-line" });
    let a2;
    return r2.height = n2, r2.maxFontSize = 1.125 * n2 * t2.scalingFactor, a2 = "overline" === this.position ? new Ve({ shift: 0, children: [{ box: i2 }, 3 * n2, { box: r2 }, n2] }) : new Ve({ top: i2.height, children: [n2, { box: r2 }, 3 * n2, { box: i2 }] }), this.caret && (a2.caret = this.caret), new ze(a2, { classes: this.position, type: "mord" });
  }
};
var ri = class extends nt {
  constructor(e5, t2, i2, n2) {
    var r2, a2, o2, s2;
    super(null !== (r2 = n2.type) && void 0 !== r2 ? r2 : "mop", i2, { command: e5, style: n2.style, isFunction: null == n2 ? void 0 : n2.isFunction }), "string" == typeof t2 ? this.value = t2 : this.body = t2, this.captureSelection = null !== (a2 = n2.captureSelection) && void 0 !== a2 && a2, this.hasArgument = null !== (o2 = n2.hasArgument) && void 0 !== o2 && o2, this.variant = null == n2 ? void 0 : n2.variant, this.variantStyle = null == n2 ? void 0 : n2.variantStyle, this.subsupPlacement = null == n2 ? void 0 : n2.limits, this.isExtensibleSymbol = null !== (s2 = null == n2 ? void 0 : n2.isExtensibleSymbol) && void 0 !== s2 && s2;
  }
  static fromJson(e5, t2) {
    return new ri(e5.command, e5.body ? e5.body : e5.value, t2, e5);
  }
  toJson() {
    const e5 = super.toJson();
    return this.hasArgument && (e5.hasArgument = true), this.variant && (e5.variant = this.variant), this.variantStyle && (e5.variantStyle = this.variantStyle), this.subsupPlacement && (e5.limits = this.subsupPlacement), this.isExtensibleSymbol && (e5.isExtensibleSymbol = true), this.value && (e5.symbol = this.value), e5;
  }
  render(e5) {
    var t2;
    let i2, n2 = 0, r2 = 0;
    if (this.isExtensibleSymbol) {
      const t3 = e5.isDisplayStyle && "\\smallint" !== this.value;
      if (i2 = new ze(this.value, { fontFamily: t3 ? "Size2-Regular" : "Size1-Regular", classes: "op-symbol " + (t3 ? "large-op" : "small-op"), type: "mop", maxFontSize: e5.scalingFactor }), !i2)
        return null;
      i2.right = i2.italic, n2 = (i2.height - i2.depth) / 2 - 0.25 * e5.scalingFactor, r2 = i2.italic, i2.setStyle("color", this.style.color), i2.setStyle("background-color", this.style.backgroundColor);
    } else if (this.body) {
      if (i2 = nt.createBox(e5, this.body, { newList: true }), !i2)
        return null;
      i2.setStyle("color", this.style.color), i2.setStyle("background-color", this.style.backgroundColor);
    } else
      i2 = new ze(this.value, { type: "mop", mode: "math", maxFontSize: e5.scalingFactor, style: { color: this.style.color, backgroundColor: this.style.backgroundColor, letterShapeStyle: e5.letterShapeStyle, variant: this.variant, variantStyle: this.variantStyle } });
    this.isExtensibleSymbol && i2.setTop(n2);
    let a2 = i2;
    if (this.superscript || this.subscript) {
      const o2 = null !== (t2 = this.subsupPlacement) && void 0 !== t2 ? t2 : "auto";
      a2 = "over-under" === o2 || "auto" === o2 && e5.isDisplayStyle ? this.attachLimits(e5, { base: i2, baseShift: n2, slant: r2 }) : this.attachSupsub(e5, { base: i2 });
    }
    return this.caret && (a2.caret = this.caret), new ze(this.bind(e5, a2), { type: "mop", classes: "op-group" + (this.isSelected ? " ML__selected" : "") });
  }
  serialize(e5) {
    if ("\u200B" === this.value)
      return this.supsubToLatex(e5);
    const t2 = [];
    return t2.push(this.command), this.hasArgument && t2.push(`{${this.bodyToLatex(e5)}}`), this.explicitSubsupPlacement && ("over-under" === this.subsupPlacement && t2.push("\\limits"), "adjacent" === this.subsupPlacement && t2.push("\\nolimits"), "auto" === this.subsupPlacement && t2.push("\\displaylimits")), t2.push(this.supsubToLatex(e5)), Xe(t2);
  }
};
var ai = class extends nt {
  constructor(e5, t2, i2, n2) {
    var r2, a2;
    super("overlap", i2, { command: e5, style: null == n2 ? void 0 : n2.style }), this.skipBoundary = true, this.body = "string" == typeof t2 ? [new nt("mord", i2, { value: t2 })] : t2, this.align = null !== (r2 = null == n2 ? void 0 : n2.align) && void 0 !== r2 ? r2 : "left", this.boxType = null !== (a2 = null == n2 ? void 0 : n2.boxType) && void 0 !== a2 ? a2 : "mord";
  }
  static fromJson(e5, t2) {
    return new ai(e5.command, e5.body, t2, e5);
  }
  toJson() {
    const e5 = {};
    return this.align && (e5.align = this.align), this.boxType && (e5.boxType = this.boxType), { ...super.toJson(), ...e5 };
  }
  render(e5) {
    const t2 = nt.createBox(e5, this.body, { classes: "inner" });
    return t2 ? (this.caret && (t2.caret = this.caret), this.bind(e5, new ze([t2, new ze(null, { classes: "fix" })], { classes: "left" === this.align ? "llap" : "rlap", type: this.boxType }))) : null;
  }
};
var oi = class extends nt {
  constructor(e5, t2, i2) {
    var n2, r2, a2, o2;
    super("overunder", t2, { command: e5, serialize: i2.serialize, style: i2.style }), this.skipBoundary = null === (n2 = i2.skipBoundary) || void 0 === n2 || n2, this.subsupPlacement = i2.supsubPlacement, this.body = i2.body, this.svgAbove = i2.svgAbove, this.svgBelow = i2.svgBelow, this.svgBody = i2.svgBody, this.above = i2.above, this.below = i2.below, this.boxType = null !== (r2 = i2.boxType) && void 0 !== r2 ? r2 : "mord", this.paddedBody = null !== (a2 = i2.paddedBody) && void 0 !== a2 && a2, this.paddedLabels = null !== (o2 = i2.paddedLabels) && void 0 !== o2 && o2;
  }
  static fromJson(e5, t2) {
    return new oi(e5.command, t2, e5);
  }
  toJson() {
    const e5 = {};
    return this.skipBoundary || (e5.skipBoundary = false), this.subsupPlacement && (e5.subsupPlacement = this.subsupPlacement), this.svgAbove && (e5.svgAbove = this.svgAbove), this.svgBelow && (e5.svgBelow = this.svgBelow), this.svgBody && (e5.svgBody = this.svgBody), "mord" !== this.boxType && (e5.boxType = this.boxType), this.paddedBody && (e5.paddedBody = true), this.paddedLabels && (e5.paddedLabels = true), { ...super.toJson(), ...e5 };
  }
  render(e5) {
    let t2 = this.svgBody ? $e(this.svgBody) : nt.createBox(e5, this.body, { newList: true });
    const i2 = new he(e5, this.style, "scriptstyle");
    let n2 = null;
    this.svgAbove ? n2 = $e(this.svgAbove) : this.above && (n2 = nt.createBox(i2, this.above, { newList: true }));
    let r2 = null;
    this.svgBelow ? r2 = $e(this.svgBelow) : this.below && (r2 = nt.createBox(i2, this.below, { newList: true })), this.paddedBody && (t2 = new ze([_t(e5, "mopen"), t2, _t(e5, "mclose")], { newList: true }));
    let a2 = function(e6, t3) {
      if (!t3.base)
        return null;
      if (!t3.above && !t3.below) {
        const e7 = new ze(t3.base, { type: t3.type });
        return e7.setStyle("position", "relative"), e7;
      }
      let i3 = 0;
      t3.above && (i3 = -t3.above.depth + e6.metrics.bigOpSpacing2);
      let n3 = null;
      const r3 = t3.base, a3 = ["ML__center"];
      if (t3.paddedAboveBelow && a3.push("ML__label_padding"), t3.below && t3.above) {
        const o2 = e6.metrics.bigOpSpacing5 + t3.below.height + t3.below.depth + r3.depth + 0;
        n3 = new Ve({ bottom: o2, children: [e6.metrics.bigOpSpacing5, { box: t3.below, classes: a3 }, { box: r3, classes: ["ML__center"] }, i3, { box: t3.above, classes: a3 }, e6.metrics.bigOpSpacing5] });
      } else
        t3.below ? n3 = new Ve({ top: r3.height - 0, children: [e6.metrics.bigOpSpacing5, { box: t3.below, classes: a3 }, { box: r3, classes: ["ML__center"] }] }) : t3.above && (n3 = new Ve({ bottom: r3.depth + 0, children: [{ box: r3, classes: ["ML__center"] }, i3, { box: t3.above, classes: a3 }, e6.metrics.bigOpSpacing5] }));
      return new ze(n3, { type: t3.type });
    }(e5, { base: t2, above: n2, below: r2, type: "mbin" === this.boxType || "mrel" === this.boxType ? this.boxType : "mord", paddedAboveBelow: this.paddedLabels });
    return a2 ? (a2 = "over-under" === this.subsupPlacement ? this.attachLimits(e5, { base: a2, type: a2.type }) : this.attachSupsub(e5, { base: a2 }), this.caret && (a2.caret = this.caret), this.bind(e5, a2)) : null;
  }
};
var si = class extends nt {
  constructor(e5, t2, i2, n2) {
    var r2, a2, o2, s2;
    super("phantom", i2, { command: e5, style: n2.style }), this.captureSelection = true, this.body = t2, this.isInvisible = null !== (r2 = n2.isInvisible) && void 0 !== r2 && r2, this.smashDepth = null !== (a2 = n2.smashDepth) && void 0 !== a2 && a2, this.smashHeight = null !== (o2 = n2.smashHeight) && void 0 !== o2 && o2, this.smashWidth = null !== (s2 = n2.smashWidth) && void 0 !== s2 && s2;
  }
  static fromJson(e5, t2) {
    return new si(e5.command, e5.body, t2, e5);
  }
  toJson() {
    const e5 = {};
    return this.isInvisible && (e5.isInvisible = true), this.smashDepth && (e5.smashDepth = true), this.smashHeight && (e5.smashHeight = true), this.smashWidth && (e5.smashWidth = true), { ...super.toJson(), ...e5 };
  }
  render(e5) {
    const t2 = new he(e5, { isPhantom: true });
    if (!this.smashDepth && !this.smashHeight && !this.smashWidth)
      return nt.createBox(t2, this.body, { classes: "inner" });
    const i2 = nt.createBox(this.isInvisible ? t2 : e5, this.body);
    if (!i2)
      return null;
    if (this.smashWidth) {
      const t3 = new ze(null, { classes: "fix" });
      return new ze([i2, t3], { classes: "rlap" }).wrap(e5);
    }
    if (!this.smashHeight && !this.smashDepth)
      return i2;
    if (this.smashHeight && (i2.height = 0), this.smashDepth && (i2.depth = 0), i2.children)
      for (const e6 of i2.children)
        this.smashHeight && (e6.height = 0), this.smashDepth && (e6.depth = 0);
    return new Ve({ firstBaseline: [{ box: i2 }] }, { type: "mord" }).wrap(e5);
  }
};
var li = class extends nt {
  constructor(e5, t2, i2) {
    var n2;
    super("rule", t2, { command: e5, style: i2.style }), this.shift = null !== (n2 = i2.shift) && void 0 !== n2 ? n2 : { dimension: 0 }, this.height = i2.height, this.width = i2.width;
  }
  static fromJson(e5, t2) {
    return new li(e5.command, t2, e5);
  }
  toJson() {
    const e5 = { height: this.height, width: this.width };
    return this.shift && (e5.shift = this.shift), { ...super.toJson(), ...e5 };
  }
  render(e5) {
    const t2 = new he(e5, this.style, "textstyle"), i2 = ce(this.shift), n2 = ce(this.width), r2 = ce(this.height), a2 = new ze(null, { classes: "rule", type: "mord" });
    return a2.setStyle("border-right-width", n2, "em"), a2.setStyle("border-top-width", r2, "em"), a2.setStyle("border-color", this.style.color), a2.setStyle("vertical-align", i2, "em"), this.isSelected && a2.setStyle("opacity", "50%"), a2.width = n2, a2.height = r2 + i2, a2.depth = -i2, this.bind(e5, a2), this.caret && (a2.caret = this.caret), a2.wrap(t2);
  }
  serialize(e5) {
    var t2;
    let i2 = null !== (t2 = this.command) && void 0 !== t2 ? t2 : "";
    return this.shift && (i2 += `[${de(this.shift)}]`), i2 += `{${de(this.width)}}{${de(this.height)}}`, i2;
  }
};
var ui = class extends nt {
  constructor(e5, t2, i2) {
    var n2;
    super("surd", t2, { command: e5, mode: null !== (n2 = i2.mode) && void 0 !== n2 ? n2 : "math", style: i2.style, displayContainsHighlight: true }), this.body = i2.body, this.above = i2.index;
  }
  static fromJson(e5, t2) {
    return new ui(e5.command, t2, { ...e5, index: e5.above });
  }
  toJson() {
    return super.toJson();
  }
  serialize(e5) {
    let t2 = "";
    return this.above && (t2 += `[${this.aboveToLatex(e5)}]`), t2 += `{${this.bodyToLatex(e5)}}`, this.command + t2;
  }
  render(e5) {
    var t2;
    const i2 = new he(e5, this.style, "cramp"), n2 = null !== (t2 = nt.createBox(i2, this.body, { style: this.style, newList: true })) && void 0 !== t2 ? t2 : new ze(null), r2 = i2.scalingFactor, a2 = i2.metrics.defaultRuleThickness / r2, o2 = e5.isDisplayStyle ? 0.431 : a2, s2 = new ze(null, { classes: "ML__sqrt-line", style: this.style, height: a2 });
    let l2 = r2 * (a2 + o2 / 4);
    const u2 = Math.max(2 * r2 * o2, n2.height + n2.depth) + l2 + a2, c2 = new he(e5, this.style), d2 = this.isSelected ? " ML__selected" : "", h2 = this.bind(c2, new ze(xt("", "\\surd", u2, false, c2, { classes: d2 }), { classes: "ML__sqrt-sign" + d2, style: this.style }));
    if (!h2)
      return null;
    const m2 = h2.height + h2.depth - a2;
    m2 > n2.height + n2.depth + l2 && (l2 = (l2 + m2 - (n2.height + n2.depth)) / 2), h2.setTop(h2.height - n2.height - l2);
    const p2 = this.bind(e5, new Ve({ firstBaseline: [{ box: new ze(n2) }, l2 - 2 * a2, { box: s2 }, a2] }).wrap(e5)), f2 = nt.createBox(new he(e5, this.style, "scriptscriptstyle"), this.above, { style: this.style, newList: true });
    if (!f2) {
      const t3 = new ze([h2, p2], { classes: this.containsCaret ? "ML__contains-caret" : "", type: "mord" });
      return this.caret && (t3.caret = this.caret), this.bind(e5, t3.wrap(e5));
    }
    const g2 = new Ve({ shift: -0.6 * (Math.max(h2.height, p2.height) - Math.max(h2.depth, p2.depth)), children: [{ box: f2 }] }), y2 = new ze([new ze(g2, { classes: "ML__sqrt-index" }), h2, p2], { type: "mord", classes: this.containsCaret ? "ML__contains-caret" : "" });
    return y2.height = h2.height, y2.depth = h2.depth, this.caret && (y2.caret = this.caret), this.bind(e5, y2.wrap(e5));
  }
};
function ci(t2, i2) {
  if (e(t2))
    return t2.map((e5) => ci(e5, i2));
  t2 = { ...t2 };
  for (const e5 of et)
    t2[e5] && (t2[e5] = ci(t2[e5], i2));
  t2.array && (t2.array = ci(t2.array, i2));
  const n2 = t2.type;
  let r2;
  "accent" === n2 && (r2 = Pt.fromJson(t2, i2)), "array" === n2 && (r2 = Bt.fromJson(t2, i2)), "box" === n2 && (r2 = Rt.fromJson(t2, i2)), "composition" === n2 && (r2 = jt.fromJson(t2, i2)), "chem" === n2 && (r2 = Ht.fromJson(t2, i2)), "choice" === n2 && (r2 = Jt.fromJson(t2, i2)), "delim" === n2 && (r2 = Xt.fromJson(t2, i2)), "enclose" === n2 && (r2 = Qt.fromJson(t2, i2)), "error" === n2 && (r2 = Nt.fromJson(t2, i2)), "genfrac" === n2 && (r2 = ei.fromJson(t2, i2)), "group" === n2 && (r2 = ot.fromJson(t2, i2)), "latex" === n2 && (r2 = ti.fromJson(t2, i2)), "latexgroup" === n2 && (r2 = ii.fromJson(t2, i2)), "leftright" === n2 && (r2 = wt.fromJson(t2, i2)), "line" === n2 && (r2 = ni.fromJson(t2, i2)), "macro" === n2 && (r2 = Lt.fromJson(t2, i2)), "msubsup" === n2 && (r2 = St.fromJson(t2, i2)), "overlap" === n2 && (r2 = ai.fromJson(t2, i2)), "overunder" === n2 && (r2 = oi.fromJson(t2, i2)), "placeholder" === n2 && (t2.defaultValue && (t2.defaultValue = ci(t2.defaultValue, i2)), r2 = Mt.fromJson(t2, i2)), "phantom" === n2 && (r2 = si.fromJson(t2, i2)), "rule" === n2 && (r2 = li.fromJson(t2, i2)), "sizeddelim" === n2 && (r2 = Yt.fromJson(t2, i2)), "spacing" === n2 && (r2 = st.fromJson(t2, i2)), "surd" === n2 && (r2 = ui.fromJson(t2, i2)), "text" === n2 && (r2 = At.fromJson(t2, i2)), "mop" === n2 && (r2 = ri.fromJson(t2, i2)), r2 || (r2 = nt.fromJson(t2, i2));
  for (const e5 of et)
    t2[e5] && r2.setChildren(t2[e5], e5);
  return void 0 !== t2.verbatimLatex && (r2.verbatimLatex = t2.verbatimLatex), t2.subsupPlacement && (r2.subsupPlacement = t2.subsupPlacement), t2.explicitSubsupPlacement && (r2.explicitSubsupPlacement = true), t2.isFunction && (r2.isFunction = true), t2.isExtensibleSymbol && (r2.isExtensibleSymbol = true), t2.skipBoundary && (r2.skipBoundary = true), t2.captureSelection && (r2.captureSelection = true), r2;
}
var di = null;
function hi(e5) {
  if (/^(?:[a-z+]+:)?\/\//i.test(e5))
    return new URL(e5).href;
  if (null === di)
    try {
      const e6 = new XMLHttpRequest();
      e6.open("HEAD", mi, false), e6.send(null), 200 === e6.status && (di = e6.responseURL);
    } catch (e6) {
    }
  return di ? new URL(e5, di).href : "";
}
var mi = (null === (Gt = null === (Zt = null === globalThis || void 0 === globalThis ? void 0 : globalThis.document) || void 0 === Zt ? void 0 : Zt.currentScript) || void 0 === Gt ? void 0 : Gt.src) || function() {
  const e5 = String(new Error().stack).replace(/^Error.*\n/, "").split("\n");
  if (0 === e5.length)
    return "";
  let t2 = e5[1], i2 = t2.match(/http.*\.ts[\?:]/);
  return i2 && (t2 = e5[2]), i2 = t2.match(/(https?:.*):[0-9]+:[0-9]+/), i2 || (i2 = t2.match(/at (.*(\.ts))[\?:]/), i2 || (i2 = t2.match(/at (.*(\.mjs|\.js))[\?:]/))), i2 ? i2[1] : "";
}();
async function pi(e5) {
  var i2;
  if (t() && !document.body.classList.contains("ML__fonts-loading") && (null === (i2 = getComputedStyle(document.documentElement).getPropertyValue("--ML__static-fonts")) || void 0 === i2 || !i2) && (document.body.classList.remove("ML__fonts-did-not-load"), "fonts" in document)) {
    const t2 = ["KaTeX_Main", "KaTeX_Math", "KaTeX_AMS", "KaTeX_Caligraphic", "KaTeX_Fraktur", "KaTeX_SansSerif", "KaTeX_Script", "KaTeX_Typewriter", "KaTeX_Size1", "KaTeX_Size2", "KaTeX_Size3", "KaTeX_Size4"], i3 = Array.from(document.fonts).map((e6) => e6.family);
    if (t2.every((e6) => i3.includes(e6)))
      return;
    const n2 = hi(null != e5 ? e5 : "./fonts");
    if (!n2)
      return;
    document.body.classList.add("ML__fonts-loading");
    const r2 = [["KaTeX_Main-Regular"], ["KaTeX_Main-BoldItalic", { style: "italic", weight: "bold" }], ["KaTeX_Main-Bold", { weight: "bold" }], ["KaTeX_Main-Italic", { style: "italic" }], ["KaTeX_Math-Italic", { style: "italic" }], ["KaTeX_Math-BoldItalic", { style: "italic", weight: "bold" }], ["KaTeX_AMS-Regular"], ["KaTeX_Caligraphic-Regular"], ["KaTeX_Caligraphic-Bold", { weight: "bold" }], ["KaTeX_Fraktur-Regular"], ["KaTeX_Fraktur-Bold", { weight: "bold" }], ["KaTeX_SansSerif-Regular", { style: "italic" }], ["KaTeX_SansSerif-Bold", { weight: "bold" }], ["KaTeX_SansSerif-Italic", { style: "italic" }], ["KaTeX_Script-Regular"], ["KaTeX_Typewriter-Regular"], ["KaTeX_Size1-Regular"], ["KaTeX_Size2-Regular"], ["KaTeX_Size3-Regular"], ["KaTeX_Size4-Regular"]].map((e6) => function(e7, t3, i4 = {}) {
      return new FontFace(e7, `url(${t3}.woff2) format('woff2')`, i4);
    }(e6[0].replace(/-[a-zA-Z]+$/, ""), n2 + "/" + e6[0], e6[1]));
    try {
      const e6 = await Promise.all(r2.map((e7) => {
        try {
          return e7.load();
        } catch {
        }
      }));
      e6.forEach((e7) => document.fonts.add(e7));
    } catch (e6) {
      document.body.classList.add("ML__fonts-did-not-load");
    }
    document.body.classList.remove("ML__fonts-loading");
  }
}
L("ensuremath", "{:math}", { createAtom: (e5, t2, i2, n2) => new ot(t2[0], n2, { mode: "math", latexOpen: "\\ensuremath{", latexClose: "}", style: i2 }) }), L("color", "{:string}", { applyStyle: (e5, t2, i2) => {
  var n2, r2;
  const a2 = t2[0];
  return { verbatimColor: t2[0], color: null !== (r2 = null === (n2 = i2.colorMap) || void 0 === n2 ? void 0 : n2.call(i2, a2)) && void 0 !== r2 ? r2 : a2 };
} }), L("textcolor", "{:string}{content:auto*}", { applyStyle: (e5, t2, i2) => {
  var n2, r2;
  const a2 = t2[0];
  return { verbatimColor: a2, color: null !== (r2 = null === (n2 = i2.colorMap) || void 0 === n2 ? void 0 : n2.call(i2, a2)) && void 0 !== r2 ? r2 : a2 };
} }), L("boxed", "{content:math}", { createAtom: (e5, t2, i2, n2) => new Rt(e5, t2[0], n2, { framecolor: "black", style: i2 }) }), L("colorbox", "{:string}{content:auto*}", { applyMode: "text", applyStyle: (e5, t2, i2) => {
  var n2, r2;
  const a2 = t2[0];
  return { verbatimBackgroundColor: t2[0], backgroundColor: null !== (r2 = null === (n2 = i2.backgroundColorMap) || void 0 === n2 ? void 0 : n2.call(i2, a2)) && void 0 !== r2 ? r2 : a2 };
} }), L("fcolorbox", "{frame-color:string}{background-color:string}{content:auto}", { applyMode: "text", createAtom: (e5, t2, i2, n2) => {
  var r2, a2, o2, s2;
  const l2 = t2[0], u2 = t2[1];
  return new Rt(e5, t2[2], n2, { verbatimFramecolor: l2, framecolor: null !== (a2 = null === (r2 = n2.colorMap) || void 0 === r2 ? void 0 : r2.call(n2, l2)) && void 0 !== a2 ? a2 : l2, verbatimBackgroundcolor: t2[1], backgroundcolor: null !== (s2 = null === (o2 = n2.backgroundColorMap) || void 0 === o2 ? void 0 : o2.call(n2, u2)) && void 0 !== s2 ? s2 : u2, style: i2, serialize: (e6, t3) => {
    var i3, n3;
    return `${e6.command}{${null !== (i3 = e6.verbatimFramecolor) && void 0 !== i3 ? i3 : e6.framecolor}{${null !== (n3 = e6.verbatimBackgroundcolor) && void 0 !== n3 ? n3 : e6.backgroundcolor}}{${e6.bodyToLatex(t3)}}`;
  } });
} }), L("bbox", "[:bbox]{body:auto}", { createAtom: (e5, t2, i2, n2) => {
  if (t2[0]) {
    const r2 = t2[0];
    return new Rt(e5, t2[1], n2, { padding: r2.padding, border: r2.border, backgroundcolor: r2.backgroundcolor, style: i2, serialize: (t3, i3) => {
      var n3;
      let r3 = e5;
      if (Number.isFinite(t3.padding) || void 0 !== t3.border || void 0 !== t3.backgroundcolor) {
        const e6 = [];
        t3.padding && e6.push(t3.padding), t3.border && e6.push(`border: ${t3.border}`), (t3.verbatimBackgroundcolor || t3.backgroundcolor) && e6.push(null !== (n3 = t3.verbatimBackgroundcolor) && void 0 !== n3 ? n3 : t3.backgroundcolor), r3 += `[${e6.join(",")}]`;
      }
      return r3 + `{${t3.bodyToLatex(i3)}}`;
    } });
  }
  return new Rt(e5, t2[1], n2, { style: i2 });
} }), L(["displaystyle", "textstyle", "scriptstyle", "scriptscriptstyle"], "{:rest}", { createAtom: (e5, t2, i2, n2) => new ot(t2[0], n2, { latexOpen: `{${e5} `, latexClose: "}", style: i2, mathstyleName: e5.slice(1) }) }), L(["tiny", "scriptsize", "footnotesize", "small", "normalsize", "large", "Large", "LARGE", "huge", "Huge"], "", { applyStyle: (e5, t2) => ({ fontSize: { "\\tiny": 1, "\\scriptsize": 2, "\\footnotesize": 3, "\\small": 4, "\\normalsize": 5, "\\large": 6, "\\Large": 7, "\\LARGE": 8, "\\huge": 9, "\\Huge": 10 }[e5] }) }), L("fontseries", "{:string}", { ifMode: "text", applyStyle: (e5, t2) => ({ fontSeries: t2[0] }) }), L("fontshape", "{:string}", { ifMode: "text", applyStyle: (e5, t2) => ({ fontShape: t2[0] }) }), L("fontfamily", "{:string}", { ifMode: "text", applyStyle: (e5, t2) => ({ fontFamily: t2[0] }) }), L("selectfont", "", { ifMode: "text", applyStyle: (e5, t2) => ({}) }), L("bf", "", { applyStyle: (e5, t2) => ({ fontSeries: "b", fontShape: "n", fontFamily: "cmr" }) }), L(["boldsymbol", "bm"], "{:math*}", { applyMode: "math", createAtom: (e5, t2, i2, n2) => new ot(t2[0], n2, { latexOpen: `${e5}{`, latexClose: "}", style: i2, customClass: "ML__boldsymbol" }) }), L("bold", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variantStyle: "bold" }) }), L("bfseries", "", { applyMode: "text", applyStyle: (e5, t2) => ({ fontSeries: "b" }) }), L("mdseries", "", { applyMode: "text", applyStyle: (e5, t2) => ({ fontSeries: "m" }) }), L("upshape", "", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "n" }) }), L("slshape", "", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "sl" }) }), L("scshape", "", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "sc" }) }), L("textbf", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontSeries: "b" }) }), L("textmd", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontSeries: "m" }) }), L("textup", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "n" }) }), L("textnormal", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "n", fontSeries: "m" }) }), L("textsl", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "sl" }) }), L("textit", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "it" }) }), L("textsc", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontShape: "sc" }) }), L("textrm", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontFamily: "roman" }) }), L("textsf", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontFamily: "sans-serif" }) }), L("texttt", "{:text*}", { applyMode: "text", applyStyle: (e5, t2) => ({ fontFamily: "monospace" }) }), L("mathbf", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "normal", variantStyle: "bold" }) }), L("mathit", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "main", variantStyle: "italic" }) }), L("mathnormal", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "normal", variantStyle: "italic" }) }), L("mathbfit", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "main", variantStyle: "bolditalic" }) }), L("mathrm", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "normal", variantStyle: "up" }) }), L("mathsf", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "sans-serif", variantStyle: "up" }) }), L("mathtt", "{:math*}", { applyMode: "math", applyStyle: (e5, t2) => ({ variant: "monospace", variantStyle: "up" }) }), L("it", "", { applyStyle: (e5, t2) => ({ fontSeries: "m", fontShape: "it", fontFamily: "cmr", variantStyle: "italic" }) }), L("rmfamily", "", { applyStyle: (e5, t2) => ({ fontFamily: "roman" }) }), L("sffamily", "", { applyStyle: (e5, t2) => ({ fontFamily: "sans-serif" }) }), L("ttfamily", "", { applyStyle: (e5, t2) => ({ fontFamily: "monospace" }) }), L(["Bbb", "mathbb"], "{:math*}", { applyStyle: (e5, t2) => ({ variant: "double-struck", variantStyle: "up" }) }), L(["frak", "mathfrak"], "{:math*}", { applyStyle: (e5, t2) => ({ variant: "fraktur", variantStyle: "up" }) }), L("mathcal", "{:math*}", { applyStyle: (e5, t2) => ({ variant: "calligraphic", variantStyle: "up" }) }), L("mathscr", "{:math*}", { applyStyle: (e5, t2) => ({ variant: "script", variantStyle: "up" }) }), L("mbox", "{:text}", { ifMode: "math", createAtom: (e5, t2, i2, n2) => new ot(t2[0], n2, { changeMode: true, style: i2, mode: "text", command: e5, serialize: (e6, t3) => `\\mbox{${e6.bodyToLatex({ ...t3, skipModeCommand: true })}}` }) }), L("text", "{:text}", { ifMode: "math", applyMode: "text" }), L("class", "{name:string}{content:auto*}", { createAtom: (e5, t2, i2, n2) => new ot(t2[1], n2, { customClass: t2[0], style: i2 }) }), L("cssId", "{id:string}{content:auto}", { createAtom: (e5, t2, i2, n2) => new ot(t2[1], n2, { cssId: t2[0], style: i2 }) }), L("htmlData", "{data:string}{content:auto}", { createAtom: (e5, t2, i2, n2) => new ot(t2[1], n2, { htmlData: t2[0], style: i2 }) }), L("htmlStyle", "{data:string}{content:auto}", { createAtom: (e5, t2, i2, n2) => new ot(t2[1], n2, { htmlStyle: t2[0], style: i2 }) }), L("em", "{:auto*}", { createAtom: (e5, t2, i2, n2) => new ot(t2[0], n2, { latexOpen: "\\em", latexClose: "", customClass: "ML__emph", style: i2 }) }), L("emph", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ot(t2[0], n2, { latexOpen: "\\emph{", latexClose: "}", customClass: "ML__emph", style: i2 }) });
var fi = { "\\bigl": { mclass: "mopen", size: 1 }, "\\Bigl": { mclass: "mopen", size: 2 }, "\\biggl": { mclass: "mopen", size: 3 }, "\\Biggl": { mclass: "mopen", size: 4 }, "\\bigr": { mclass: "mclose", size: 1 }, "\\Bigr": { mclass: "mclose", size: 2 }, "\\biggr": { mclass: "mclose", size: 3 }, "\\Biggr": { mclass: "mclose", size: 4 }, "\\bigm": { mclass: "mrel", size: 1 }, "\\Bigm": { mclass: "mrel", size: 2 }, "\\biggm": { mclass: "mrel", size: 3 }, "\\Biggm": { mclass: "mrel", size: 4 }, "\\big": { mclass: "mord", size: 1 }, "\\Big": { mclass: "mord", size: 2 }, "\\bigg": { mclass: "mord", size: 3 }, "\\Bigg": { mclass: "mord", size: 4 } };
L(["bigl", "Bigl", "biggl", "Biggl", "bigr", "Bigr", "biggr", "Biggr", "bigm", "Bigm", "biggm", "Biggm", "big", "Big", "bigg", "Bigg"], "{:delim}", { createAtom: (e5, t2, i2, n2) => new Yt(e5, t2[0], n2, { size: fi[e5].size, delimClass: fi[e5].mclass, style: i2 }) }), L(["hspace", "hspace*"], "{width:glue}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new st(e5, i2, n2, null !== (r2 = t2[0]) && void 0 !== r2 ? r2 : { glue: { dimension: 0 } });
} }), L(["mkern", "kern"], "{width:glue}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new st(e5, i2, n2, null !== (r2 = t2[0]) && void 0 !== r2 ? r2 : { glue: { dimension: 0 } });
} }), L("mspace", "{width:glue}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new st(e5, i2, n2, null !== (r2 = t2[0]) && void 0 !== r2 ? r2 : { glue: { dimension: 0 } });
} }), L("mathop", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ri(e5, t2[0], n2, { type: "mop", captureSelection: true, limits: "over-under", isFunction: true, hasArgument: true, style: i2 }) }), L("mathchoice", "{:math}{:math}{:math}{:math}", { createAtom: (e5, t2, i2, n2) => new Jt(t2, n2) }), L(["mathbin", "mathrel", "mathopen", "mathclose", "mathpunct", "mathord", "mathinner"], "{:auto}", { createAtom: (e5, t2, i2, n2) => new ri(e5, t2[0], n2, { type: { "\\mathbin": "mbin", "\\mathrel": "mrel", "\\mathopen": "mopen", "\\mathclose": "mclose", "\\mathpunct": "mpunct", "\\mathord": "mord", "\\mathinner": "minner" }[e5], captureSelection: true, hasArgument: true, style: i2 }) }), L(["operatorname", "operatorname*"], "{operator:math}", { createAtom: (e5, t2, i2, n2) => {
  const r2 = new ri(e5, t2[0], n2, { isFunction: true, hasArgument: true, limits: "\\operatorname" === e5 ? "adjacent" : "over-under", style: i2 });
  return r2.captureSelection = true, r2.body && r2.body.forEach((e6) => {
    var t3;
    "first" !== e6.type && (e6.type = "mord", e6.value = null !== (t3 = { "\u2217": "*", "\u2212": "-" }[e6.value]) && void 0 !== t3 ? t3 : e6.value, e6.isFunction = false, e6.style.variant || e6.style.variantStyle || (e6.style.variant = "main", e6.style.variantStyle = "up"));
  }), r2;
} });
var gi = class extends nt {
  constructor(e5, t2, i2) {
    let n2 = Number.parseInt(e5);
    Number.isFinite(n2) || (n2 = 10067), super("mord", i2, { value: String.fromCodePoint(n2), style: t2 }), this.codepoint = n2;
  }
  serialize(e5) {
    return '\\unicode"' + ("000000" + this.codepoint.toString(16)).toUpperCase().slice(-6);
  }
};
function yi(e5) {
  if (1 === e5.length) {
    const t2 = e5[0];
    if ("mbin" === t2.type)
      return "mbin";
    if ("mrel" === t2.type)
      return "mrel";
  }
  return "mord";
}
L("unicode", "{charcode:number}", { createAtom: (e5, t2, i2, n2) => new gi(t2[0], i2, n2) }), L("rule", "[raise:dimen]{width:dimen}{thickness:dimen}", { createAtom: (e5, t2, i2, n2) => new li(e5, n2, { shift: t2[0], width: t2[1], height: t2[2], style: i2 }) }), L("overline", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ni(e5, t2[0], n2, { position: "overline", style: i2 }) }), L("underline", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ni(e5, t2[0], n2, { position: "underline", style: i2 }) }), L("overset", "{above:auto}{base:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { above: t2[0], body: t2[1], skipBoundary: false, style: i2, boxType: yi(t2[1]), serialize: (e6, t3) => `${e6.command}{${e6.aboveToLatex(t3)}}{${e6.bodyToLatex(t3)}}` }) }), L("underset", "{below:auto}{base:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { below: t2[0], body: t2[1], skipBoundary: false, style: i2, boxType: yi(t2[1]), serialize: (t3, i3) => `${e5}{${t3.belowToLatex(i3)}}{${t3.bodyToLatex(i3)}}` }) }), L("overunderset", "{above:auto}{below:auto}{base:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { above: t2[0], below: t2[1], body: t2[2], skipBoundary: false, style: i2, boxType: yi(t2[2]), serialize: (e6, t3) => `${e6.command}{${e6.aboveToLatex(t3)}}{${e6.bodyToLatex(t3)}}` }) }), L(["stackrel", "stackbin"], "[below:auto]{above:auto}{base:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { body: t2[2], above: t2[1], below: t2[0], skipBoundary: false, style: i2, boxType: "\\stackrel" === e5 ? "mrel" : "mbin", serialize: (e6, t3) => `${e6.command}{${e6.aboveToLatex(t3)}}{${e6.bodyToLatex(t3)}}` }) }), L("smash", "[:string]{:auto}", { createAtom: (e5, t2, i2, n2) => t2[0] ? new si(e5, t2[1], n2, { smashHeight: t2[0].includes("t"), smashDepth: t2[0].includes("b"), style: i2 }) : new si(e5, t2[1], n2, { smashHeight: true, smashDepth: true, style: i2 }) }), L(["vphantom"], "{:auto*}", { createAtom: (e5, t2, i2, n2) => new si(e5, t2[1], n2, { isInvisible: true, smashWidth: true, style: i2 }) }), L(["hphantom"], "{:auto*}", { createAtom: (e5, t2, i2, n2) => new si(e5, t2[1], n2, { isInvisible: true, smashHeight: true, smashDepth: true, style: i2 }) }), L(["phantom"], "{:auto*}", { createAtom: (e5, t2, i2, n2) => new si(e5, t2[1], n2, { isInvisible: true, style: i2 }) }), L("not", "{:math}", { createAtom: (e5, t2, i2, n2) => {
  if (t2.length < 1 || null === t2[0])
    return new nt("mrel", n2, { command: e5, style: i2, value: "\uE020" });
  const r2 = t2[0];
  return new ot([new ai(e5, "\uE020", n2, { align: "right", style: i2, boxType: "mrel" }), ...r2], n2, { boxType: "mrel", captureSelection: true, command: "\\not", serialize: (e6, t3) => {
    const i3 = nt.serialize(r2, t3);
    return 1 !== i3.length || /[a-zA-Z]/.test(i3) ? `\\not{${i3}}` : "\\not" + i3;
  } });
} }), L(["ne", "neq"], "", { createAtom: (e5, t2, i2, n2) => new ot([new ai(e5, "\uE020", n2, { align: "right", style: i2, boxType: "mrel" }), new nt("mrel", n2, { style: i2, value: "=" })], n2, { boxType: "mrel", captureSelection: true, serialize: () => e5, command: e5 }) }), L("rlap", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ai(e5, t2[0], n2, { align: "right", style: i2 }) }), L("llap", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ai(e5, t2[0], n2, { style: i2 }) }), L("mathllap", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ai(e5, t2[0], n2, { style: i2 }) }), L("mathrlap", "{:auto}", { createAtom: (e5, t2, i2, n2) => new ai(e5, t2[0], n2, { align: "right", style: i2 }) });
var bi = { acute: 714, grave: 715, dot: 729, ddot: 168, mathring: 730, tilde: 126, bar: 713, breve: 728, check: 711, hat: 94, vec: 8407 };
function vi(e5) {
  for (const t2 of e5)
    for (const e6 of t2)
      if (e6.length > 0)
        return false;
  return true;
}
L(Object.keys(bi), "{body:auto}", { createAtom: (e5, t2, i2, n2) => new Pt(e5, t2[0], n2, { accentChar: bi[e5.slice(1)], style: i2 }) }), L(["widehat", "widecheck", "widetilde"], "{body:auto}", { createAtom: (e5, t2, i2, n2) => {
  const r2 = S(t2[0]);
  return new Pt(e5, t2[0], n2, { style: i2, svgAccent: e5.slice(1) + (r2.length > 5 ? "4" : ["1", "1", "2", "2", "3", "3"][r2.length]) });
} }), L(["overarc", "overparen", "wideparen"], "{body:auto}", { createAtom: (e5, t2, i2, n2) => new Pt(e5, t2[0], n2, { style: i2, svgAccent: "overarc" }) }), L(["underarc", "underparen"], "{body:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { body: t2[0], style: i2, svgBelow: "underarc" }) }), L("utilde", "{body:auto}", { createAtom: (e5, t2, i2, n2) => {
  const r2 = S(t2[0]), a2 = "widetilde" + (r2.length > 5 ? "4" : ["1", "1", "2", "2", "3", "3"][r2.length]);
  return new oi(e5, n2, { body: t2[0], svgBelow: a2, style: i2, boxType: yi(t2[0]) });
} }), L("^", "{:string}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new nt("mord", n2, { command: e5, isFunction: false, limits: "adjacent", style: i2, value: t2[0] && null !== (r2 = { a: "\xE2", e: "\xEA", i: "\xEE", o: "\xF4", u: "\xFB", A: "\xC2", E: "\xCA", I: "\xCE", O: "\xD4", U: "\xDB" }[t2[0]]) && void 0 !== r2 ? r2 : "^" });
} }), L("`", "{:string}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new nt("mord", n2, { command: e5, isFunction: false, limits: "adjacent", style: i2, value: t2[0] && null !== (r2 = { a: "\xE0", e: "\xE8", i: "\xEC", o: "\xF2", u: "\xF9", A: "\xC0", E: "\xC8", I: "\xCC", O: "\xD2", U: "\xD9" }[t2[0]]) && void 0 !== r2 ? r2 : "`" });
} }), L("'", "{:string}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new nt("mord", n2, { command: e5, isFunction: false, limits: "adjacent", style: i2, value: t2[0] && null !== (r2 = { a: "\xE1", e: "\xE9", i: "\xED", o: "\xF3", u: "\xFA", A: "\xC1", E: "\xC9", I: "\xCD", O: "\xD3", U: "\xDA" }[t2[0]]) && void 0 !== r2 ? r2 : "^" });
} }), L("~", "{:string}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new nt("mord", n2, { command: e5, isFunction: false, limits: "adjacent", style: i2, value: t2[0] && null !== (r2 = { n: "\xF1", N: "\xD1", a: "\xE3", o: "\xF5", A: "\xC3", O: "\xD5" }[t2[0]]) && void 0 !== r2 ? r2 : "\xB4" });
} }), L("c", "{:string}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  return new nt("mord", n2, { command: e5, isFunction: false, limits: "adjacent", style: i2, value: t2[0] && null !== (r2 = { c: "\xE7", C: "\xC7" }[t2[0]]) && void 0 !== r2 ? r2 : "" });
} }), L("enclose", "{notation:string}[style:string]{body:auto}", { createAtom: (e5, t2, i2, n2) => {
  var r2;
  const a2 = { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", backgroundcolor: "transparent", padding: "auto", shadow: "auto", svgStrokeStyle: void 0, borderStyle: void 0, style: i2 };
  if (t2[1]) {
    const e6 = t2[1].split(/,(?![^(]*\)(?:(?:[^(]*\)){2})*[^"]*$)/);
    for (const t3 of e6) {
      const e7 = t3.match(/\s*(\S+)\s+(\S+)\s+(.*)/);
      if (e7)
        a2.strokeWidth = e7[1], a2.strokeStyle = e7[2], a2.strokeColor = e7[3];
      else {
        const e8 = t3.match(/\s*([a-z]*)\s*=\s*"(.*)"/);
        e8 && ("mathbackground" === e8[1] ? a2.backgroundcolor = e8[2] : "mathcolor" === e8[1] ? a2.strokeColor = e8[2] : "padding" === e8[1] ? a2.padding = e8[2] : "shadow" === e8[1] && (a2.shadow = e8[2]));
      }
    }
    "dashed" === a2.strokeStyle ? a2.svgStrokeStyle = "5,5" : "dotted" === a2.strokeStyle && (a2.svgStrokeStyle = "1,5");
  }
  a2.borderStyle = `${a2.strokeWidth} ${a2.strokeStyle} ${a2.strokeColor}`;
  const o2 = {};
  return (null !== (r2 = t2[0]) && void 0 !== r2 ? r2 : "").split(/[, ]/).filter((e6) => e6.length > 0).forEach((e6) => {
    o2[e6.toLowerCase()] = true;
  }), new Qt(e5, t2[2], o2, n2, a2);
} }), L("cancel", "{body:auto}", { createAtom: (e5, t2, i2, n2) => new Qt(e5, t2[0], { updiagonalstrike: true }, n2, { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", borderStyle: "1px solid currentColor", backgroundcolor: "transparent", padding: "auto", shadow: "auto", style: i2 }) }), L("bcancel", "{body:auto}", { createAtom: (e5, t2, i2, n2) => new Qt(e5, t2[0], { downdiagonalstrike: true }, n2, { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", borderStyle: "1px solid currentColor", backgroundcolor: "transparent", padding: "auto", shadow: "auto", style: i2 }) }), L("xcancel", "{body:auto}", { createAtom: (e5, t2, i2, n2) => new Qt(e5, t2[0], { updiagonalstrike: true, downdiagonalstrike: true }, n2, { strokeColor: "currentColor", strokeWidth: "", strokeStyle: "solid", borderStyle: "1px solid currentColor", backgroundcolor: "transparent", padding: "auto", shadow: "auto", style: i2 }) }), M("math", "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { mathstyleName: "textstyle" }))), M("displaymath", "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { mathstyleName: "textstyle" }))), N("array", "{columns:colspec}", (e5, t2, i2, n2, r2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { columns: r2[0], mathstyleName: "textstyle" }))), N(["equation", "equation*", "subequations"], "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { columns: [{ align: "c" }] }))), N("multline", "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { columns: [{ align: "m" }] }))), N(["align", "align*", "aligned", "eqnarray"], "", (e5, t2, i2, n2) => {
  let r2 = 0;
  vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)], [new nt("first", e5), new Mt(e5)]]]);
  for (const e6 of i2)
    r2 = Math.max(r2, e6.length);
  const a2 = [{ gap: 0 }, { align: "r" }, { gap: 0.25 }, { align: "l" }];
  let o2 = 2;
  for (; o2 < r2; )
    a2.push({ gap: 1 }), a2.push({ align: "r" }), a2.push({ gap: 0.25 }), a2.push({ align: "l" }), o2 += 2;
  return a2.push({ gap: 0 }), new Bt(e5, t2, i2, n2, { arraycolsep: 0, columns: a2, colSeparationType: "align", jot: 0.3, minColumns: 2 });
}), N("split", "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)], [new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { columns: [{ align: "r" }, { align: "l" }], minColumns: 2 }))), N(["gather", "gathered"], "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { columns: [{ gap: 0.25 }, { align: "c" }, { gap: 0 }], colSeparationType: "gather" }))), N(["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "matrix*", "pmatrix*", "bmatrix*", "Bmatrix*", "vmatrix*", "Vmatrix*"], "[columns:colspec]", (e5, t2, i2, n2, r2) => {
  var a2;
  vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]);
  let o2 = ".", s2 = ".";
  switch (t2) {
    case "pmatrix":
    case "pmatrix*":
      o2 = "(", s2 = ")";
      break;
    case "bmatrix":
    case "bmatrix*":
      o2 = "[", s2 = "]";
      break;
    case "Bmatrix":
    case "Bmatrix*":
      o2 = "\\lbrace", s2 = "\\rbrace";
      break;
    case "vmatrix":
    case "vmatrix*":
      o2 = "\\vert", s2 = "\\vert";
      break;
    case "Vmatrix":
    case "Vmatrix*":
      o2 = "\\Vert", s2 = "\\Vert";
      break;
    case "matrix":
    case "matrix*":
      o2 = ".", s2 = ".";
  }
  return new Bt(e5, t2, i2, n2, { mathstyleName: "textstyle", leftDelim: o2, rightDelim: s2, columns: null !== (a2 = r2[0]) && void 0 !== a2 ? a2 : [{ align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }] });
}), N(["smallmatrix", "smallmatrix*"], "[columns:colspec]", (e5, t2, i2, n2, r2) => {
  var a2;
  return vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { mathstyleName: "scriptstyle", columns: null !== (a2 = r2[0]) && void 0 !== a2 ? a2 : [{ align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }, { align: "c" }], colSeparationType: "small", arraystretch: 0.5 });
}), N(["cases", "dcases"], "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { mathstyleName: "dcases" === t2 ? "displaystyle" : "textstyle", arraystretch: 1.2, leftDelim: "\\lbrace", rightDelim: ".", columns: [{ align: "l" }, { gap: 1 }, { align: "l" }] }))), N("rcases", "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { arraystretch: 1.2, leftDelim: ".", rightDelim: "\\rbrace", columns: [{ align: "l" }, { gap: 1 }, { align: "l" }] }))), M("center", "", (e5, t2, i2, n2) => (vi(i2) && (i2 = [[[new nt("first", e5), new Mt(e5)]]]), new Bt(e5, t2, i2, n2, { columns: [{ align: "c" }] }))), L(["overrightarrow", "overleftarrow", "Overrightarrow", "overleftharpoon", "overrightharpoon", "overleftrightarrow", "overlinesegment", "overgroup"], "{:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { body: t2[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mrel", style: i2, svgAbove: e5.slice(1) }) }), L("overbrace", "{:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { body: t2[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mord", style: i2, svgAbove: e5.slice(1) }) }), L(["underrightarrow", "underleftarrow", "underleftrightarrow", "underlinesegment", "undergroup"], "{:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { body: t2[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mrel", style: i2, svgBelow: e5.slice(1) }) }), L(["underbrace"], "{:auto}", { createAtom: (e5, t2, i2, n2) => new oi(e5, n2, { body: t2[0], skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, boxType: "mord", style: i2, svgBelow: e5.slice(1) }) }), L(["xrightarrow", "xleftarrow", "xRightarrow", "xLeftarrow", "xleftharpoonup", "xleftharpoondown", "xrightharpoonup", "xrightharpoondown", "xlongequal", "xtwoheadleftarrow", "xtwoheadrightarrow", "xleftrightarrow", "xLeftrightarrow", "xrightleftharpoons", "xleftrightharpoons", "xhookleftarrow", "xhookrightarrow", "xmapsto", "xtofrom", "xrightleftarrows", "xrightequilibrium", "xleftequilibrium"], "[:auto]{:auto}", { createAtom: (e5, t2, i2, n2) => {
  var r2, a2;
  return new oi(e5, n2, { style: i2, svgBody: e5.slice(1), above: 0 === (null === (r2 = t2[1]) || void 0 === r2 ? void 0 : r2.length) ? void 0 : t2[1], below: null !== (a2 = t2[0]) && void 0 !== a2 ? a2 : null, skipBoundary: false, supsubPlacement: "over-under", paddedBody: true, paddedLabels: true, boxType: "mrel", serialize: (t3, i3) => e5 + (t3.hasEmptyBranch("below") ? "" : `[${t3.belowToLatex(i3)}]`) + `{${t3.aboveToLatex(i3)}}` });
} }), L(["arccos", "arcsin", "arctan", "arctg", "arcctg", "arg", "ch", "cos", "cosh", "cot", "coth", "ctg", "cth", "cotg", "csc", "cosec", "deg", "dim", "exp", "hom", "inf", "ker", "lg", "lb", "lg", "ln", "log", "Pr", "sec", "sh", "sin", "sinh", "sup", "tan", "tanh", "tg", "th"], "", { isFunction: true, createAtom: (e5, t2, i2, n2) => new ri(e5, e5.slice(1), n2, { limits: "adjacent", isFunction: true, variant: "main", variantStyle: "up", style: i2 }) }), L(["liminf", "limsup"], "", { createAtom: (e5, t2, i2, n2) => new ri(e5, { "\\liminf": "lim inf", "\\limsup": "lim sup" }[e5], n2, { limits: "over-under", variant: "main", style: i2 }) }), L(["lim", "mod"], "", { createAtom: (e5, t2, i2, n2) => new ri(e5, e5.slice(1), n2, { limits: "over-under", variant: "main", style: i2 }) }), L(["det", "max", "min"], "", { isFunction: true, createAtom: (e5, t2, i2, n2) => new ri(e5, e5.slice(1), n2, { limits: "over-under", isFunction: true, variant: "main", style: i2 }) }), L("sqrt", "[index:auto]{radicand:auto}", { createAtom: (e5, t2, i2, n2) => new ui(e5, n2, { body: t2[1], index: t2[0], style: i2 }) }), L(["frac", "dfrac", "tfrac", "cfrac", "binom", "dbinom", "tbinom"], "{numerator}{denominator}", { createAtom: (e5, t2, i2, n2) => {
  const r2 = { style: i2 };
  switch (e5) {
    case "\\dfrac":
    case "\\frac":
    case "\\tfrac":
      r2.hasBarLine = true;
      break;
    case "\\atopfrac":
      r2.hasBarLine = false;
      break;
    case "\\dbinom":
    case "\\binom":
    case "\\tbinom":
      r2.hasBarLine = false, r2.leftDelim = "(", r2.rightDelim = ")";
  }
  switch (e5) {
    case "\\dfrac":
    case "\\dbinom":
      r2.mathstyleName = "displaystyle";
      break;
    case "\\tfrac":
    case "\\tbinom":
      r2.mathstyleName = "textstyle";
      break;
    case "\\cfrac":
      r2.hasBarLine = true, r2.continuousFraction = true;
  }
  return new ei(e5, t2[0], t2[1], n2, r2);
} }), L(["brace", "brack"], "", { infix: true, createAtom: (e5, t2, i2, n2) => new ei(e5, t2[0], t2[1], n2, { hasBarLine: false, leftDelim: "\\brace" === e5 ? "\\lbrace" : "\\lbrack", rightDelim: "\\brace" === e5 ? "\\rbrace" : "\\rbrack", style: i2, serialize: (e6, t3) => Xe([e6.aboveToLatex(t3), e6.command, e6.belowToLatex(t3)]) }) }), L(["over", "atop", "choose"], "", { infix: true, createAtom: (e5, t2, i2, n2) => {
  let r2, a2;
  return "\\choose" === e5 && (r2 = "(", a2 = ")"), new ei(e5, t2[0], t2[1], n2, { hasBarLine: "\\over" === e5, leftDelim: r2, rightDelim: a2, style: i2, serialize: (e6, t3) => Xe([e6.aboveToLatex(t3), e6.command, e6.belowToLatex(t3)]) });
} }), L(["overwithdelims", "atopwithdelims"], "{numer:auto}{denom:auto}{left-delim:delim}{right-delim:delim}", { infix: true, createAtom: (e5, t2, i2, n2) => new ei(e5, t2[0], t2[1], n2, { leftDelim: t2[2], rightDelim: t2[3], hasBarLine: false, style: i2, serialize: (e6, t3) => `${e6.aboveToLatex(t3)} ${e6.command}${e6.leftDelim}${e6.rightDelim}${e6.belowToLatex(t3)}` }) }), L("pdiff", "{numerator}{denominator}", { createAtom: (e5, t2, i2, n2) => new ei(e5, t2[0], t2[1], n2, { hasBarLine: true, numerPrefix: "\u2202", denomPrefix: "\u2202", style: i2 }) }), L(["sum", "prod", "bigcup", "bigcap", "coprod", "bigvee", "bigwedge", "biguplus", "bigotimes", "bigoplus", "bigodot", "bigsqcup", "smallint", "intop"], "", { createAtom: (e5, t2, i2, n2) => new ri(e5, { coprod: "\u2210", bigvee: "\u22C1", bigwedge: "\u22C0", biguplus: "\u2A04", bigcap: "\u22C2", bigcup: "\u22C3", intop: "\u222B", prod: "\u220F", sum: "\u2211", bigotimes: "\u2A02", bigoplus: "\u2A01", bigodot: "\u2A00", bigsqcup: "\u2A06", smallint: "\u222B" }[e5.slice(1)], n2, { isExtensibleSymbol: true, limits: "auto", variant: "main", style: i2 }) });
var xi = { int: "\u222B", iint: "\u222C", iiint: "\u222D", oint: "\u222E", oiint: "\u222F", oiiint: "\u2230", intclockwise: "\u2231", varointclockwise: "\u2232", ointctrclockwise: "\u2233", intctrclockwise: "\u2A11", sqcup: "\u2294", sqcap: "\u2293", uplus: "\u228E", wr: "\u2240", amalg: "\u2A3F", Cap: "\u22D2", Cup: "\u22D3", doublecap: "\u22D2", doublecup: "\u22D3" };
function ki(e5, t2, i2) {
  return i2 ? function(e6, t3) {
    if (!t3)
      return "";
    if ("string" == typeof t3)
      return t3;
    if (!e6 || void 0 === t3.after)
      return t3.value;
    let i3 = false, n2 = false, r2 = false, a2 = false, o2 = false, s2 = false, l2 = false, u2 = false, c2 = false, d2 = false, h2 = false, m2 = false, f2 = false, g2 = false, y2 = false, b2 = e6[0], v2 = 0;
    for (; b2 && /msubsup|placeholder/.test(b2.type); )
      v2 += 1, b2 = e6[v2];
    return i3 = !b2 || "first" === b2.type, b2 && (g2 = "text" === b2.mode, n2 = !g2 && "mord" === b2.type && p.test(b2.value), r2 = !g2 && "mord" === b2.type && /\d+$/.test(b2.value), a2 = !g2 && b2.isFunction, o2 = "genfrac" === b2.type, s2 = "surd" === b2.type, l2 = "mbin" === b2.type, u2 = "mrel" === b2.type, c2 = "mop" === b2.type, d2 = "mpunct" === b2.type || "minner" === b2.type, h2 = "array" === b2.type, m2 = "mopen" === b2.type, f2 = "mclose" === b2.type || "leftright" === b2.type, y2 = "space" === b2.type), t3.after.includes("nothing") && i3 || t3.after.includes("letter") && n2 || t3.after.includes("digit") && r2 || t3.after.includes("function") && a2 || t3.after.includes("frac") && o2 || t3.after.includes("surd") && s2 || t3.after.includes("binop") && l2 || t3.after.includes("relop") && u2 || t3.after.includes("operator") && c2 || t3.after.includes("punct") && d2 || t3.after.includes("array") && h2 || t3.after.includes("openfence") && m2 || t3.after.includes("closefence") && f2 || t3.after.includes("text") && g2 || t3.after.includes("space") && y2 ? t3.value : "";
  }(e5, i2[t2]) : "";
}
L(Object.keys(xi), "", { createAtom: (e5, t2, i2, n2) => new ri(e5, xi[e5.slice(1)], n2, { limits: "adjacent", isExtensibleSymbol: true, style: i2, variant: { "\u22D2": "ams", "\u22D3": "ams" }[xi[e5.slice(1)]] }) }), L(["Re", "Im"], "", { createAtom: (e5, t2, i2, n2) => new ri(e5, { "\\Re": "\u211C", "\\Im": "\u2111" }[e5], n2, { limits: "adjacent", style: i2, isFunction: true, variant: "fraktur" }) }), L("middle", "{:delim}", { createAtom: (e5, t2, i2, n2) => new Xt(e5, t2[0], n2, { size: 1, style: i2 }) }), y("0123456789/@.?!"), b(65, 90), b(97, 122), y([["\\forall", 8704], ["\\exists", 8707], ["\\nexists", 8708, "mord", "ams"], ["\\mid", 8739, "mrel"], ["\\top", 8868], ["\\bot", 8869]]), y([["\\sharp", 9839], ["\\flat", 9837], ["\\natural", 9838], ["\\#", 35], ["\\&", 38], ["\\clubsuit", 9827], ["\\heartsuit", 9825], ["\\spadesuit", 9824], ["\\diamondsuit", 9826], ["\\parallelogram", 9649]]), y([["\\backslash", 92], ["\\nabla", 8711], ["\\partial", 8706], ["\\ell", 8467], ["\\hbar", 8463], ["\\Q", 81, "mord", "double-struck"], ["\\C", 67, "mord", "double-struck"], ["\\P", 80, "mord", "double-struck"], ["\\pounds", 163], ["\\euro", 8364]]), y([["\\rightarrow", 8594], ["\\to", 8594], ["\\leftarrow", 8592], ["\\gets", 8592], ["\\Rightarrow", 8658], ["\\Leftarrow", 8656], ["\\longrightarrow", 10230], ["\\longleftarrow", 10229], ["\\Longrightarrow", 10233], ["\\implies", 10233], ["\\Longleftarrow", 10232], ["\\impliedby", 10232], ["\\longleftrightarrow", 10231], ["\\biconditional", 10231], ["\\Longleftrightarrow", 10234], ["\\mapsto", 8614], ["\\longmapsto", 10236], ["\\uparrow", 8593], ["\\downarrow", 8595], ["\\Uparrow", 8657], ["\\Downarrow", 8659], ["\\updownarrow", 8597], ["\\Updownarrow", 8661], ["\\hookrightarrow", 8618], ["\\hookleftarrow", 8617], ["\\rightharpoonup", 8640], ["\\leftharpoonup", 8636], ["\\rightharpoondown", 8641], ["\\leftharpoondown", 8637], ["\\searrow", 8600], ["\\nearrow", 8599], ["\\swarrow", 8601], ["\\nwarrow", 8598], ["\\originalof", 8886], ["\\laplace", 8886], ["\\imageof", 8887], ["\\Laplace", 8887]], "mrel"), y([["\\lbrace", 123, "mopen"], ["\\rbrace", 125, "mclose"], ["\\lparen", 40, "mopen"], ["\\rparen", 41, "mclose"], ["\\langle", 10216, "mopen"], ["\\rangle", 10217, "mclose"], ["\\lfloor", 8970, "mopen"], ["\\rfloor", 8971, "mclose"], ["\\lceil", 8968, "mopen"], ["\\rceil", 8969, "mclose"], ["\\vert", 8739], ["\\lvert", 8739, "mopen"], ["\\rvert", 8739, "mclose"], ["\\|", 8741], ["\\Vert", 8741], ["\\mVert", 8741], ["\\lVert", 8741, "mopen"], ["\\rVert", 8741, "mclose"], ["\\lbrack", 91, "mopen"], ["\\rbrack", 93, "mclose"], ["\\{", 123, "mopen"], ["\\}", 125, "mclose"], ["(", 40, "mopen"], [")", 41, "mclose"], ["[", 91, "mopen"], ["]", 93, "mclose"], ["\\ulcorner", 9484, "mopen", "ams"], ["\\urcorner", 9488, "mclose", "ams"], ["\\llcorner", 9492, "mopen", "ams"], ["\\lrcorner", 9496, "mclose", "ams"], ["\\lgroup", 10222, "mopen"], ["\\rgroup", 10223, "mclose"], ["\\lmoustache", 9136, "mopen"], ["\\rmoustache", 9137, "mclose"]]), y([["\\dashrightarrow", 8674], ["\\dashleftarrow", 8672], ["\\Rrightarrow", 8667], ["\\Lleftarrow", 8666], ["\\leftrightarrows", 8646], ["\\rightleftarrows", 8644], ["\\curvearrowright", 8631], ["\\curvearrowleft", 8630], ["\\rightrightarrows", 8649], ["\\leftleftarrows", 8647], ["\\upuparrows", 8648], ["\\downdownarrows", 8650], ["\\vartriangle", 9651], ["\\triangleq", 8796], ["\\vartriangleleft", 8882], ["\\trianglelefteq", 8884], ["\\ntriangleleft", 8938], ["\\ntrianglelefteq", 8940], ["\\vartriangleright", 8883], ["\\trianglerighteq", 8885], ["\\ntriangleright", 8939], ["\\ntrianglerighteq", 8941], ["\\blacktriangleleft", 9664], ["\\blacktriangleright", 9654], ["\\leftarrowtail", 8610], ["\\rightarrowtail", 8611], ["\\looparrowright", 8620], ["\\looparrowleft", 8619], ["\\twoheadleftarrow", 8606], ["\\twoheadrightarrow", 8608], ["\\rightleftharpoons", 8652], ["\\leftrightharpoons", 8651], ["\\Rsh", 8625], ["\\Lsh", 8624], ["\\circlearrowright", 8635], ["\\circlearrowleft", 8634], ["\\restriction", 8638], ["\\upharpoonright", 8638], ["\\upharpoonleft", 8639], ["\\downharpoonright", 8642], ["\\downharpoonleft", 8643], ["\\rightsquigarrow", 8669], ["\\leadsto", 8669], ["\\leftrightsquigarrow", 8621], ["\\multimap", 8888], ["\\nrightarrow", 8603], ["\\nleftarrow", 8602], ["\\nRightarrow", 8655], ["\\nLeftarrow", 8653], ["\\nleftrightarrow", 8622], ["\\nLeftrightarrow", 8654], ["\\shortparallel", 8741], ["\\nless", 8814], ["\\nleqslant", 57360], ["\\lneq", 10887], ["\\lneqq", 8808], ["\\nleqq", 57361], ["\\lvertneqq", 57356], ["\\lnsim", 8934], ["\\lnapprox", 10889], ["\\nprec", 8832], ["\\npreceq", 8928], ["\\precnsim", 8936], ["\\precnapprox", 10937], ["\\nsim", 8769], ["\\nshortmid", 57350], ["\\nmid", 8740], ["\\nvdash", 8876], ["\\nvDash", 8877], ["\\ngtr", 8815], ["\\ngeqslant", 57359], ["\\ngeqq", 57358], ["\\gneq", 10888], ["\\gneqq", 8809], ["\\gvertneqq", 57357], ["\\gnsim", 8935], ["\\gnapprox", 10890], ["\\nsucc", 8833], ["\\nsucceq", 8929], ["\\succnsim", 8937], ["\\succnapprox", 10938], ["\\ncong", 8774], ["\\nshortparallel", 57351], ["\\nparallel", 8742], ["\\nVDash", 8879], ["\\nsupseteqq", 57368], ["\\supsetneq", 8843], ["\\varsupsetneq", 57371], ["\\supsetneqq", 10956], ["\\varsupsetneqq", 57369], ["\\nVdash", 8878], ["\\precneqq", 10933], ["\\succneqq", 10934], ["\\nsubseteqq", 57366], ["\\leqslant", 10877], ["\\geqslant", 10878], ["\\gtrsim", 8819], ["\\approxeq", 8778], ["\\thickapprox", 8776], ["\\lessapprox", 10885], ["\\gtrapprox", 10886], ["\\precapprox", 10935], ["\\succapprox", 10936], ["\\thicksim", 8764], ["\\succsim", 8831], ["\\precsim", 8830], ["\\backsim", 8765], ["\\eqsim", 8770], ["\\backsimeq", 8909], ["\\lesssim", 8818], ["\\nleq", 8816], ["\\ngeq", 8817], ["\\smallsmile", 8995], ["\\smallfrown", 8994], ["\\leqq", 8806], ["\\eqslantless", 10901], ["\\lll", 8920], ["\\lessgtr", 8822], ["\\lesseqgtr", 8922], ["\\lesseqqgtr", 10891], ["\\risingdotseq", 8787], ["\\fallingdotseq", 8786], ["\\subseteqq", 10949], ["\\Subset", 8912], ["\\sqsubset", 8847], ["\\preccurlyeq", 8828], ["\\curlyeqprec", 8926], ["\\vDash", 8872], ["\\Vvdash", 8874], ["\\bumpeq", 8783], ["\\Bumpeq", 8782], ["\\geqq", 8807], ["\\eqslantgtr", 10902], ["\\ggg", 8921], ["\\gtrless", 8823], ["\\gtreqless", 8923], ["\\gtreqqless", 10892], ["\\supseteqq", 10950], ["\\Supset", 8913], ["\\sqsupset", 8848], ["\\succcurlyeq", 8829], ["\\curlyeqsucc", 8927], ["\\Vdash", 8873], ["\\shortmid", 8739], ["\\between", 8812], ["\\pitchfork", 8916], ["\\varpropto", 8733], ["\\backepsilon", 8717], ["\\llless", 8920], ["\\gggtr", 8921], ["\\doteqdot", 8785], ["\\Doteq", 8785], ["\\eqcirc", 8790], ["\\circeq", 8791], ["\\therefore", 8756], ["\\because", 8757]], "mrel", "ams"), y([["+", 43], ["-", 8722], ["\u2212", 8722], ["\\pm", 177], ["\\mp", 8723], ["*", 8727], ["\\times", 215], ["\\div", 247], ["\\divides", 8739], ["\\cdot", 8901], ["\\cap", 8745], ["\\cup", 8746], ["\\setminus", 8726], ["\\land", 8743], ["\\wedge", 8743], ["\\lor", 8744], ["\\vee", 8744], ["\\circ", 8728], ["\\bigcirc", 9711], ["\\bullet", 8729], ["\\oplus", 8853], ["\\ominus", 8854], ["\\otimes", 8855], ["\\odot", 8857], ["\\oslash", 8856], ["\\bigtriangleup", 9651], ["\\bigtriangledown", 9661], ["\\triangleleft", 9667], ["\\triangleright", 9657], ["\\And", 38], ["\\dagger", 8224], ["\\dag", 8224], ["\\ddag", 8225], ["\\ddagger", 8225], ["\\ast", 8727], ["\\star", 8902], ["\\bigstar", 9733], ["\\diamond", 8900]], "mbin"), y([["\\lhd", 8882], ["\\rhd", 8883], ["\\lessdot", 8918], ["\\gtrdot", 8919], ["\\ltimes", 8905], ["\\rtimes", 8906], ["\\leftthreetimes", 8907], ["\\rightthreetimes", 8908], ["\\intercal", 8890], ["\\dotplus", 8724], ["\\doublebarwedge", 10846], ["\\divideontimes", 8903], ["\\centerdot", 8901], ["\\smallsetminus", 8726], ["\\barwedge", 8892], ["\\veebar", 8891], ["\\nor", 8891], ["\\curlywedge", 8911], ["\\curlyvee", 8910], ["\\boxminus", 8863], ["\\boxplus", 8862], ["\\boxtimes", 8864], ["\\boxdot", 8865], ["\\circleddash", 8861], ["\\circledast", 8859], ["\\circledcirc", 8858], ["\\unlhd", 8884], ["\\unrhd", 8885]], "mbin", "ams"), y([["\\surd", 8730], ["\\infty", 8734], ["\\prime", 8242], ["\\doubleprime", 8243], ["\\angle", 8736], ["`", 8216], ["\\$", 36], ["\\%", 37], ["\\_", 95], ["\\alpha", 945], ["\\beta", 946], ["\\gamma", 947], ["\\delta", 948], ["\\epsilon", 1013], ["\\varepsilon", 949], ["\\zeta", 950], ["\\eta", 951], ["\\theta", 952], ["\\vartheta", 977], ["\\iota", 953], ["\\kappa", 954], ["\\varkappa", 1008, "mord", "ams"], ["\\lambda", 955], ["\\mu", 956], ["\\nu", 957], ["\\xi", 958], ["\\omicron", 111], ["\\pi", 960], ["\\varpi", 982], ["\\rho", 961], ["\\varrho", 1009], ["\\sigma", 963], ["\\varsigma", 962], ["\\tau", 964], ["\\phi", 981], ["\\varphi", 966], ["\\upsilon", 965], ["\\chi", 967], ["\\psi", 968], ["\\omega", 969], ["\\Gamma", 915], ["\\Delta", 916], ["\\Theta", 920], ["\\Lambda", 923], ["\\Xi", 926], ["\\Pi", 928], ["\\Sigma", 931], ["\\Upsilon", 933], ["\\Phi", 934], ["\\Psi", 936], ["\\Omega", 937], ["\\digamma", 989, "mord", "ams"], ["\\emptyset", 8709]]), y([["=", 61], ["<", 60], ["\\lt", 60], [">", 62], ["\\gt", 62], ["\\le", 8804], ["\\leq", 8804], ["\\ge", 8805], ["\\geq", 8805], ["\\ll", 8810], ["\\gg", 8811], ["\\coloneq", 8788], ["\\measeq", 8797], ["\\eqdef", 8798], ["\\questeq", 8799], [":", 58], ["\\cong", 8773], ["\\equiv", 8801], ["\\prec", 8826], ["\\preceq", 10927], ["\\succ", 8827], ["\\succeq", 10928], ["\\perp", 8869], ["\\propto", 8733], ["\\Colon", 8759], ["\\smile", 8995], ["\\frown", 8994], ["\\sim", 8764], ["\\doteq", 8784], ["\\bowtie", 8904], ["\\Join", 8904], ["\\asymp", 8781], ["\\sqsubseteq", 8849], ["\\sqsupseteq", 8850], ["\\approx", 8776], ["\\~", 126], ["\\leftrightarrow", 8596], ["\\Leftrightarrow", 8660], ["\\models", 8872], ["\\vdash", 8866], ["\\dashv", 8867], ["\\roundimplies", 10608], ["\\in", 8712], ["\\notin", 8713], ["\\ni", 8715], ["\\owns", 8715], ["\\subset", 8834], ["\\supset", 8835], ["\\subseteq", 8838], ["\\supseteq", 8839], ["\\differencedelta", 8710], ["\\mvert", 8739], ["\\parallel", 8741], ["\\simeq", 8771]], "mrel"), y([["\\lnot", 172], ["\\neg", 172], ["\\triangle", 9651], ["\\subsetneq", 8842], ["\\varsubsetneq", 57370], ["\\subsetneqq", 10955], ["\\varsubsetneqq", 57367], ["\\nsubset", 8836], ["\\nsupset", 8837], ["\\nsubseteq", 8840], ["\\nsupseteq", 8841]], "mrel", "ams"), y([["\\wp", 8472], ["\\aleph", 8501]]), y([["\\blacktriangle", 9650], ["\\hslash", 8463], ["\\Finv", 8498], ["\\Game", 8513], ["\\eth", 240], ["\\mho", 8487], ["\\Bbbk", 107], ["\\yen", 165], ["\\square", 9633], ["\\Box", 9633], ["\\blacksquare", 9632], ["\\circledS", 9416], ["\\circledR", 174], ["\\triangledown", 9661], ["\\blacktriangledown", 9660], ["\\checkmark", 10003], ["\\diagup", 9585], ["\\measuredangle", 8737], ["\\sphericalangle", 8738], ["\\backprime", 8245], ["\\backdoubleprime", 8246], ["\\Diamond", 9674], ["\\lozenge", 9674], ["\\blacklozenge", 10731], ["\\varnothing", 8709], ["\\complement", 8705], ["\\maltese", 10016], ["\\beth", 8502], ["\\daleth", 8504], ["\\gimel", 8503]], "mord", "ams"), y([["\\ ", 160], ["~", 160], ["\\space", 160]], "space"), L(["!", ",", ":", ";", "enskip", "enspace", "quad", "qquad"], "", { createAtom: (e5, t2, i2, n2) => new st(e5, i2, n2) }), y([["\\colon", 58], ["\\cdotp", 8901], ["\\vdots", 8942, "mord"], ["\\ldotp", 46], [",", 44], [";", 59]], "mpunct"), y([["\\cdots", 8943], ["\\ddots", 8945], ["\\ldots", 8230], ["\\mathellipsis", 8230]], "minner"), y([["\\/", 47], ["|", 8739, "mord"], ["\\imath", 305], ["\\jmath", 567], ["\\degree", 176], ["'", 8242], ['"', 8221]]);
var _i = { "&": "\\&", "%": "\\%", "''": "^{\\doubleprime}", alpha: "\\alpha", delta: "\\delta", Delta: "\\Delta", pi: "\\pi", Pi: "\\Pi", theta: "\\theta", Theta: "\\Theta", ii: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\imaginaryI" }, jj: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\imaginaryJ" }, ee: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\exponentialE" }, nabla: "\\nabla", grad: "\\nabla", del: "\\partial", infty: "\\infty", "\u221E": "\\infty", oo: { after: "nothing+digit+frac+surd+binop+relop+punct+array+openfence+closefence+space", value: "\\infty" }, "\u2211": "\\sum", sum: "\\sum_{#?}^{#?}", int: "\\int_{#?}^{#?}", prod: "\\prod_{#?}^{#?}", sqrt: "\\sqrt{#?}", "\u2206": "\\differentialD", "\u2202": "\\differentialD", arcsin: "\\arcsin", arccos: "\\arccos", arctan: "\\arctan", sin: "\\sin", sinh: "\\sinh", cos: "\\cos", cosh: "\\cosh", tan: "\\tan", tanh: "\\tanh", sec: "\\sec", csc: "\\csc", cot: "\\cot", log: "\\log", ln: "\\ln", exp: "\\exp", lim: "\\lim_{#?}", dx: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\differentialD x" }, dy: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\differentialD y" }, dt: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\differentialD t" }, AA: "\\forall", EE: "\\exists", "!EE": "\\nexists", "&&": "\\land", xin: { after: "nothing+text+relop+punct+openfence+space", value: "x \\in" }, in: { after: "nothing+letter+closefence", value: "\\in" }, "!in": "\\notin", NN: "\\mathbb{N}", ZZ: "\\Z", QQ: "\\Q", RR: "\\R", CC: "\\C", xx: "\\times", "+-": "\\pm", "\u2260": "\\ne", "!=": "\\ne", "\u2265": "\\ge", ">=": "\\ge", "\u2264": "\\le", "<=": "\\le", "<<": "\\ll", ">>": "\\gg", "~~": "\\approx", "\u2248": "\\approx", "?=": "\\questeq", "\xF7": "\\div", "\xAC": "\\neg", ":=": "\\coloneq", "::": "\\Colon", "(:": "\\langle", ":)": "\\rangle", beta: "\\beta", chi: "\\chi", epsilon: "\\epsilon", varepsilon: "\\varepsilon", eta: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\eta" }, gamma: "\\gamma", Gamma: "\\Gamma", iota: "\\iota", kappa: "\\kappa", lambda: "\\lambda", Lambda: "\\Lambda", mu: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\mu" }, nu: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\nu" }, \u00B5: "\\mu", phi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\phi" }, Phi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\Phi" }, varphi: "\\varphi", psi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\psi" }, Psi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\Psi" }, rho: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\rho" }, sigma: "\\sigma", Sigma: "\\Sigma", tau: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\tau" }, vartheta: "\\vartheta", upsilon: "\\upsilon", xi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space", value: "\\xi" }, Xi: { after: "nothing+digit+function+frac+surd+binop+relop+punct+array+openfence+closefence+space+text", value: "\\Xi" }, zeta: "\\zeta", omega: "\\omega", Omega: "\\Omega", \u03A9: "\\omega", forall: "\\forall", exists: "\\exists", "!exists": "\\nexists", ":.": "\\therefore", liminf: "\\liminf_{#?}", limsup: "\\limsup_{#?}", argmin: "\\operatorname*{arg~min}_{#?}", argmax: "\\operatorname*{arg~max}_{#?}", det: "\\det", mod: "\\mod", max: "\\max", min: "\\min", erf: "\\operatorname{erf}", erfc: "\\operatorname{erfc}", bessel: "\\operatorname{bessel}", mean: "\\operatorname{mean}", median: "\\operatorname{median}", fft: "\\operatorname{fft}", lcm: "\\operatorname{lcm}", gcd: "\\operatorname{gcd}", randomReal: "\\operatorname{randomReal}", randomInteger: "\\operatorname{randomInteger}", Re: "\\operatorname{Re}", Im: "\\operatorname{Im}", mm: { after: "nothing+digit+operator", value: "\\operatorname{mm}" }, cm: { after: "nothing+digit+operator", value: "\\operatorname{cm}" }, km: { after: "nothing+digit+operator", value: "\\operatorname{km}" }, kg: { after: "nothing+digit+operator", value: "\\operatorname{kg}" }, "...": "\\ldots", "+...": "+\\cdots", "-...": "-\\cdots", "->...": "\\to\\cdots", "->": "\\to", "|->": "\\mapsto", "-->": "\\longrightarrow", "<--": "\\longleftarrow", "=>": "\\Rightarrow", "==>": "\\Longrightarrow", "<=>": "\\Leftrightarrow", "<->": "\\leftrightarrow", "(.)": "\\odot", "(+)": "\\oplus", "(/)": "\\oslash", "(*)": "\\otimes", "(-)": "\\ominus", "||": "\\Vert", "{": "\\{", "}": "\\}", "*": "\\cdot" };
function wi(e5, t2) {
  var i2;
  let n2 = null !== (i2 = null == t2 ? void 0 : t2.format) && void 0 !== i2 ? i2 : "auto";
  return "auto" === n2 && ([n2, e5] = function(e6) {
    if ((e6 = e6.trim()).length <= 1)
      return ["latex", e6];
    let t3;
    return [t3, e6] = Ai(e6), t3 ? ["latex", e6] : e6.startsWith("`") && e6.endsWith("`") ? ["ascii-math", e6 = e6.substring(1, e6.length - 1)] : e6.includes("\\") ? ["latex", e6] : /\$.+\$/.test(e6) ? ["latex", `\\text{${e6}}`] : [void 0, e6];
  }(e5)), "ascii-math" === n2 ? ["ascii-math", Si(e5 = (e5 = (e5 = (e5 = (e5 = (e5 = e5.replace(/\u2061/gu, "")).replace(/\u3016/gu, "{")).replace(/\u3017/gu, "}")).replace(/([^\\])sinx/g, "$1\\sin x")).replace(/([^\\])cosx/g, "$1\\cos x ")).replace(/\u2013/g, "-"), { inlineShortcuts: null == t2 ? void 0 : t2.inlineShortcuts })] : ["latex", e5];
}
function Si(e5, t2) {
  var i2, n2, r2;
  if (!e5)
    return "";
  let a2, o2 = false;
  const s2 = null !== (i2 = t2.inlineShortcuts) && void 0 !== i2 ? i2 : _i;
  if (o2 || !e5.startsWith("^") && !e5.startsWith("_") || (a2 = Mi(e5.slice(1), { inlineShortcuts: s2, noWrap: true }), e5 = e5[0] + "{" + a2.match + "}", e5 += Si(a2.rest, t2), o2 = true), !o2 && (a2 = e5.match(/^(sqrt|\u221A)(.*)/), a2) && (a2 = Mi(a2[2], { inlineShortcuts: s2, noWrap: true }), e5 = "\\sqrt{" + (null !== (n2 = a2.match) && void 0 !== n2 ? n2 : "\\placeholder{}") + "}", e5 += Si(a2.rest, t2), o2 = true), !o2 && (a2 = e5.match(/^(\\cbrt|\u221B)(.*)/), a2) && (a2 = Mi(a2[2], { inlineShortcuts: s2, noWrap: true }), e5 = "\\sqrt[3]{" + (null !== (r2 = a2.match) && void 0 !== r2 ? r2 : "\\placeholder{}") + "}", e5 += Si(a2.rest, t2), o2 = true), o2 || (a2 = e5.match(/^abs(.*)/), a2 && (a2 = Mi(a2[1], { inlineShortcuts: s2, noWrap: true }), e5 = "\\left|" + a2.match + "\\right|", e5 += Si(a2.rest, t2), o2 = true)), o2 || (a2 = e5.match(/^["\u201d\u201c](.*?)["\u201d\u201c](.*)/), a2 && (e5 = "\\text{" + a2[1] + "}", e5 += Si(a2[2], t2), o2 = true)), o2 || (a2 = e5.match(/^([^a-zA-Z\(\{\[\_\^\\\s"]+)(.*)/), a2 && (e5 = Ni(a2[1], s2), e5 += Si(a2[2], t2), o2 = true)), !o2 && /^([fgh])[^a-zA-Z]/.test(e5) && (a2 = Mi(e5.slice(1), { inlineShortcuts: s2, noWrap: true }), e5 = "(" === e5[1] ? e5[0] + "\\left(" + a2.match + "\\right)" : e5[0] + a2.match, e5 += Si(a2.rest, t2), o2 = true), o2 || (a2 = e5.match(/^([a-zA-Z]+)(.*)/), a2 && (e5 = Ni(a2[1], s2), e5 += Si(a2[2], t2), o2 = true)), !o2)
    if (a2 = Mi(e5, { inlineShortcuts: s2, noWrap: true }), a2.match && "/" === a2.rest[0]) {
      const i3 = Mi(a2.rest.slice(1), { inlineShortcuts: s2, noWrap: true });
      i3.match && (e5 = "\\frac{" + a2.match + "}{" + i3.match + "}" + Si(i3.rest, t2)), o2 = true;
    } else
      a2.match && (e5 = e5.startsWith("(") ? "\\left(" + a2.match + "\\right)" + Si(a2.rest, t2) : a2.match + Si(a2.rest, t2), o2 = true);
  return o2 || (a2 = e5.match(/^(\s+)(.*)$/), a2 && (e5 = " " + Si(a2[2], t2), o2 = true)), e5;
}
function Mi(e5, t2) {
  let i2 = "", n2 = e5 = e5.trim(), r2 = e5.charAt(0), a2 = { "(": ")", "{": "}", "[": "]" }[r2];
  if (a2) {
    let o2 = 1, s2 = 1;
    for (; s2 < e5.length && o2 > 0; )
      e5[s2] === r2 && o2++, e5[s2] === a2 && o2--, s2++;
    0 === o2 ? (t2.noWrap && "(" === r2 ? i2 = Si(e5.substring(1, s2 - 1), t2) : ("{" === r2 && "}" === a2 && (r2 = "\\{", a2 = "\\}"), i2 = "\\left" + r2 + Si(e5.substring(1, s2 - 1), t2) + "\\right" + a2), n2 = e5.slice(Math.max(0, s2))) : (i2 = e5.substring(1, s2), n2 = "");
  } else {
    let r3 = e5.match(/^([a-zA-Z]+)/);
    if (r3) {
      let i3 = ki(null, e5, t2.inlineShortcuts);
      if (i3)
        return i3 = i3.replace("_{#?}", ""), i3 = i3.replace("^{#?}", ""), { match: i3, rest: e5.slice(i3.length) };
    }
    if (r3 = e5.match(/^([a-zA-Z])/), r3)
      return { match: r3[1], rest: e5.slice(1) };
    if (r3 = e5.match(/^(-)?\d+(\.\d*)?/), r3)
      return { match: r3[0], rest: e5.slice(r3[0].length) };
    /^\\(left|right)/.test(e5) || (r3 = e5.match(/^(\\[a-zA-Z]+)/), r3 && (n2 = e5.slice(r3[1].length), i2 = r3[1]));
  }
  return { match: i2, rest: n2 };
}
function Ni(e5, t2) {
  let i2 = ki(null, e5, t2);
  return i2 ? (i2 = i2.replace("_{#?}", ""), i2 = i2.replace("^{#?}", ""), i2 += " ") : i2 = e5, i2;
}
var Li = [["\\[", "\\]"], ["\\(", "\\)"], ["$$", "$$"], ["$", "$"], ["\\begin{math}", "\\end{math}"], ["\\begin{displaymath}", "\\end{displaymath}"], ["\\begin{equation}", "\\end{equation}"], ["\\begin{equation*}", "\\end{equation*}"]];
function Ai(e5) {
  const t2 = e5.trim();
  for (const e6 of Li)
    if (t2.startsWith(e6[0]) && t2.endsWith(e6[1]))
      return [true, t2.substring(e6[0].length, t2.length - e6[1].length)];
  return [false, e5];
}
function Ci(e5, t2, i2) {
  let n2 = i2, r2 = 0;
  const a2 = e5.length;
  for (; n2 < t2.length; ) {
    const i3 = t2[n2];
    if (r2 <= 0 && t2.slice(n2, n2 + a2) === e5)
      return n2;
    "\\" === i3 ? n2++ : "{" === i3 ? r2++ : "}" === i3 && r2--, n2++;
  }
  return -1;
}
function Ei(e5, t2, i2, n2, r2 = "latex") {
  const a2 = [];
  for (const o2 of e5)
    if ("text" === o2.type) {
      const e6 = o2.data;
      let s2, l2 = true, u2 = 0;
      s2 = e6.indexOf(t2), -1 !== s2 && (u2 = s2, u2 > 0 && a2.push({ type: "text", data: e6.slice(0, u2) }), l2 = false);
      let c2 = false;
      for (; !c2; ) {
        if (l2) {
          if (s2 = e6.indexOf(t2, u2), -1 === s2) {
            c2 = true;
            break;
          }
          u2 !== s2 && a2.push({ type: "text", data: e6.slice(u2, s2) }), u2 = s2;
        } else {
          if (s2 = Ci(i2, e6, u2 + t2.length), -1 === s2) {
            c2 = true;
            break;
          }
          let o3 = e6.slice(u2 + t2.length, s2);
          "ascii-math" === r2 && ([, o3] = wi(o3, { format: "ascii-math" })), a2.push({ type: "math", data: o3, rawData: e6.slice(u2, s2 + i2.length), mathstyle: n2 }), u2 = s2 + i2.length;
        }
        l2 = !l2;
      }
      u2 < e6.length && a2.push({ type: "text", data: e6.slice(u2) });
    } else
      a2.push(o2);
  return a2;
}
function Di(e5, t2, i2) {
  let n2 = [{ type: "text", data: e5 }];
  return (null == t2 ? void 0 : t2.inline) && t2.inline.forEach(([e6, t3]) => {
    n2 = Ei(n2, e6, t3, "textstyle");
  }), (null == t2 ? void 0 : t2.display) && t2.display.forEach(([e6, t3]) => {
    n2 = Ei(n2, e6, t3, "displaystyle");
  }), (null == i2 ? void 0 : i2.inline) && i2.inline.forEach(([e6, t3]) => {
    n2 = Ei(n2, e6, t3, "textstyle", "ascii-math");
  }), (null == i2 ? void 0 : i2.display) && i2.display.forEach(([e6, t3]) => {
    n2 = Ei(n2, e6, t3, "displaystyle", "ascii-math");
  }), n2;
}
function Ti(e5, t2, n2, r2) {
  var a2;
  const o2 = function(e6, t3, n3, r3) {
    i();
    try {
      const i2 = t3.renderToMarkup(e6, { mathstyle: n3, format: "html" }), r4 = document.createElement("displaystyle" === n3 ? "div" : "span");
      return r4.setAttribute("aria-hidden", "true"), r4.innerHTML = t3.createHTML ? t3.createHTML(i2) : i2, r4;
    } catch (t4) {
      if (r3)
        return document.createTextNode(e6);
    }
    return null;
  }(e5, n2, t2 || "displaystyle", r2), s2 = null !== (a2 = n2.renderAccessibleContent) && void 0 !== a2 ? a2 : "";
  if (o2 && /\b(mathml|speakable-text)\b/i.test(s2)) {
    i();
    const t3 = document.createElement("span");
    if (/\bmathml\b/i.test(s2) && n2.renderToMathML && t3.append(function(e6, t4) {
      i();
      const n3 = document.createElement("span");
      try {
        const i2 = "<math xmlns='http://www.w3.org/1998/Math/MathML'>" + t4.renderToMathML(e6) + "</math>";
        n3.innerHTML = t4.createHTML ? t4.createHTML(i2) : i2;
      } catch (t5) {
        n3.textContent = e6;
      }
      return n3.className = "ML__sr-only", n3;
    }(e5, n2)), /\bspeakable-text\b/i.test(s2) && n2.renderToSpeakableText) {
      const i2 = document.createElement("span"), r3 = n2.renderToSpeakableText(e5, n2);
      i2.innerHTML = n2.createHTML ? n2.createHTML(r3) : r3, i2.className = "ML__sr-only", t3.append(i2);
    }
    return t3.append(o2), t3;
  }
  return o2;
}
function zi(e5, t2) {
  var n2, r2, a2;
  i();
  let o2 = null;
  if ((null === (n2 = t2.TeX) || void 0 === n2 ? void 0 : n2.processEnvironments) && /^\s*\\begin/.test(e5)) {
    o2 = document.createDocumentFragment();
    const i2 = Ti(e5, "", t2, true);
    i2 && o2.appendChild(i2);
  } else {
    if (!e5.trim())
      return null;
    const i2 = Di(e5, null === (r2 = t2.TeX) || void 0 === r2 ? void 0 : r2.delimiters, null === (a2 = t2.asciiMath) || void 0 === a2 ? void 0 : a2.delimiters);
    if (1 === i2.length && "text" === i2[0].type)
      return null;
    o2 = document.createDocumentFragment();
    for (const e6 of i2)
      if ("text" === e6.type)
        o2.appendChild(document.createTextNode(e6.data));
      else {
        const i3 = Ti(e6.data, "textstyle" === e6.mathstyle ? "textstyle" : "displaystyle", t2, true);
        i3 && o2.appendChild(i3);
      }
  }
  return o2;
}
function qi(e5, t2) {
  var i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2, p2, f2, g2, y2;
  if (1 === e5.childNodes.length && 3 === e5.childNodes[0].nodeType) {
    const o3 = null !== (i2 = e5.childNodes[0].textContent) && void 0 !== i2 ? i2 : "";
    if ((null === (n2 = t2.TeX) || void 0 === n2 ? void 0 : n2.processEnvironments) && /^\s*\\begin/.test(o3)) {
      e5.textContent = "";
      const i3 = Ti(o3, "", t2, true);
      return void (i3 && e5.append(i3));
    }
    const s3 = Di(o3, null === (r2 = t2.TeX) || void 0 === r2 ? void 0 : r2.delimiters, null === (a2 = t2.asciiMath) || void 0 === a2 ? void 0 : a2.delimiters);
    if (1 === s3.length && "math" === s3[0].type) {
      e5.textContent = "";
      const i3 = Ti(s3[0].data, "textstyle" === s3[0].mathstyle ? "textstyle" : "displaystyle", t2, true);
      return void (i3 && e5.append(i3));
    }
    if (1 === s3.length && "text" === s3[0].type)
      return;
  }
  for (let i3 = e5.childNodes.length - 1; i3 >= 0; i3--) {
    const n3 = e5.childNodes[i3];
    if (3 === n3.nodeType) {
      const e6 = zi(null !== (o2 = n3.textContent) && void 0 !== o2 ? o2 : "", t2);
      e6 && (i3 += e6.childNodes.length - 1, n3.replaceWith(e6));
    } else if (1 === n3.nodeType) {
      const i4 = n3, r3 = n3.nodeName.toLowerCase();
      if ("script" === r3) {
        const e6 = n3;
        let i5;
        if (null === (s2 = t2.processScriptTypePattern) || void 0 === s2 ? void 0 : s2.test(e6.type))
          i5 = null !== (l2 = e6.textContent) && void 0 !== l2 ? l2 : "";
        else if (null === (u2 = t2.processMathJSONScriptTypePattern) || void 0 === u2 ? void 0 : u2.test(e6.type))
          try {
            i5 = null === (c2 = t2.serializeToLatex) || void 0 === c2 ? void 0 : c2.call(t2, JSON.parse(null !== (d2 = e6.textContent) && void 0 !== d2 ? d2 : ""));
          } catch (e7) {
          }
        if (i5) {
          let n4 = "displaystyle";
          for (const t3 of e6.type.split(";")) {
            const [e7, i6] = t3.toLowerCase().split("=");
            "mode" === e7.trim() && (n4 = "display" === i6.trim() ? "displaystyle" : "textstyle");
          }
          const r4 = Ti(i5, n4, t2, true);
          r4 && e6.parentNode.replaceChild(r4, e6);
        }
      } else if (null !== (m2 = null === (h2 = t2.processClassPattern) || void 0 === h2 ? void 0 : h2.test(i4.className)) && void 0 !== m2 && m2 || !(null !== (f2 = null === (p2 = t2.skipTags) || void 0 === p2 ? void 0 : p2.includes(r3)) && void 0 !== f2 && f2 || null !== (y2 = null === (g2 = t2.ignoreClassPattern) || void 0 === g2 ? void 0 : g2.test(i4.className)) && void 0 !== y2 && y2))
        if (1 === e5.childNodes.length && 3 === e5.childNodes[0].nodeType) {
          const i5 = e5.textContent;
          e5.textContent = "";
          const n4 = Ti(null != i5 ? i5 : "", "displaystyle", t2, true);
          n4 && e5.append(n4);
        } else
          qi(i4, t2);
    }
  }
}
var Ii = { skipTags: ["math-field", "noscript", "style", "textarea", "pre", "code", "annotation", "annotation-xml"], processScriptType: "math/tex", processMathJSONScriptType: "math/json", ignoreClass: "tex2jax_ignore", processClass: "tex2jax_process", renderAccessibleContent: "mathml", asciiMath: { delimiters: { display: [["`", "`"]] } }, TeX: { processEnvironments: true, delimiters: { inline: [["\\(", "\\)"]], display: [["$$", "$$"], ["\\[", "\\]"]] } } };
function Fi(e5, t2) {
  var i2, n2, r2, a2;
  try {
    const o2 = { ...Ii, ...t2 };
    o2.ignoreClassPattern = new RegExp(null !== (i2 = o2.ignoreClass) && void 0 !== i2 ? i2 : ""), o2.processClassPattern = new RegExp(null !== (n2 = o2.processClass) && void 0 !== n2 ? n2 : ""), o2.processScriptTypePattern = new RegExp(null !== (r2 = o2.processScriptType) && void 0 !== r2 ? r2 : ""), o2.processMathJSONScriptTypePattern = new RegExp(null !== (a2 = o2.processMathJSONScriptType) && void 0 !== a2 ? a2 : ""), null !== o2.fontsDirectory && pi(o2.fontsDirectory), Ft(null, It, Ot(It).toString(36)), qi(e5, o2);
  } catch (e6) {
    Error;
  }
}
var Oi = [{ key: "left", command: "moveToPreviousChar" }, { key: "right", command: "moveToNextChar" }, { key: "up", command: "moveUp" }, { key: "down", command: "moveDown" }, { key: "shift+[ArrowLeft]", command: "extendSelectionBackward" }, { key: "shift+[ArrowRight]", command: "extendSelectionForward" }, { key: "shift+[ArrowUp]", command: "extendSelectionUpward" }, { key: "shift+[ArrowDown]", command: "extendSelectionDownward" }, { key: "[Backspace]", command: "deleteBackward" }, { key: "alt+[Delete]", command: "deleteBackward" }, { key: "[Delete]", command: "deleteForward" }, { key: "alt+[Backspace]", command: "deleteForward" }, { key: "alt+[ArrowLeft]", command: "moveToPreviousWord" }, { key: "alt+[ArrowRight]", command: "moveToNextWord" }, { key: "shift+alt+[ArrowLeft]", command: "extendToPreviousWord" }, { key: "shift+alt+[ArrowRight]", command: "extendToNextWord" }, { key: "ctrl+[ArrowLeft]", command: "moveToGroupStart" }, { key: "ctrl+[ArrowRight]", command: "moveToGroupEnd" }, { key: "shift+ctrl+[ArrowLeft]", command: "extendToGroupStart" }, { key: "shift+ctrl+[ArrowRight]", command: "extendToGroupEnd" }, { key: "[Space]", ifMode: "math", command: "moveAfterParent" }, { key: "shift+[Space]", ifMode: "math", command: "moveBeforeParent" }, { key: "[Home]", command: "moveToMathFieldStart" }, { key: "cmd+[ArrowLeft]", command: "moveToMathFieldStart" }, { key: "shift+[Home]", command: "extendToMathFieldStart" }, { key: "shift+cmd+[ArrowLeft]", command: "extendToMathFieldStart" }, { key: "[End]", command: "moveToMathFieldEnd" }, { key: "cmd+[ArrowRight]", command: "moveToMathFieldEnd" }, { key: "shift+[End]", command: "extendToMathFieldEnd" }, { key: "shift+cmd+[ArrowRight]", command: "extendToMathFieldEnd" }, { key: "[Pageup]", command: "moveToGroupStart" }, { key: "[Pagedown]", command: "moveToGroupEnd" }, { key: "[Tab]", ifMode: "math", command: "moveToNextPlaceholder" }, { key: "shift+[Tab]", ifMode: "math", command: "moveToPreviousPlaceholder" }, { key: "[Tab]", ifMode: "text", command: "moveToNextPlaceholder" }, { key: "shift+[Tab]", ifMode: "text", command: "moveToPreviousPlaceholder" }, { key: "[Escape]", ifMode: "math", command: ["switchMode", "latex"] }, { key: "[Escape]", ifMode: "text", command: ["switchMode", "latex"] }, { key: "\\", ifMode: "math", command: ["switchMode", "latex", "\\"] }, { key: "[IntlBackslash]", ifMode: "math", command: ["switchMode", "latex", "\\"] }, { key: "[Escape]", ifMode: "latex", command: ["complete", "complete", { selectItem: "true" }] }, { key: "[Tab]", ifMode: "latex", command: ["complete", "accept-suggestion"] }, { key: "[Return]", ifMode: "latex", command: "complete" }, { key: "[Enter]", ifMode: "latex", command: "complete" }, { key: "shift+[Escape]", ifMode: "latex", command: ["complete", "reject"] }, { key: "[ArrowDown]", ifMode: "latex", command: "nextSuggestion" }, { key: "[ArrowUp]", ifMode: "latex", command: "previousSuggestion" }, { key: "ctrl+a", ifPlatform: "!macos", command: "selectAll" }, { key: "cmd+a", command: "selectAll" }, { key: "[Cut]", command: "cutToClipboard" }, { key: "[Copy]", command: "copyToClipboard" }, { key: "[Paste]", command: "pasteFromClipboard" }, { key: "[Clear]", command: "deleteBackward" }, { key: "ctrl+z", ifPlatform: "!macos", command: "undo" }, { key: "cmd+z", command: "undo" }, { key: "[Undo]", command: "undo" }, { key: "ctrl+y", ifPlatform: "!macos", command: "redo" }, { key: "shift+cmd+y", command: "redo" }, { key: "shift+ctrl+z", ifPlatform: "!macos", command: "redo" }, { key: "shift+cmd+z", command: "redo" }, { key: "[Redo]", command: "redo" }, { key: "[EraseEof]", command: "deleteToGroupEnd" }, { key: "ctrl+b", ifPlatform: "macos", command: "moveToPreviousChar" }, { key: "ctrl+f", ifPlatform: "macos", command: "moveToNextChar" }, { key: "ctrl+p", ifPlatform: "macos", command: "moveUp" }, { key: "ctrl+n", ifPlatform: "macos", command: "moveDown" }, { key: "ctrl+a", ifPlatform: "macos", command: "moveToMathFieldStart" }, { key: "ctrl+e", ifPlatform: "macos", command: "moveToMathFieldEnd" }, { key: "shift+ctrl+b", ifPlatform: "macos", command: "extendSelectionBackward" }, { key: "shift+ctrl+f", ifPlatform: "macos", command: "extendSelectionForward" }, { key: "shift+ctrl+p", ifPlatform: "macos", command: "extendSelectionUpward" }, { key: "shift+ctrl+n", ifPlatform: "macos", command: "extendSelectionDownward" }, { key: "shift+ctrl+a", ifPlatform: "macos", command: "extendToMathFieldStart" }, { key: "shift+ctrl+e", ifPlatform: "macos", command: "extendToMathFieldEnd" }, { key: "alt+ctrl+b", ifPlatform: "macos", command: "moveToPreviousWord" }, { key: "alt+ctrl+f", ifPlatform: "macos", command: "moveToNextWord" }, { key: "shift+alt+ctrl+b", ifPlatform: "macos", command: "extendToPreviousWord" }, { key: "shift+alt+ctrl+f", ifPlatform: "macos", command: "extendToNextWord" }, { key: "ctrl+h", ifPlatform: "macos", command: "deleteBackward" }, { key: "ctrl+d", ifPlatform: "macos", command: "deleteForward" }, { key: "ctrl+l", ifPlatform: "macos", command: "scrollIntoView" }, { key: "ctrl+[Digit2]", ifMode: "math", command: ["insert", "\\sqrt{#0}"] }, { key: "ctrl+[Digit5]", ifMode: "math", command: "moveToOpposite" }, { key: "ctrl+[Digit6]", ifMode: "math", command: "moveToSuperscript" }, { key: "ctrl+[Return]", ifMode: "math", command: "addRowAfter" }, { key: "ctrl+[Enter]", ifMode: "math", command: "addRowAfter" }, { key: "cmd+[Return]", ifMode: "math", command: "addRowAfter" }, { key: "cmd+[Enter]", ifMode: "math", command: "addRowAfter" }, { key: "alt+p", ifMode: "math", command: ["insert", "\\pi"] }, { key: "alt+v", ifMode: "math", command: ["insert", "\\sqrt{#0}"] }, { key: "alt+w", ifMode: "math", command: ["insert", "\\sum_{i=#?}^{#?}"] }, { key: "alt+b", command: ["insert", "\\int_{#?}^{#?}"] }, { key: "alt+u", ifMode: "math", command: ["insert", "\\cup"] }, { key: "alt+n", ifMode: "math", command: ["insert", "\\cap"] }, { key: "alt+o", ifMode: "math", command: ["insert", "\\emptyset"] }, { key: "alt+d", ifMode: "math", command: ["insert", "\\differentialD"] }, { key: "shift+alt+o", ifMode: "math", command: ["insert", "\\varnothing"] }, { key: "shift+alt+d", ifMode: "math", command: ["insert", "\\partial"] }, { key: "shift+alt+p", ifMode: "math", command: ["insert", "\\prod_{i=#?}^{#?}"] }, { key: "shift+alt+u", ifMode: "math", command: ["insert", "\\bigcup"] }, { key: "shift+alt+n", ifMode: "math", command: ["insert", "\\bigcap"] }, { key: "shift+alt+a", ifMode: "math", command: ["insert", "\\forall"] }, { key: "shift+alt+e", ifMode: "math", command: ["insert", "\\exists"] }, { key: "alt+[Backslash]", ifMode: "math", command: ["insert", "\\backslash"] }, { key: "[NumpadDivide]", ifMode: "math", command: ["insert", "\\frac{#@}{#?}"] }, { key: "alt+[NumpadDivide]", ifMode: "math", command: ["insert", "\\frac{#?}{#@}"] }, { key: "shift+alt+k", command: "toggleKeystrokeCaption" }, { key: "alt+[Space]", command: "toggleVirtualKeyboard" }, { key: "alt+ctrl+[ArrowUp]", command: ["speak", "all", { withHighlighting: false }] }, { key: "alt+ctrl+[ArrowDown]", command: ["speak", "selection", { withHighlighting: false }] }, { key: "alt+[Equal]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["applyStyle", { mode: "text" }] }, { key: "alt+[Equal]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "text", command: ["applyStyle", { mode: "math" }] }, { key: "shift+[Quote]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["switchMode", "text", "", ""] }, { key: "shift+[Quote]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "text", command: ["switchMode", "math", "", ""] }, { key: "/", ifMode: "math", command: ["insert", "\\frac{#@}{#?}"] }, { key: "alt+/", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\/"] }, { key: "alt+[BracketLeft]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\left\\lbrack #0 \\right\\rbrack"] }, { key: "ctrl+[Minus]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "moveToSubscript" }, { key: "shift+alt+[BracketLeft]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\left\\lbrace #0 \\right\\rbrace"] }, { key: "ctrl+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowAfter" }, { key: "cmd+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowAfter" }, { key: "shift+ctrl+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowBefore" }, { key: "shift+cmd+;", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addRowBefore" }, { key: "ctrl+[Backspace]", ifMode: "math", command: "removeRow" }, { key: "cmd+[Backspace]", ifMode: "math", command: "removeRow" }, { key: "ctrl+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnAfter" }, { key: "cmd+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnAfter" }, { key: "shift+ctrl+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnBefore" }, { key: "shift+cmd+[Comma]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: "addColumnBefore" }, { key: "shift+[Backspace]", ifMode: "math", command: "removeColumn" }, { key: "alt+[Digit5]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "$\\infty"] }, { key: "alt+[Digit6]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\wedge"] }, { key: "shift+alt+[Digit6]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\vee"] }, { key: "alt+[Digit9]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "("] }, { key: "alt+[Digit0]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", ")"] }, { key: "alt+|", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "|"] }, { key: "shift+[Backquote]", ifLayout: ["apple.en-intl", "windows.en-intl", "linux.en"], ifMode: "math", command: ["insert", "\\~"] }, { key: "[Backquote]", ifLayout: ["windows.french", "linux.french"], ifMode: "math", command: ["insert", "^2"] }];
var Pi = { "\\theta": "alt+q", "\\sqrt": ["alt+v", "ctrl+[Digit2]"], "\\pi": "alt+p", "\\prod": "shift+alt+p", "\\sum": "alt+w", "\\int": "alt+b", "\\cup": "alt+u", "\\cap": "alt+n", "\\bigcup": "shift+alt+u", "\\bigcap": "shift+alt+n", "\\forall": "shift+alt+a", "\\exists": "shift+alt+e", "\\infty": "alt+[Digit5]", "\\wedge": "alt+[Digit6]", "\\vee": "shift+alt+[Digit6]", "\\differentialD": "alt+d", "\\partial": "shift+alt+d", "\\frac": "Slash", "\\emptyset": "alt+o", "\\varnothing": "shift+alt+o", "\\~": "~" };
function Bi(e5) {
  const t2 = e5.split("+"), i2 = { shift: false, alt: false, cmd: false, win: false, meta: false, ctrl: false, key: t2.pop() };
  return t2.includes("shift") && (i2.shift = true), t2.includes("alt") && (i2.alt = true), t2.includes("ctrl") && (i2.ctrl = true), t2.includes("cmd") && (i2.cmd = true), t2.includes("win") && (i2.win = true), t2.includes("meta") && (i2.meta = true), i2;
}
function $i(e5) {
  let t2 = "";
  return e5.shift && (t2 += "shift+"), e5.alt && (t2 += "alt+"), e5.ctrl && (t2 += "ctrl+"), e5.cmd && (t2 += "cmd+"), e5.win && (t2 += "win+"), e5.meta && (t2 += "meta+"), t2 + e5.key;
}
var Vi = "apple" === ji() ? { id: "apple.en-intl", displayName: "English (international)", virtualLayout: "qwerty", platform: "apple", locale: "en", score: 0, mapping: { KeyA: ["a", "A", "\xE5", "\xC5"], KeyB: ["b", "B", "\u222B", "\u0131"], KeyC: ["c", "C", "\xE7", "\xC7"], KeyD: ["d", "D", "\u2202", "\xCE"], KeyE: ["e", "E", "\xB4", "\xB4"], KeyF: ["f", "F", "\u0192", "\xCF"], KeyG: ["g", "G", "\xA9", "\u02DD"], KeyH: ["h", "H", "\u02D9", "\xD3"], KeyI: ["i", "I", "\u02C6", "\u02C6"], KeyJ: ["j", "J", "\u2206", "\xD4"], KeyK: ["k", "K", "\u02DA", "\uF8FF"], KeyL: ["l", "L", "\xAC", "\xD2"], KeyM: ["m", "M", "\xB5", "\xC2"], KeyN: ["n", "N", "\u02DC", "\u02DC"], KeyO: ["o", "O", "\xF8", "\xD8"], KeyP: ["p", "P", "\u03C0", "\u220F"], KeyQ: ["q", "Q", "\u0153", "\u0152"], KeyR: ["r", "R", "\xAE", "\u2030"], KeyS: ["s", "S", "\xDF", "\xCD"], KeyT: ["t", "T", "\u2020", "\u02C7"], KeyU: ["u", "U", "\xA8", "\xA8"], KeyV: ["v", "V", "\u221A", "\u25CA"], KeyW: ["w", "W", "\u2211", "\u201E"], KeyX: ["x", "X", "\u2248", "\u02DB"], KeyY: ["y", "Y", "\xA5", "\xC1"], KeyZ: ["z", "Z", "\u03A9", "\xB8"], Digit1: ["1", "!", "\xA1", "\u2044"], Digit2: ["2", "@", "\u2122", "\u20AC"], Digit3: ["3", "#", "\xA3", "\u2039"], Digit4: ["4", "$", "\xA2", "\u203A"], Digit5: ["5", "%", "\u221E", "\uFB01"], Digit6: ["6", "^", "\xA7", "\uFB02"], Digit7: ["7", "&", "\xB6", "\u2021"], Digit8: ["8", "*", "\u2022", "\xB0"], Digit9: ["9", "(", "\xAA", "\xB7"], Digit0: ["0", ")", "\xBA", "\u201A"], Space: [" ", " ", " ", " "], Minus: ["-", "_", "\u2013", "\u2014"], Equal: ["=", "+", "\u2260", "\xB1"], BracketLeft: ["[", "{", "\u201C", "\u201D"], BracketRight: ["]", "}", "\u2018", "\u2019"], Backslash: ["\\", "|", "\xAB", "\xBB"], Semicolon: [";", ":", "\u2026", "\xDA"], Quote: ["'", '"', "\xE6", "\xC6"], Backquote: ["`", "\u02DC", "`", "`"], Comma: [",", "<", "\u2264", "\xAF"], Period: [".", ">", "\u2265", "\u02D8"], Slash: ["/", "?", "\xF7", "\xBF"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: [".", ".", ".", "."], IntlBackslash: ["\xA7", "\xB1", "\xA7", "\xB1"], NumpadEqual: ["=", "=", "=", "="], AudioVolumeUp: ["", "=", "", "="] } } : "windows" === ji() ? { id: "windows.en-intl", displayName: "English (international)", platform: "windows", virtualLayout: "qwerty", locale: "en", score: 0, mapping: { KeyA: ["a", "A", "\xE1", "\xC1"], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "\xA9", "\xA2"], KeyD: ["d", "D", "\xF0", "\xD0"], KeyE: ["e", "E", "\xE9", "\xC9"], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "\xED", "\xCD"], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "\xF8", "\xD8"], KeyM: ["m", "M", "\xB5", ""], KeyN: ["n", "N", "\xF1", "\xD1"], KeyO: ["o", "O", "\xF3", "\xD3"], KeyP: ["p", "P", "\xF6", "\xD6"], KeyQ: ["q", "Q", "\xE4", "\xC4"], KeyR: ["r", "R", "\xAE", ""], KeyS: ["s", "S", "\xDF", "\xA7"], KeyT: ["t", "T", "\xFE", "\xDE"], KeyU: ["u", "U", "\xFA", "\xDA"], KeyV: ["v", "V", "", ""], KeyW: ["w", "W", "\xE5", "\xC5"], KeyX: ["x", "X", "", ""], KeyY: ["y", "Y", "\xFC", "\xDC"], KeyZ: ["z", "Z", "\xE6", "\xC6"], Digit1: ["1", "!", "\xA1", "\xB9"], Digit2: ["2", "@", "\xB2", ""], Digit3: ["3", "#", "\xB3", ""], Digit4: ["4", "$", "\xA4", "\xA3"], Digit5: ["5", "%", "\u20AC", ""], Digit6: ["6", "^", "\xBC", ""], Digit7: ["7", "&", "\xBD", ""], Digit8: ["8", "*", "\xBE", ""], Digit9: ["9", "(", "\u2018", ""], Digit0: ["0", ")", "\u2019", ""], Space: [" ", " ", "", ""], Minus: ["-", "_", "\xA5", ""], Equal: ["=", "+", "\xD7", "\xF7"], BracketLeft: ["[", "{", "\xAB", ""], BracketRight: ["]", "}", "\xBB", ""], Backslash: ["\\", "|", "\xAC", "\xA6"], Semicolon: [";", ":", "\xB6", "\xB0"], Quote: ["'", '"', "\xB4", "\xA8"], Backquote: ["`", "~", "", ""], Comma: [",", "<", "\xE7", "\xC7"], Period: [".", ">", "", ""], Slash: ["/", "?", "\xBF", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["\\", "|", "", ""] } } : { id: "linux.en", displayName: "English", platform: "linux", virtualLayout: "qwerty", locale: "en", score: 0, mapping: { KeyA: ["a", "A", "a", "A"], KeyB: ["b", "B", "b", "B"], KeyC: ["c", "C", "c", "C"], KeyD: ["d", "D", "d", "D"], KeyE: ["e", "E", "e", "E"], KeyF: ["f", "F", "f", "F"], KeyG: ["g", "G", "g", "G"], KeyH: ["h", "H", "h", "H"], KeyI: ["i", "I", "i", "I"], KeyJ: ["j", "J", "j", "J"], KeyK: ["k", "K", "k", "K"], KeyL: ["l", "L", "l", "L"], KeyM: ["m", "M", "m", "M"], KeyN: ["n", "N", "n", "N"], KeyO: ["o", "O", "o", "O"], KeyP: ["p", "P", "p", "P"], KeyQ: ["q", "Q", "q", "Q"], KeyR: ["r", "R", "r", "R"], KeyS: ["s", "S", "s", "S"], KeyT: ["t", "T", "t", "T"], KeyU: ["u", "U", "u", "U"], KeyV: ["v", "V", "v", "V"], KeyW: ["w", "W", "w", "W"], KeyX: ["x", "X", "x", "X"], KeyY: ["y", "Y", "y", "Y"], KeyZ: ["z", "Z", "z", "Z"], Digit1: ["1", "!", "1", "!"], Digit2: ["2", "@", "2", "@"], Digit3: ["3", "#", "3", "#"], Digit4: ["4", "$", "4", "$"], Digit5: ["5", "%", "5", "%"], Digit6: ["6", "^", "6", "^"], Digit7: ["7", "&", "7", "&"], Digit8: ["8", "*", "8", "*"], Digit9: ["9", "(", "9", "("], Digit0: ["0", ")", "0", ")"], Space: [" ", " ", " ", " "], Minus: ["-", "_", "-", "_"], Equal: ["=", "+", "=", "+"], BracketLeft: ["[", "{", "[", "{"], BracketRight: ["]", "}", "]", "}"], Backslash: ["\\", "|", "\\", "|"], Semicolon: [";", ":", ";", ":"], Quote: ["'", '"', "'", '"'], Backquote: ["`", "~", "`", "~"], Comma: [",", "<", ",", "<"], Period: [".", ">", ".", ">"], Slash: ["/", "?", "/", "?"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: ["", ".", "", "."], IntlBackslash: ["<", ">", "|", "\xA6"], NumpadEqual: ["=", "=", "=", "="], NumpadComma: [".", ".", ".", "."], NumpadParenLeft: ["(", "(", "(", "("], NumpadParenRight: [")", ")", ")", ")"] } };
var Ki = { enter: "[Enter]", escape: "[Escape]", backspace: "[Backspace]", tab: "[Tab]", space: "[Space]", pausebreak: "[Pause]", insert: "[Insert]", home: "[Home]", pageup: "[PageUp]", delete: "[Delete]", end: "[End]", pagedown: "[PageDown]", right: "[ArrowRight]", left: "[ArrowLeft]", down: "[ArrowDown]", up: "[ArrowUp]", numpad0: "[Numpad0]", numpad1: "[Numpad1]", numpad2: "[Numpad2]", numpad3: "[Numpad3]", numpad4: "[Numpad4]", numpad5: "[Numpad5]", numpad6: "[Numpad6]", numpad7: "[Numpad7]", numpad8: "[Numpad8]", numpad9: "[Numpad9]", numpad_divide: "[NumpadDivide]", numpad_multiply: "[NumpadMultiply]", numpad_subtract: "[NumpadSubtract]", numpad_add: "[NumpadAdd]", numpad_decimal: "[NumpadDecimal]", numpad_separator: "[NumpadComma]", capslock: "[Capslock]", f1: "[F1]", f2: "[F2]", f3: "[F3]", f4: "[F4]", f5: "[F5]", f6: "[F6]", f7: "[F7]", f8: "[F8]", f9: "[F9]", f10: "[F10]", f11: "[F11]", f12: "[F12]", f13: "[F13]", f14: "[F14]", f15: "[F15]", f16: "[F16]", f17: "[F17]", f18: "[F18]", f19: "[F19]" };
var Ri = [];
function ji() {
  switch (a()) {
    case "macos":
    case "ios":
      return "apple";
    case "windows":
      return "windows";
  }
  return "linux";
}
function Hi(e5) {
  e5.platform && e5.platform !== ji() || Ri.push(e5);
}
function Wi() {
  return Ri[0];
}
function Zi(t2) {
  let i2 = t2;
  return e(i2) && (i2 = i2.length > 0 ? i2[0] + "(" + i2.slice(1).join("") + ")" : ""), i2;
}
function Gi(e5) {
  var t2;
  const i2 = /macos|ios|/.test(a()), n2 = e5.split("+");
  let r2 = "";
  for (const e6 of n2)
    !i2 && r2 && (r2 += '<span class="ML__shortcut-join">+</span>'), e6.startsWith("[Key") ? r2 += e6.slice(4, 5) : e6.startsWith("Key") ? r2 += e6.slice(3, 4) : e6.startsWith("[Digit") ? r2 += e6.slice(6, 7) : e6.startsWith("Digit") ? r2 += e6.slice(5, 6) : r2 += null !== (t2 = { cmd: "\u2318", meta: i2 ? "\u2318" : "command", shift: i2 ? "\u21E7" : "shift", alt: i2 ? "\u2325" : "alt", ctrl: i2 ? "\u2303" : "control", "\n": i2 ? "\u23CE" : "return", "[return]": i2 ? "\u23CE" : "return", "[enter]": i2 ? "\u2324" : "enter", "[tab]": i2 ? "\u21E5" : "tab", "[escape]": "esc", "[backspace]": i2 ? "\u232B" : "backspace", "[delete]": i2 ? "\u2326" : "del", "[pageup]": i2 ? "\u21DE" : "page up", "[pagedown]": i2 ? "\u21DF" : "page down", "[home]": i2 ? "\u2912" : "home", "[end]": i2 ? "\u2913" : "end", "[space]": "space", "[equal]": "=", "[minus]": "-", "[comma]": ",", "[slash]": "/", "[backslash]": "\\", "[bracketleft]": "[", "[bracketright]": "]", semicolon: ";", period: ".", comma: ",", minus: "-", equal: "=", quote: "'", bracketLeft: "[", bracketRight: "]", backslash: "\\", intlbackslash: "\\", backquote: "`", slash: "/", numpadmultiply: "* &#128290;", numpaddivide: "/ &#128290;", numpadsubtract: "- &#128290;", numpadadd: "+ &#128290;", numpaddecimal: ". &#128290;", numpadcomma: ", &#128290;", help: "help", left: "\u21E0", up: "\u21E1", right: "\u21E2", down: "\u21E3", "[arrowleft]": "\u21E0", "[arrowup]": "\u21E1", "[arrowright]": "\u21E2", "[arrowdown]": "\u21E3", "[digit0]": "0", "[digit1]": "1", "[digit2]": "2", "[digit3]": "3", "[digit4]": "4", "[digit5]": "5", "[digit6]": "6", "[digit7]": "7", "[digit8]": "8", "[digit9]": "9" }[e6.toLowerCase()]) && void 0 !== t2 ? t2 : e6.toUpperCase();
  return r2;
}
function Ui(e5, i2) {
  if (e5.ifPlatform && !/^!?(macos|windows|android|ios|chromeos|other)$/.test(e5.ifPlatform))
    throw new Error(`Unexpected platform "${e5.ifPlatform}" for keybinding ${e5.key}`);
  if (void 0 !== e5.ifLayout && (0 === i2.score || !e5.ifLayout.includes(i2.id)))
    return;
  const n2 = Bi(e5.key);
  let r2 = e5.ifPlatform;
  if (n2.cmd) {
    if (r2 && "macos" !== r2 && "ios" !== r2)
      throw new Error('Unexpected "cmd" modifier with platform "' + r2 + '"\n"cmd" modifier can only be used with macOS or iOS platform.');
    r2 || (r2 = "ios" === a() ? "ios" : "macos"), n2.win = false, n2.cmd = false, n2.meta = true;
  }
  if (n2.win) {
    if (r2 && "windows" !== r2)
      throw new Error('Unexpected "win" modifier with platform "' + r2 + '"\n"win" modifier can only be used with Windows platform.');
    r2 = "windows", n2.win = false, n2.cmd = false, n2.meta = true;
  }
  if (r2 && !function(e6) {
    if (t()) {
      const t2 = a(), i3 = e6.startsWith("!"), n3 = e6.endsWith(t2);
      if (i3 && !n3)
        return true;
      if (!i3 && n3)
        return true;
    }
    return "!other" !== e6 && "other" === e6;
  }(r2))
    return;
  if (/^\[.+\]$/.test(n2.key))
    return { ...e5, ifPlatform: r2, key: $i(n2) };
  const o2 = function(e6, t2) {
    var i3;
    const n3 = { shift: false, alt: false, cmd: false, win: false, meta: false, ctrl: false, key: "" };
    if (!e6)
      return n3;
    for (const [i4, r3] of Object.entries(t2.mapping)) {
      if (r3[0] === e6)
        return n3.key = `[${i4}]`, n3;
      if (r3[1] === e6)
        return n3.shift = true, n3.key = `[${i4}]`, n3;
      if (r3[2] === e6)
        return n3.alt = true, n3.key = `[${i4}]`, n3;
      if (r3[3] === e6)
        return n3.shift = true, n3.alt = true, n3.key = `[${i4}]`, n3;
    }
    return n3.key = null !== (i3 = Ki[e6]) && void 0 !== i3 ? i3 : "", n3;
  }(n2.key, i2);
  if (!o2)
    throw new Error('Invalid keybinding key "' + e5.key + '"');
  if (o2.shift && n2.shift || o2.alt && n2.alt)
    throw new Error(`The keybinding ${e5.key} (${Ji(e5.command)}) is conflicting with the key combination ${$i(o2)} using the ${i2.displayName} keyboard layout`);
  return o2.shift = o2.shift || n2.shift, o2.alt = o2.alt || n2.alt, o2.meta = n2.meta, o2.ctrl = n2.ctrl, { ...e5, ifPlatform: r2, key: $i(o2) };
}
function Ji(e5) {
  if (Array.isArray(e5)) {
    const t2 = [...e5];
    return t2.shift() + "(" + t2.map((e6) => "string" == typeof e6 ? `"${e6}"` : e6.toString()).join(", ") + ")";
  }
  return e5;
}
Hi(Vi), Hi({ id: "apple.french", locale: "fr", displayName: "French", platform: "apple", virtualLayout: "azerty", score: 0, mapping: { KeyA: ["q", "Q", "\u2021", "\u03A9"], KeyB: ["b", "B", "\xDF", "\u222B"], KeyC: ["c", "C", "\xA9", "\xA2"], KeyD: ["d", "D", "\u2202", "\u2206"], KeyE: ["e", "E", "\xEA", "\xCA"], KeyF: ["f", "F", "\u0192", "\xB7"], KeyG: ["g", "G", "\uFB01", "\uFB02"], KeyH: ["h", "H", "\xCC", "\xCE"], KeyI: ["i", "I", "\xEE", "\xEF"], KeyJ: ["j", "J", "\xCF", "\xCD"], KeyK: ["k", "K", "\xC8", "\xCB"], KeyL: ["l", "L", "\xAC", "|"], KeyM: [",", "?", "\u221E", "\xBF"], KeyN: ["n", "N", "~", "\u0131"], KeyO: ["o", "O", "\u0153", "\u0152"], KeyP: ["p", "P", "\u03C0", "\u220F"], KeyQ: ["a", "A", "\xE6", "\xC6"], KeyR: ["r", "R", "\xAE", "\u201A"], KeyS: ["s", "S", "\xD2", "\u2211"], KeyT: ["t", "T", "\u2020", "\u2122"], KeyU: ["u", "U", "\xBA", "\xAA"], KeyV: ["v", "V", "\u25CA", "\u221A"], KeyW: ["z", "Z", "\xC2", "\xC5"], KeyX: ["x", "X", "\u2248", "\u2044"], KeyY: ["y", "Y", "\xDA", "\u0178"], KeyZ: ["w", "W", "\u2039", "\u203A"], Digit1: ["&", "1", "\uF8FF", "\xB4"], Digit2: ["\xE9", "2", "\xEB", "\u201E"], Digit3: ['"', "3", "\u201C", "\u201D"], Digit4: ["'", "4", "\u2018", "\u2019"], Digit5: ["(", "5", "{", "["], Digit6: ["\xA7", "6", "\xB6", "\xE5"], Digit7: ["\xE8", "7", "\xAB", "\xBB"], Digit8: ["!", "8", "\xA1", "\xDB"], Digit9: ["\xE7", "9", "\xC7", "\xC1"], Digit0: ["\xE0", "0", "\xF8", "\xD8"], Space: [" ", " ", " ", " "], Minus: [")", "\xB0", "}", "]"], Equal: ["-", "_", "\u2014", "\u2013"], BracketLeft: ["^", "\xA8", "\xF4", "\xD4"], BracketRight: ["$", "*", "\u20AC", "\xA5"], Backslash: ["`", "\xA3", "@", "#"], Semicolon: ["m", "M", "\xB5", "\xD3"], Quote: ["\xF9", "%", "\xD9", "\u2030"], Backquote: ["<", ">", "\u2264", "\u2265"], Comma: [";", ".", "\u2026", "\u2022"], Period: [":", "/", "\xF7", "\\"], Slash: ["=", "+", "\u2260", "\xB1"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadDecimal: [",", ".", ",", "."], IntlBackslash: ["@", "#", "\u2022", "\u0178"], NumpadEqual: ["=", "=", "=", "="] } }), Hi({ id: "apple.spanish", locale: "es", displayName: "Spanish ISO", platform: "apple", virtualLayout: "qwerty", score: 0, mapping: { KeyA: ["a", "A", "\xE5", "\xC5"], KeyB: ["b", "B", "\xDF", ""], KeyC: ["c", "C", "\xA9", " "], KeyD: ["d", "D", "\u2202", "\u2206"], KeyE: ["e", "E", "\u20AC", "\u20AC"], KeyF: ["f", "F", "\u0192", "\uFB01"], KeyG: ["g", "G", "\uF8FF", "\uFB02"], KeyH: ["h", "H", "\u2122", " "], KeyI: ["i", "I", " ", " "], KeyJ: ["j", "J", "\xB6", "\xAF"], KeyK: ["k", "K", "\xA7", "\u02C7"], KeyL: ["l", "L", " ", "\u02D8"], KeyM: ["m", "M", "\xB5", "\u02DA"], KeyN: ["n", "N", " ", "\u02D9"], KeyO: ["o", "O", "\xF8", "\xD8"], KeyP: ["p", "P", "\u03C0", "\u220F"], KeyQ: ["q", "Q", "\u0153", "\u0152"], KeyR: ["r", "R", "\xAE", " "], KeyS: ["s", "S", "\u222B", " "], KeyT: ["t", "T", "\u2020", "\u2021"], KeyU: ["u", "U", " ", " "], KeyV: ["v", "V", "\u221A", "\u25CA"], KeyW: ["w", "W", "\xE6", "\xC6"], KeyX: ["x", "X", "\u2211", "\u203A"], KeyY: ["y", "Y", "\xA5", " "], KeyZ: ["z", "Z", "\u03A9", "\u2039"], Digit1: ["1", "!", "|", "\u0131"], Digit2: ["2", '"', "@", "\u02DD"], Digit3: ["3", "\xB7", "#", "\u2022"], Digit4: ["4", "$", "\xA2", "\xA3"], Digit5: ["5", "%", "\u221E", "\u2030"], Digit6: ["6", "&", "\xAC", " "], Digit7: ["7", "/", "\xF7", "\u2044"], Digit8: ["8", "(", "\u201C", "\u2018"], Digit9: ["9", ")", "\u201D", "\u2019"], Digit0: ["0", "=", "\u2260", "\u2248"], Space: [" ", " ", " ", " "], Minus: ["'", "?", "\xB4", "\xB8"], Equal: ["\xA1", "\xBF", "\u201A", "\u02DB"], BracketLeft: ["`", "^", "[", "\u02C6"], BracketRight: ["+", "*", "]", "\xB1"], Backslash: ["\xE7", "\xC7", "}", "\xBB"], Semicolon: ["\xF1", "\xD1", "~", "\u02DC"], Quote: ["\xB4", "\xA8", "{", "\xAB"], Backquote: ["<", ">", "\u2264", "\u2265"], Comma: [",", ";", "\u201E", ""], Period: [".", ":", "\u2026", "\u2026"], Slash: ["-", "_", "\u2013", "\u2014"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: [",", ",", ",", ","], IntlBackslash: ["\xBA", "\xAA", "\\", "\xB0"] } }), Hi({ id: "windows.spanish", locale: "es", displayName: "Spanish", platform: "windows", virtualLayout: "qwerty", score: 0, mapping: { KeyA: ["a", "A", "", ""], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "", ""], KeyD: ["d", "D", "", ""], KeyE: ["e", "E", "\u20AC", ""], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "", ""], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "", ""], KeyM: ["m", "M", "", ""], KeyN: ["n", "N", "", ""], KeyO: ["o", "O", "", ""], KeyP: ["p", "P", "", ""], KeyQ: ["q", "Q", "", ""], KeyR: ["r", "R", "", ""], KeyS: ["s", "S", "", ""], KeyT: ["t", "T", "", ""], KeyU: ["u", "U", "", ""], KeyV: ["v", "V", "", ""], KeyW: ["w", "W", "", ""], KeyX: ["x", "X", "", ""], KeyY: ["y", "Y", "", ""], KeyZ: ["z", "Z", "", ""], Digit1: ["1", "!", "|", ""], Digit2: ["2", '"', "@", ""], Digit3: ["3", "\xB7", "#", ""], Digit4: ["4", "$", "~", ""], Digit5: ["5", "%", "\u20AC", ""], Digit6: ["6", "&", "\xAC", ""], Digit7: ["7", "/", "", ""], Digit8: ["8", "(", "", ""], Digit9: ["9", ")", "", ""], Digit0: ["0", "=", "", ""], Space: [" ", " ", "", ""], Minus: ["'", "?", "", ""], Equal: ["\xA1", "\xBF", "", ""], BracketLeft: ["`", "^", "[", ""], BracketRight: ["+", "*", "]", ""], Backslash: ["\xE7", "\xC7", "}", ""], Semicolon: ["\xF1", "\xD1", "", ""], Quote: ["\xB4", "\xA8", "{", ""], Backquote: ["\xBA", "\xAA", "\\", ""], Comma: [",", ";", "", ""], Period: [".", ":", "", ""], Slash: ["-", "_", "", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["<", ">", "", ""] } }), Hi({ id: "linux.spanish", locale: "es", displayName: "Spanish", platform: "linux", virtualLayout: "qwerty", score: 0, mapping: { KeyA: ["a", "A", "\xE6", "\xC6"], KeyB: ["b", "B", "\u201D", "\u2019"], KeyC: ["c", "C", "\xA2", "\xA9"], KeyD: ["d", "D", "\xF0", "\xD0"], KeyE: ["e", "E", "\u20AC", "\xA2"], KeyF: ["f", "F", "\u0111", "\xAA"], KeyG: ["g", "G", "\u014B", "\u014A"], KeyH: ["h", "H", "\u0127", "\u0126"], KeyI: ["i", "I", "\u2192", "\u0131"], KeyJ: ["j", "J", "\u0309", "\u031B"], KeyK: ["k", "K", "\u0138", "&"], KeyL: ["l", "L", "\u0142", "\u0141"], KeyM: ["m", "M", "\xB5", "\xBA"], KeyN: ["n", "N", "n", "N"], KeyO: ["o", "O", "\xF8", "\xD8"], KeyP: ["p", "P", "\xFE", "\xDE"], KeyQ: ["q", "Q", "@", "\u03A9"], KeyR: ["r", "R", "\xB6", "\xAE"], KeyS: ["s", "S", "\xDF", "\xA7"], KeyT: ["t", "T", "\u0167", "\u0166"], KeyU: ["u", "U", "\u2193", "\u2191"], KeyV: ["v", "V", "\u201C", "\u2018"], KeyW: ["w", "W", "\u0142", "\u0141"], KeyX: ["x", "X", "\xBB", ">"], KeyY: ["y", "Y", "\u2190", "\xA5"], KeyZ: ["z", "Z", "\xAB", "<"], Digit1: ["1", "!", "|", "\xA1"], Digit2: ["2", '"', "@", "\u215B"], Digit3: ["3", "\xB7", "#", "\xA3"], Digit4: ["4", "$", "~", "$"], Digit5: ["5", "%", "\xBD", "\u215C"], Digit6: ["6", "&", "\xAC", "\u215D"], Digit7: ["7", "/", "{", "\u215E"], Digit8: ["8", "(", "[", "\u2122"], Digit9: ["9", ")", "]", "\xB1"], Digit0: ["0", "=", "}", "\xB0"], Enter: ["\r", "\r", "\r", "\r"], Escape: ["\x1B", "\x1B", "\x1B", "\x1B"], Backspace: ["\b", "\b", "\b", "\b"], Tab: ["	", "", "	", ""], Space: [" ", " ", " ", " "], Minus: ["'", "?", "\\", "\xBF"], Equal: ["\xA1", "\xBF", "\u0303", "~"], BracketLeft: ["\u0300", "\u0302", "[", "\u030A"], BracketRight: ["+", "*", "]", "\u0304"], Backslash: ["\xE7", "\xC7", "}", "\u0306"], Semicolon: ["\xF1", "\xD1", "~", "\u030B"], Quote: ["\u0301", "\u0308", "{", "{"], Backquote: ["\xBA", "\xAA", "\\", "\\"], Comma: [",", ";", "\u2500", "\xD7"], Period: [".", ":", "\xB7", "\xF7"], Slash: ["-", "_", "\u0323", "\u0307"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadEnter: ["\r", "\r", "\r", "\r"], Numpad1: ["", "1", "", "1"], Numpad2: ["", "2", "", "2"], Numpad3: ["", "3", "", "3"], Numpad4: ["", "4", "", "4"], Numpad5: ["", "5", "", "5"], Numpad6: ["", "6", "", "6"], Numpad7: ["", "7", "", "7"], Numpad8: ["", "8", "", "8"], Numpad9: ["", "9", "", "9"], Numpad0: ["", "0", "", "0"], NumpadDecimal: ["", ".", "", "."], IntlBackslash: ["<", ">", "|", "\xA6"], NumpadEqual: ["=", "=", "=", "="], NumpadComma: [".", ".", ".", "."], NumpadParenLeft: ["(", "(", "(", "("], NumpadParenRight: [")", ")", ")", ")"] } }), Hi({ id: "linux.french", locale: "fr", displayName: "French", virtualLayout: "azerty", platform: "linux", score: 0, mapping: { KeyA: ["q", "Q", "@", "\u03A9"], KeyB: ["b", "B", "\u201D", "\u2019"], KeyC: ["c", "C", "\xA2", "\xA9"], KeyD: ["d", "D", "\xF0", "\xD0"], KeyE: ["e", "E", "\u20AC", "\xA2"], KeyF: ["f", "F", "\u0111", "\xAA"], KeyG: ["g", "G", "\u014B", "\u014A"], KeyH: ["h", "H", "\u0127", "\u0126"], KeyI: ["i", "I", "\u2192", "\u0131"], KeyJ: ["j", "J", "\u0309", "\u031B"], KeyK: ["k", "K", "\u0138", "&"], KeyL: ["l", "L", "\u0142", "\u0141"], KeyM: [",", "?", "\u0301", "\u030B"], KeyN: ["n", "N", "n", "N"], KeyO: ["o", "O", "\xF8", "\xD8"], KeyP: ["p", "P", "\xFE", "\xDE"], KeyQ: ["a", "A", "\xE6", "\xC6"], KeyR: ["r", "R", "\xB6", "\xAE"], KeyS: ["s", "S", "\xDF", "\xA7"], KeyT: ["t", "T", "\u0167", "\u0166"], KeyU: ["u", "U", "\u2193", "\u2191"], KeyV: ["v", "V", "\u201C", "\u2018"], KeyW: ["z", "Z", "\xAB", "<"], KeyX: ["x", "X", "\xBB", ">"], KeyY: ["y", "Y", "\u2190", "\xA5"], KeyZ: ["w", "W", "\u0142", "\u0141"], Digit1: ["&", "1", "\xB9", "\xA1"], Digit2: ["\xE9", "2", "~", "\u215B"], Digit3: ['"', "3", "#", "\xA3"], Digit4: ["'", "4", "{", "$"], Digit5: ["(", "5", "[", "\u215C"], Digit6: ["-", "6", "|", "\u215D"], Digit7: ["\xE8", "7", "`", "\u215E"], Digit8: ["_", "8", "\\", "\u2122"], Digit9: ["\xE7", "9", "^", "\xB1"], Digit0: ["\xE0", "0", "@", "\xB0"], Enter: ["\r", "\r", "\r", "\r"], Escape: ["\x1B", "\x1B", "\x1B", "\x1B"], Backspace: ["\b", "\b", "\b", "\b"], Tab: ["	", "", "	", ""], Space: [" ", " ", " ", " "], Minus: [")", "\xB0", "]", "\xBF"], Equal: ["=", "+", "}", "\u0328"], BracketLeft: ["\u0302", "\u0308", "\u0308", "\u030A"], BracketRight: ["$", "\xA3", "\xA4", "\u0304"], Backslash: ["*", "\xB5", "\u0300", "\u0306"], Semicolon: ["m", "M", "\xB5", "\xBA"], Quote: ["\xF9", "%", "\u0302", "\u030C"], Backquote: ["\xB2", "~", "\xAC", "\xAC"], Comma: [";", ".", "\u2500", "\xD7"], Period: [":", "/", "\xB7", "\xF7"], Slash: ["!", "\xA7", "\u0323", "\u0307"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadDecimal: ["", ".", "", "."], IntlBackslash: ["<", ">", "|", "\xA6"] } }), Hi({ id: "windows.french", locale: "fr", displayName: "French", virtualLayout: "azerty", platform: "windows", score: 0, mapping: { KeyA: ["q", "Q", "", ""], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "", ""], KeyD: ["d", "D", "", ""], KeyE: ["e", "E", "\u20AC", ""], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "", ""], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "", ""], KeyM: [",", "?", "", ""], KeyN: ["n", "N", "", ""], KeyO: ["o", "O", "", ""], KeyP: ["p", "P", "", ""], KeyQ: ["a", "A", "", ""], KeyR: ["r", "R", "", ""], KeyS: ["s", "S", "", ""], KeyT: ["t", "T", "", ""], KeyU: ["u", "U", "", ""], KeyV: ["v", "V", "", ""], KeyW: ["z", "Z", "", ""], KeyX: ["x", "X", "", ""], KeyY: ["y", "Y", "", ""], KeyZ: ["w", "W", "", ""], Digit1: ["&", "1", "", ""], Digit2: ["\xE9", "2", "~", ""], Digit3: ['"', "3", "#", ""], Digit4: ["'", "4", "{", ""], Digit5: ["(", "5", "[", ""], Digit6: ["-", "6", "|", ""], Digit7: ["\xE8", "7", "`", ""], Digit8: ["_", "8", "\\", ""], Digit9: ["\xE7", "9", "^", ""], Digit0: ["\xE0", "0", "@", ""], Space: [" ", " ", "", ""], Minus: [")", "\xB0", "]", ""], Equal: ["=", "+", "}", ""], BracketLeft: ["^", "\xA8", "", ""], BracketRight: ["$", "\xA3", "\xA4", ""], Backslash: ["*", "\xB5", "", ""], Semicolon: ["m", "M", "", ""], Quote: ["\xF9", "%", "", ""], Backquote: ["\xB2", "", "", ""], Comma: [";", ".", "", ""], Period: [":", "/", "", ""], Slash: ["!", "\xA7", "", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["<", ">", "", ""] } }), Hi({ id: "windows.german", locale: "de", displayName: "German", platform: "windows", virtualLayout: "qwertz", score: 0, mapping: { KeyA: ["a", "A", "", ""], KeyB: ["b", "B", "", ""], KeyC: ["c", "C", "", ""], KeyD: ["d", "D", "", ""], KeyE: ["e", "E", "\u20AC", ""], KeyF: ["f", "F", "", ""], KeyG: ["g", "G", "", ""], KeyH: ["h", "H", "", ""], KeyI: ["i", "I", "", ""], KeyJ: ["j", "J", "", ""], KeyK: ["k", "K", "", ""], KeyL: ["l", "L", "", ""], KeyM: ["m", "M", "\xB5", ""], KeyN: ["n", "N", "", ""], KeyO: ["o", "O", "", ""], KeyP: ["p", "P", "", ""], KeyQ: ["q", "Q", "@", ""], KeyR: ["r", "R", "", ""], KeyS: ["s", "S", "", ""], KeyT: ["t", "T", "", ""], KeyU: ["u", "U", "", ""], KeyV: ["v", "V", "", ""], KeyW: ["w", "W", "", ""], KeyX: ["x", "X", "", ""], KeyY: ["z", "Z", "", ""], KeyZ: ["y", "Y", "", ""], Digit1: ["1", "!", "", ""], Digit2: ["2", '"', "\xB2", ""], Digit3: ["3", "\xA7", "\xB3", ""], Digit4: ["4", "$", "", ""], Digit5: ["5", "%", "", ""], Digit6: ["6", "&", "", ""], Digit7: ["7", "/", "{", ""], Digit8: ["8", "(", "[", ""], Digit9: ["9", ")", "]", ""], Digit0: ["0", "=", "}", ""], Space: [" ", " ", "", ""], Minus: ["\xDF", "?", "\\", "\u1E9E"], Equal: ["\xB4", "`", "", ""], BracketLeft: ["\xFC", "\xDC", "", ""], BracketRight: ["+", "*", "~", ""], Backslash: ["#", "'", "", ""], Semicolon: ["\xF6", "\xD6", "", ""], Quote: ["\xE4", "\xC4", "", ""], Backquote: ["^", "\xB0", "", ""], Comma: [",", ";", "", ""], Period: [".", ":", "", ""], Slash: ["-", "_", "", ""], NumpadDivide: ["/", "/", "", ""], NumpadMultiply: ["*", "*", "", ""], NumpadSubtract: ["-", "-", "", ""], NumpadAdd: ["+", "+", "", ""], IntlBackslash: ["<", ">", "|", ""] } }), Hi({ id: "apple.german", locale: "de", displayName: "German", virtualLayout: "qwertz", platform: "apple", score: 0, mapping: { KeyA: ["a", "A", "\xE5", "\xC5"], KeyB: ["b", "B", "\u222B", "\u2039"], KeyC: ["c", "C", "\xE7", "\xC7"], KeyD: ["d", "D", "\u2202", "\u2122"], KeyE: ["e", "E", "\u20AC", "\u2030"], KeyF: ["f", "F", "\u0192", "\xCF"], KeyG: ["g", "G", "\xA9", "\xCC"], KeyH: ["h", "H", "\xAA", "\xD3"], KeyI: ["i", "I", "\u2044", "\xDB"], KeyJ: ["j", "J", "\xBA", "\u0131"], KeyK: ["k", "K", "\u2206", "\u02C6"], KeyL: ["l", "L", "@", "\uFB02"], KeyM: ["m", "M", "\xB5", "\u02D8"], KeyN: ["n", "N", "~", "\u203A"], KeyO: ["o", "O", "\xF8", "\xD8"], KeyP: ["p", "P", "\u03C0", "\u220F"], KeyQ: ["q", "Q", "\xAB", "\xBB"], KeyR: ["r", "R", "\xAE", "\xB8"], KeyS: ["s", "S", "\u201A", "\xCD"], KeyT: ["t", "T", "\u2020", "\u02DD"], KeyU: ["u", "U", "\xA8", "\xC1"], KeyV: ["v", "V", "\u221A", "\u25CA"], KeyW: ["w", "W", "\u2211", "\u201E"], KeyX: ["x", "X", "\u2248", "\xD9"], KeyY: ["z", "Z", "\u03A9", "\u02C7"], KeyZ: ["y", "Y", "\xA5", "\u2021"], Digit1: ["1", "!", "\xA1", "\xAC"], Digit2: ["2", '"', "\u201C", "\u201D"], Digit3: ["3", "\xA7", "\xB6", "#"], Digit4: ["4", "$", "\xA2", "\xA3"], Digit5: ["5", "%", "[", "\uFB01"], Digit6: ["6", "&", "]", "^"], Digit7: ["7", "/", "|", "\\"], Digit8: ["8", "(", "{", "\u02DC"], Digit9: ["9", ")", "}", "\xB7"], Digit0: ["0", "=", "\u2260", "\xAF"], Space: [" ", " ", " ", " "], Minus: ["\xDF", "?", "\xBF", "\u02D9"], Equal: ["\xB4", "`", "'", "\u02DA"], BracketLeft: ["\xFC", "\xDC", "\u2022", "\xB0"], BracketRight: ["+", "*", "\xB1", "\uF8FF"], Backslash: ["#", "'", "\u2018", "\u2019"], Semicolon: ["\xF6", "\xD6", "\u0153", "\u0152"], Quote: ["\xE4", "\xC4", "\xE6", "\xC6"], Backquote: ["<", ">", "\u2264", "\u2265"], Comma: [",", ";", "\u221E", "\u02DB"], Period: [".", ":", "\u2026", "\xF7"], Slash: ["-", "_", "\u2013", "\u2014"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], NumpadDecimal: [",", ",", ".", "."], IntlBackslash: ["^", "\xB0", "\u201E", "\u201C"], NumpadEqual: ["=", "=", "=", "="] } }), Hi({ id: "dvorak", locale: "en", displayName: "Dvorak", virtualLayout: "dvorak", platform: "", score: 0, mapping: { KeyA: ["a", "A", "\xE5", "\xC5"], KeyB: ["x", "X", "\u2248", "\u02DB"], KeyC: ["j", "J", "\u2206", "\xD4"], KeyD: ["e", "E", "\xB4", "\xB4"], KeyE: [".", ">", "\u2265", "\u02D8"], KeyF: ["u", "U", "\xA8", "\xA8"], KeyG: ["i", "I", "\u02C6", "\u02C6"], KeyH: ["d", "D", "\u2202", "\xCE"], KeyI: ["c", "C", "\xE7", "\xC7"], KeyJ: ["h", "H", "\u02D9", "\xD3"], KeyK: ["t", "T", "\u2020", "\u02C7"], KeyL: ["n", "N", "\u02DC", "\u02DC"], KeyM: ["m", "M", "\xB5", "\xC2"], KeyN: ["b", "B", "\u222B", "\u0131"], KeyO: ["r", "R", "\xAE", "\u2030"], KeyP: ["l", "L", "\xAC", "\xD2"], KeyQ: ["'", '"', "\xE6", "\xC6"], KeyR: ["p", "P", "\u03C0", "\u220F"], KeyS: ["o", "O", "\xF8", "\xD8"], KeyT: ["y", "Y", "\xA5", "\xC1"], KeyU: ["g", "G", "\xA9", "\u02DD"], KeyV: ["k", "K", "\u02DA", "\uF8FF"], KeyW: [",", "<", "\u2264", "\xAF"], KeyX: ["q", "Q", "\u0153", "\u0152"], KeyY: ["f", "F", "\u0192", "\xCF"], KeyZ: [";", ":", "\u2026", "\xDA"], Digit1: ["1", "!", "\xA1", "\u2044"], Digit2: ["2", "@", "\u2122", "\u20AC"], Digit3: ["3", "#", "\xA3", "\u2039"], Digit4: ["4", "$", "\xA2", "\u203A"], Digit5: ["5", "%", "\u221E", "\uFB01"], Digit6: ["6", "^", "\xA7", "\uFB02"], Digit7: ["7", "&", "\xB6", "\u2021"], Digit8: ["8", "*", "\u2022", "\xB0"], Digit9: ["9", "(", "\xAA", "\xB7"], Digit0: ["0", ")", "\xBA", "\u201A"], Space: [" ", " ", " ", " "], Minus: ["[", "{", "\u201C", "\u201D"], Equal: ["]", "}", "\u2018", "\u2019"], BracketLeft: ["/", "?", "\xF7", "\xBF"], BracketRight: ["=", "+", "\u2260", "\xB1"], Backslash: ["\\", "|", "\xAB", "\xBB"], Semicolon: ["s", "S", "\xDF", "\xCD"], Quote: ["-", "_", "\u2013", "\u2014"], Backquote: ["`", "~", "`", "`"], Comma: ["w", "W", "\u2211", "\u201E"], Period: ["v", "V", "\u221A", "\u25CA"], Slash: ["z", "Z", "\u03A9", "\xB8"], NumpadDivide: ["/", "/", "/", "/"], NumpadMultiply: ["*", "*", "*", "*"], NumpadSubtract: ["-", "-", "-", "-"], NumpadAdd: ["+", "+", "+", "+"], Numpad1: ["1", "1", "1", "1"], Numpad2: ["2", "2", "2", "2"], Numpad3: ["3", "3", "3", "3"], Numpad4: ["4", "4", "4", "4"], Numpad5: ["5", "5", "5", "5"], Numpad6: ["6", "6", "6", "6"], Numpad7: ["7", "7", "7", "7"], Numpad8: ["8", "8", "8", "8"], Numpad9: ["9", "9", "9", "9"], Numpad0: ["0", "0", "0", "0"], NumpadDecimal: [".", ".", ".", "."], IntlBackslash: ["\xA7", "\xB1", "\xA7", "\xB1"], NumpadEqual: ["=", "=", "=", "="], AudioVolumeUp: ["", "=", "", "="] } });
var Xi = { "\\ne": "\u2260", "\\neq": "\u2260", "\u2212": "-", "-": "-", "\\alpha": "alpha", "\\beta": "beta", "\\gamma": "gamma", "\\delta": "delta", "\\epsilon": "epsilon", "\\varepsilon": "varepsilon", "\\zeta": "zeta", "\\eta": "eta", "\\theta": "theta", "\\vartheta": "vartheta", "\\iota": "iota", "\\kappa": "kappa", "\\lambda": "lambda", "\\mu": "mu", "\\nu": "nu", "\\xi": "xi", "\\pi": "pi", "\\rho": "rho", "\\sigma": "sigma", "\\tau": "tau", "\\upsilon": "upsilon", "\\phi": "phi", "\\varphi": "varphi", "\\chi": "chi", "\\psi": "psi", "\\omega": "omega", "\\Gamma": "Gamma", "\\Delta": "Delta", "\\Theta": "Theta", "\\Lambda": "Lambda", "\\Xi": "Xi", "\\Pi": "Pi", "\\Sigma": "Sigma", "\\Phi": "Phi", "\\Psi": "Psi", "\\Omega": "Omega", "\\exponentialE": "e", "\\imaginaryI": "i", "\\imaginaryJ": "j", "\\!": " ", "\\,": " ", "\\:": " ", "\\;": " ", "\\enskip": " ", "\\enspace": " ", "\\qquad": " ", "\\quad": " " };
var Yi = { "\\pm": "+-", "\\times": "xx", "\\colon": ":", "\\vert": "|", "\\Vert": "||", "\\mid": "|", "\\lbrace": "{", "\\rbrace": "}", "\\lparen": "(", "\\rparen": ")", "\\langle": "(:", "\\rangle": ":)" };
function Qi(t2) {
  var i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2, p2;
  if (!t2)
    return "";
  if (e(t2)) {
    if (0 === t2.length)
      return "";
    if ("first" === t2[0].type && (t2 = t2.slice(1)), 0 === t2.length)
      return "";
    let e5 = "";
    if ("latex" === t2[0].mode)
      for (const i3 of t2)
        e5 += Qi(i3);
    else if ("text" === t2[0].mode) {
      let n3 = 0;
      for (e5 = '"'; "text" === (null === (i2 = t2[n3]) || void 0 === i2 ? void 0 : i2.mode); )
        e5 += t2[n3].body ? Qi(t2[n3].body) : t2[n3].value, n3++;
      e5 += '"' + Qi(t2.slice(n3));
    } else if ("math" === t2[0].mode) {
      let i3 = 0;
      for (; t2[i3] && "math" === t2[i3].mode; )
        e5 += Qi(t2[i3]), i3++;
      e5 += Qi(t2.slice(i3));
    }
    return e5.trim();
  }
  if ("text" === t2.mode)
    return '"' + t2.value + '"';
  let f2 = "";
  const { command: g2 } = t2;
  let y2;
  switch (t2.type) {
    case "first":
      return "";
    case "group":
    case "root":
      f2 = null !== (n2 = Xi[g2]) && void 0 !== n2 ? n2 : Qi(t2.body);
      break;
    case "genfrac":
      {
        const e6 = t2;
        (e6.leftDelim || e6.rightDelim) && (f2 += "." !== e6.leftDelim && e6.leftDelim ? e6.leftDelim : "{:"), e6.hasBarLine ? (f2 += "(", f2 += Qi(e6.above), f2 += ")/(", f2 += Qi(e6.below), f2 += ")") : (f2 += "(" + Qi(e6.above) + "),", f2 += "(" + Qi(e6.below) + ")"), (e6.leftDelim || e6.rightDelim) && (f2 += "." !== e6.rightDelim && e6.rightDelim ? e6.rightDelim : "{:");
      }
      break;
    case "surd":
      f2 += t2.hasEmptyBranch("above") ? "sqrt(" + Qi(t2.body) + ")" : "root(" + Qi(t2.above) + ")(" + Qi(t2.body) + ")";
      break;
    case "latex":
      f2 = t2.value;
      break;
    case "leftright":
      {
        const e6 = t2;
        f2 += "." !== e6.leftDelim && e6.leftDelim ? e6.leftDelim : "{:", f2 += Qi(e6.body), f2 += "." !== e6.rightDelim && e6.rightDelim ? e6.rightDelim : ":}";
      }
      break;
    case "sizeddelim":
    case "delim":
    case "overlap":
    case "overunder":
    case "box":
      break;
    case "mord":
      f2 = null !== (a2 = null !== (r2 = Xi[g2]) && void 0 !== r2 ? r2 : g2) && void 0 !== a2 ? a2 : "string" == typeof t2.value ? t2.value : "", f2.startsWith("\\") && (f2 += " "), y2 = g2 ? g2.match(/{?\\char"([\dabcdefABCDEF]*)}?/) : null, y2 ? f2 = String.fromCodePoint(Number.parseInt("0x" + y2[1])) : f2.length > 0 && f2.startsWith("\\") && (f2 = "string" == typeof t2.value ? t2.value.charAt(0) : t2.command);
      break;
    case "mbin":
    case "mrel":
    case "minner":
      f2 = null !== (s2 = null !== (o2 = Xi[g2]) && void 0 !== o2 ? o2 : Yi[g2]) && void 0 !== s2 ? s2 : t2.value;
      break;
    case "mopen":
    case "mclose":
      f2 += t2.value;
      break;
    case "mpunct":
      f2 = null !== (l2 = Yi[g2]) && void 0 !== l2 ? l2 : g2;
      break;
    case "mop":
      "\u200B" !== t2.value && (f2 = "", f2 += "\\operatorname" === g2 ? Qi(t2.body) : null !== (u2 = t2.value) && void 0 !== u2 ? u2 : g2, f2 += " ");
      break;
    case "array":
      const e5 = t2.array, i3 = t2.environmentName, b2 = null !== (c2 = { bmatrix: ["[", "]"], "bmatrix*": ["[", "]"] }[i3]) && void 0 !== c2 ? c2 : ["(", ")"], v2 = [];
      for (const t3 of e5) {
        const e6 = [];
        for (const i4 of t3)
          e6.push(b2[0] + Qi(i4) + b2[1]);
        v2.push(e6.join(","));
      }
      const x2 = null !== (d2 = { bmatrix: ["[", "]"], "bmatrix*": ["[", "]"], cases: ["{", ":}"] }[i3]) && void 0 !== d2 ? d2 : ["(", ")"];
      f2 = x2[0] + v2.join(",") + x2[1];
      break;
    case "spacing":
      f2 = null !== (h2 = Xi[g2]) && void 0 !== h2 ? h2 : " ";
      break;
    case "enclose":
      f2 = "(" + Qi(t2.body) + ")";
      break;
    case "space":
      f2 = " ";
      break;
    case "msubsup":
      f2 = "";
      break;
    case "macro":
      f2 = null !== (p2 = null !== (m2 = Xi[g2]) && void 0 !== m2 ? m2 : Yi[g2]) && void 0 !== p2 ? p2 : Qi(t2.body);
  }
  if (!t2.hasEmptyBranch("subscript")) {
    f2 += "_";
    const e5 = Qi(t2.subscript);
    f2 += e5.length > 1 ? "(" + e5 + ")" : e5;
  }
  if (!t2.hasEmptyBranch("superscript")) {
    f2 += "^";
    const e5 = Qi(t2.superscript);
    f2 += e5.length > 1 ? "(" + e5 + ")" : e5;
  }
  return f2;
}
var en = { "p@": "1pt ", "z@": "0pt", maxdimen: "16383.99999pt", hfuzz: "0.1pt", vfuzz: "0.1pt", overfullrule: "5pt", hsize: "6.5in", vsize: "8.9in", parindent: "20pt", maxdepth: "4pt", splitmaxdepth: "\\maxdimen", boxmaxdepth: "\\maxdimen", delimitershortfall: "5pt", nulldelimiterspace: "1.2pt", scriptspace: "0.5pt", topskip: "10pt", splittopskip: "10pt", normalbaselineskip: "12pt", normallineskip: "1pt", normallineskiplimit: "0pt", jot: "3pt", doublerulesep: "2pt", arrayrulewidth: "0.4pt", arraycolsep: "5pt", fboxsep: "3pt", fboxrule: "0.4pt" };
var tn = { "z@skip": "0pt plust0pt minus0pt", hideskip: "-1000pt plust 1fill", "@flushglue": "0pt plust 1fill", parskip: "0pt plus 1pt", abovedisplayskip: "12pt plus 3pt minus 9pt", abovedisplayshortskip: "0pt plus 3pt", belowdisplayskip: "12pt plus 3pt minus 9pt", belowdisplayshortskip: "7pt plus 3pt minus 4pt", parfillskip: "0pt plus 1fil", thinmuskip: "3mu", medmuskip: "4mu plus 2mu minus 4mu", thickmuskip: "5mu plus 5mu", smallskipamount: "3pt plus1pt minus1pt", medskipamount: "6pt plus2pt minus2pt", bigskipamount: "12pt plus4pt minus4pt" };
var nn = { pretolerance: 100, tolerance: 200, hbadness: 1e3, vbadness: 1e3, linepenalty: 10, hyphenpenalty: 50, exhyphenpenalty: 50, binoppenalty: 700, relpenalty: 500, clubpenalty: 150, widowpenalty: 150, displaywidowpenalty: 50, brokenpenalty: 100, predisplaypenalty: 1e4, doublehyphendemerits: 1e4, finalhyphendemerits: 5e3, adjdemerits: 1e4, tracinglostchars: 1, uchyph: 1, delimiterfactor: 901, defaulthyphenchar: "\\-", defaultskewchar: -1, newlinechar: -1, showboxbreadth: 5, showboxdepth: 3, errorcontextlines: 5, interdisplaylinepenalty: 100, interfootnotelinepenalty: 100, baselineSkip: 1.2, arraystretch: "", month: new Date().getMonth() + 1, day: new Date().getDate(), year: new Date().getFullYear() };
var rn;
function an(e5) {
  var t2, i2;
  if (rn)
    return rn;
  rn = { ...nn };
  for (const i3 of Object.keys(en))
    rn[i3] = null !== (t2 = qt(en[i3], e5, rn)) && void 0 !== t2 ? t2 : 0;
  for (const t3 of Object.keys(tn))
    rn[t3] = null !== (i2 = zt(tn[t3], e5, rn)) && void 0 !== i2 ? i2 : 0;
  return rn;
}
var on = { strings: { en: { "keyboard.tooltip.functions": "Functions", "keyboard.tooltip.symbols": "Symbols", "keyboard.tooltip.greek": "Greek Letters", "keyboard.tooltip.command": "LaTeX Command Mode", "keyboard.tooltip.numeric": "Numeric", "keyboard.tooltip.roman": "Roman Letters", "tooltip.copy to clipboard": "Copy to Clipboard", "tooltip.redo": "Redo", "tooltip.toggle virtual keyboard": "Toggle Virtual Keyboard", "tooltip.undo": "Undo", "menu.insert matrix": "Insert Matrix", "menu.insert vector": "Insert Vector", "submenu.array.matrix delimiters": "Matrix Delimiters", "menu.array.add row above": "Add Row After", "menu.array.add row below": "Add Row Before", "menu.array.add column after": "Add Column After", "menu.array.add column before": "Add Column Before", "menu.array.delete row": "Delete Row", "menu.array.delete rows": "Delete Selected Rows", "menu.array.delete column": "Delete Column", "menu.array.delete columns": "Delete Selected Columns", "submenu.array.insert separator": "Insert Separator", "menu.insert table": "Insert Table", "submenu.table style": "Table Style" }, ar: { "keyboard.tooltip.functions": "\u0645\u0647\u0627\u0645", "keyboard.tooltip.symbols": "\u062D\u0631\u0641 \u0627\u0648 \u0631\u0645\u0632", "keyboard.tooltip.greek": "\u062D\u0631\u0648\u0641 \u064A\u0648\u0646\u0627\u0646\u064A\u0629", "keyboard.tooltip.command": "\u062D\u0627\u0644\u0629 \u062A\u0644\u0642\u064A \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u062A\u0643", "keyboard.tooltip.numeric": "\u0627\u0644\u0631\u0642\u0645\u064A\u0629", "keyboard.tooltip.roman": "\u0631\u0645\u0648\u0632 \u0627\u0644\u0627\u062D\u0631\u0641 \u0627\u0644\u0631\u0648\u0645\u0627\u0646\u064A\u0629", "tooltip.copy to clipboard": "\u0646\u0633\u062E \u0625\u0644\u0649 \u0627\u0644\u062D\u0627\u0641\u0638\u0629", "tooltip.redo": "\u0627\u0644\u0625\u0639\u0627\u062F\u0629", "tooltip.toggle virtual keyboard": "\u062A\u0628\u062F\u064A\u0644 \u0644\u0648\u062D\u0629 \u0627\u0644\u0645\u0641\u0627\u062A\u064A\u062D \u0627\u0644\u0625\u0641\u062A\u0631\u0627\u0636\u064A\u0629", "tooltip.undo": "\u0625\u0644\u063A\u0627\u0621", "menu.insert matrix": "\u0623\u062F\u062E\u0644 \u0627\u0644\u0645\u0635\u0641\u0648\u0641\u0629", "menu.insert vector": "\u0623\u062F\u062E\u0644 \u0645\u062A\u062C\u0647", "submenu.array.matrix delimiters": "\u0645\u062D\u062F\u062F\u0627\u062A \u0627\u0644\u0645\u0635\u0641\u0648\u0641\u0629", "menu.array.add row above": "\u0623\u0636\u0641 \u0635\u0641\u064B\u0627 \u0628\u0639\u062F \u0630\u0644\u0643", "menu.array.add row below": "\u0623\u0636\u0641 \u0627\u0644\u0635\u0641 \u0642\u0628\u0644", "menu.array.add column after": "\u0623\u0636\u0641 \u0627\u0644\u0639\u0645\u0648\u062F \u0628\u0639\u062F \u0630\u0644\u0643", "menu.array.add column before": "\u0623\u0636\u0641 \u0627\u0644\u0639\u0645\u0648\u062F \u0642\u0628\u0644", "menu.array.delete row": "\u0627\u062D\u0630\u0641 \u0635\u0641", "menu.array.delete rows": "\u062D\u0630\u0641 \u0627\u0644\u0635\u0641\u0648\u0641 \u0627\u0644\u0645\u062D\u062F\u062F\u0629", "menu.array.delete column": "\u062D\u0630\u0641 \u0627\u0644\u0639\u0645\u0648\u062F", "menu.array.delete columns": "\u062D\u0630\u0641 \u0627\u0644\u0623\u0639\u0645\u062F\u0629 \u0627\u0644\u0645\u062D\u062F\u062F\u0629", "submenu.array.insert separator": "\u0623\u062F\u062E\u0644 \u0641\u0627\u0635\u0644", "menu.insert table": "\u0625\u062F\u0631\u0627\u062C \u062C\u062F\u0648\u0644", "submenu.table style": "\u0646\u0645\u0637 \u0627\u0644\u062C\u062F\u0648\u0644" }, bg: { "keyboard.tooltip.functions": "\u0424\u0443\u043D\u043A\u0446\u0438\u0438", "keyboard.tooltip.symbols": "\u0421\u0438\u043C\u0432\u043E\u043B\u0438", "keyboard.tooltip.greek": "\u0413\u0440\u044A\u0446\u043A\u0438 \u0431\u0443\u043A\u0432\u0438", "keyboard.tooltip.command": "\u041A\u043E\u043C\u0430\u043D\u0434\u0435\u043D \u0440\u0435\u0436\u0438\u043C \u043D\u0430 \u043B\u0430\u0442\u0435\u043A\u0441", "keyboard.tooltip.numeric": "\u0427\u0438\u0441\u043B\u043E\u0432\u0438", "keyboard.tooltip.roman": "\u0420\u0438\u043C\u0441\u043A\u0438 \u0431\u0443\u043A\u0432\u0438", "tooltip.copy to clipboard": "\u041A\u043E\u043F\u0438\u0440\u0430\u043D\u0435 \u0432 \u043A\u043B\u0438\u043F\u0431\u043E\u0440\u0434\u0430", "tooltip.redo": "\u041F\u043E\u0432\u0442\u043E\u0440\u043D\u043E", "tooltip.toggle virtual keyboard": "\u041F\u0440\u0435\u0432\u043A\u043B\u044E\u0447\u0432\u0430\u043D\u0435 \u043D\u0430 \u0432\u0438\u0440\u0442\u0443\u0430\u043B\u043D\u0430 \u043A\u043B\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u0430", "tooltip.undo": "\u041E\u0442\u043C\u044F\u043D\u0430", "menu.insert matrix": "\u0412\u043C\u044A\u043A\u0432\u0430\u043D\u0435 \u043D\u0430 \u043C\u0430\u0442\u0440\u0438\u0446\u0430", "menu.insert vector": "\u0412\u043C\u044A\u043A\u0432\u0430\u043D\u0435 \u043D\u0430 \u0432\u0435\u043A\u0442\u043E\u0440", "submenu.array.matrix delimiters": "\u041C\u0430\u0442\u0440\u0438\u0447\u043D\u0438 \u0440\u0430\u0437\u0434\u0435\u043B\u0438\u0442\u0435\u043B\u0438", "menu.array.add row above": "\u0414\u043E\u0431\u0430\u0432\u044F\u043D\u0435 \u043D\u0430 \u0440\u0435\u0434 \u0441\u043B\u0435\u0434", "menu.array.add row below": "\u0414\u043E\u0431\u0430\u0432\u044F\u043D\u0435 \u043D\u0430 \u0440\u0435\u0434 \u043F\u0440\u0435\u0434\u0438", "menu.array.add column after": "\u0414\u043E\u0431\u0430\u0432\u044F\u043D\u0435 \u043D\u0430 \u043A\u043E\u043B\u043E\u043D\u0430 \u0441\u043B\u0435\u0434", "menu.array.add column before": "\u0414\u043E\u0431\u0430\u0432\u044F\u043D\u0435 \u043D\u0430 \u043A\u043E\u043B\u043E\u043D\u0430 \u043F\u0440\u0435\u0434\u0438", "menu.array.delete row": "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043D\u0435 \u043D\u0430 \u0440\u0435\u0434\u0430", "menu.array.delete rows": "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043D\u0435 \u043D\u0430 \u0438\u0437\u0431\u0440\u0430\u043D\u0438\u0442\u0435 \u0440\u0435\u0434\u043E\u0432\u0435", "menu.array.delete column": "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043D\u0435 \u043D\u0430 \u043A\u043E\u043B\u043E\u043D\u0430", "menu.array.delete columns": "\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043D\u0435 \u043D\u0430 \u0438\u0437\u0431\u0440\u0430\u043D\u0438\u0442\u0435 \u043A\u043E\u043B\u043E\u043D\u0438", "submenu.array.insert separator": "\u041F\u043E\u0441\u0442\u0430\u0432\u0435\u0442\u0435 \u0440\u0430\u0437\u0434\u0435\u043B\u0438\u0442\u0435\u043B", "menu.insert table": "\u0412\u043C\u044A\u043A\u0432\u0430\u043D\u0435 \u043D\u0430 \u0442\u0430\u0431\u043B\u0438\u0446\u0430", "submenu.table style": "\u0422\u0430\u0431\u043B\u0438\u0447\u0435\u043D \u0441\u0442\u0438\u043B" }, bs: { "keyboard.tooltip.functions": "Funkcije", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Gr\u010Dka slova", "keyboard.tooltip.command": "LaTeX naredbeni na\u010Din", "keyboard.tooltip.numeric": "Numeri\u010Dki", "keyboard.tooltip.roman": "Rimska slova", "tooltip.copy to clipboard": "Kopirati u clipboard", "tooltip.redo": "Ponovi", "tooltip.toggle virtual keyboard": "Uklju\u010Di / isklju\u010Di virtualnu tipkovnicu", "tooltip.undo": "Poni\u0161ti", "menu.insert matrix": "Umetni matricu", "menu.insert vector": "Umetni vektor", "submenu.array.matrix delimiters": "Matri\u010Dni razdjelnici", "menu.array.add row above": "Dodaj redak nakon", "menu.array.add row below": "Dodaj red prije", "menu.array.add column after": "Dodaj stupac nakon", "menu.array.add column before": "Dodaj stupac prije", "menu.array.delete row": "Izbri\u0161i red", "menu.array.delete rows": "Izbri\u0161i odabrane redove", "menu.array.delete column": "Izbri\u0161i stupac", "menu.array.delete columns": "Izbri\u0161i odabrane stupce", "submenu.array.insert separator": "Umetni separator", "menu.insert table": "Ubaci tabelu", "submenu.table style": "Stil tabele" }, cs: { "keyboard.tooltip.functions": "Funkce", "keyboard.tooltip.symbols": "Symboly", "keyboard.tooltip.greek": "\u0158eck\xE9 dopisy", "keyboard.tooltip.command": "P\u0159\xEDkazov\xFD re\u017Eim LaTeX", "keyboard.tooltip.numeric": "\u010C\xEDseln\xE9", "keyboard.tooltip.roman": "\u0158\xEDmsk\xE9 dopisy", "tooltip.copy to clipboard": "Zkop\xEDrovat do schr\xE1nky", "tooltip.redo": "P\u0159ed\u011Blat", "tooltip.toggle virtual keyboard": "P\u0159epnout virtu\xE1ln\xED kl\xE1vesnici", "tooltip.undo": "Vr\xE1tit", "menu.insert matrix": "Vlo\u017Ete matici", "menu.insert vector": "Vlo\u017Eit vektor", "submenu.array.matrix delimiters": "Odd\u011Blova\u010De matic", "menu.array.add row above": "P\u0159idat \u0159\xE1dek za", "menu.array.add row below": "P\u0159idat \u0159\xE1dek p\u0159ed", "menu.array.add column after": "P\u0159idat sloupec za", "menu.array.add column before": "P\u0159idat sloupec d\u0159\xEDve", "menu.array.delete row": "Odstranit \u0159\xE1dek", "menu.array.delete rows": "Odstranit vybran\xE9 \u0159\xE1dky", "menu.array.delete column": "Odstranit sloupec", "menu.array.delete columns": "Odstranit vybran\xE9 sloupce", "submenu.array.insert separator": "Vlo\u017Ete odd\u011Blova\u010D", "menu.insert table": "Vlo\u017Eit tabulku", "submenu.table style": "Styl tabulky" }, da: { "keyboard.tooltip.functions": "Funktioner", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Gr\xE6ske bogstaver", "keyboard.tooltip.command": "LaTeX kommandotilstand", "keyboard.tooltip.numeric": "Numerisk", "keyboard.tooltip.roman": "Romerske breve", "tooltip.copy to clipboard": "Kopier til udklipsholder", "tooltip.redo": "Gentag igen", "tooltip.toggle virtual keyboard": "Skift virtuelt tastatur", "tooltip.undo": "Fortryd", "menu.insert matrix": "Inds\xE6t matrix", "menu.insert vector": "Inds\xE6t vektor", "submenu.array.matrix delimiters": "Matrixafgr\xE6nsere", "menu.array.add row above": "Tilf\xF8j r\xE6kke efter", "menu.array.add row below": "Tilf\xF8j r\xE6kke f\xF8r", "menu.array.add column after": "Tilf\xF8j kolonne efter", "menu.array.add column before": "Tilf\xF8j kolonne f\xF8r", "menu.array.delete row": "Slet r\xE6kke", "menu.array.delete rows": "Slet valgte r\xE6kker", "menu.array.delete column": "Slet kolonne", "menu.array.delete columns": "Slet valgte kolonner", "submenu.array.insert separator": "Inds\xE6t separator", "menu.insert table": "Inds\xE6t tabel", "submenu.table style": "Tabelstil" }, de: { "keyboard.tooltip.functions": "Funktionen", "keyboard.tooltip.symbols": "Symbole", "keyboard.tooltip.greek": "Griechische Buchstaben", "keyboard.tooltip.command": "LaTeX-Befehlsmodus", "keyboard.tooltip.numeric": "Numerisch", "keyboard.tooltip.roman": "R\xF6mische Buchstaben", "tooltip.copy to clipboard": "In die Zwischenablage kopieren", "tooltip.redo": "Wiederholen", "tooltip.toggle virtual keyboard": "Virtuelle Tastatur umschalten", "tooltip.undo": "Widerrufen", "menu.insert matrix": "Matrix einf\xFCgen", "menu.insert vector": "Vektor einf\xFCgen", "submenu.array.matrix delimiters": "Matrixtrennzeichen", "menu.array.add row above": "Zeile hinzuf\xFCgen nach", "menu.array.add row below": "Zeile hinzuf\xFCgen vor", "menu.array.add column after": "Spalte hinzuf\xFCgen nach", "menu.array.add column before": "Spalte hinzuf\xFCgen vor", "menu.array.delete row": "Zeile l\xF6schen", "menu.array.delete rows": "Ausgew\xE4hlte Zeilen l\xF6schen", "menu.array.delete column": "Spalte l\xF6schen", "menu.array.delete columns": "Ausgew\xE4hlte Spalten l\xF6schen", "submenu.array.insert separator": "Trennzeichen einf\xFCgen", "menu.insert table": "Tabelle einf\xFCgen", "submenu.table style": "Tabellenstil" }, el: { "keyboard.tooltip.functions": "\u03C3\u03C5\u03BD\u03B1\u03C1\u03C4\u03AE\u03C3\u03B5\u03B9\u03C2", "keyboard.tooltip.symbols": "\u03C3\u03CD\u03BC\u03B2\u03BF\u03BB\u03B1", "keyboard.tooltip.greek": "\u03B5\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC \u03B3\u03C1\u03AC\u03BC\u03BC\u03B1\u03C4\u03B1", "keyboard.tooltip.command": "\u039B\u03B5\u03B9\u03C4\u03BF\u03C5\u03C1\u03B3\u03AF\u03B1 \u03B5\u03BD\u03C4\u03BF\u03BB\u03CE\u03BD LaTeX", "keyboard.tooltip.numeric": "\u0391\u03C1\u03B9\u03B8\u03BC\u03B7\u03C4\u03B9\u03BA\u03CC\u03C2", "keyboard.tooltip.roman": "\u03A1\u03C9\u03BC\u03B1\u03CA\u03BA\u03AC \u03B3\u03C1\u03AC\u03BC\u03BC\u03B1\u03C4\u03B1", "tooltip.copy to clipboard": "\u0391\u03BD\u03C4\u03B9\u03B3\u03C1\u03B1\u03C6\u03AE \u03C3\u03C4\u03BF \u03C0\u03C1\u03CC\u03C7\u03B5\u03B9\u03C1\u03BF", "tooltip.redo": "\u039E\u03B1\u03BD\u03B1\u03BA\u03AC\u03BD\u03C9", "tooltip.toggle virtual keyboard": "\u0395\u03BD\u03B1\u03BB\u03BB\u03B1\u03B3\u03AE \u03B5\u03B9\u03BA\u03BF\u03BD\u03B9\u03BA\u03BF\u03CD \u03C0\u03BB\u03B7\u03BA\u03C4\u03C1\u03BF\u03BB\u03BF\u03B3\u03AF\u03BF\u03C5", "tooltip.undo": "\u039E\u03B5\u03BA\u03AC\u03BD\u03C9", "menu.insert matrix": "\u0395\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03AE Matrix", "menu.insert vector": "\u0395\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03AE \u03B4\u03B9\u03B1\u03BD\u03CD\u03C3\u03BC\u03B1\u03C4\u03BF\u03C2", "submenu.array.matrix delimiters": "\u039F\u03C1\u03B9\u03BF\u03B8\u03AD\u03C4\u03B5\u03C2 Matrix", "menu.array.add row above": "\u03A0\u03C1\u03BF\u03C3\u03B8\u03AE\u03BA\u03B7 \u03C3\u03B5\u03B9\u03C1\u03AC\u03C2 \u03BC\u03B5\u03C4\u03AC", "menu.array.add row below": "\u03A0\u03C1\u03BF\u03C3\u03B8\u03AE\u03BA\u03B7 \u03C3\u03B5\u03B9\u03C1\u03AC\u03C2 \u03C0\u03C1\u03B9\u03BD", "menu.array.add column after": "\u03A0\u03C1\u03BF\u03C3\u03B8\u03AE\u03BA\u03B7 \u03C3\u03C4\u03AE\u03BB\u03B7\u03C2 \u03BC\u03B5\u03C4\u03AC", "menu.array.add column before": "\u03A0\u03C1\u03BF\u03C3\u03B8\u03AE\u03BA\u03B7 \u03C3\u03C4\u03AE\u03BB\u03B7\u03C2 \u03C0\u03C1\u03B9\u03BD", "menu.array.delete row": "\u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03C3\u03B5\u03B9\u03C1\u03AC\u03C2", "menu.array.delete rows": "\u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03B5\u03B9\u03C1\u03CE\u03BD", "menu.array.delete column": "\u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03C3\u03C4\u03AE\u03BB\u03B7\u03C2", "menu.array.delete columns": "\u0394\u03B9\u03B1\u03B3\u03C1\u03B1\u03C6\u03AE \u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03C9\u03BD \u03C3\u03C4\u03B7\u03BB\u03CE\u03BD", "submenu.array.insert separator": "\u0395\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03AE \u03B4\u03B9\u03B1\u03C7\u03C9\u03C1\u03B9\u03C3\u03C4\u03B9\u03BA\u03BF\u03CD", "menu.insert table": "\u0395\u03B9\u03C3\u03B1\u03B3\u03C9\u03B3\u03AE \u03C0\u03AF\u03BD\u03B1\u03BA\u03B1", "submenu.table style": "\u03A3\u03C4\u03C5\u03BB \u03C0\u03AF\u03BD\u03B1\u03BA\u03B1" }, es: { "keyboard.tooltip.functions": "Funciones", "keyboard.tooltip.symbols": "S\xEDmbolos", "keyboard.tooltip.greek": "Letras griegas", "keyboard.tooltip.command": "Modo Comando LaTeX", "keyboard.tooltip.numeric": "Num\xE9rico", "keyboard.tooltip.roman": "Letras romanas", "tooltip.copy to clipboard": "Copiar al portapapeles", "tooltip.redo": "Rehacer", "tooltip.toggle virtual keyboard": "Alternar teclado virtual", "tooltip.undo": "Deshacer", "menu.insert matrix": "A\xF1adir Matriz", "menu.insert vector": "A\xF1adir vector", "submenu.array.matrix delimiters": "Delimitadores de Matriz", "menu.array.add row above": "A\xF1adir L\xEDnea Antes", "menu.array.add row below": "A\xF1adir L\xEDnea Despues", "menu.array.add column after": "A\xF1adir Columna Despues", "menu.array.add column before": "A\xF1adir Columna Antes", "menu.array.delete row": "Borrar L\xEDnea", "menu.array.delete rows": "Borrar L\xEDneas Seleccionadas", "menu.array.delete column": "Borrar Columna", "menu.array.delete columns": "Borrar Columnas Seleccionadas", "submenu.array.insert separator": "Insertar un Separador", "menu.insert table": "Insertar Tabla", "submenu.table style": "Estilo de Tabla" }, et: { "keyboard.tooltip.functions": "Funktsioonid", "keyboard.tooltip.symbols": "S\xFCmbolid", "keyboard.tooltip.greek": "Kreeka kirjad", "keyboard.tooltip.command": "LaTeXi k\xE4sure\u017Eiim", "keyboard.tooltip.numeric": "Numbriline", "keyboard.tooltip.roman": "Rooma kirjad", "tooltip.copy to clipboard": "Kopeerida l\xF5ikelauale", "tooltip.redo": "Tee uuesti", "tooltip.toggle virtual keyboard": "L\xFClitage sisse virtuaalne klaviatuur", "tooltip.undo": "V\xF5ta tagasi", "menu.insert matrix": "Sisesta maatriks", "menu.insert vector": "Sisesta vektor", "submenu.array.matrix delimiters": "Maatriksi eraldajad", "menu.array.add row above": "Lisa rida p\xE4rast", "menu.array.add row below": "Lisa rida enne", "menu.array.add column after": "Lisa veerg p\xE4rast", "menu.array.add column before": "Lisa veerg enne", "menu.array.delete row": "Kustuta rida", "menu.array.delete rows": "Kustuta valitud read", "menu.array.delete column": "Kustuta veerg", "menu.array.delete columns": "Kustuta valitud veerud", "submenu.array.insert separator": "Sisestage eraldaja", "menu.insert table": "Sisesta tabeli", "submenu.table style": "Tabeli stiilis" }, fa: { "keyboard.tooltip.functions": "\u062A\u0648\u0627\u0628\u0639", "keyboard.tooltip.symbols": "\u0646\u0645\u0627\u062F\u0647\u0627", "keyboard.tooltip.greek": "\u062D\u0631\u0648\u0641 \u06CC\u0648\u0646\u0627\u0646\u06CC", "keyboard.tooltip.command": "\u062D\u0627\u0644\u062A \u062F\u0633\u062A\u0648\u0631 \u0644\u0627\u062A\u06A9", "keyboard.tooltip.numeric": "\u0639\u062F\u062F\u06CC", "keyboard.tooltip.roman": "\u062D\u0631\u0648\u0641 \u0631\u0648\u0645\u06CC", "tooltip.copy to clipboard": "\u06A9\u067E\u06CC \u0628\u0647 \u06A9\u0644\u06CC\u067E\u0628\u0648\u0631\u062F", "tooltip.redo": "\u0628\u0627\u0632\u06AF\u0634\u062A \u0628\u0647 \u0628\u0639\u062F", "tooltip.toggle virtual keyboard": "\u0646\u0645\u0627\u06CC\u0634/\u0646\u0647\u0641\u062A\u0646 \u06A9\u06CC\u0628\u0648\u0631\u062F \u0645\u062C\u0627\u0632\u06CC", "tooltip.undo": "\u0628\u0627\u0632\u06AF\u0634\u062A \u0628\u0647 \u0642\u0628\u0644", "menu.insert matrix": "\u0645\u0627\u062A\u0631\u06CC\u0633 \u0631\u0627 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F", "menu.insert vector": "\u062F\u0631\u062C \u0628\u0631\u062F\u0627\u0631", "submenu.array.matrix delimiters": "\u0645\u0631\u0632\u0647\u0627\u06CC \u0645\u0627\u062A\u0631\u06CC\u0633", "menu.array.add row above": "\u0628\u0639\u062F \u0627\u0632 \u0622\u0646 \u0631\u062F\u06CC\u0641 \u0627\u0636\u0627\u0641\u0647 \u06A9\u0646\u06CC\u062F", "menu.array.add row below": "\u0631\u062F\u06CC\u0641 \u0631\u0627 \u0642\u0628\u0644 \u0627\u0636\u0627\u0641\u0647 \u06A9\u0646\u06CC\u062F", "menu.array.add column after": "\u0627\u0636\u0627\u0641\u0647 \u06A9\u0631\u062F\u0646 \u0633\u062A\u0648\u0646 \u0628\u0639\u062F", "menu.array.add column before": "\u0633\u062A\u0648\u0646 \u0642\u0628\u0644 \u0631\u0627 \u0627\u0636\u0627\u0641\u0647 \u06A9\u0646\u06CC\u062F", "menu.array.delete row": "\u0631\u062F\u06CC\u0641 \u0631\u0627 \u062D\u0630\u0641 \u06A9\u0646\u06CC\u062F", "menu.array.delete rows": "\u0631\u062F\u06CC\u0641 \u0647\u0627\u06CC \u0627\u0646\u062A\u062E\u0627\u0628 \u0634\u062F\u0647 \u0631\u0627 \u062D\u0630\u0641 \u06A9\u0646\u06CC\u062F", "menu.array.delete column": "\u062D\u0630\u0641 \u0633\u062A\u0648\u0646", "menu.array.delete columns": "\u0633\u062A\u0648\u0646 \u0647\u0627\u06CC \u0627\u0646\u062A\u062E\u0627\u0628 \u0634\u062F\u0647 \u0631\u0627 \u062D\u0630\u0641 \u06A9\u0646\u06CC\u062F", "submenu.array.insert separator": "\u062F\u0631\u062C \u062C\u062F\u0627 \u06A9\u0646\u0646\u062F\u0647", "menu.insert table": "\u0642\u0631\u0627\u0631 \u062F\u0627\u062F\u0646 \u062C\u062F\u0648\u0644", "submenu.table style": "\u0633\u0628\u06A9 \u0645\u06CC\u0632" }, fi: { "keyboard.tooltip.functions": "Toiminnot", "keyboard.tooltip.symbols": "Symbolit", "keyboard.tooltip.greek": "Kreikkalaiset kirjeet", "keyboard.tooltip.command": "LaTeX-komentotila", "keyboard.tooltip.numeric": "Numeerinen", "keyboard.tooltip.roman": "Roomalaiset kirjeet", "tooltip.copy to clipboard": "Kopioi leikep\xF6yd\xE4lle", "tooltip.redo": "Tee uudelleen", "tooltip.toggle virtual keyboard": "Vaihda virtuaalin\xE4pp\xE4imist\xF6", "tooltip.undo": "Kumoa", "menu.insert matrix": "Lis\xE4\xE4 matriisi", "menu.insert vector": "Lis\xE4\xE4 vektori", "submenu.array.matrix delimiters": "Matriisin erottimet", "menu.array.add row above": "Lis\xE4\xE4 rivi j\xE4lkeen", "menu.array.add row below": "Lis\xE4\xE4 rivi ennen", "menu.array.add column after": "Lis\xE4\xE4 sarake j\xE4lkeen", "menu.array.add column before": "Lis\xE4\xE4 sarake ennen", "menu.array.delete row": "Poista rivi", "menu.array.delete rows": "Poista valitut rivit", "menu.array.delete column": "Poista sarake", "menu.array.delete columns": "Poista valitut sarakkeet", "submenu.array.insert separator": "Aseta erotin", "menu.insert table": "Lis\xE4\xE4 taulukko", "submenu.table style": "Taulukon tyyli" }, fr: { "keyboard.tooltip.functions": "Fonctions", "keyboard.tooltip.symbols": "Symboles", "keyboard.tooltip.greek": "Lettres grecques", "keyboard.tooltip.command": "Mode de commandes LaTeX", "keyboard.tooltip.numeric": "Num\xE9rique", "keyboard.tooltip.roman": "Lettres romaines", "tooltip.copy to clipboard": "Copier dans le presse-papiers", "tooltip.redo": "R\xE9tablir", "tooltip.toggle virtual keyboard": "Afficher/Masquer le clavier virtuel", "tooltip.undo": "Annuler", "menu.insert matrix": "Ins\xE9rer une Matrice", "menu.insert vector": "Ins\xE9rer un Vecteur", "submenu.array.matrix delimiters": "D\xE9limiteurs de la Matrice", "menu.array.add row above": "Ajouter une Ligne Avant", "menu.array.add row below": "Ajouter une Ligne Apr\xE8s", "menu.array.add column before": "Ajouter une Colonne Avant", "menu.array.add column after": "Ajouter une Colonne Apr\xE8s", "menu.array.delete row": "Enlever une Ligne", "menu.array.delete rows": "Enlever les Lignes S\xE9lection\xE9es", "menu.array.delete column": "Enlever une Colone", "menu.array.delete columns": "Enlever les Colonnes S\xE9lection\xE9es", "submenu.array.insert separator": "Ins\xE9rer un S\xE9parateur", "menu.insert table": "Ins\xE9rer une Table", "submenu.table style": "Style de la  Table" }, ga: { "keyboard.tooltip.functions": "Feidhmeanna", "keyboard.tooltip.symbols": "Siombail\xED", "keyboard.tooltip.greek": "Litreacha na Gr\xE9ige", "keyboard.tooltip.command": "M\xF3d Ord\xFA LaTeX", "keyboard.tooltip.numeric": "Uimhri\xFAil", "keyboard.tooltip.roman": "Litreacha R\xF3mh\xE1nacha", "tooltip.copy to clipboard": "C\xF3ipe\xE1il chuig an Ghearrthaisce", "tooltip.redo": "Athdh\xE9an", "tooltip.toggle virtual keyboard": "M\xE9archl\xE1ir F\xEDor\xFAil a Fh\xE1il", "tooltip.undo": "Cealaigh", "menu.insert matrix": "Cuir isteach Maitr\xEDs", "menu.insert vector": "Cuir isteach Veicteoir", "submenu.array.matrix delimiters": "Delimiters Maitr\xEDs", "menu.array.add row above": "Cuir Rae Tar \xE9is", "menu.array.add row below": "Cuir Rae Roimh", "menu.array.add column after": "Cuir Col\xFAn Tar \xE9is", "menu.array.add column before": "Cuir Col\xFAn Roimh", "menu.array.delete row": "Scrios Rae", "menu.array.delete rows": "Scrios Sraitheanna Roghnaithe", "menu.array.delete column": "Scrios Col\xFAn", "menu.array.delete columns": "Scrios Col\xFAin Roghnaithe", "submenu.array.insert separator": "Cuir Deighilteoir isteach", "menu.insert table": "Ions\xE1igh T\xE1bla", "submenu.table style": "St\xEDl T\xE1bla" }, he: { "keyboard.tooltip.functions": "\u05E4\u05D5\u05E0\u05E7\u05E6\u05D9\u05D5\u05EA", "keyboard.tooltip.symbols": "\u05E1\u05DE\u05DC\u05D9\u05DD", "keyboard.tooltip.greek": "\u05D0\u05D5\u05EA\u05D9\u05D5\u05EA \u05D9\u05D5\u05D5\u05E0\u05D9\u05D5\u05EA", "keyboard.tooltip.command": "\u05DE\u05E6\u05D1 \u05E4\u05E7\u05D5\u05D3\u05D4 \u05DC\u05D8\u05E7\u05E1", "keyboard.tooltip.numeric": "\u05DE\u05E1\u05E4\u05E8\u05D9", "keyboard.tooltip.roman": "\u05DE\u05DB\u05EA\u05D1\u05D9\u05DD \u05E8\u05D5\u05DE\u05D9\u05D9\u05DD", "tooltip.copy to clipboard": "\u05D4\u05E2\u05EA\u05E7 \u05DC\u05DC\u05D5\u05D7", "tooltip.redo": "\u05DC\u05B7\u05E2\u05B2\u05E9\u05C2\u05D5\u05B9\u05EA \u05E9\u05C1\u05D5\u05BC\u05D1", "tooltip.toggle virtual keyboard": "\u05D4\u05D7\u05DC\u05E3 \u05D0\u05EA \u05D4\u05DE\u05E7\u05DC\u05D3\u05EA \u05D4\u05D5\u05D5\u05D9\u05E8\u05D8\u05D5\u05D0\u05DC\u05D9\u05EA", "tooltip.undo": "\u05DC\u05D1\u05D8\u05DC", "menu.insert matrix": "\u05D4\u05DB\u05E0\u05E1 \u05DE\u05D8\u05E8\u05D9\u05E7\u05E1", "menu.insert vector": "\u05D4\u05DB\u05E0\u05E1 \u05D5\u05E7\u05D8\u05D5\u05E8", "submenu.array.matrix delimiters": "\u05DE\u05E4\u05E8\u05D9\u05D3\u05D9 \u05DE\u05D8\u05E8\u05D9\u05E7\u05E1", "menu.array.add row above": "\u05D4\u05D5\u05E1\u05E3 \u05E9\u05D5\u05E8\u05D4 \u05D0\u05D7\u05E8\u05D9", "menu.array.add row below": "\u05D4\u05D5\u05E1\u05E3 \u05E9\u05D5\u05E8\u05D4 \u05DC\u05E4\u05E0\u05D9", "menu.array.add column after": "\u05D4\u05D5\u05E1\u05E3 \u05E2\u05DE\u05D5\u05D3\u05D4 \u05D0\u05D7\u05E8\u05D9", "menu.array.add column before": "\u05D4\u05D5\u05E1\u05E3 \u05E2\u05DE\u05D5\u05D3\u05D4 \u05DC\u05E4\u05E0\u05D9", "menu.array.delete row": "\u05DE\u05D7\u05E7 \u05E9\u05D5\u05E8\u05D4", "menu.array.delete rows": "\u05DE\u05D7\u05E7 \u05E9\u05D5\u05E8\u05D5\u05EA \u05E9\u05E0\u05D1\u05D7\u05E8\u05D5", "menu.array.delete column": "\u05DE\u05D7\u05E7 \u05E2\u05DE\u05D5\u05D3\u05D4", "menu.array.delete columns": "\u05DE\u05D7\u05E7 \u05E2\u05DE\u05D5\u05D3\u05D5\u05EA \u05E9\u05E0\u05D1\u05D7\u05E8\u05D5", "submenu.array.insert separator": "\u05D4\u05DB\u05E0\u05E1 \u05DE\u05E4\u05E8\u05D9\u05D3", "menu.insert table": "\u05D4\u05DB\u05E0\u05E1 \u05D8\u05D1\u05DC\u05D4", "submenu.table style": "\u05D8\u05D1\u05DC\u05D4 \u05E1\u05B4\u05D2\u05B0\u05E0\u05D5\u05B9\u05DF" }, hr: { "keyboard.tooltip.functions": "Funkcije", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Gr\u010Dka slova", "keyboard.tooltip.command": "LaTeX naredbeni na\u010Din", "keyboard.tooltip.numeric": "Numeri\u010Dki", "keyboard.tooltip.roman": "Rimska slova", "tooltip.copy to clipboard": "Kopirati u me\u0111uspremnik", "tooltip.redo": "Ponovi", "tooltip.toggle virtual keyboard": "Uklju\u010Di / isklju\u010Di virtualnu tipkovnicu", "tooltip.undo": "Poni\u0161ti", "menu.insert matrix": "Umetni matricu", "menu.insert vector": "Umetni vektor", "submenu.array.matrix delimiters": "Matri\u010Dni razdjelnici", "menu.array.add row above": "Dodaj redak nakon", "menu.array.add row below": "Dodaj redak prije", "menu.array.add column after": "Dodaj stupac nakon", "menu.array.add column before": "Dodaj stupac prije", "menu.array.delete row": "Izbri\u0161i redak", "menu.array.delete rows": "Izbri\u0161i odabrane retke", "menu.array.delete column": "Izbri\u0161i stupac", "menu.array.delete columns": "Izbri\u0161i odabrane stupce", "submenu.array.insert separator": "Umetni separator", "menu.insert table": "Umetni tablicu", "submenu.table style": "Stil tabele" }, id: { "keyboard.tooltip.functions": "Fungsi", "keyboard.tooltip.symbols": "Simbol", "keyboard.tooltip.greek": "Huruf Yunani", "keyboard.tooltip.command": "Mode Perintah LaTeX", "keyboard.tooltip.numeric": "Numerik", "keyboard.tooltip.roman": "Surat Romawi", "tooltip.copy to clipboard": "Menyalin ke clipboard", "tooltip.redo": "Mengulangi", "tooltip.toggle virtual keyboard": "Alihkan Keyboard Virtual", "tooltip.undo": "Membuka", "menu.insert matrix": "Sisipkan Matriks", "menu.insert vector": "Sisipkan Vektor", "submenu.array.matrix delimiters": "Pembatas Matriks", "menu.array.add row above": "Tambahkan Baris Setelah", "menu.array.add row below": "Tambahkan Baris Sebelumnya", "menu.array.add column after": "Tambahkan Kolom Setelah", "menu.array.add column before": "Tambahkan Kolom Sebelumnya", "menu.array.delete row": "Hapus Baris", "menu.array.delete rows": "Hapus Baris yang Dipilih", "menu.array.delete column": "Hapus Kolom", "menu.array.delete columns": "Hapus Kolom yang Dipilih", "submenu.array.insert separator": "Sisipkan Pemisah", "menu.insert table": "Sisipkan Tabel", "submenu.table style": "Gaya Tabel" }, hi: { "keyboard.tooltip.functions": "\u0915\u093E\u0930\u094D\u092F\u094B\u0902", "keyboard.tooltip.symbols": "\u092A\u094D\u0930\u0924\u0940\u0915", "keyboard.tooltip.greek": "\u0917\u094D\u0930\u0940\u0915 \u0905\u0915\u094D\u0937\u0930", "keyboard.tooltip.command": "\u0932\u093E\u091F\u0947\u0915\u094D\u0938 \u0915\u092E\u093E\u0902\u0921 \u092E\u094B\u0921", "keyboard.tooltip.numeric": "\u0938\u0902\u0916\u094D\u092F\u093E\u0924\u094D\u092E\u0915", "keyboard.tooltip.roman": "\u0930\u094B\u092E\u0928 \u092A\u0924\u094D\u0930", "tooltip.copy to clipboard": "\u0915\u094D\u0932\u093F\u092A\u092C\u094B\u0930\u094D\u0921 \u092A\u0930 \u0915\u0949\u092A\u0940 \u0915\u0930\u0947\u0902", "tooltip.redo": "\u092B\u093F\u0930 \u0938\u0947 \u0915\u0930\u0947\u0902", "tooltip.toggle virtual keyboard": "\u0935\u0930\u094D\u091A\u0941\u0905\u0932 \u0915\u0940\u092C\u094B\u0930\u094D\u0921 \u091F\u0949\u0917\u0932 \u0915\u0930\u0947\u0902", "tooltip.undo": "\u092A\u0942\u0930\u094D\u0935\u0935\u0924", "menu.insert matrix": "\u092E\u0948\u091F\u094D\u0930\u093F\u0915\u094D\u0938 \u0921\u093E\u0932\u0947\u0902", "menu.insert vector": "\u0935\u0947\u0915\u094D\u091F\u0930 \u0921\u093E\u0932\u0947\u0902", "submenu.array.matrix delimiters": "\u092E\u0948\u091F\u094D\u0930\u093F\u0915\u094D\u0938 \u0938\u0940\u092E\u093E\u0902\u0915\u0915", "menu.array.add row above": "\u092C\u093E\u0926 \u092E\u0947\u0902 \u092A\u0902\u0915\u094D\u0924\u093F \u091C\u094B\u0921\u093C\u0947\u0902", "menu.array.add row below": "\u092A\u0939\u0932\u0947 \u092A\u0902\u0915\u094D\u0924\u093F \u091C\u094B\u0921\u093C\u0947\u0902", "menu.array.add column after": "\u092C\u093E\u0926 \u092E\u0947\u0902 \u0915\u0949\u0932\u092E \u091C\u094B\u0921\u093C\u0947\u0902", "menu.array.add column before": "\u092A\u0939\u0932\u0947 \u0915\u0949\u0932\u092E \u091C\u094B\u0921\u093C\u0947\u0902", "menu.array.delete row": "\u092A\u0902\u0915\u094D\u0924\u093F \u0915\u094B \u0939\u091F\u093E\u090F\u0902", "menu.array.delete rows": "\u091A\u092F\u0928\u093F\u0924 \u092A\u0902\u0915\u094D\u0924\u093F\u092F\u094B\u0902 \u0915\u094B \u0939\u091F\u093E\u090F\u0902", "menu.array.delete column": "\u0915\u0949\u0932\u092E \u0939\u091F\u093E\u090F\u0902", "menu.array.delete columns": "\u091A\u092F\u0928\u093F\u0924 \u0915\u0949\u0932\u092E \u0939\u091F\u093E\u090F\u0902", "submenu.array.insert separator": "\u0935\u093F\u092D\u093E\u091C\u0915 \u0921\u093E\u0932\u0947\u0902", "menu.insert table": "\u091F\u0947\u092C\u0932 \u0907\u0902\u0938\u0930\u094D\u091F \u0915\u0930\u0947\u0902", "submenu.table style": "\u091F\u0947\u092C\u0932 \u0938\u094D\u091F\u093E\u0907\u0932" }, hu: { "keyboard.tooltip.functions": "Funkci\xF3k", "keyboard.tooltip.symbols": "Szimb\xF3lumok", "keyboard.tooltip.greek": "G\xF6r\xF6g levelek", "keyboard.tooltip.command": "LaTeX Parancs m\xF3d", "keyboard.tooltip.numeric": "Numerikus", "keyboard.tooltip.roman": "R\xF3mai levelek", "tooltip.copy to clipboard": "M\xE1solja a v\xE1g\xF3lapra", "tooltip.redo": "\xDAjra", "tooltip.toggle virtual keyboard": "V\xE1lt\xE1s a virtu\xE1lis billenty\u0171zetre", "tooltip.undo": "Visszavon\xE1s", "menu.insert matrix": "Helyezze be a M\xE1trixot", "menu.insert vector": "Vektor besz\xFAr\xE1sa", "submenu.array.matrix delimiters": "M\xE1trixhat\xE1rol\xF3k", "menu.array.add row above": "Sor hozz\xE1ad\xE1sa ut\xE1n", "menu.array.add row below": "Add Add Sor el\u0151tt", "menu.array.add column after": "Oszlop hozz\xE1ad\xE1sa ut\xE1n", "menu.array.add column before": "Add oszlop el\u0151tt", "menu.array.delete row": "Sor t\xF6rl\xE9se", "menu.array.delete rows": "Kijel\xF6lt sorok t\xF6rl\xE9se", "menu.array.delete column": "Oszlop t\xF6rl\xE9se", "menu.array.delete columns": "A kijel\xF6lt oszlopok t\xF6rl\xE9se", "submenu.array.insert separator": "Helyezze be az elv\xE1laszt\xF3t", "menu.insert table": "Helyezze be a t\xE1bl\xE1zatot", "submenu.table style": "T\xE1bl\xE1zatos st\xEDlus" }, it: { "keyboard.tooltip.functions": "Funzioni", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Lettere greche", "keyboard.tooltip.command": "Modalit\xE0 di comando LaTeX", "keyboard.tooltip.numeric": "Numerico", "keyboard.tooltip.roman": "Lettere romane", "tooltip.copy to clipboard": "Copia negli appunti", "tooltip.redo": "Rifare", "tooltip.toggle virtual keyboard": "Attiva / disattiva la tastiera virtuale", "tooltip.undo": "Disfare", "menu.insert matrix": "Inserisci una Matrice", "menu.insert vector": "Inserisci Vettore", "submenu.array.matrix delimiters": "Delimitatori di Matrice", "menu.array.add row above": "Aggiungi una Riga Prima", "menu.array.add row below": "Aggiungi una Riga Dopo", "menu.array.add column before": "Aggiungi una Colonna Prima", "menu.array.add column after": "Aggiungi una Colonna Dopo", "menu.array.delete row": "Rimuovi una Riga", "menu.array.delete rows": "Rimuovi le Righe Selezionate", "menu.array.delete column": "Rimuovi una Colonna", "menu.array.delete columns": "Rimuovi le Colonne Selezionate", "submenu.array.insert separator": "Inserisci un Separatore", "menu.insert table": "Inserisci Tabella", "submenu.table style": "Stile tabella" }, is: { "keyboard.tooltip.functions": "A\xF0ger\xF0ir", "keyboard.tooltip.symbols": "T\xE1kn", "keyboard.tooltip.greek": "Gr\xEDsk br\xE9f", "keyboard.tooltip.command": "LaTeX stj\xF3rnunarstilling", "keyboard.tooltip.numeric": "T\xF6lulegt", "keyboard.tooltip.roman": "R\xF3mversk br\xE9f", "tooltip.copy to clipboard": "Afrita\xF0u \xE1 klemmuspjald", "tooltip.redo": "Endurtaka", "tooltip.toggle virtual keyboard": "Skiptu um s\xFDndarlyklabor\xF0", "tooltip.undo": "Afturkalla", "menu.insert matrix": "Settu fylki inn", "menu.insert vector": "Settu inn Vector", "submenu.array.matrix delimiters": "Matrix afm\xF6rkun", "menu.array.add row above": "B\xE6ta vi\xF0 r\xF6\xF0 \xE1 eftir", "menu.array.add row below": "B\xE6ta vi\xF0 r\xF6\xF0 \xE1\xF0ur", "menu.array.add column after": "B\xE6ta vi\xF0 d\xE1lki \xE1 eftir", "menu.array.add column before": "B\xE6ta vi\xF0 d\xE1lki \xE1\xF0ur", "menu.array.delete row": "Ey\xF0a r\xF6\xF0", "menu.array.delete rows": "Ey\xF0a v\xF6ldum l\xEDnum", "menu.array.delete column": "Ey\xF0a d\xE1lki", "menu.array.delete columns": "Ey\xF0a v\xF6ldum d\xE1lkum", "submenu.array.insert separator": "Settu skiljuna \xED", "menu.insert table": "Settu inn t\xF6flu", "submenu.table style": "T\xF6flu st\xEDl" }, ja: { "keyboard.tooltip.functions": "\u95A2\u6570", "keyboard.tooltip.symbols": "\u30B7\u30F3\u30DC\u30EB", "keyboard.tooltip.greek": "\u30AE\u30EA\u30B7\u30E3\u6587\u5B57", "keyboard.tooltip.command": "\u30E9\u30C6\u30C3\u30AF\u30B9\u30B3\u30DE\u30F3\u30C9\u30E2\u30FC\u30C9", "keyboard.tooltip.numeric": "\u6570\u5024", "keyboard.tooltip.roman": "\u30ED\u30FC\u30DE\u5B57", "tooltip.copy to clipboard": "\u30AF\u30EA\u30C3\u30D7\u30DC\u30FC\u30C9\u306B\u30B3\u30D4\u30FC", "tooltip.redo": "\u3084\u308A\u76F4\u3057", "tooltip.toggle virtual keyboard": "\u4EEE\u60F3\u30AD\u30FC\u30DC\u30FC\u30C9\u306E\u5207\u308A\u66FF\u3048", "tooltip.undo": "\u5143\u306B\u623B\u3059", "menu.insert matrix": "\u30DE\u30C8\u30EA\u30C3\u30AF\u30B9\u3092\u633F\u5165", "menu.insert vector": "\u30D9\u30AF\u30C8\u30EB\u3092\u633F\u5165", "submenu.array.matrix delimiters": "\u884C\u5217\u533A\u5207\u308A\u6587\u5B57", "menu.array.add row above": "\u5F8C\u306B\u884C\u3092\u8FFD\u52A0", "menu.array.add row below": "\u524D\u306B\u884C\u3092\u8FFD\u52A0", "menu.array.add column after": "\u5F8C\u306B\u5217\u3092\u8FFD\u52A0", "menu.array.add column before": "\u524D\u306B\u5217\u3092\u8FFD\u52A0", "menu.array.delete row": "\u884C\u3092\u524A\u9664", "menu.array.delete rows": "\u9078\u629E\u3057\u305F\u884C\u3092\u524A\u9664\u3059\u308B", "menu.array.delete column": "\u5217\u3092\u524A\u9664", "menu.array.delete columns": "\u9078\u629E\u3057\u305F\u5217\u3092\u524A\u9664\u3059\u308B", "submenu.array.insert separator": "\u30BB\u30D1\u30EC\u30FC\u30BF\u30FC\u3092\u633F\u5165", "menu.insert table": "\u30C6\u30FC\u30D6\u30EB\u3092\u633F\u5165", "submenu.table style": "\u30C6\u30FC\u30D6\u30EB\u30B9\u30BF\u30A4\u30EB" }, ko: { "keyboard.tooltip.functions": "\uAE30\uB2A5", "keyboard.tooltip.symbols": "\uAE30\uD638", "keyboard.tooltip.greek": "\uADF8\uB9AC\uC2A4 \uBB38\uC790", "keyboard.tooltip.command": "\uC720\uC561 \uBA85\uB839 \uBAA8\uB4DC", "keyboard.tooltip.numeric": "\uC22B\uC790", "keyboard.tooltip.roman": "\uB85C\uB9C8 \uBB38\uC790", "tooltip.copy to clipboard": "\uD074\uB9BD \uBCF4\uB4DC\uC5D0 \uBCF5\uC0AC", "tooltip.redo": "\uB2E4\uC2DC \uD558\uB2E4", "tooltip.toggle virtual keyboard": "\uAC00\uC0C1 \uD0A4\uBCF4\uB4DC \uC804\uD658", "tooltip.undo": "\uC2E4\uD589 \uCDE8\uC18C", "menu.insert matrix": "\uB9E4\uD2B8\uB9AD\uC2A4 \uC0BD\uC785", "menu.insert vector": "\uBCA1\uD130 \uC0BD\uC785", "submenu.array.matrix delimiters": "\uD589\uB82C \uAD6C\uBD84 \uAE30\uD638", "menu.array.add row above": "\uB4A4\uC5D0 \uD589 \uCD94\uAC00", "menu.array.add row below": "\uC55E\uC5D0 \uD589 \uCD94\uAC00", "menu.array.add column after": "\uB4A4\uC5D0 \uC5F4 \uCD94\uAC00", "menu.array.add column before": "\uC55E\uC5D0 \uC5F4 \uCD94\uAC00", "menu.array.delete row": "\uD589 \uC0AD\uC81C", "menu.array.delete rows": "\uC120\uD0DD\uD55C \uD589 \uC0AD\uC81C", "menu.array.delete column": "\uC5F4 \uC0AD\uC81C", "menu.array.delete columns": "\uC120\uD0DD\uD55C \uC5F4 \uC0AD\uC81C", "submenu.array.insert separator": "\uAD6C\uBD84\uC790 \uC0BD\uC785", "menu.insert table": "\uD45C \uC0BD\uC785", "submenu.table style": "\uD14C\uC774\uBE14 \uC2A4\uD0C0\uC77C" }, lv: { "keyboard.tooltip.functions": "Funkcijas", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Grie\u0137u burti", "keyboard.tooltip.command": "LaTeX komandu re\u017E\u012Bms", "keyboard.tooltip.numeric": "Ciparu skaitlis", "keyboard.tooltip.roman": "Romie\u0161u v\u0113stules", "tooltip.copy to clipboard": "Kop\u0113t starpliktuv\u0113", "tooltip.redo": "P\u0101rtais\u012Bt", "tooltip.toggle virtual keyboard": "P\u0101rsl\u0113gt virtu\u0101lo tastat\u016Bru", "tooltip.undo": "Atsaukt", "menu.insert matrix": "Ievietojiet matricu", "menu.insert vector": "Ievietot vektoru", "submenu.array.matrix delimiters": "Matricas norobe\u017Eot\u0101ji", "menu.array.add row above": "Pievienot rindu p\u0113c", "menu.array.add row below": "Pievienot rindu pirms", "menu.array.add column after": "Pievienot kolonnu p\u0113c", "menu.array.add column before": "Pievienot kolonnu pirms", "menu.array.delete row": "Dz\u0113st rindu", "menu.array.delete rows": "Dz\u0113st atlas\u012Bt\u0101s rindas", "menu.array.delete column": "Dz\u0113st kolonnu", "menu.array.delete columns": "Dz\u0113st atlas\u012Bt\u0101s kolonnas", "submenu.array.insert separator": "Ievietojiet atdal\u012Bt\u0101ju", "menu.insert table": "Ievietojiet tabulu", "submenu.table style": "Galda stils" }, lt: { "keyboard.tooltip.functions": "Funkcijos", "keyboard.tooltip.symbols": "Simboliai", "keyboard.tooltip.greek": "Graiki\u0161kos raid\u0117s", "keyboard.tooltip.command": "LaTeX komand\u0173 re\u017Eimas", "keyboard.tooltip.numeric": "Skaitmeninis", "keyboard.tooltip.roman": "Romos lai\u0161kai", "tooltip.copy to clipboard": "Nukopijuoti \u012F i\u0161karpin\u0119", "tooltip.redo": "Perdaryti", "tooltip.toggle virtual keyboard": "Perjungti virtuali\u0105j\u0105 klaviat\u016Br\u0105", "tooltip.undo": "At\u0161aukti", "menu.insert matrix": "Ievietojiet matricu", "menu.insert vector": "Ievietot vektoru", "submenu.array.matrix delimiters": "Matricas norobe\u017Eot\u0101ji", "menu.array.add row above": "Pievienot rindu p\u0113c", "menu.array.add row below": "Pievienot rindu pirms", "menu.array.add column after": "Pievienot kolonnu p\u0113c", "menu.array.add column before": "Pievienot kolonnu pirms", "menu.array.delete row": "Dz\u0113st rindu", "menu.array.delete rows": "Dz\u0113st atlas\u012Bt\u0101s rindas", "menu.array.delete column": "Dz\u0113st kolonnu", "menu.array.delete columns": "Dz\u0113st atlas\u012Bt\u0101s kolonnas", "submenu.array.insert separator": "Ievietojiet atdal\u012Bt\u0101ju", "menu.insert table": "Ievietojiet tabulu", "submenu.table style": "Tabulas stili" }, lu: { "keyboard.tooltip.functions": "Funktiounen", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Griichesch Br\xE9iwer", "keyboard.tooltip.command": "LaTeX Kommando Modus", "keyboard.tooltip.numeric": "Numeresch", "keyboard.tooltip.roman": "R\xE9imesch Br\xE9iwer", "tooltip.copy to clipboard": "Kop\xE9iert op Clipboard", "tooltip.redo": "Nees nei maachen", "tooltip.toggle virtual keyboard": "Wiesselt Virtuell Tastatur", "tooltip.undo": "Undoen", "menu.insert matrix": "Matrix asetzen", "menu.insert vector": "Insert Vector", "submenu.array.matrix delimiters": "Matrix Ofgrenzer", "menu.array.add row above": "Dob\xE4izemaachen Rei No", "menu.array.add row below": "F\xFC\xFCgt Rei vir", "menu.array.add column after": "Dob\xE4izemaachen Kolonn No", "menu.array.add column before": "Kolonn derb\xE4i Virun", "menu.array.delete row": "Rad l\xE4schen", "menu.array.delete rows": "L\xE4scht Ausgewielte Reien", "menu.array.delete column": "L\xE4scht Kolonn", "menu.array.delete columns": "L\xE4scht Ausgewielte Kolonnen", "submenu.array.insert separator": "Insert Separator", "menu.insert table": "D\xEBsch anzeginn", "submenu.table style": "D\xEBsch Style" }, nl: { "keyboard.tooltip.functions": "Functies", "keyboard.tooltip.symbols": "Symbolen", "keyboard.tooltip.greek": "Griekse letters", "keyboard.tooltip.command": "LaTeX commando mode", "keyboard.tooltip.numeric": "Numeriek", "keyboard.tooltip.roman": "Romeinse letters", "tooltip.copy to clipboard": "Kopi\xEBren naar klembord", "tooltip.redo": "Opnieuw", "tooltip.toggle virtual keyboard": "Schakel naar virtueel toetsenbord", "tooltip.undo": "Ongedaan maken", "menu.insert matrix": "Matrix invoegen", "menu.insert vector": "Vector invoegen", "submenu.array.matrix delimiters": "Matrixscheidingstekens", "menu.array.add row above": "Rij toevoegen na", "menu.array.add row below": "Rij toevoegen eerder", "menu.array.add column after": "Kolom toevoegen na", "menu.array.add column before": "Kolom toevoegen voor", "menu.array.delete row": "Verwijder rij", "menu.array.delete rows": "Geselecteerde rijen verwijderen", "menu.array.delete column": "Kolom verwijderen", "menu.array.delete columns": "Geselecteerde kolommen verwijderen", "submenu.array.insert separator": "Scheidingsteken invoegen", "menu.insert table": "Tabel invoegen", "submenu.table style": "Tabelstijl" }, no: { "keyboard.tooltip.functions": "Funksjoner", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Greske bokstaver", "keyboard.tooltip.command": "LaTeX kommandomodus", "keyboard.tooltip.numeric": "Numerisk", "keyboard.tooltip.roman": "Romerske bokstaver", "tooltip.copy to clipboard": "Kopiere til utklippstavle", "tooltip.redo": "Gj\xF8re om", "tooltip.toggle virtual keyboard": "Bytt virtuelt tastatur", "tooltip.undo": "Angre", "menu.insert matrix": "Sett inn matrise", "menu.insert vector": "Sett inn vektor", "submenu.array.matrix delimiters": "Matrix avgrensere", "menu.array.add row above": "Legg til rad etter", "menu.array.add row below": "Legg til rad f\xF8r", "menu.array.add column after": "Legg til kolonne etter", "menu.array.add column before": "Legg til kolonne f\xF8r", "menu.array.delete row": "Slett rad", "menu.array.delete rows": "Slett valgte rader", "menu.array.delete column": "Slett kolonne", "menu.array.delete columns": "Slett valgte kolonner", "submenu.array.insert separator": "Sett inn skilletegn", "menu.insert table": "Sett inn tabell", "submenu.table style": "Tabellstil" }, mk: { "keyboard.tooltip.functions": "\u0424\u0443\u043D\u043A\u0446\u0438\u0438", "keyboard.tooltip.symbols": "\u0421\u0438\u043C\u0431\u043E\u043B\u0438", "keyboard.tooltip.greek": "\u0413\u0440\u0447\u043A\u0438 \u0431\u0443\u043A\u0432\u0438", "keyboard.tooltip.command": "\u0420\u0435\u0436\u0438\u043C \u043D\u0430 \u043A\u043E\u043C\u0430\u043D\u0434\u0430 \u0432\u043E \u043B\u0430\u0442\u0435\u043A\u0441", "keyboard.tooltip.numeric": "\u041D\u0443\u043C\u0435\u0440\u0438\u0447\u043A\u0438", "keyboard.tooltip.roman": "\u0420\u0438\u043C\u0441\u043A\u0438 \u043F\u0438\u0441\u043C\u0430", "tooltip.copy to clipboard": "\u041A\u043E\u043F\u0438\u0440\u0430\u0458\u0442\u0435 \u0432\u043E \u043A\u043B\u0438\u043F\u0431\u043E\u0440\u0434", "tooltip.redo": "\u041F\u043E\u0432\u0442\u043E\u0440\u043D\u043E", "tooltip.toggle virtual keyboard": "\u0412\u043A\u043B\u0443\u0447\u0435\u0442\u0435 \u0458\u0430 \u0432\u0438\u0440\u0442\u0443\u0435\u043B\u043D\u0430\u0442\u0430 \u0442\u0430\u0441\u0442\u0430\u0442\u0443\u0440\u0430", "tooltip.undo": "\u0412\u0440\u0430\u0442\u0438", "menu.insert matrix": "\u0412\u043C\u0435\u0442\u043D\u0435\u0442\u0435 \u043C\u0430\u0442\u0440\u0438\u0446\u0430", "menu.insert vector": "\u0412\u043C\u0435\u0442\u043D\u0438 \u0432\u0435\u043A\u0442\u043E\u0440", "submenu.array.matrix delimiters": "\u0420\u0430\u0437\u0433\u0440\u0430\u043D\u0438\u0447\u0443\u0432\u0430\u0447\u0438 \u043D\u0430 \u043C\u0430\u0442\u0440\u0438\u0446\u0430", "menu.array.add row above": "\u0414\u043E\u0434\u0430\u0434\u0435\u0442\u0435 \u0440\u0435\u0434 \u043F\u043E\u0441\u043B\u0435", "menu.array.add row below": "\u0414\u043E\u0434\u0430\u0434\u0438 \u0440\u0435\u0434 \u043F\u0440\u0435\u0434 \u0442\u043E\u0430", "menu.array.add column after": "\u0414\u043E\u0434\u0430\u0434\u0435\u0442\u0435 \u043A\u043E\u043B\u043E\u043D\u0430 \u043F\u043E\u0441\u043B\u0435", "menu.array.add column before": "\u0414\u043E\u0434\u0430\u0434\u0435\u0442\u0435 \u043A\u043E\u043B\u043E\u043D\u0430 \u043F\u0440\u0435\u0434 \u0442\u043E\u0430", "menu.array.delete row": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u0433\u043E \u0440\u0435\u0434\u043E\u0442", "menu.array.delete rows": "\u0418\u0437\u0431\u0440\u0438\u0448\u0435\u0442\u0435 \u0433\u0438 \u0438\u0437\u0431\u0440\u0430\u043D\u0438\u0442\u0435 \u0440\u0435\u0434\u043E\u0432\u0438", "menu.array.delete column": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u0458\u0430 \u043A\u043E\u043B\u043E\u043D\u0430\u0442\u0430", "menu.array.delete columns": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u0458\u0430 \u043A\u043E\u043B\u043E\u043D\u0430\u0442\u0430", "submenu.array.insert separator": "\u0412\u043C\u0435\u0442\u043D\u0435\u0442\u0435 \u0441\u0435\u043F\u0430\u0440\u0430\u0442\u043E\u0440", "menu.insert table": "\u0412\u043C\u0435\u0442\u043D\u0438 \u0442\u0430\u0431\u0435\u043B\u0430", "submenu.table style": "\u0422\u0430\u0431\u0435\u043B\u0430 \u0441\u0442\u0438\u043B" }, pl: { "keyboard.tooltip.functions": "Funkcje", "keyboard.tooltip.symbols": "Symbolika", "keyboard.tooltip.greek": "Litery greckie", "keyboard.tooltip.command": "Tryb polece\u0144 LaTeX", "keyboard.tooltip.numeric": "Numeryczne", "keyboard.tooltip.roman": "Litery rzymskie", "tooltip.copy to clipboard": "Kopiuj do Schowka", "tooltip.redo": "Przywr\xF3\u0107", "tooltip.toggle virtual keyboard": "Prze\u0142\u0105cz wirtualn\u0105 klawiatur\u0119", "tooltip.undo": "Cofnij", "menu.insert matrix": "Wstaw macierz", "menu.insert vector": "Wstaw wektor", "submenu.array.matrix delimiters": "Ograniczniki macierzy", "menu.array.add row above": "Dodaj wiersz po", "menu.array.add row below": "Dodaj wiersz przed", "menu.array.add column after": "Dodaj kolumn\u0119 po", "menu.array.add column before": "Dodaj kolumn\u0119 przed", "menu.array.delete row": "Usu\u0144 wiersz", "menu.array.delete rows": "Usu\u0144 wybrane wiersze", "menu.array.delete column": "Usu\u0144 kolumn\u0119", "menu.array.delete columns": "Usu\u0144 wybrane kolumny", "submenu.array.insert separator": "Wstaw separator", "menu.insert table": "Wype\u0142nij tabel\u0119", "submenu.table style": "Styl tabel\u0119" }, pt: { "keyboard.tooltip.functions": "Functions", "keyboard.tooltip.symbols": "S\xEDmbolos", "keyboard.tooltip.greek": "Letras gregas", "keyboard.tooltip.command": "Modo de Comando LaTeX", "keyboard.tooltip.numeric": "Num\xE9rico", "keyboard.tooltip.roman": "Letras romanas", "tooltip.copy to clipboard": "Copiar para \xE1rea de transfer\xEAncia", "tooltip.redo": "Refazer", "tooltip.toggle virtual keyboard": "Alternar teclado virtual", "tooltip.undo": "Desfazer", "menu.insert matrix": "Inserir Matriz", "menu.insert vector": "Inserir vetor", "submenu.array.matrix delimiters": "Delimitadores de matriz", "menu.array.add row above": "Adicionar linha depois", "menu.array.add row below": "Adicionar linha antes", "menu.array.add column after": "Adicionar coluna depois", "menu.array.add column before": "Adicionar coluna antes", "menu.array.delete row": "Excluir linha", "menu.array.delete rows": "Excluir linhas selecionadas", "menu.array.delete column": "Apagar Coluna", "menu.array.delete columns": "Excluir Colunas Selecionadas", "submenu.array.insert separator": "Inserir Separador", "menu.insert table": "Insira a tabela", "submenu.table style": "Estilo tabela" }, ro: { "keyboard.tooltip.functions": "Func\u021Bii", "keyboard.tooltip.symbols": "Simboluri", "keyboard.tooltip.greek": "Scrisori grece\u0219ti", "keyboard.tooltip.command": "Modul de comand\u0103 latex", "keyboard.tooltip.numeric": "Numeric", "keyboard.tooltip.roman": "Scrisori romane", "tooltip.copy to clipboard": "Copia\u021Bi \xEEn clipboard", "tooltip.redo": "A reface", "tooltip.toggle virtual keyboard": "Comuta\u021Bi tastatura virtual\u0103", "tooltip.undo": "Anula", "menu.insert matrix": "Introduce\u021Bi Matrix", "menu.insert vector": "Insera\u021Bi Vector", "submenu.array.matrix delimiters": "Delimitatori de matrice", "menu.array.add row above": "Ad\u0103uga\u021Bi r\xE2ndul dup\u0103", "menu.array.add row below": "Ad\u0103uga\u021Bi r\xE2ndul \xEEnainte", "menu.array.add column after": "Ad\u0103uga\u021Bi o coloan\u0103 dup\u0103", "menu.array.add column before": "Ad\u0103uga\u021Bi o coloan\u0103 \xEEnainte", "menu.array.delete row": "\u0218terge\u021Bi r\xE2ndul", "menu.array.delete rows": "\u0218terge\u021Bi r\xE2ndurile selectate", "menu.array.delete column": "\u0218terge\u021Bi coloana", "menu.array.delete columns": "\u0218terge\u021Bi coloanele selectate", "submenu.array.insert separator": "Introduce\u021Bi separatorul", "menu.insert table": "Introduce\u021Bi tabelul", "submenu.table style": "Table style" }, ru: { "keyboard.tooltip.functions": "\u0424\u0443\u043D\u043A\u0446\u0438\u0438", "keyboard.tooltip.symbols": "\u0421\u0438\u043C\u0432\u043E\u043B\u044B", "keyboard.tooltip.greek": "\u0413\u0440\u0435\u0447\u0435\u0441\u043A\u0438\u0435 \u0431\u0443\u043A\u0432\u044B", "keyboard.tooltip.command": "\u0420\u0435\u0436\u0438\u043C \u043A\u043E\u043C\u0430\u043D\u0434\u043D\u043E\u0439 \u0441\u0442\u0440\u043E\u043A\u0438 \u041B\u0430\u0442\u0435\u043A\u0441", "keyboard.tooltip.numeric": "\u0447\u0438\u0441\u043B\u043E\u0432\u043E\u0439", "keyboard.tooltip.roman": "\u041B\u0430\u0442\u0438\u043D\u0441\u043A\u0438\u0435 \u0431\u0443\u043A\u0432\u044B", "tooltip.copy to clipboard": "\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430", "tooltip.redo": "\u043F\u0435\u0440\u0435\u0434\u0435\u043B\u044B\u0432\u0430\u0442\u044C", "tooltip.toggle virtual keyboard": "\u041F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0432\u0438\u0440\u0442\u0443\u0430\u043B\u044C\u043D\u0443\u044E \u043A\u043B\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u0443", "tooltip.undo": "\u0440\u0430\u0441\u0441\u0442\u0435\u0433\u0438\u0432\u0430\u0442\u044C", "menu.insert matrix": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u043C\u0430\u0442\u0440\u0438\u0446\u0443", "menu.insert vector": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0432\u0435\u043A\u0442\u043E\u0440", "submenu.array.matrix delimiters": "\u041C\u0430\u0442\u0440\u0438\u0447\u043D\u044B\u0435 \u0440\u0430\u0437\u0434\u0435\u043B\u0438\u0442\u0435\u043B\u0438", "menu.array.add row above": "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443 \u043F\u043E\u0441\u043B\u0435", "menu.array.add row below": "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443 \u043F\u0435\u0440\u0435\u0434", "menu.array.add column after": "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u043E\u043B\u0431\u0435\u0446 \u043F\u043E\u0441\u043B\u0435", "menu.array.add column before": "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u043E\u043B\u0431\u0435\u0446 \u043F\u0435\u0440\u0435\u0434", "menu.array.delete row": "\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443", "menu.array.delete rows": "\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0435 \u0441\u0442\u0440\u043E\u043A\u0438", "menu.array.delete column": "\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0441\u0442\u043E\u043B\u0431\u0435\u0446", "menu.array.delete columns": "\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0435 \u0441\u0442\u043E\u043B\u0431\u0446\u044B", "submenu.array.insert separator": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0440\u0430\u0437\u0434\u0435\u043B\u0438\u0442\u0435\u043B\u044C", "menu.insert table": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0442\u0430\u0431\u043B\u0438\u0446\u0443", "submenu.table style": "\u0422\u0430\u0431\u043B\u0438\u0447\u043D\u044B\u0439 \u0441\u0442\u0438\u043B\u044C" }, sk: { "keyboard.tooltip.functions": "Functions", "keyboard.tooltip.symbols": "Symboly", "keyboard.tooltip.greek": "Gr\xE9cke listy", "keyboard.tooltip.command": "Pr\xEDkazov\xFD re\u017Eim LaTeX", "keyboard.tooltip.numeric": "Numerick\xE9", "keyboard.tooltip.roman": "R\xEDmske listy", "tooltip.copy to clipboard": "Skop\xEDrova\u0165 do schr\xE1nky", "tooltip.redo": "Znova", "tooltip.toggle virtual keyboard": "Prepn\xFA\u0165 virtu\xE1lnu kl\xE1vesnicu", "tooltip.undo": "Vr\xE1tenie sp\xE4\u0165", "menu.insert matrix": "Vlo\u017Ete maticu", "menu.insert vector": "Vlo\u017Ete vektor", "submenu.array.matrix delimiters": "Odde\u013Eova\u010De mat\xEDc", "menu.array.add row above": "Pridajte riadok za", "menu.array.add row below": "Pridajte riadok pred", "menu.array.add column after": "Prida\u0165 st\u013Apec za", "menu.array.add column before": "Pridajte st\u013Apec predt\xFDm", "menu.array.delete row": "Odstr\xE1ni\u0165 riadok", "menu.array.delete rows": "Odstr\xE1ni\u0165 vybrat\xE9 riadky", "menu.array.delete column": "Odstr\xE1ni\u0165 st\u013Apec", "menu.array.delete columns": "Odstr\xE1ni\u0165 vybrat\xE9 st\u013Apce", "submenu.array.insert separator": "Vlo\u017Ete odde\u013Eova\u010D", "menu.insert table": "Vlo\u017Ete tabu\u013Eku", "submenu.table style": "\u0160t\xFDl tabu\u013Eky" }, sl: { "keyboard.tooltip.functions": "Funkcije", "keyboard.tooltip.symbols": "Simboli", "keyboard.tooltip.greek": "Gr\u0161ka pisma", "keyboard.tooltip.command": "Ukazni na\u010Din LaTeX", "keyboard.tooltip.numeric": "\u0160tevilsko", "keyboard.tooltip.roman": "Rimska pisma", "tooltip.copy to clipboard": "Kopirati v odlo\u017Ei\u0161\u010De", "tooltip.redo": "Ponovi", "tooltip.toggle virtual keyboard": "Preklop navidezne tipkovnice", "tooltip.undo": "Razveljavi", "menu.insert matrix": "Vstavi matrico", "menu.insert vector": "Vstavi vektor", "submenu.array.matrix delimiters": "Matri\u010Dni lo\u010Devalniki", "menu.array.add row above": "Dodaj vrstico po", "menu.array.add row below": "Dodaj vrstico prej", "menu.array.add column after": "Dodaj stolpec po", "menu.array.add column before": "Dodaj stolpec prej", "menu.array.delete row": "Izbri\u0161i vrstico", "menu.array.delete rows": "Izbri\u0161i izbrane vrstice", "menu.array.delete column": "Izbri\u0161i stolpec", "menu.array.delete columns": "Izbri\u0161i izbrane stolpce", "submenu.array.insert separator": "Vstavi lo\u010Dilo", "menu.insert table": "Vstavi tabelo", "submenu.table style": "Tabela slog" }, sq: { "keyboard.tooltip.functions": "Funksione", "keyboard.tooltip.symbols": "Simbolet", "keyboard.tooltip.greek": "Letrat Greke", "keyboard.tooltip.command": "Modaliteti i komand\xEBs latex", "keyboard.tooltip.numeric": "Numerike", "keyboard.tooltip.roman": "Letrat romake", "tooltip.copy to clipboard": "Kopjoni n\xEB Clipboard", "tooltip.redo": "Riparo", "tooltip.toggle virtual keyboard": "Aktivizo tastier\xEBn virtuale", "tooltip.undo": "Zhb\xEBj", "menu.insert matrix": "Vendosni Matric\xEBn", "menu.insert vector": "Vendos vektorin", "submenu.array.matrix delimiters": "P\xEBrcaktuesit e matric\xEBs", "menu.array.add row above": "Shto Rreshtin Pas", "menu.array.add row below": "Shto Rreshtin Para", "menu.array.add column after": "Shto kolon\xEBn pas", "menu.array.add column before": "Shto kolon\xEBn para", "menu.array.delete row": "Fshi Rreshtin", "menu.array.delete rows": "Fshi rreshtat e zgjedhur", "menu.array.delete column": "Fshi kolon\xEBn", "menu.array.delete columns": "Fshi kolonat e zgjedhura", "submenu.array.insert separator": "Vendos Ndar\xEBsin", "menu.insert table": "Vendos tabel\xEBn", "submenu.table style": "Stili tabel\xEBn" }, sr: { "keyboard.tooltip.functions": "\u0424\u0443\u043D\u043A\u0446\u0438\u0458\u0435", "keyboard.tooltip.symbols": "\u0421\u0438\u043C\u0431\u043E\u043B\u0438", "keyboard.tooltip.greek": "\u0413\u0440\u0435\u0435\u043A \u041B\u0435\u0442\u0442\u0435\u0440\u0441", "keyboard.tooltip.command": "\u041B\u0430\u0422\u0435\u041A\u0441 \u043A\u043E\u043C\u0430\u043D\u0434\u043D\u0438 \u0440\u0435\u0436\u0438\u043C", "keyboard.tooltip.numeric": "\u041D\u0443\u043C\u0435\u0440\u0438\u0447\u043A\u0438", "keyboard.tooltip.roman": "\u0420\u0438\u043C\u0441\u043A\u0430 \u043F\u0438\u0441\u043C\u0430", "tooltip.copy to clipboard": "\u041A\u043E\u043F\u0438\u0440\u0430\u0458\u0442\u0435 \u0443 \u043C\u0435\u0452\u0443\u0441\u043F\u0440\u0435\u043C\u043D\u0438\u043A", "tooltip.redo": "\u041F\u043E\u043D\u043E\u0432\u0438", "tooltip.toggle virtual keyboard": "\u0423\u043A\u0459\u0443\u0447\u0438 / \u0438\u0441\u043A\u0459\u0443\u0447\u0438 \u0432\u0438\u0440\u0442\u0443\u0435\u043B\u043D\u0443 \u0442\u0430\u0441\u0442\u0430\u0442\u0443\u0440\u0443", "tooltip.undo": "\u041E\u043F\u043E\u0437\u043E\u0432\u0438", "menu.insert matrix": "\u0423\u043C\u0435\u0442\u043D\u0438 \u043C\u0430\u0442\u0440\u0438\u0446\u0443", "menu.insert vector": "\u0423\u043C\u0435\u0442\u043D\u0438 \u0432\u0435\u043A\u0442\u043E\u0440", "submenu.array.matrix delimiters": "\u041C\u0430\u0442\u0440\u0438\u043A \u0414\u0435\u043B\u0438\u043C\u0438\u0442\u0435\u0440\u0441", "menu.array.add row above": "\u0414\u043E\u0434\u0430\u0458 \u0440\u0435\u0434 \u043F\u043E\u0441\u043B\u0435", "menu.array.add row below": "\u0414\u043E\u0434\u0430\u0458 \u0440\u0435\u0434 \u043F\u0440\u0435", "menu.array.add column after": "\u0414\u043E\u0434\u0430\u0458 \u043A\u043E\u043B\u043E\u043D\u0443 \u043F\u043E\u0441\u043B\u0435", "menu.array.add column before": "\u0414\u043E\u0434\u0430\u0458 \u043A\u043E\u043B\u043E\u043D\u0443 \u043F\u0440\u0435", "menu.array.delete row": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u0440\u0435\u0434", "menu.array.delete rows": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u0438\u0437\u0430\u0431\u0440\u0430\u043D\u0435 \u0440\u0435\u0434\u043E\u0432\u0435", "menu.array.delete column": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u043A\u043E\u043B\u043E\u043D\u0443", "menu.array.delete columns": "\u0418\u0437\u0431\u0440\u0438\u0448\u0438 \u0438\u0437\u0430\u0431\u0440\u0430\u043D\u0435 \u043A\u043E\u043B\u043E\u043D\u0435", "submenu.array.insert separator": "\u0423\u043C\u0435\u0442\u043D\u0438 \u0441\u0435\u043F\u0430\u0440\u0430\u0442\u043E\u0440", "menu.insert table": "\u0423\u0431\u0430\u0446\u0438 \u0442\u0430\u0431\u0435\u043B\u0443", "submenu.table style": "\u0422\u0430\u0431\u0435\u043B\u0430\u0440\u043D\u0438 \u0441\u0442\u0438\u043B" }, sv: { "keyboard.tooltip.functions": "Funktioner", "keyboard.tooltip.symbols": "Symboler", "keyboard.tooltip.greek": "Grekiska bokst\xE4ver", "keyboard.tooltip.command": "LaTeX kommandol\xE4ge", "keyboard.tooltip.numeric": "Numerisk", "keyboard.tooltip.roman": "Romerska bokst\xE4ver", "tooltip.copy to clipboard": "Kopiera till Urklipp", "tooltip.redo": "G\xF6ra om", "tooltip.toggle virtual keyboard": "V\xE4xla virtuellt tangentbord", "tooltip.undo": "\xC5ngra", "menu.insert matrix": "S\xE4tt in matris", "menu.insert vector": "Infoga vektor", "submenu.array.matrix delimiters": "Matrisavgr\xE4nsare", "menu.array.add row above": "L\xE4gg till rad efter", "menu.array.add row below": "L\xE4gg till rad f\xF6re", "menu.array.add column after": "L\xE4gg till kolumn efter", "menu.array.add column before": "L\xE4gg till kolumn f\xF6re", "menu.array.delete row": "Radera rad", "menu.array.delete rows": "Ta bort valda rader", "menu.array.delete column": "Ta bort kolumn", "menu.array.delete columns": "Ta bort valda kolumner", "submenu.array.insert separator": "S\xE4tt i separator", "menu.insert table": "Infoga tabell", "submenu.table style": "Tabellstil" }, th: { "keyboard.tooltip.functions": "\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19", "keyboard.tooltip.symbols": "\u0E2A\u0E31\u0E0D\u0E25\u0E31\u0E01\u0E29\u0E13\u0E4C", "keyboard.tooltip.greek": "\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E01\u0E23\u0E35\u0E01", "keyboard.tooltip.command": "\u0E42\u0E2B\u0E21\u0E14\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07 \u0E19\u0E49\u0E33\u0E22\u0E32\u0E07", "keyboard.tooltip.numeric": "\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02", "keyboard.tooltip.roman": "\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E42\u0E23\u0E21\u0E31\u0E19", "tooltip.copy to clipboard": "\u0E04\u0E31\u0E14\u0E25\u0E2D\u0E01\u0E44\u0E1B\u0E17\u0E35\u0E48\u0E04\u0E25\u0E34\u0E1B\u0E1A\u0E2D\u0E23\u0E4C\u0E14", "tooltip.redo": "\u0E17\u0E33\u0E0B\u0E49\u0E33", "tooltip.toggle virtual keyboard": "\u0E2A\u0E25\u0E31\u0E1A\u0E41\u0E1B\u0E49\u0E19\u0E1E\u0E34\u0E21\u0E1E\u0E4C\u0E40\u0E2A\u0E21\u0E37\u0E2D\u0E19", "tooltip.undo": "\u0E40\u0E25\u0E34\u0E01\u0E17\u0E33", "menu.insert matrix": "\u0E41\u0E17\u0E23\u0E01\u0E40\u0E21\u0E17\u0E23\u0E34\u0E01\u0E0B\u0E4C", "menu.insert vector": "\u0E41\u0E17\u0E23\u0E01\u0E40\u0E27\u0E01\u0E40\u0E15\u0E2D\u0E23\u0E4C", "submenu.array.matrix delimiters": "\u0E15\u0E31\u0E27\u0E04\u0E31\u0E48\u0E19\u0E40\u0E21\u0E17\u0E23\u0E34\u0E01\u0E0B\u0E4C", "menu.array.add row above": "\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E41\u0E16\u0E27\u0E2B\u0E25\u0E31\u0E07", "menu.array.add row below": "\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E41\u0E16\u0E27\u0E01\u0E48\u0E2D\u0E19", "menu.array.add column after": "\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E04\u0E2D\u0E25\u0E31\u0E21\u0E19\u0E4C\u0E2B\u0E25\u0E31\u0E07", "menu.array.add column before": "\u0E40\u0E1E\u0E34\u0E48\u0E21\u0E04\u0E2D\u0E25\u0E31\u0E21\u0E19\u0E4C\u0E01\u0E48\u0E2D\u0E19", "menu.array.delete row": "\u0E25\u0E1A\u0E41\u0E16\u0E27", "menu.array.delete rows": "\u0E25\u0E1A\u0E41\u0E16\u0E27\u0E17\u0E35\u0E48\u0E40\u0E25\u0E37\u0E2D\u0E01", "menu.array.delete column": "\u0E25\u0E1A\u0E04\u0E2D\u0E25\u0E31\u0E21\u0E19\u0E4C", "menu.array.delete columns": "\u0E25\u0E1A\u0E04\u0E2D\u0E25\u0E31\u0E21\u0E19\u0E4C\u0E17\u0E35\u0E48\u0E40\u0E25\u0E37\u0E2D\u0E01", "submenu.array.insert separator": "\u0E15\u0E31\u0E27\u0E04\u0E31\u0E48\u0E19\u0E41\u0E17\u0E23\u0E01", "menu.insert table": "\u0E41\u0E17\u0E23\u0E01\u0E15\u0E32\u0E23\u0E32\u0E07", "submenu.table style": "\u0E2A\u0E44\u0E15\u0E25\u0E4C\u0E15\u0E32\u0E23\u0E32\u0E07" }, tr: { "keyboard.tooltip.functions": "Fonksiyonlar", "keyboard.tooltip.symbols": "Semboller", "keyboard.tooltip.greek": "Yunan harfleri", "keyboard.tooltip.command": "LaTeX Komut Modu", "keyboard.tooltip.numeric": "Say\u0131sal", "keyboard.tooltip.roman": "Roma Harfleri", "tooltip.copy to clipboard": "Panoya kopyala", "tooltip.redo": "Yeniden yap", "tooltip.toggle virtual keyboard": "Sanal Klavyeyi A\xE7/Kapat", "tooltip.undo": "Geri alma", "menu.insert matrix": "Matris Ekle", "menu.insert vector": "Vekt\xF6r Ekle", "submenu.array.matrix delimiters": "Matris S\u0131n\u0131rlay\u0131c\u0131lar", "menu.array.add row above": "Sat\u0131rdan Sonra Ekle", "menu.array.add row below": "\xD6nce Sat\u0131r Ekle", "menu.array.add column after": "Sonra S\xFCtun Ekle", "menu.array.add column before": "\xD6nce S\xFCtun Ekle", "menu.array.delete row": "S\u0131ray\u0131 sil", "menu.array.delete rows": "Se\xE7ili Sat\u0131rlar\u0131 Sil", "menu.array.delete column": "S\xFCtunu Sil", "menu.array.delete columns": "Se\xE7ili S\xFCtunlar\u0131 Sil", "submenu.array.insert separator": "Ay\u0131r\u0131c\u0131 Ekle", "menu.insert table": "Tablo Ekle", "submenu.table style": "Tablo Stili" }, uk: { "keyboard.tooltip.functions": "\u0424\u0443\u043D\u043A\u0446\u0456\u0457", "keyboard.tooltip.symbols": "\u0421\u0438\u043C\u0432\u043E\u043B\u0438", "keyboard.tooltip.greek": "\u0413\u0440\u0435\u0446\u044C\u043A\u0456 \u043B\u0456\u0442\u0435\u0440\u0438", "keyboard.tooltip.command": "\u041A\u043E\u043C\u0430\u043D\u0434\u043D\u0438\u0439 \u0440\u0435\u0436\u0438\u043C \u043B\u0430\u0442\u0435\u043A\u0441\u0443", "keyboard.tooltip.numeric": "\u0427\u0438\u0441\u043B\u043E\u0432\u0438\u0439", "keyboard.tooltip.roman": "\u0420\u0438\u043C\u0441\u044C\u043A\u0456 \u043B\u0456\u0442\u0435\u0440\u0438", "tooltip.copy to clipboard": "\u041A\u043E\u043F\u0456\u044E\u0432\u0430\u0442\u0438 \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0456\u043D\u0443", "tooltip.redo": "\u041F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u0438", "tooltip.toggle virtual keyboard": "\u041F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0438\u0442\u0438 \u0432\u0456\u0440\u0442\u0443\u0430\u043B\u044C\u043D\u0443 \u043A\u043B\u0430\u0432\u0456\u0430\u0442\u0443\u0440\u0443", "tooltip.undo": "\u0421\u043A\u0430\u0441\u0443\u0432\u0430\u0442\u0438", "menu.insert matrix": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u0438 \u043C\u0430\u0442\u0440\u0438\u0446\u044E", "menu.insert vector": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u0438 \u0432\u0435\u043A\u0442\u043E\u0440", "submenu.array.matrix delimiters": "\u041C\u0430\u0442\u0440\u0438\u0447\u043D\u0456 \u0440\u043E\u0437\u0434\u0456\u043B\u044C\u043D\u0438\u043A\u0438", "menu.array.add row above": "\u0414\u043E\u0434\u0430\u0442\u0438 \u0440\u044F\u0434\u043E\u043A \u043F\u0456\u0441\u043B\u044F", "menu.array.add row below": "\u0414\u043E\u0434\u0430\u0442\u0438 \u0440\u044F\u0434\u043E\u043A \u0434\u043E", "menu.array.add column after": "\u0414\u043E\u0434\u0430\u0442\u0438 \u0441\u0442\u043E\u0432\u043F\u0435\u0446\u044C \u043F\u0456\u0441\u043B\u044F", "menu.array.add column before": "\u0414\u043E\u0434\u0430\u0442\u0438 \u0441\u0442\u043E\u0432\u043F\u0435\u0446\u044C \u043F\u0435\u0440\u0435\u0434", "menu.array.delete row": "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0440\u044F\u0434\u043E\u043A", "menu.array.delete rows": "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0432\u0438\u0431\u0440\u0430\u043D\u0456 \u0440\u044F\u0434\u043A\u0438", "menu.array.delete column": "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0441\u0442\u043E\u0432\u043F\u0435\u0446\u044C", "menu.array.delete columns": "\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0432\u0438\u0431\u0440\u0430\u043D\u0456 \u0441\u0442\u043E\u0432\u043F\u0446\u0456", "submenu.array.insert separator": "\u0412\u0441\u0442\u0430\u0432\u0442\u0435 \u0440\u043E\u0437\u0434\u0456\u043B\u044C\u043D\u0438\u043A", "menu.insert table": "\u0412\u0441\u0442\u0430\u0432\u0438\u0442\u0438 \u0442\u0430\u0431\u043B\u0438\u0446\u044E", "submenu.table style": "\u0421\u0442\u0438\u043B\u044C \u0442\u0430\u0431\u043B\u0438\u0446\u0456" }, vi: { "keyboard.tooltip.functions": "Ch\u1EE9c n\u0103ng", "keyboard.tooltip.symbols": "K\xFD hi\u1EC7u", "keyboard.tooltip.greek": "Ch\u1EEF Hy L\u1EA1p", "keyboard.tooltip.command": "Ch\u1EBF \u0111\u1ED9 l\u1EC7nh LaTeX", "keyboard.tooltip.numeric": "S\u1ED1", "keyboard.tooltip.roman": "Ch\u1EEF c\xE1i La m\xE3", "tooltip.copy to clipboard": "Sao ch\xE9p v\xE0o clipboard", "tooltip.redo": "L\xE0m l\u1EA1i", "tooltip.toggle virtual keyboard": "Chuy\u1EC3n \u0111\u1ED5i b\xE0n ph\xEDm \u1EA3o", "tooltip.undo": "Ho\xE0n t\xE1c", "menu.insert matrix": "Ch\xE8n ma tr\u1EADn", "menu.insert vector": "Insert Vector", "submenu.array.matrix delimiters": "D\u1EA5u ph\xE2n c\xE1ch ma tr\u1EADn", "menu.array.add row above": "Th\xEAm h\xE0ng sau", "menu.array.add row below": "Th\xEAm h\xE0ng tr\u01B0\u1EDBc", "menu.array.add column after": "Th\xEAm c\u1ED9t sau", "menu.array.add column before": "Th\xEAm c\u1ED9t tr\u01B0\u1EDBc", "menu.array.delete row": "X\xF3a h\xE0ng", "menu.array.delete rows": "X\xF3a h\xE0ng \u0111\xE3 ch\u1ECDn", "menu.array.delete column": "X\xF3a c\u1ED9t", "menu.array.delete columns": "X\xF3a c\xE1c c\u1ED9t \u0111\xE3 ch\u1ECDn", "submenu.array.insert separator": "Ch\xE8n d\u1EA5u ph\xE2n c\xE1ch", "menu.insert table": "Ch\xE8n b\u1EA3ng", "submenu.table style": "Ki\u1EC3u b\u1EA3ng" }, zh_cn: { "keyboard.tooltip.functions": "\u804C\u80FD", "keyboard.tooltip.symbols": "\u7B26\u53F7", "keyboard.tooltip.greek": "\u5E0C\u814A\u5B57\u6BCD", "keyboard.tooltip.command": "\u4E73\u80F6 \u547D\u4EE4\u6A21\u5F0F", "keyboard.tooltip.numeric": "\u6570\u5B57", "keyboard.tooltip.roman": "\u7F57\u9A6C\u5B57\u6BCD", "tooltip.copy to clipboard": "\u590D\u5236\u5230\u526A\u8D34\u677F", "tooltip.redo": "\u91CD\u505A", "tooltip.toggle virtual keyboard": "\u5207\u6362\u865A\u62DF\u952E\u76D8", "tooltip.undo": "\u64A4\u6D88", "menu.insert matrix": "\u63D2\u5165\u77E9\u9635", "menu.insert vector": "\u63D2\u5165\u5411\u91CF", "submenu.array.matrix delimiters": "\u77E9\u9635\u5206\u9694\u7B26", "menu.array.add row above": "\u5728\u540E\u9762\u6DFB\u52A0\u884C", "menu.array.add row below": "\u5728\u524D\u9762\u6DFB\u52A0\u884C", "menu.array.add column after": "\u5728\u540E\u9762\u6DFB\u52A0\u5217r", "menu.array.add column before": "\u5728\u524D\u9762\u6DFB\u52A0\u5217", "menu.array.delete row": "\u5220\u9664\u884C", "menu.array.delete rows": "\u5220\u9664\u9009\u5B9A\u884C", "menu.array.delete column": "\u5220\u9664\u5217", "menu.array.delete columns": "\u5220\u9664\u9009\u5B9A\u7684\u5217", "submenu.array.insert separator": "\u63D2\u5165\u5206\u9694\u7B26", "menu.insert table": "\u63D2\u5165\u8868\u683C", "submenu.table style": "\u8868\u683C\u6837\u5F0F" }, zh_tw: { "keyboard.tooltip.functions": "\u8077\u80FD", "keyboard.tooltip.symbols": "\u7B26\u865F", "keyboard.tooltip.greek": "\u5E0C\u81D8\u5B57\u6BCD", "keyboard.tooltip.command": "\u4E73\u81A0\u547D\u4EE4\u6A21\u5F0F", "keyboard.tooltip.numeric": "\u6578\u5B57", "keyboard.tooltip.roman": "\u7F85\u99AC\u5B57\u6BCD", "tooltip.copy to clipboard": "\u8907\u88FD\u5230\u526A\u8CBC\u677F", "tooltip.redo": "\u91CD\u505A", "tooltip.toggle virtual keyboard": "\u5207\u63DB\u865B\u64EC\u9375\u76E4", "tooltip.undo": "\u64A4\u6D88", "menu.insert matrix": "\u63D2\u5165\u77E9\u9663", "menu.insert vector": "\u63D2\u5165\u5411\u91CF", "submenu.array.matrix delimiters": "\u77E9\u9663\u5206\u9694\u7B26", "menu.array.add row above": "\u5728\u5F8C\u9762\u6DFB\u52A0\u884C", "menu.array.add row below": "\u5728\u524D\u9762\u6DFB\u52A0\u884C", "menu.array.add column after": "\u5728\u5F8C\u9762\u6DFB\u52A0\u5217", "menu.array.add column before": "\u5728\u524D\u9762\u6DFB\u52A0\u5217", "menu.array.delete row": "\u522A\u9664\u884C", "menu.array.delete rows": "\u522A\u9664\u9078\u5B9A\u884C", "menu.array.delete column": "\u522A\u9664\u5217", "menu.array.delete columns": "\u522A\u9664\u9078\u5B9A\u7684\u5217", "submenu.array.insert separator": "\u63D2\u5165\u5206\u9694\u7B26", "menu.insert table": "\u63D2\u5165\u8868\u683C", "submenu.table style": "\u8868\u683C\u6A23\u5F0F" } }, _locale: "", get locale() {
  return on._locale || (on._locale = t() ? navigator.language.slice(0, 5) : "en"), on._locale;
}, set locale(e5) {
  on._locale = e5;
}, merge(e5, t2) {
  if (e5 && t2) {
    const i2 = on._locale;
    on.locale = e5, on.strings[e5] = { ...on.strings[e5], ...t2 }, on.locale = i2;
  } else if (e5 && !t2)
    for (const t3 of Object.keys(e5))
      on.merge(t3, e5[t3]);
} };
function sn(e5) {
  if (void 0 === e5)
    return;
  const t2 = on.locale.slice(0, 2);
  let i2 = "";
  return on.strings[on.locale] && (i2 = on.strings[on.locale][e5]), !i2 && on.strings[t2] && (i2 = on.strings[t2][e5]), i2 || (i2 = on.strings.en[e5]), i2 || void 0;
}
function ln() {
  const e5 = { registers: {}, smartFence: false, fractionNavigationOrder: "numerator-denominator", placeholderSymbol: "\u25A2", letterShapeStyle: on.locale.startsWith("fr") ? "french" : "tex", colorMap: Se, backgroundColorMap: Me, getDefinition: un, getMacro: (e6) => cn(e6, C()) };
  return { ...e5, registers: an(e5) };
}
function un(e5, t2 = "math") {
  if (!e5 || 0 === e5.length)
    return null;
  let i2 = null;
  if (e5.startsWith("\\")) {
    if (i2 = u[e5], i2)
      return i2;
    "math" === t2 ? i2 = s[e5] : h[e5] && (i2 = { definitionType: "symbol", type: "mord", codepoint: h[e5] });
  } else if ("math" === t2) {
    if (i2 = s[e5], !i2 && 1 === e5.length) {
      const t3 = v("math", e5.codePointAt(0));
      return t3.startsWith("\\") ? { ...un(t3, "math"), command: t3 } : null;
    }
  } else
    h[e5] ? i2 = { definitionType: "symbol", type: "mord", codepoint: h[e5] } : "text" === t2 && (i2 = { definitionType: "symbol", type: "mord", codepoint: e5.codePointAt(0) });
  return !i2 || "symbol" !== i2.definitionType || "mord" !== i2.type || 102 !== i2.codepoint && 103 !== i2.codepoint && 104 !== i2.codepoint || (i2.isFunction = true), null != i2 ? i2 : null;
}
function cn(e5, t2) {
  return e5.startsWith("\\") ? t2[e5.slice(1)] : null;
}
var dn = { main: ["Main-Regular", "ML__cmr"], "main-italic": ["Main-Italic", "ML__cmr ML__it"], "main-bold": ["Main-Bold", "ML__cmr ML__bold"], "main-bolditalic": ["Main-BoldItalic", "ML__cmr ML__bold ML__it"], normal: ["Main-Regular", "ML__cmr"], "normal-bold": ["Main-Bold", "ML__mathbf"], "normal-italic": ["Math-Italic", "ML__mathit"], "normal-bolditalic": ["Math-BoldItalic", "ML__mathbfit"], ams: ["AMS-Regular", "ML__ams"], "ams-bold": ["AMS-Regular", "ML__ams"], "ams-italic": ["AMS-Regular", "ML__ams"], "ams-bolditalic": ["AMS-Regular", "ML__ams"], "sans-serif": ["SansSerif-Regular", "ML__sans"], "sans-serif-bold": ["SansSerif-Regular", "ML__sans ML__bold"], "sans-serif-italic": ["SansSerif-Regular", "ML__sans"], "sans-serif-bolditalic": ["SansSerif-Regular", "ML__sans"], calligraphic: ["Caligraphic-Regular", "ML__cal"], "calligraphic-bold": ["Caligraphic-Regular", "ML__cal ML__bold"], "calligraphic-italic": ["Caligraphic-Regular", "ML__cal ML__it"], "calligraphic-bolditalic": ["Caligraphic-Regular", "ML__cal ML__bold ML__it"], script: ["Script-Regular", "ML__script"], "script-bold": ["Script-Regular", "ML__script ML__bold"], "script-italic": ["Script-Regular", "ML__script ML__it"], "script-bolditalic": ["Script-Regular", "ML__script ML__bold ML__it"], fraktur: ["Fraktur-Regular", "ML__frak"], "fraktur-bold": ["Fraktur-Regular", "ML__frak"], "fraktur-italic": ["Fraktur-Regular", "ML__frak"], "fraktur-bolditalic": ["Fraktur-Regular", "ML__frak"], monospace: ["Typewriter-Regular", "ML__tt"], "monospace-bold": ["Typewriter-Regular", "ML__tt ML__bold"], "monospace-italic": ["Typewriter-Regular", "ML__tt ML__it"], "monospace-bolditalic": ["Typewriter-Regular", "ML__tt ML__bold ML__it"], "double-struck": ["AMS-Regular", "ML__bb"], "double-struck-bold": ["AMS-Regular", "ML__bb"], "double-struck-italic": ["AMS-Regular", "ML__bb"], "double-struck-bolditalic": ["AMS-Regular", "ML__bb"] };
var hn = { "double-struck": /^[A-Z ]$/, script: /^[A-Z ]$/, calligraphic: /^[\dA-Z ]$/, fraktur: /^[\dA-Za-z ]$|^[!"#$%&'()*+,\-./:;=?[]^\u2019\u2018]$/, monospace: /^[\dA-Za-z ]$|^[!"&'()*+,\-./:;=?@[\]^_~\u0131\u0237\u0393\u0394\u0398\u039B\u039E\u03A0\u03A3\u03A5\u03A8\u03A9]$/, "sans-serif": /^[\dA-Za-z ]$|^[!"&'()*+,\-./:;=?@[\]^_~\u0131\u0237\u0393\u0394\u0398\u039B\u039E\u03A0\u03A3\u03A5\u03A8\u03A9]$/ };
var mn = /^[\u03B1-\u03C9]|\u03D1|\u03D5|\u03D6|\u03F1|\u03F5]$/;
var pn = [/^[a-z]$/, /^[A-Z]$/, mn, /^[\u0393|\u0394\u0398\u039B\u039E\u03A0\u03A3\u03A5\u03A6\u03A8\u03A9]$/];
var fn = { iso: ["it", "it", "it", "it"], tex: ["it", "it", "it", "up"], french: ["it", "up", "up", "up"], upright: ["up", "up", "up", "up"] };
function gn(e5) {
  if (!e5)
    return "";
  const { style: t2 } = e5;
  if (void 0 === t2.variant)
    return "";
  let i2 = t2.variant;
  return t2.variantStyle && "up" !== t2.variantStyle && (i2 += "-" + t2.variantStyle), i2;
}
function yn(e5) {
  return [Xe(e5.map((e6) => e6[0])), e5.map((e6) => e6[1]).some((e6) => true === e6)];
}
new class extends ge {
  constructor() {
    super("math");
  }
  createAtom(e5, t2, i2) {
    var n2, r2, a2, o2, s2;
    const l2 = t2.getDefinition(e5, "math");
    if (null === l2)
      return new nt("mord", t2, { mode: "math", command: e5, value: e5, style: i2 });
    if ("symbol" === l2.definitionType) {
      const o3 = new nt(null !== (n2 = l2.type) && void 0 !== n2 ? n2 : "mord", t2, { mode: "math", command: null !== (r2 = l2.command) && void 0 !== r2 ? r2 : e5, value: String.fromCodePoint(l2.codepoint), style: i2 });
      return null !== (a2 = l2.isFunction) && void 0 !== a2 && a2 && (o3.isFunction = true), e5.startsWith("\\") && (o3.verbatimLatex = e5), o3;
    }
    const u2 = new nt("mord", t2, { mode: "math", command: null !== (o2 = l2.command) && void 0 !== o2 ? o2 : e5, value: e5, style: i2 });
    return null !== (s2 = l2.isFunction) && void 0 !== s2 && s2 && (u2.isFunction = true), e5.startsWith("\\") && (u2.verbatimLatex = e5), u2;
  }
  serialize(e5, t2) {
    const { parent: i2 } = e5[0], n2 = null == i2 ? void 0 : i2.computedStyle.fontSize;
    return Xe(ye(e5, "fontSize").map((e6) => {
      const r2 = function(e7, t3) {
        const { parent: i3 } = e7[0], n3 = null == i3 ? void 0 : i3.computedStyle.backgroundColor;
        return Xe(ye(e7, "backgroundColor").map((e8) => {
          var r3, a3;
          let o2 = function(e9, t4) {
            const { parent: i4 } = e9[0], n4 = null == i4 ? void 0 : i4.computedStyle.color;
            return Xe(ye(e9, "color").map((e10) => {
              var r4, a4;
              const o3 = function(e11, t5) {
                var i5;
                const { parent: n5 } = e11[0], r5 = gn(n5), a5 = null !== (i5 = null == n5 ? void 0 : n5.mode) && void 0 !== i5 ? i5 : "math";
                return Xe(ye(e11, "variant").map((e12) => {
                  const i6 = gn(e12[0]);
                  if (e12.every((e13) => {
                    const t6 = e13.context.getDefinition(e13.command, a5);
                    return !(!t6 || "function" === t6.definitionType || !t6.variant) && gn(e13) === i6;
                  }))
                    return Xe(e12.map((e13) => nt.serialize(e13, t5)));
                  let n6 = "";
                  return i6 && i6 !== r5 && (n6 = { calligraphic: "\\mathcal{", fraktur: "\\mathfrak{", "double-struck": "\\mathbb{", script: "\\mathscr{", monospace: "\\mathtt{", "sans-serif": "\\mathsf{", normal: "\\mathrm{", "normal-italic": "\\mathnormal{", "normal-bold": "\\mathbf{", "normal-bolditalic": "\\mathbfit{", ams: "", "ams-italic": "\\mathit{", "ams-bold": "\\mathbf{", "ams-bolditalic": "\\mathbfit{", main: "", "main-italic": "\\mathit{", "main-bold": "\\mathbf{", "main-bolditalic": "\\mathbfit{" }[i6]), n6 ? n6 + Xe(e12.map((e13) => nt.serialize(e13, t5))) + "}" : Xe(e12.map((e13) => nt.serialize(e13, t5)));
                }));
              }(e10, t4), s3 = e10[0].computedStyle;
              return null !== (r4 = t4.skipStyles) && void 0 !== r4 && r4 || !s3.color || i4 && n4 === s3.color ? o3 : "\\textcolor{" + (null !== (a4 = s3.verbatimColor) && void 0 !== a4 ? a4 : s3.color) + "}{" + o3 + "}";
            }));
          }(e8, t3);
          const s2 = e8[0].computedStyle;
          return null !== (r3 = t3.skipStyles) && void 0 !== r3 && r3 || !o2.trim() || !s2.backgroundColor || i3 && n3 === s2.backgroundColor || !(e8.length > 0) && e8[0] instanceof Rt || (o2 = `\\ensuremath{${o2}}`, o2 = `\\colorbox{${null !== (a3 = s2.verbatimBackgroundColor) && void 0 !== a3 ? a3 : s2.backgroundColor}}{${o2}}`), o2;
        }));
      }(e6, t2), a2 = e6[0].computedStyle.fontSize;
      return !a2 || i2 && n2 === a2 ? r2 : "\\" + ["", "tiny", "scriptsize", "footnotesize", "small", "normalsize", "large", "Large", "LARGE", "huge", "Huge"][a2] + " " + r2;
    }));
  }
  applyStyle(e5, t2) {
    if (void 0 === t2.variant)
      return "";
    const i2 = "auto" !== t2.letterShapeStyle && t2.letterShapeStyle ? t2.letterShapeStyle : "tex";
    let { variant: n2 } = t2, { variantStyle: r2 } = t2;
    "normal" === n2 && !r2 && /[\u00A3\u0131\u0237]/.test(e5.value) && (n2 = "main", r2 = "italic"), "normal" !== n2 || r2 || 1 !== e5.value.length || pn.forEach((t3, n3) => {
      t3.test(e5.value) && "it" === fn[i2][n3] && (r2 = "italic");
    }), "up" === r2 && (r2 = void 0);
    const a2 = r2 ? n2 + "-" + r2 : n2, [o2, s2] = dn[a2];
    return hn[n2] && !hn[n2].test(e5.value) ? (e5.value = function(e6, t3, i3) {
      if (!/[A-Za-z\d]/.test(e6))
        return e6;
      if (!t3 && !i3)
        return e6;
      const n3 = e6.codePointAt(0);
      if (void 0 === n3)
        return e6;
      for (const e7 of k)
        if ((!t3 || e7.variant === t3) && (!i3 || e7.style === i3) && n3 >= e7.offset && n3 < e7.offset + e7.len) {
          const t4 = e7.start + n3 - e7.offset;
          return String.fromCodePoint(x[t4] || t4);
        }
      return e6;
    }(e5.value, n2, r2), null) : (mn.test(e5.value) && (e5.classes += " lcGreek"), s2 && (e5.classes += " " + s2), o2);
  }
}();
var bn = { roman: "", "sans-serif": "ML__sans", monospace: "ML__tt" };
function vn(e5, t2 = "math") {
  const i2 = ln(), n2 = new nt("root", i2);
  return n2.body = Dt(e5, i2, { parseMode: t2 }), Qi(n2);
}
function xn(e5) {
  return wi(e5, { format: "ascii-math" })[1];
}
new class extends ge {
  constructor() {
    super("text");
  }
  createAtom(e5, t2, i2) {
    const n2 = t2.getDefinition(e5, "text");
    return n2 && "symbol" === n2.definitionType ? new At(e5, String.fromCodePoint(n2.codepoint), null != i2 ? i2 : {}, t2) : null;
  }
  serialize(e5, t2) {
    var i2;
    let [n2, r2] = function(e6, t3) {
      return yn(ye(e6, "backgroundColor").map((e7) => {
        var i3, n3;
        const [r3, a2] = function(e8, t4) {
          var i4;
          if (!e8 || 0 === e8.length)
            return ["", false];
          const n4 = null === (i4 = e8[0].parent) || void 0 === i4 ? void 0 : i4.style.color;
          return yn(ye(e8, "color").map((e9) => {
            var i5, r4;
            const [a3, o3] = function(e10, t5) {
              return function(e11, t6) {
                return yn(ye(e11, "fontFamily").map((e12) => {
                  var i6, n5;
                  const [r5, a4] = function(e13, t7) {
                    return yn(ye(e13, "fontSize").map((e14) => {
                      var i7, n6;
                      const [r6, a5] = function(e15, t8) {
                        return yn(ye(e15, "fontSeries").map((e16) => {
                          const [i8, n7] = function(e17, t9) {
                            return yn(ye(e17, "fontShape").map((e18) => {
                              const [i9, n8] = function(e19, t10) {
                                return [Xe(e19.map((e20) => nt.serialize(e20, t10))), true];
                              }(e18, t9), { fontShape: r8 } = e18[0].style;
                              return "it" === r8 ? ["\\textit{" + i9 + "}", false] : "sl" === r8 ? ["\\textsl{" + i9 + "}", false] : "sc" === r8 ? ["\\textsc{" + i9 + "}", false] : "n" === r8 ? ["\\textup{" + i9 + "}", false] : r8 ? [`{\\fontshape{${e18[0].style.fontShape}}${i9}`, false] : [i9, n8];
                            }));
                          }(e16, t8), { fontSeries: r7 } = e16[0].style;
                          return "b" === r7 ? [`\\textbf{${i8}}`, false] : "l" === r7 ? [`\\textlf{${i8}}`, false] : "m" === r7 ? [`\\textmd{${i8}}`, false] : r7 ? [`\\fontseries{${r7}}${i8}`, false] : [i8, n7];
                        }));
                      }(e14, t7), o5 = null !== (n6 = ["", "tiny", "scriptsize", "footnotesize", "small", "normalsize", "large", "Large", "LARGE", "huge", "Huge"][null !== (i7 = e14[0].style.fontSize) && void 0 !== i7 ? i7 : ""]) && void 0 !== n6 ? n6 : "";
                      return o5 ? [`{\\${o5} ${r6}}`, a5] : [r6, a5];
                    }));
                  }(e12, t6), o4 = null !== (n5 = { roman: "textrm", monospace: "texttt", "sans-serif": "textsf" }[null !== (i6 = e12[0].style.fontFamily) && void 0 !== i6 ? i6 : ""]) && void 0 !== n5 ? n5 : "";
                  return o4 ? [`\\${o4}{${r5}}`, false] : e12[0].style.fontFamily ? [`\\fontfamily{${e12[0].style.fontFamily}}${r5}`, a4] : [r5, a4];
                }));
              }(e10, t5);
            }(e9, t4);
            return null !== (i5 = t4.skipStyles) && void 0 !== i5 && i5 || !e9[0].style.color || "none" === e9[0].style.color || n4 === e9[0].style.color ? [a3, o3] : [`\\textcolor{${null !== (r4 = e9[0].style.verbatimColor) && void 0 !== r4 ? r4 : e9[0].style.color}}{${a3}}`, false];
          }));
        }(e7, t3), o2 = e7[0].computedStyle;
        return null !== (i3 = t3.skipStyles) && void 0 !== i3 && i3 || !o2.backgroundColor || "none" === o2.backgroundColor ? [r3, a2] : [`\\colorbox{${null !== (n3 = o2.verbatimBackgroundColor) && void 0 !== n3 ? n3 : o2.backgroundColor}}{${r3}}`, false];
      }));
    }(e5, t2);
    return true === (null !== (i2 = t2.skipModeCommand) && void 0 !== i2 && i2) && (r2 = false), r2 && (n2 = `\\text{${n2}}`), n2;
  }
  applyStyle(e5, t2) {
    var i2, n2, r2, a2, o2, s2;
    const { fontFamily: l2 } = t2;
    if (bn[l2] ? e5.classes += null !== (i2 = " " + bn[l2]) && void 0 !== i2 ? i2 : "" : l2 && e5.setStyle("font-family", l2), t2.fontShape && (e5.classes += " ", e5.classes += null !== (n2 = { it: "ML__it", sl: "ML__shape_sl", sc: "ML__shape_sc", ol: "ML__shape_ol" }[t2.fontShape]) && void 0 !== n2 ? n2 : ""), t2.fontSeries) {
      const i3 = t2.fontSeries.match(/(.?[lbm])?(.?[cx])?/);
      i3 && (e5.classes += " ", e5.classes += null !== (a2 = { ul: "ML__series_ul", el: "ML__series_el", l: "ML__series_l", sl: "ML__series_sl", m: "", sb: "ML__series_sb", b: "ML__bold", eb: "ML__series_eb", ub: "ML__series_ub" }[null !== (r2 = i3[1]) && void 0 !== r2 ? r2 : ""]) && void 0 !== a2 ? a2 : "", e5.classes += " ", e5.classes += null !== (s2 = { uc: "ML__series_uc", ec: "ML__series_ec", c: "ML__series_c", sc: "ML__series_sc", n: "", sx: "ML__series_sx", x: "ML__series_x", ex: "ML__series_ex", ux: "ML__series_ux" }[null !== (o2 = i3[2]) && void 0 !== o2 ? o2 : ""]) && void 0 !== s2 ? s2 : "");
    }
    return "Main-Regular";
  }
}(), new class extends ge {
  constructor() {
    super("latex");
  }
  createAtom(e5, t2, i2) {
    return new ti(e5, t2);
  }
  serialize(e5, t2) {
    return e5.filter((e6) => e6 instanceof ti && !e6.isSuggestion).map((e6) => e6.value).join("");
  }
  applyStyle() {
    return null;
  }
}();
var kn = { latexToAsciiMath: vn, asciiMathToLatex: xn, FUNCTIONS: u, MATH_SYMBOLS: s, TEXT_SYMBOLS: h, ENVIRONMENTS: c, DEFAULT_KEYBINDINGS: Oi, getKeybindingMarkup: Gi };
var _n = { "\\ne": "<mo>&ne;</mo>", "\\neq": "<mo>&neq;</mo>", "\\pm": "&#177;", "\\times": "&#215;", "\\colon": ":", "\\vert": "|", "\\Vert": "\u2225", "\\mid": "\u2223", "\\lbrace": "{", "\\rbrace": "}", "\\lparen": "(", "\\rparen": ")", "\\langle": "\u27E8", "\\rangle": "\u27E9", "\\lfloor": "\u230A", "\\rfloor": "\u230B", "\\lceil": "\u2308", "\\rceil": "\u2309", "\\vec": "&#x20d7;", "\\acute": "&#x00b4;", "\\grave": "&#x0060;", "\\dot": "&#x02d9;", "\\ddot": "&#x00a8;", "\\tilde": "&#x007e;", "\\bar": "&#x00af;", "\\breve": "&#x02d8;", "\\check": "&#x02c7;", "\\hat": "&#x005e;" };
function wn(e5) {
  return e5.replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function Sn(e5, t2) {
  return e5 && t2.generateID ? ` extid="${e5}"` : "";
}
function Mn(e5, t2, i2) {
  let n2 = false;
  t2 = null != t2 ? t2 : e5.atoms.length;
  let r2 = "", a2 = "";
  const o2 = e5.atoms[e5.index];
  return e5.index < t2 && ("mord" === o2.type || "macro" === o2.type) && !o2.isDigit() && (a2 = In(o2, i2), e5.index += 1), a2.length > 0 && (n2 = true, r2 = a2, "mi" !== e5.lastType && "mn" !== e5.lastType && "mtext" !== e5.lastType && "fence" !== e5.lastType || /^<mo>(.*)<\/mo>$/.test(r2) || (r2 = `<mo>&#8290;</mo>${r2}`), a2.endsWith(">f</mi>") || a2.endsWith(">g</mi>") ? (r2 += "<mo>&#x2061;</mo>", e5.lastType = "applyfunction") : e5.lastType = /^<mo>(.*)<\/mo>$/.test(r2) ? "mo" : "mi", Ln(a2, e5, i2) || (e5.mathML += r2)), n2;
}
function Nn(e5) {
  return e5.index < e5.atoms.length && e5.atoms[e5.index].superscript && "msubsup" === e5.atoms[e5.index].type;
}
function Ln(e5, t2, i2) {
  let n2 = t2.atoms[t2.index - 1];
  if (!n2)
    return false;
  if (n2.superscript || n2.subscript || (Nn(t2) || function(e6) {
    return e6.index < e6.atoms.length && e6.atoms[e6.index].subscript && "msubsup" === e6.atoms[e6.index].type;
  }(t2)) && (n2 = t2.atoms[t2.index], t2.index += 1), !n2)
    return false;
  const r2 = Tn(n2.superscript, 0, 0, i2).mathML, a2 = Tn(n2.subscript, 0, 0, i2).mathML;
  if (!r2 && !a2)
    return false;
  let o2 = "";
  return r2 && a2 ? o2 = `<msubsup>${e5}${a2}${r2}</msubsup>` : r2 ? o2 = `<msup>${e5}${r2}</msup>` : a2 && (o2 = `<msub>${e5}${a2}</msub>`), t2.mathML += o2, t2.lastType = "", true;
}
function An(e5, t2, i2) {
  t2 = null != t2 ? t2 : e5.atoms.length;
  const n2 = e5.index;
  let r2 = "";
  for (; e5.index < t2 && "text" === e5.atoms[e5.index].mode; )
    r2 += e5.atoms[e5.index].value ? e5.atoms[e5.index].value : " ", e5.index += 1;
  return r2.length > 0 && (e5.mathML += `<mtext ${Sn(e5.atoms[n2].id, i2)}
      >${r2}</mtext>`, e5.lastType = "mtext", true);
}
function Cn(e5, t2, i2) {
  t2 = null != t2 ? t2 : e5.atoms.length;
  const n2 = e5.index;
  let r2 = "", a2 = function(e6) {
    let t3 = -1, i3 = e6.index, n3 = false, r3 = false;
    for (; i3 < e6.atoms.length && !n3 && !r3; ) {
      const t4 = e6.atoms[i3];
      n3 = !t4.isDigit(), r3 = !n3 && void 0 !== t4.superscript, i3++;
    }
    return r3 && (t3 = i3 - 1), t3;
  }(e5);
  for (a2 >= 0 && a2 < t2 && (t2 = a2); e5.index < t2 && e5.atoms[e5.index].isDigit(); )
    r2 += e5.atoms[e5.index].asDigit(), e5.index += 1;
  return !(r2.length <= 0 || (r2 = "<mn" + Sn(e5.atoms[n2].id, i2) + ">" + r2 + "</mn>", a2 < 0 && Nn(e5) && (a2 = e5.index, e5.index += 1), Ln(r2, e5, i2) || (e5.mathML += r2, e5.lastType = "mn"), 0));
}
function En(e5, t2, i2) {
  let n2 = false;
  t2 = null != t2 ? t2 : e5.atoms.length;
  let r2 = "", a2 = "";
  if (e5.index < t2 && "mopen" === e5.atoms[e5.index].type) {
    let o2 = false, s2 = 0;
    const l2 = e5.index;
    let u2 = -1, c2 = l2 + 1;
    for (; c2 < t2 && !o2; )
      "mopen" === e5.atoms[c2].type ? s2 += 1 : "mclose" === e5.atoms[c2].type && (s2 -= 1), -1 === s2 && (o2 = true, u2 = c2), c2 += 1;
    o2 && (r2 = "<mrow>", r2 += zn(e5.atoms[l2], i2), r2 += Tn(e5.atoms, l2 + 1, u2, i2).mathML, r2 += zn(e5.atoms[u2], i2), r2 += "</mrow>", "mi" !== e5.lastType && "mn" !== e5.lastType && "mfrac" !== e5.lastType && "fence" !== e5.lastType || (r2 = `<mo>&#8290;</mo>${r2}`), e5.index = u2 + 1, Ln(r2, e5, i2) && (n2 = true, e5.lastType = "", r2 = ""), a2 = "fence");
  }
  return r2.length > 0 && (n2 = true, e5.mathML += r2, e5.lastType = a2), n2;
}
function Dn(e5, t2, i2) {
  let n2 = false;
  t2 = null != t2 ? t2 : e5.atoms.length;
  let r2 = "", a2 = "";
  const o2 = e5.atoms[e5.index];
  if (e5.index < t2 && ("mbin" === o2.type || "mrel" === o2.type))
    r2 += In(e5.atoms[e5.index], i2), e5.index += 1, a2 = "mo";
  else if (e5.index < t2 && "mop" === o2.type) {
    if ("over-under" === o2.subsupPlacement && (o2.superscript || o2.subscript)) {
      const e6 = zn(o2, i2);
      o2.superscript && o2.subscript ? (r2 += "<munderover>" + e6, r2 += Tn(o2.subscript, 0, 0, i2).mathML, r2 += Tn(o2.superscript, 0, 0, i2).mathML, r2 += "</munderover>") : o2.superscript ? (r2 += "<mover>" + e6, r2 += Tn(o2.superscript, 0, 0, i2).mathML, r2 += "</mover>") : (r2 += "<munder>" + e6, r2 += Tn(o2.subscript, 0, 0, i2).mathML, r2 += "</munder>"), a2 = "mo";
    } else {
      const t3 = e5.atoms[e5.index], n3 = "\\operatorname" === t3.value, o3 = n3 ? '<mi class="MathML-Unit"' + Sn(t3.id, i2) + ">" + qn(t3.value) + "</mi>" : zn(t3, i2);
      r2 += o3, n3 || /^<mo>(.*)<\/mo>$/.test(o3) ? a2 = n3 ? "mi" : "mo" : (r2 += "<mo>&#x2061;</mo>", a2 = "applyfunction");
    }
    "mi" !== e5.lastType && "mn" !== e5.lastType || /^<mo>(.*)<\/mo>$/.test(r2) || (r2 = `<mo>&#8290;</mo>${r2}`), e5.index += 1;
  }
  return Ln(r2, e5, i2) || r2.length > 0 && (n2 = true, e5.mathML += r2, e5.lastType = a2), n2;
}
function Tn(e5, t2, i2, n2) {
  const r2 = { atoms: [], index: null != t2 ? t2 : 0, mathML: "", lastType: "" };
  if ("number" == typeof e5 || "boolean" == typeof e5)
    r2.mathML = e5.toString();
  else if ("string" == typeof e5)
    r2.mathML = e5;
  else if (e5 instanceof nt)
    r2.mathML = In(e5, n2);
  else if (Array.isArray(e5)) {
    r2.atoms = e5;
    let t3 = 0;
    for (i2 = i2 || (e5 ? e5.length : 0); r2.index < i2; )
      if (An(r2, i2, n2) || Cn(r2, i2, n2) || Mn(r2, i2, n2) || Dn(r2, i2, n2) || En(r2, i2, n2))
        t3 += 1;
      else if (r2.index < i2) {
        let e6 = In(r2.atoms[r2.index], n2);
        "mn" === r2.lastType && e6.length > 0 && "genfrac" === r2.atoms[r2.index].type && (e6 = "<mo>&#x2064;</mo>" + e6), "genfrac" === r2.atoms[r2.index].type ? r2.lastType = "mfrac" : r2.lastType = "", r2.index += 1, Ln(e6, r2, n2) ? t3 += 2 : e6.length > 0 && (r2.mathML += e6, t3 += 1);
      }
    t3 > 1 && (r2.mathML = "<mrow>" + r2.mathML + "</mrow>");
  }
  return r2;
}
function zn(e5, t2) {
  let i2 = "";
  const n2 = qn(e5.value);
  return n2 && (i2 = "<mo" + Sn(e5.id, t2) + ">" + n2 + "</mo>"), i2;
}
function qn(e5) {
  if (!e5)
    return "";
  if ("string" == typeof e5)
    return wn(e5);
  if (!Array.isArray(e5) && "string" == typeof e5.body)
    return wn(e5.body);
  let t2 = "";
  for (const i2 of e5)
    "string" == typeof i2.value && (t2 += i2.value);
  return wn(t2);
}
function In(e5, t2) {
  var i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2, p2, f2, g2, y2;
  const b2 = { widehat: "^", widecheck: "\u02C7", widetilde: "~", utilde: "~", overleftarrow: "\u2190", underleftarrow: "\u2190", xleftarrow: "\u2190", overrightarrow: "\u2192", underrightarrow: "\u2192", xrightarrow: "\u2192", underbrace: "\u23DF", overbrace: "\u23DE", overgroup: "\u23E0", undergroup: "\u23E1", overleftrightarrow: "\u2194", underleftrightarrow: "\u2194", xleftrightarrow: "\u2194", Overrightarrow: "\u21D2", xRightarrow: "\u21D2", overleftharpoon: "\u21BC", xleftharpoonup: "\u21BC", overrightharpoon: "\u21C0", xrightharpoonup: "\u21C0", xLeftarrow: "\u21D0", xLeftrightarrow: "\u21D4", xhookleftarrow: "\u21A9", xhookrightarrow: "\u21AA", xmapsto: "\u21A6", xrightharpoondown: "\u21C1", xleftharpoondown: "\u21BD", xrightleftharpoons: "\u21CC", xleftrightharpoons: "\u21CB", xtwoheadleftarrow: "\u219E", xtwoheadrightarrow: "\u21A0", xlongequal: "=", xtofrom: "\u21C4", xrightleftarrows: "\u21C4", xrightequilibrium: "\u21CC", xleftequilibrium: "\u21CB" }, v2 = { "\\exponentialE": "&#x02147;", "\\imaginaryI": "&#x2148;", "\\differentialD": "&#x2146;", "\\capitalDifferentialD": "&#x2145;", "\\alpha": "&#x03b1;", "\\pi": "&#x03c0;", "\\infty": "&#x221e;", "\\forall": "&#x2200;", "\\nexists": "&#x2204;", "\\exists": "&#x2203;", "\\hbar": "\u210F", "\\cdotp": "\u22C5", "\\ldots": "\u2026", "\\cdots": "\u22EF", "\\ddots": "\u22F1", "\\vdots": "\u22EE", "\\ldotp": "." }, x2 = { "\\!": -3 / 18, "\\ ": 6 / 18, "\\,": 3 / 18, "\\:": 4 / 18, "\\;": 5 / 18, "\\enspace": 0.5, "\\quad": 1, "\\qquad": 2, "\\enskip": 0.5 };
  let k2, _2, w2, S2, M2, N2, L2 = "", A2 = "", C2 = null !== (n2 = { cal: "script", frak: "fraktur", bb: "double-struck", scr: "script", cmtt: "monospace", cmss: "sans-serif" }[null !== (i2 = e5.fontFamily) && void 0 !== i2 ? i2 : e5.font]) && void 0 !== n2 ? n2 : "";
  C2 && (C2 = ` mathvariant="${C2}"`);
  const { command: E2 } = e5;
  if ("text" === e5.mode)
    L2 = `<mi${Sn(e5.id, t2)}>${e5.value}</mi>`;
  else
    switch (e5.type) {
      case "first":
      case "line":
      case "overlap":
      case "msubsup":
      case "phantom":
      case "composition":
      case "rule":
      case "chem":
      case "error":
        break;
      case "group":
      case "root":
        L2 = _n[e5.command] ? _n[e5.command] : Tn(e5.body, 0, 0, t2).mathML;
        break;
      case "array":
        if ((e5.leftDelim && "." !== e5.leftDelim || e5.rightDelim && "." !== e5.rightDelim) && (L2 += "<mrow>", e5.leftDelim && "." !== e5.leftDelim && (L2 += "<mo>" + (_n[e5.leftDelim] || e5.leftDelim) + "</mo>")), L2 += "<mtable", e5.colFormat) {
          for (L2 += ' columnalign="', w2 = 0; w2 < e5.colFormat.length; w2++)
            e5.colFormat[w2].align && (L2 += { l: "left", c: "center", r: "right" }[e5.colFormat[w2].align] + " ");
          L2 += '"';
        }
        for (L2 += ">", _2 = 0; _2 < e5.array.length; _2++) {
          for (L2 += "<mtr>", k2 = 0; k2 < e5.array[_2].length; k2++)
            L2 += "<mtd>" + Tn(e5.array[_2][k2], 0, 0, t2).mathML + "</mtd>";
          L2 += "</mtr>";
        }
        L2 += "</mtable>", (e5.leftDelim && "." !== e5.leftDelim || e5.rightDelim && "." !== e5.rightDelim) && (e5.rightDelim && "." !== e5.rightDelim && (L2 += "<mo>" + (_n[e5.leftDelim] || e5.rightDelim) + "</mo>"), L2 += "</mrow>");
        break;
      case "genfrac":
        (e5.leftDelim || e5.rightDelim) && (L2 += "<mrow>"), e5.leftDelim && "." !== e5.leftDelim && (L2 += "<mo" + Sn(e5.id, t2) + ">" + (_n[e5.leftDelim] || e5.leftDelim) + "</mo>"), e5.hasBarLine ? (L2 += "<mfrac>", L2 += Tn(e5.above, 0, 0, t2).mathML || "<mi>&nbsp;</mi>", L2 += Tn(e5.below, 0, 0, t2).mathML || "<mi>&nbsp;</mi>", L2 += "</mfrac>") : (L2 += "<mtable" + Sn(e5.id, t2) + ">", L2 += "<mtr>" + Tn(e5.above, 0, 0, t2).mathML + "</mtr>", L2 += "<mtr>" + Tn(e5.below, 0, 0, t2).mathML + "</mtr>", L2 += "</mtable>"), e5.rightDelim && "." !== e5.rightDelim && (L2 += "<mo" + Sn(e5.id, t2) + ">" + (_n[e5.rightDelim] || e5.rightDelim) + "</mo>"), (e5.leftDelim || e5.rightDelim) && (L2 += "</mrow>");
        break;
      case "surd":
        e5.hasEmptyBranch("above") ? (L2 += "<msqrt" + Sn(e5.id, t2) + ">", L2 += Tn(e5.body, 0, 0, t2).mathML, L2 += "</msqrt>") : (L2 += "<mroot" + Sn(e5.id, t2) + ">", L2 += Tn(e5.body, 0, 0, t2).mathML, L2 += Tn(e5.above, 0, 0, t2).mathML, L2 += "</mroot>");
        break;
      case "leftright":
        L2 = "<mrow>", e5.leftDelim && "." !== e5.leftDelim && (L2 += "<mo" + Sn(e5.id, t2) + ">" + (null !== (r2 = _n[e5.leftDelim]) && void 0 !== r2 ? r2 : e5.leftDelim) + "</mo>"), e5.body && (L2 += Tn(e5.body, 0, 0, t2).mathML), e5.rightDelim && "." !== e5.rightDelim && (L2 += "<mo" + Sn(e5.id, t2) + ">" + (null !== (a2 = _n[e5.rightDelim]) && void 0 !== a2 ? a2 : e5.rightDelim) + "</mo>"), L2 += "</mrow>";
        break;
      case "sizeddelim":
      case "delim":
        L2 += '<mo separator="true"' + Sn(e5.id, t2) + ">" + (_n[e5.delim] || e5.delim) + "</mo>";
        break;
      case "accent":
        L2 += '<mover accent="true"' + Sn(e5.id, t2) + ">", L2 += Tn(e5.body, 0, 0, t2).mathML, L2 += "<mo>" + (_n[E2] || e5.accent) + "</mo>", L2 += "</mover>";
        break;
      case "overunder":
        M2 = e5.above, S2 = e5.below, (e5.svgAbove || M2) && (e5.svgBelow || S2) ? N2 = e5.body : M2 && M2.length > 0 ? (N2 = e5.body, (null === (s2 = null === (o2 = e5.body) || void 0 === o2 ? void 0 : o2[0]) || void 0 === s2 ? void 0 : s2.below) ? (S2 = e5.body[0].below, N2 = e5.body[0].body) : "first" === (null === (u2 = null === (l2 = e5.body) || void 0 === l2 ? void 0 : l2[0]) || void 0 === u2 ? void 0 : u2.type) && (null === (d2 = null === (c2 = e5.body) || void 0 === c2 ? void 0 : c2[1]) || void 0 === d2 ? void 0 : d2.below) && (S2 = e5.body[1].below, N2 = e5.body[1].body)) : S2 && S2.length > 0 && (N2 = e5.body, (null === (m2 = null === (h2 = e5.body) || void 0 === h2 ? void 0 : h2[0]) || void 0 === m2 ? void 0 : m2.above) ? (M2 = e5.body[0].above, N2 = e5.body[0].body) : "first" === (null === (f2 = null === (p2 = e5.body) || void 0 === p2 ? void 0 : p2[0]) || void 0 === f2 ? void 0 : f2.type) && (null === (y2 = null === (g2 = e5.body) || void 0 === g2 ? void 0 : g2[1]) || void 0 === y2 ? void 0 : y2.above) && (M2 = e5.body[1].overscript, N2 = e5.body[1].body)), (e5.svgAbove || M2) && (e5.svgBelow || S2) ? (L2 += `<munderover ${C2} ${Sn(e5.id, t2)}>`, L2 += b2[e5.svgBody] || Tn(N2, 0, 0, t2).mathML, L2 += b2[e5.svgBelow] || Tn(S2, 0, 0, t2).mathML, L2 += b2[e5.svgAbove] || Tn(M2, 0, 0, t2).mathML, L2 += "</munderover>") : e5.svgAbove || M2 ? (L2 += `<mover ${C2} ${Sn(e5.id, t2)}>` + (b2[e5.svgBody] || Tn(N2, 0, 0, t2).mathML), L2 += b2[e5.svgAbove] || Tn(M2, 0, 0, t2).mathML, L2 += "</mover>") : (e5.svgBelow || S2) && (L2 += `<munder ${C2} ${Sn(e5.id, t2)}>` + (b2[e5.svgBody] || Tn(N2, 0, 0, t2).mathML), L2 += b2[e5.svgBelow] || Tn(S2, 0, 0, t2).mathML, L2 += "</munder>");
        break;
      case "placeholder":
      case "mord": {
        L2 = v2[E2] || E2 || ("string" == typeof e5.value ? e5.value : "");
        const i3 = E2 ? E2.match(/{?\\char"([\dabcdefABCDEF]*)}?/) : null;
        i3 ? L2 = "&#x" + i3[1] + ";" : L2.length > 0 && L2.startsWith("\\") && (L2 = "string" == typeof e5.value && e5.value.charCodeAt(0) > 255 ? "&#x" + ("000000" + e5.value.charCodeAt(0).toString(16)).slice(-4) + ";" : "string" == typeof e5.value ? e5.value.charAt(0) : "");
        const n3 = /\d/.test(L2) ? "mn" : "mi";
        L2 = `<${n3}${C2}${Sn(e5.id, t2)}>${wn(L2)}</${n3}>`;
        break;
      }
      case "mbin":
      case "mrel":
      case "minner":
        L2 = E2 && v2[E2] ? "<mi" + Sn(e5.id, t2) + ">" + v2[E2] + "</mi>" : E2 && _n[E2] ? "<mo" + Sn(e5.id, t2) + ">" + _n[E2] + "</mo>" : zn(e5, t2);
        break;
      case "mpunct":
        L2 = '<mo separator="true"' + Sn(e5.id, t2) + ">" + (_n[E2] || E2) + "</mo>";
        break;
      case "mop":
        "\u200B" !== e5.body && (L2 = "<mo" + Sn(e5.id, t2) + ">", L2 += "\\operatorname" === E2 ? e5.body : E2 || e5.body, L2 += "</mo>");
        break;
      case "box":
        L2 = '<menclose notation="box"', e5.backgroundcolor && (L2 += ' mathbackground="' + e5.backgroundcolor + '"'), L2 += Sn(e5.id, t2) + ">" + Tn(e5.body, 0, 0, t2).mathML + "</menclose>";
        break;
      case "spacing":
        L2 += '<mspace width="' + (x2[E2] || 0) + 'em"/>';
        break;
      case "enclose":
        L2 = '<menclose notation="';
        for (const t3 in e5.notation)
          Object.prototype.hasOwnProperty.call(e5.notation, t3) && e5.notation[t3] && (L2 += A2 + t3, A2 = " ");
        L2 += Sn(e5.id, t2) + '">' + Tn(e5.body, 0, 0, t2).mathML + "</menclose>";
        break;
      case "space":
        L2 += "&nbsp;";
        break;
      case "mopen":
      case "mclose":
        L2 += zn(e5, t2);
        break;
      case "macro":
        {
          const i3 = e5.command + qn(e5.macroArgs);
          i3 && (L2 += `<mo ${Sn(e5.id, t2)}>${i3}</mo>`);
        }
        break;
      case "latex":
        L2 += "<mtext" + Sn(e5.id, t2) + ">" + e5.value + "</mtext>";
    }
  return L2;
}
function Fn(e5, t2) {
  return Tn(e5, 0, 0, t2).mathML;
}
var On = { "\\alpha": "alpha ", "\\mu": "mew ", "\\sigma": "sigma ", "\\pi": "pie ", "\\imaginaryI": "eye ", "\\sum": "Summation ", "\\prod": "Product ", a: '<phoneme alphabet="ipa" ph="e\u026A">a</phoneme>', A: 'capital <phoneme alphabet="ipa" ph="e\u026A">A</phoneme>', "+": "plus ", "-": "minus ", ";": '<break time="150ms"/> semi-colon <break time="150ms"/>', ",": '<break time="150ms"/> comma  <break time="150ms"/>', "|": '<break time="150ms"/>Vertical bar<break time="150ms"/>', "(": '<break time="150ms"/>Open paren. <break time="150ms"/>', ")": '<break time="150ms"/> Close paren. <break time="150ms"/>', "=": "equals ", "<": "is less than ", "\\lt": "is less than ", "<=": "is less than or equal to ", "\\le": "is less than or equal to ", "\\gt": "is greater than ", ">": "is greater than ", "\\ge": "is greater than or equal to ", "\\geq": "is greater than or equal to ", "\\leq": "is less than or equal to ", "!": "factorial ", "\\sin": "sine ", "\\cos": "cosine ", "\u200B": "", "\u2212": "minus ", ":": '<break time="150ms"/> such that <break time="200ms"/> ', "\\colon": '<break time="150ms"/> such that <break time="200ms"/> ', "\\hbar": "etch bar ", "\\iff": '<break time="200ms"/>if, and only if, <break time="200ms"/>', "\\Longleftrightarrow": '<break time="200ms"/>if, and only if, <break time="200ms"/>', "\\land": "and ", "\\lor": "or ", "\\neg": "not ", "\\div": "divided by ", "\\forall": "for all ", "\\exists": "there exists ", "\\nexists": "there does not exists ", "\\in": "element of ", "\\N": 'the set <break time="150ms"/><say-as interpret-as="character">n</say-as>', "\\C": 'the set <break time="150ms"/><say-as interpret-as="character">c</say-as>', "\\Z": 'the set <break time="150ms"/><say-as interpret-as="character">z</say-as>', "\\Q": 'the set <break time="150ms"/><say-as interpret-as="character">q</say-as>', "\\infty": "infinity ", "\\nabla": "nabla ", "\\partial": "partial derivative of ", "\\cdot": "times ", "\\cdots": "dot dot dot ", "\\Rightarrow": "implies ", "\\lparen": '<break time="150ms"/>open paren<break time="150ms"/>', "\\rparen": '<break time="150ms"/>close paren<break time="150ms"/>', "\\lbrace": '<break time="150ms"/>open brace<break time="150ms"/>', "\\{": '<break time="150ms"/>open brace<break time="150ms"/>', "\\rbrace": '<break time="150ms"/>close brace<break time="150ms"/>', "\\}": '<break time="150ms"/>close brace<break time="150ms"/>', "\\langle": '<break time="150ms"/>left angle bracket<break time="150ms"/>', "\\rangle": '<break time="150ms"/>right angle bracket<break time="150ms"/>', "\\lfloor": '<break time="150ms"/>open floor<break time="150ms"/>', "\\rfloor": '<break time="150ms"/>close floor<break time="150ms"/>', "\\lceil": '<break time="150ms"/>open ceiling<break time="150ms"/>', "\\rceil": '<break time="150ms"/>close ceiling<break time="150ms"/>', "\\vert": '<break time="150ms"/>vertical bar<break time="150ms"/>', "\\mvert": '<break time="150ms"/>divides<break time="150ms"/>', "\\lvert": '<break time="150ms"/>left vertical bar<break time="150ms"/>', "\\rvert": '<break time="150ms"/>right vertical bar<break time="150ms"/>', "\\lbrack": '<break time="150ms"/> open square bracket <break time="150ms"/>', "\\rbrack": '<break time="150ms"/> close square bracket <break time="150ms"/>', mm: "millimeters", cm: "centimeters", km: "kilometers", kg: "kilograms" };
function Pn(t2) {
  let i2 = 0;
  if (e(t2))
    for (const e5 of t2)
      "first" !== e5.type && (i2 += 1);
  return 1 === i2;
}
function Bn(t2) {
  let i2 = "";
  if (e(t2))
    for (const e5 of t2)
      "first" !== e5.type && "string" == typeof e5.value && (i2 += e5.value);
  return i2;
}
function $n(t2, i2, n2) {
  var r2, a2, o2, s2;
  function l2(e5) {
    return "<emphasis>" + e5 + "</emphasis>";
  }
  if (!i2)
    return "";
  let u2 = "";
  if (e(i2)) {
    let e5 = false, a3 = false;
    for (let o3 = 0; o3 < i2.length; o3++)
      "text" !== i2[o3].mode && (a3 = false), o3 < i2.length - 2 && "mopen" === i2[o3].type && "mclose" === i2[o3 + 2].type && "mord" === i2[o3 + 1].type ? (u2 += " of ", u2 += l2($n(t2, i2[o3 + 1], n2)), o3 += 2) : "text" === i2[o3].mode ? a3 ? u2 += null !== (r2 = i2[o3].value) && void 0 !== r2 ? r2 : " " : (a3 = true, u2 += $n("text", i2[o3], n2)) : i2[o3].isDigit() ? e5 ? u2 += i2[o3].asDigit() : (e5 = true, u2 += $n(t2, i2[o3], n2)) : (e5 = false, u2 += $n(t2, i2[o3], n2));
  } else if ("text" === i2.mode)
    i2.id && "math" === t2 && (u2 += '<mark name="' + i2.id.toString() + '"/>'), u2 += i2.value;
  else {
    i2.id && "math" === t2 && (u2 += '<mark name="' + i2.id.toString() + '"/>');
    let r3 = "", d2 = "", h2 = "", m2 = false;
    switch (i2.type) {
      case "group":
      case "root":
        u2 += $n("math", i2.body, n2);
        break;
      case "genfrac":
        if (r3 = $n("math", i2.above, n2), d2 = $n("math", i2.below, n2), Pn(i2.above) && Pn(i2.below)) {
          const e5 = { "1/2": " half ", "1/3": " one third ", "2/3": " two third", "1/4": " one quarter ", "3/4": " three quarter ", "1/5": " one fifth ", "2/5": " two fifths ", "3/5": " three fifths ", "4/5": " four fifths ", "1/6": " one sixth ", "5/6": " five sixths ", "1/8": " one eight ", "3/8": " three eights ", "5/8": " five eights ", "7/8": " seven eights ", "1/9": " one ninth ", "2/9": " two ninths ", "4/9": " four ninths ", "5/9": " five ninths ", "7/9": " seven ninths ", "8/9": " eight ninths " }[Bn(i2.above) + "/" + Bn(i2.below)];
          e5 ? u2 = e5 : u2 += r3 + " over " + d2;
        } else
          u2 += ' the fraction <break time="150ms"/>' + r3 + ', over <break time="150ms"/>' + d2 + '.<break time="150ms"/> End fraction.<break time="150ms"/>';
        break;
      case "surd":
        if (h2 = $n("math", i2.body, n2), i2.hasEmptyBranch("above"))
          u2 += Pn(i2.body) ? " the square root of " + h2 + " , " : ' the square root of <break time="200ms"/>' + h2 + '. <break time="200ms"/> End square root';
        else {
          let e5 = $n("math", i2.above, n2);
          e5 = e5.trim();
          const t3 = e5.replace(/<mark([^/]*)\/>/g, "");
          u2 += "3" === t3 ? ' the cube root of <break time="200ms"/>' + h2 + '. <break time="200ms"/> End cube root' : "n" === t3 ? ' the nth root of <break time="200ms"/>' + h2 + '. <break time="200ms"/> End root' : ' the root with index: <break time="200ms"/>' + e5 + ', of <break time="200ms"/>' + h2 + '. <break time="200ms"/> End root';
        }
        break;
      case "leftright":
        {
          const e5 = i2;
          u2 += null !== (a2 = e5.leftDelim ? On[e5.leftDelim] : void 0) && void 0 !== a2 ? a2 : e5.leftDelim, u2 += $n("math", i2.body, n2), u2 += null !== (o2 = e5.rightDelim ? On[e5.rightDelim] : void 0) && void 0 !== o2 ? o2 : e5.rightDelim;
        }
        break;
      case "rule":
      case "overunder":
      case "overlap":
        break;
      case "placeholder":
        u2 += "placeholder ";
        break;
      case "delim":
      case "sizeddelim":
      case "mord":
      case "minner":
      case "mbin":
      case "mrel":
      case "mpunct":
      case "mopen":
      case "mclose": {
        const { command: e5 } = i2;
        if ("\\mathbin" === e5 || "\\mathrel" === e5 || "\\mathopen" === e5 || "\\mathclose" === e5 || "\\mathpunct" === e5 || "\\mathord" === e5 || "\\mathinner" === e5) {
          u2 = $n(t2, i2.body, n2);
          break;
        }
        let r4 = i2.isDigit() ? i2.asDigit() : i2.value, a3 = i2.command;
        if ("delim" !== i2.type && "sizeddelim" !== i2.type || (a3 = i2.value, r4 = a3), "text" === t2)
          u2 += r4;
        else {
          if ("mbin" === i2.type && (u2 += '<break time="150ms"/>'), r4) {
            const e6 = On[r4] || (a3 ? On[a3.trim()] : "");
            if (e6)
              u2 += " " + e6;
            else {
              const e7 = a3 ? function(e8) {
                let t3 = "";
                return e8.startsWith("\\") && (t3 = " " + e8.replace("\\", "") + " "), t3;
              }(a3.trim()) : "";
              u2 += e7 || function(e8) {
                return n2.textToSpeechMarkup ? /[a-z]/.test(e8) ? ` <say-as interpret-as="character">${e8}</say-as>` : /[A-Z]/.test(e8) ? `capital <say-as interpret-as="character">${e8.toLowerCase()}</say-as>` : e8 : /[a-z]/.test(e8) ? " '" + e8.toUpperCase() + "'" : /[A-Z]/.test(e8) ? " 'capital " + e8.toUpperCase() + "'" : e8;
              }(r4);
            }
          } else
            u2 += $n("math", i2.body, n2);
          "mbin" === i2.type && (u2 += '<break time="150ms"/>');
        }
        break;
      }
      case "mop":
        if ("\u200B" !== i2.value) {
          const e5 = i2.command;
          if ("\\sum" === e5)
            if (i2.hasEmptyBranch("superscript") || i2.hasEmptyBranch("subscript"))
              if (i2.hasEmptyBranch("subscript"))
                u2 += " the summation of";
              else {
                let e6 = $n("math", i2.subscript, n2);
                e6 = e6.trim(), u2 += ' the summation from <break time="200ms"/>' + e6 + '<break time="200ms"/> of <break time="150ms"/>', m2 = true;
              }
            else {
              let e6 = $n("math", i2.superscript, n2);
              e6 = e6.trim();
              let t3 = $n("math", i2.subscript, n2);
              t3 = t3.trim(), u2 += ' the summation from <break time="200ms"/>' + t3 + '<break time="200ms"/> to  <break time="200ms"/>' + e6 + '<break time="200ms"/> of <break time="150ms"/>', m2 = true;
            }
          else if ("\\prod" === e5)
            if (i2.hasEmptyBranch("superscript") || i2.hasEmptyBranch("subscript"))
              if (i2.hasEmptyBranch("subscript"))
                u2 += " the product  of ";
              else {
                let e6 = $n("math", i2.subscript, n2);
                e6 = e6.trim(), u2 += ' the product from <break time="200ms"/>' + e6 + '<break time="200ms"/> of <break time="150ms"/>', m2 = true;
              }
            else {
              let e6 = $n("math", i2.superscript, n2);
              e6 = e6.trim();
              let t3 = $n("math", i2.subscript, n2);
              t3 = t3.trim(), u2 += ' the product from <break time="200ms"/>' + t3 + '<break time="200ms"/> to <break time="200ms"/>' + e6 + '<break time="200ms"/> of <break time="150ms"/>', m2 = true;
            }
          else if ("\\int" === e5)
            if (i2.hasEmptyBranch("superscript") || i2.hasEmptyBranch("subscript"))
              u2 += ' the integral of <break time="200ms"/> ';
            else {
              let e6 = $n("math", i2.superscript, n2);
              e6 = e6.trim();
              let t3 = $n("math", i2.subscript, n2);
              t3 = t3.trim(), u2 += ' the integral from <break time="200ms"/>' + l2(t3) + '<break time="200ms"/> to <break time="200ms"/>' + l2(e6) + ' <break time="200ms"/> of ', m2 = true;
            }
          else
            "string" == typeof i2.value ? u2 += (null !== (s2 = On[i2.value]) && void 0 !== s2 ? s2 : i2.command ? On[i2.command] : void 0) || " " + i2.value : i2.command && ("\\mathop" === i2.command ? u2 += $n("math", i2.body, n2) : "\\operatorname" === i2.command ? u2 += (c2 = i2.body) ? c2.map((e6) => e6.value).join("") : "" : u2 += i2.command.startsWith("\\") ? " " + i2.command.slice(1) : " " + i2.command);
        }
        break;
      case "enclose":
        h2 = $n("math", i2.body, n2), u2 += Pn(i2.body) ? " crossed out " + h2 + " , " : " crossed out " + h2 + ". End cross out";
    }
    if (!m2 && !i2.hasEmptyBranch("superscript")) {
      let r4 = $n(t2, i2.superscript, n2);
      r4 = r4.trim();
      const a3 = r4.replace(/<[^>]*>/g, "");
      if (Pn(i2.superscript)) {
        if ("math" === t2) {
          const t3 = function(t4) {
            if (e(t4)) {
              for (const e5 of t4)
                if ("first" !== e5.type && e5.id)
                  return e5.id.toString();
            }
            return "";
          }(i2.superscript);
          t3 && (u2 += '<mark name="' + t3 + '"/>');
        }
        "\u2032" === a3 ? u2 += " prime " : "2" === a3 ? u2 += " squared " : "3" === a3 ? u2 += " cubed " : Number.isNaN(Number.parseInt(a3)) ? u2 += " to the " + r4 + "; " : u2 += ' to the <say-as interpret-as="ordinal">' + a3 + "</say-as> power; ";
      } else
        Number.isNaN(Number.parseInt(a3)) ? u2 += " raised to the " + r4 + "; " : u2 += ' raised to the <say-as interpret-as="ordinal">' + a3 + "</say-as> power; ";
    }
    if (!m2 && !i2.hasEmptyBranch("subscript")) {
      let e5 = $n("math", i2.subscript, n2);
      e5 = e5.trim(), u2 += Pn(i2.subscript) ? " sub " + e5 : " subscript " + e5 + ". End subscript. ";
    }
  }
  var c2;
  return u2;
}
function Vn(e5, i2) {
  var n2;
  const r2 = { ...i2, textToSpeechRulesOptions: { ...i2.textToSpeechRulesOptions } };
  if ("sre" === r2.textToSpeechRules && t() && "sre" in window) {
    const t2 = Fn(e5, r2);
    return t2 ? (r2.textToSpeechMarkup && (r2.textToSpeechRulesOptions = null !== (n2 = r2.textToSpeechRulesOptions) && void 0 !== n2 ? n2 : {}, r2.textToSpeechRulesOptions.markup = r2.textToSpeechMarkup, "ssml" === r2.textToSpeechRulesOptions.markup && (r2.textToSpeechRulesOptions.markup = "ssml_step"), r2.textToSpeechRulesOptions.rate = r2.speechEngineRate), r2.textToSpeechRulesOptions && window.sre.System.getInstance().setupEngine(r2.textToSpeechRulesOptions), window.sre.System.getInstance().toSpeech(t2)) : "";
  }
  let o2 = $n("math", e5, r2);
  if ("ssml" === r2.textToSpeechMarkup) {
    let e6 = "";
    r2.speechEngineRate && (e6 = '<prosody rate="' + r2.speechEngineRate + '">'), o2 = '<?xml version="1.0"?><speak version="1.1" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US"><amazon:auto-breaths>' + e6 + "<p><s>" + o2 + "</s></p>" + (e6 ? "</prosody>" : "") + "</amazon:auto-breaths></speak>";
  } else
    o2 = "mac" === r2.textToSpeechMarkup && "macos" === a() ? o2.replace(/<mark([^/]*)\/>/g, "").replace(/<emphasis>/g, "[[emph+]]").replace(/<\/emphasis>/g, "").replace(/<break time="(\d*)ms"\/>/g, "[[slc $1]]").replace(/<say-as[^>]*>/g, "").replace(/<\/say-as>/g, "") : o2.replace(/<[^>]*>/g, "").replace(/\s{2,}/g, " ");
  return o2;
}
function Kn(e5, t2, i2 = 3e3, n2 = "$0") {
  for (const r2 of t2)
    s[r2] && (s[r2].frequency = i2, s[r2].category = e5, s[r2].template = n2.replace(/\$0/g, r2)), u[r2] && (u[r2] = { ...u[r2], frequency: i2, category: e5, template: n2.replace(/\$0/g, r2) });
}
Kn("Trigonometry", ["\\cos", "\\sin", "\\tan"], 4e3), Kn("Trigonometry", ["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arcsec", "\\arccsc", "\\arsinh", "\\arcosh", "\\artanh", "\\arcsech", "\\arccsch", "\\arg", "\\ch", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\lg", "\\lb", "\\sec", "\\sinh", "\\sh", "\\tanh", "\\tg", "\\th"], 2e3), Kn("Functions", ["\\ln", "\\log", "\\exp", "\\lim"], 4e3), Kn("Functions", ["\\dim", "\\ker", "\\deg", "\\det", "\\mod", "\\min", "\\max"], 3e3), Kn("Functions", ["\\hom"], 1200), Kn("Decoration", ["\\rule"], 200, "$0{2em}{1em}"), Kn("Decoration", ["\\color", "\\textcolor"], 200, "{$0{m0}A}{$0{m1}B}{$0{m2}C }{$0{m3}a}{$0{m4}b}{$0{m5}c}{$0{m6}8}"), Kn("Decoration", ["\\overline", "\\underline"], 3e3, "$0{\\placeholder{}}"), Kn("Decoration", ["\\enclose"], 1200, '\\enclose{updiagonalstrike,roundedbox}[1px solid red, mathbackground="#fbc0bd"]{x=0}'), Kn("Decoration", ["\\fcolorbox"], 1200, '\\fcolorbox{#cd0030}{#ffd400}{\\unicode{"2B1A}}'), Kn("Decoration", ["\\colorbox"], 1200, '\\colorbox{#fbc0bd}{\\unicode{"2B1A}}'), Kn("Decoration", ["\\boxed", "\\cancel", "\\bcancel", "\\xcancel"], 1200, "$0{\\placeholder{}}"), Kn("Decoration", ["\\bbox"], 1200, '\\bbox[#ffd400, solid 2px #ffd400]{\\unicode{"2B1A}}'), Kn("Styling", ["\\mathbb"], 4e3, "$0{Don Knuth}"), Kn("Styling", ["\\textbf", "\\textup", "\\textit", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textmd", "\\textsl", "\\textsc", "\\mathsf", "\\mathtt", "\\mathrm", "\\mathfrak", "\\mathcal", "\\mathscr", "\\mathbf", "\\mathmd", "\\mathit", "\\text", "\\mbox", "\\Bbb", "\\bold", "\\bm", "\\boldsymbol"], 3e3, "$0{Don Knuth}"), Kn("Styling", ["\\frak", "\\tt", "\\bf", "\\it", "\\rmfamily", "\\sffamily", "\\ttfamily", "\\class", "\\cssId", "\\htmlData", "\\htmlStyle"], 1200, "{$0 Don Knuth}"), Kn("Styling", ["\\bfseries", "\\mdseries", "\\upshape", "\\slshape", "\\scshape"], 1200, "\\text{$0 Don Knuth}"), Kn("Styling", ["\\class", "\\cssId"], 1200, "$0{testIdentifier}{Don Knuth}"), Kn("Styling", ["\\fontseries"], 1200, "\\text{$0{b}Don Knuth}"), Kn("Styling", ["\\fontfamily"], 1200, "\\text{$0{cmtt}Don Knuth}"), Kn("Styling", ["\\fontshape"], 1200, "\\text{$0{sc}Don Knuth}"), Kn("Styling", ["\\selectfont"], 1200, "\\text{$0}"), Kn("Styling", ["\\emph"], 1200, "Don$0{Knuth}"), Kn("Styling", ["\\em"], 1200, "Don{$0 Knuth}"), Kn("Layout", ["\\mathop", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathord", "\\mathinner", "\\operatorname", "\\operatorname*"], 1200, "x=$0{arg}=0"), Kn("Layout", ["\\middle"], 1200, "\\left\\{x$0|x>0\\right\\}"), Kn("Layout", ["\\overset", "\\underset", "\\stackrel", "\\stackbin"], 1200, "$0{arg}{x=0}"), Kn("Layout", ["\\rlap", "\\mathrlap"], 1200, "$0{/}0"), Kn("Layout", ["\\llap", "\\mathllap"], 1200, "o$0{/}"), Kn("Fractions", ["\\frac"], 4e3, "$0{\\placeholder{}}{\\placeholder{}}"), Kn("Fractions", ["\\binom", "\\dfrac", "\\tfrac", "\\dbinom", "\\tbinom", "\\pdiff", "\\cfrac"], 1200, "$0{\\placeholder{}}{\\placeholder{}}"), Kn("Fractions", ["\\over", "\\atop", "\\choose"], 1200, '\\unicode{"2B1A} $0 \\unicode{"2B1A}'), Kn("Fractions", ["\\overwithdelims", "\\atopwithdelims"], 1200, '{\\unicode{"2B1A} $0{\\lbrace}{\\rbrace} \\unicode{"2B1A}}'), Kn("Extensible Operators", ["\\sum", "\\prod", "\\bigcap", "\\bigcup", "\\int"], 4e3), Kn("Extensible Operators", ["\\bigoplus", "\\smallint", "\\iint", "\\oint"], 3e3), Kn("Extensible Operators", ["\\bigwedge", "\\bigvee", "\\coprod", "\\bigsqcup", "\\bigotimes", "\\bigodot", "\\biguplus", "\\intop", "\\sqcup", "\\sqcap", "\\uplus", "\\wr", "\\Cap", "\\Cup", "\\doublecap", "\\doublecup", "\\amalg", "\\iiint", "\\oiint", "\\oiiint", "\\intclockwise", "\\varointclockwise", "\\ointctrclockwise", "\\intctrclockwise"], 1200), Kn("Accents", ["\\vec"], 4e3), Kn("Accents", ["\\bar", "\\ddot", "\\acute", "\\tilde", "\\check"], 3e3, "$0{\\placeholder{}}"), Kn("Accents", ["\\^", "\\`", "\\'"], 1200, "$0{e}"), Kn("Accents", ["\\c"], 1200, "$0{c}"), Kn("Accents", ["\\~"], 1200, "$0{n}"), Kn("Accents", ["\\mathring", "\\hat", "\\dot", "\\breve", "\\grave"], 1200, "$0{\\placeholder{}}"), Kn("Extensible Symbols", ["\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftharpoon", "\\overrightharpoon", "\\overleftrightarrow", "\\overbrace", "\\overlinesegment", "\\overgroup", "\\widehat", "\\widecheck", "\\widetilde"], 3e3, "$0{ABC}"), Kn("Extensible Symbols", ["\\underrightarrow", "\\underleftarrow", "\\underleftrightarrow", "\\underbrace", "\\underlinesegment", "\\undergroup", "\\utilde"], 3e3, "$0{ABC}"), Kn("Sizing", ["\\tiny", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"], 1200, "$0{x=0}"), Kn("Sizing", ["\\big", "\\Big", "\\bigg", "\\Bigg"], 1200, "$0($0)"), Kn("Sizing", ["\\bigl", "\\Bigl", "\\biggl", "\\Biggl"], 1200, "$0("), Kn("Sizing", ["\\bigr", "\\Bigr", "\\biggr", "\\Biggr"], 1200, "$0)"), Kn("Sizing", ["\\bigm", "\\Bigm", "\\biggm", "\\Biggm"], 1200, "$0|"), Kn("Letterlike Symbols", ["\\nabla", "\\partial", "\\N", "\\R", "\\Q", "\\C", "\\Z", "\\exponentialE", "\\forall", "\\exists", "\\nexists"], 4e3), Kn("Letterlike Symbols", ["\\doubleStruckCapitalP", "\\P", "\\ell", "\\hbar", "\\hslash", "\\imath", "\\jmath", "\\imaginaryI", "\\imaginaryJ", "\\differentialD", "\\rd", "\\capitalDifferentialD", "\\doubleStruckCapitalN", "\\doubleStruckCapitalR", "\\doubleStruckCapitalQ", "\\doubleStruckCapitalC", "\\doubleStruckCapitalZ", "\\rD", "\\differencedelta", "\\mid", "@", "\\Re", "\\Im", "\\$", "\\%", "\\And", "\\degree"], 3e3), Kn("Letterlike Symbols", ["\\top", "\\bot", "\\scriptCapitalE", "\\scriptCapitalH", "\\scriptCapitalL", "\\gothicCapitalC", "\\gothicCapitalH", "\\gothicCapitalI", "\\gothicCapitalR", "\\Bbbk", "\\Finv", "\\Game", "\\wp", "\\eth", "\\mho", "\\pounds", "\\yen", "\\euro"], 1200), Kn("Crosses", ["\\dagger", "\\dag"], 4e3), Kn("Crosses", ["\\ddag", "\\ddagger", "\\maltese", "\\textdagger", "\\textdaggerdbl"], 1200), Kn("Various", ["\\checkmark", "\\diagup", "\\diagdown", "\\angle", "\\measuredangle", "\\sphericalangle", "\\prime", "\\doubleprime", "\\backprime", "\\backdoubleprime", "\\sharp", "\\flat", "\\natural", "\\&", "\\#", "\\clubsuit", "\\spadesuit", "\\diamondsuit", "\\heartsuit", "\\backslash", "\\infty", "/", "\\_", "\\/", "|", "'"], 1200), Kn("Various", ["\\unicode"], 1200, '$0{"2B1A}'), Kn("Arrows", ["\\longrightarrow", "\\rightarrow", "\\Longrightarrow", "\\Rightarrow"], 4e3), Kn("Arrows", ["\\longmapsto", "\\mapsto", "\\Longleftrightarrow", "\\rightleftarrows", "\\leftarrow", "\\curvearrowleft", "\\uparrow", "\\downarrow", "\\hookrightarrow", "\\rightharpoonup", "\\rightleftharpoons"], 3e3), Kn("Arrows", ["\\Leftarrow", "\\longleftrightarrow", "\\longleftarrow", "\\Longleftarrow", "\\searrow", "\\nearrow", "\\swarrow", "\\nwarrow", "\\Uparrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "\\hookleftarrow", "\\leftharpoonup", "\\leftharpoondown", "\\rightharpoondown", "\\leftrightarrows", "\\dashrightarrow", "\\dashleftarrow", "\\leftleftarrows", "\\Lleftarrow", "\\twoheadleftarrow", "\\leftarrowtail", "\\looparrowleft", "\\leftrightharpoons", "\\circlearrowleft", "\\Lsh", "\\upuparrows", "\\downharpoonleft", "\\multimap", "\\leftrightsquigarrow", "\\twoheadrightarrow", "\\rightarrowtail", "\\looparrowright", "\\curvearrowright", "\\circlearrowright", "\\Rsh", "\\downdownarrows", "\\upharpoonright", "\\downharpoonright", "\\rightsquigarrow", "\\leadsto", "\\Rrightarrow", "\\restriction"], 1200), Kn("Arrows", ["\\upharpoonleft", "\\rightrightarrows"], 0), Kn("Negated Arrows", ["\\nrightarrow", "\\nRightarrow", "\\nleftrightarrow", "\\nLeftrightarrow", "\\nleftarrow", "\\nLeftarrow"], 1200), Kn("Extensible Symbols", ["\\xrightarrow", "\\xleftarrow", "\\xRightarrow", "\\xLeftarrow", "\\xleftharpoonup", "\\xleftharpoondown", "\\xrightharpoonup", "\\xrightharpoondown", "\\xlongequal", "\\xtwoheadleftarrow", "\\xtwoheadrightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium"], 1200, "$0[below]{above}=0"), Kn("Negated Relations", ["\\nless", "\\nleqslant", "\\lneq", "\\lneqq", "\\nleqq", "\\unlhd", "\\unrhd", "\\lvertneqq", "\\lnsim", "\\lnapprox", "\\nprec", "\\npreceq", "\\precnsim", "\\precnapprox", "\\nsim", "\\nshortmid", "\\nmid", "\\nvdash", "\\nvDash", "\\ngtr", "\\ngeqslant", "\\ngeqq", "\\gneq", "\\gneqq", "\\gvertneqq", "\\gnsim", "\\nsucc", "\\succnsim", "\\ncong", "\\nshortparallel", "\\nparallel", "\\nVDash", "\\nVdash", "\\precneqq", "\\succneqq", "\\gnapprox", "\\succnapprox", "\\nsucceq"], 1200), Kn("Hebrew", ["\\aleph", "\\beth", "\\daleth", "\\gimel"], 1200), Kn("Fences", ["\\lbrace", "\\rbrace", "\\vert", "\\Vert", "\\{", "\\}", "(", ")", "[", "]"], 4e3), Kn("Fences", ["\\langle", "\\rangle", "\\lfloor", "\\rfloor", "\\lceil", "\\rceil", "\\mvert", "\\|", "\\mVert"], 3e3), Kn("Fences", ["\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lbrack", "\\rbrack", "\\ulcorner", "\\urcorner", "\\llcorner", "\\lrcorner", "\\lgroup", "\\rgroup", "\\lmoustache", "\\rmoustache"], 1200), Kn("Relations", ["=", "\\ne", "\\neq", "<", ">", "\\leqslant", "\\geqslant", "\\approx"], 4e3), Kn("Relations", ["\\lt", "\\gt", "\\le", "\\ge", "\\leq", "\\geq", "\\gg", "\\cong", "\\equiv", "\\prec", "\\preceq", "\\succ", "\\perp", "\\parallel", "\\propto", "\\smile", "\\frown", "\\sim", "\\gtrsim"], 3e3), Kn("Relations", ["\\coloneq", "\\succeq", "\\approxeq", "\\thickapprox", "\\lessapprox", "\\gtrapprox", "\\precapprox", "\\succapprox", "\\thicksim", "\\succsim", "\\precsim", "\\backsim", "\\eqsim", "\\backsimeq", "\\simeq", "\\lesssim", "\\nleq", "\\ngeq", "\\smallsmile", "\\smallfrown", "\\bowtie", "\\asymp", "\\leqq", "\\eqslantless", "\\ll", "\\lll", "\\lessgtr", "\\lesseqgtr", "\\lesseqqgtr", "\\risingdotseq", "\\fallingdotseq", "\\preccurlyeq", "\\curlyeqprec", "\\vDash", "\\Vvdash", "\\bumpeq", "\\Bumpeq", "\\geqq", "\\eqslantgtr", "\\ggg", "\\gtrless", "\\gtreqless", "\\gtreqqless", "\\succcurlyeq", "\\curlyeqsucc", "\\Vdash", "\\shortmid", "\\shortparallel", "\\between", "\\pitchfork", "\\varpropto", "\\backepsilon", "\\llless", "\\gggtr", "\\lhd", "\\rhd", "\\Join", "\\doteq", "\\doteqdot", "\\Doteq", "\\eqcirc", "\\circeq", "\\lessdot", "\\gtrdot", "\\measeq", "\\eqdef", "\\questeq"], 1200), Kn("Logic", ["\\leftrightarrow", "\\Leftrightarrow", "\\to"], 4e3), Kn("Logic", ["\\models", "\\vdash"], 3e3), Kn("Logic", ["\\therefore", "\\because", "\\implies", "\\gets", "\\dashv", "\\impliedby", "\\biconditional", "\\roundimplies"], 1200), Kn("Operators", ["+", "-", "*", "\\cdot"], 4e3), Kn("Operators", ["\\sqrt"], 4e3, "$0{\\placeholder{}}"), Kn("Operators", ["\\pm", "\\mp", "\\times", "\\div", "\\surd"], 3e3), Kn("Operators", ["\\ltimes", "\\rtimes", "\\leftthreetimes", "\\rightthreetimes", "\\intercal", "\\dotplus", "\\centerdot", "\\doublebarwedge", "\\divideontimes", "\\divides"], 1200), Kn("Logic", ["\\wedge", "\\vee", "\\neg"], 4e3), Kn("Logic", ["\\lnot"], 3e3), Kn("Logic", ["\\land", "\\lor", "\\barwedge", "\\veebar", "\\nor", "\\curlywedge", "\\curlyvee"], 1200), Kn("Greek", ["\\alpha", "\\beta", "\\gamma", "\\delta", "\\epsilon", "\\varepsilon", "\\zeta", "\\eta", "\\theta", "\\vartheta", "\\iota", "\\kappa", "\\varkappa", "\\lambda", "\\mu", "\\nu", "\\xi", "\\pi", "\\varpi", "\\rho", "\\varrho", "\\sigma", "\\varsigma", "\\tau", "\\phi", "\\varphi", "\\upsilon", "\\chi", "\\psi", "\\omega", "\\Gamma", "\\Delta", "\\Theta", "\\Lambda", "\\Xi", "\\Pi", "\\Sigma", "\\Upsilon", "\\Phi", "\\Psi", "\\Omega", "\\digamma", "\\omicron"], 3e3), Kn("Sets", ["\\emptyset", "\\varnothing", "\\cap", "\\cup", "\\in", "\\notin", "\\subset", "\\supset", "\\subseteq", "\\supseteq", "\\sqsubseteq"], 4e3), Kn("Sets", ["\\setminus", "\\not", "\\ni", "\\sqsupseteq", "\\nsupseteqq", "\\supsetneq", "\\varsupsetneq", "\\supsetneqq", "\\varsupsetneqq"], 3e3), Kn("Sets", ["\\smallsetminus", "\\complement", "\\owns", "\\subsetneq", "\\varsubsetneq", "\\subsetneqq", "\\varsubsetneqq", "\\nsubset", "\\nsupset", "\\nsubseteq", "\\nsupseteq", "\\nsubseteqq", "\\subseteqq", "\\Subset", "\\sqsubset", "\\supseteqq", "\\Supset", "\\sqsupset"], 1200), Kn("Spacing", ["\\space, \\quad", "\\qquad"], 3e3, '\\unicode{"203A}$0\\unicode{"2039}'), Kn("Spacing", ["\\!", "\\,", "\\:", "\\;", "\\enskip", "\\enspace"], 1200, '\\unicode{"203A}$0\\unicode{"2039}'), Kn("Spacing", ["\\hspace", "\\hspace*"], 1200, '\\unicode{"203A}$0{1em}\\unicode{"2039}'), Kn("Punctuation", ["\\colon", "\\cdotp", "\\ldots", "\\cdots", "\\ddots", "\\vdots", "?", "!", ":", '"', ",", ".", ";"], 3e3), Kn("Punctuation", ["\\mathellipsis", "\\ldotp", "\\Colon"], 1200), Kn("Boxes", ["\\square", "\\Box"], 3e3), Kn("Boxes", ["\\blacksquare", "\\boxminus", "\\boxplus", "\\boxtimes", "\\boxdot"], 1200), Kn("Circles", ["\\circ", "\\bullet", "\\circleddash", "\\oplus", "\\otimes"], 3e3), Kn("Circles", ["\\bigcirc", "\\circledast", "\\ominus", "\\circledcirc", "\\oslash", "\\circledS", "\\circledR", "\\odot"], 1200), Kn("Triangles", ["\\triangle", "\\triangleq"], 3e3), Kn("Triangles", ["\\bigtriangleup", "\\vartriangle", "\\triangledown", "\\bigtriangledown", "\\triangleleft", "\\vartriangleleft", "\\trianglelefteq", "\\ntriangleleft", "\\ntrianglelefteq", "\\triangleright", "\\vartriangleright", "\\trianglerighteq", "\\ntriangleright", "\\ntrianglerighteq", "\\blacktriangle", "\\blacktriangledown", "\\blacktriangleleft", "\\blacktriangleright"], 1200), Kn("Shapes", ["\\ast", "\\star"], 3e3), Kn("Shapes", ["\\diamond", "\\Diamond", "\\lozenge", "\\blacklozenge", "\\bigstar"], 1200);
var Rn = '.ML__keyboard{--hue:206;--keyboard-background:rgba(209,213,217,.97);--keyboard-text:#000;--keyboard-text-active:var(--primary,hsl(var(--hue),40%,50%));--keyboard-background-border:#ddd;--keycap-background:#fff;--keycap-background-active:#e5e5e5;--keycap-background-border:#e5e6e9;--keycap-background-border-bottom:#8d8f92;--keycap-text:#000;--keycap-text-active:#fff;--keycap-secondary-text:#000;--keycap-modifier-background:#b9bdc7;--keycap-modifier-border:#c5c9d0;--keycap-modifier-border-bottom:#989da6;--keyboard-alternate-background:#fff;--keyboard-alternate-background-active:var(--primary,hsl(var(--hue),40%,50%));--keyboard-alternate-text:var(--keycap-text,#000);--keyboard-alternate-text-active:#fff;--keyboard-alternate-key-length:70px;--keyboard-alternate-key-font-size:30px;--keyboard-alternate-key-aside-font-size:12px;--keyboard-height:276px;--keycap-height:52px;--keycap-font-size:20px;--keycap-small-font-size:calc(var(--keycap-font-size)*0.8);--keycap-extra-small-font-size:calc(var(--keycap-font-size)/1.42);--keycap-tt-font-size:calc(var(--keycap-font-size)*1.5);height:100%;left:0;pointer-events:none;position:fixed;top:0;width:100%;z-index:var(--keyboard-zindex,105)}.ML__keyboard.is-visible .ML__keyboard--plate{opacity:1;transform:translateY(calc(var(--keyboard-height, 276px)*-1));transition-timing-function:cubic-bezier(.4,0,1,1);visibility:visible}.ML__keyboard.alternate-keys{align-content:center;background-color:var(--keyboard-alternate-background);border-radius:6px;bottom:auto;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);box-sizing:content-box;display:flex;flex-direction:row;justify-content:center;max-width:286px;position:fixed;text-align:center;top:0;transform:none;transition:none;visibility:hidden;z-index:calc(var(--keyboard-zindex, 105) + 1)}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys{max-width:320px}}.ML__keyboard.alternate-keys.is-visible{visibility:visible}.ML__keyboard.alternate-keys.compact{--keyboard-alternate-key-length:50px;--keyboard-alternate-key-font-size:24px;--keyboard-alternate-key-aside-font-size:10px}.ML__keyboard.alternate-keys ul{display:flex;flex-flow:row wrap-reverse;justify-content:center;list-style:none;margin:3px;padding:0}.ML__keyboard.alternate-keys ul>li{fill:currentColor;align-items:center;background:transparent;border:1px solid transparent;border-radius:5px;box-sizing:border-box;color:var(--keyboard-alternate-text);display:flex;flex-flow:column;font-size:var(--keyboard-alternate-key-font-size);height:var(--keyboard-alternate-key-length);justify-content:center;margin:0;pointer-events:all;width:var(--keyboard-alternate-key-length)}@media only screen and (max-height:412px){.ML__keyboard.alternate-keys ul>li{font-size:24px;height:50px;width:50px}}.ML__keyboard.alternate-keys ul>li.is-active,.ML__keyboard.alternate-keys ul>li.is-pressed,.ML__keyboard.alternate-keys ul>li:hover{background:var(--keyboard-alternate-background-active);color:var(--keyboard-alternate-text-active)}.ML__keyboard.alternate-keys ul>li.small{font-size:var(--keycap-small-font-size,16px)}.ML__keyboard.alternate-keys ul>li.small-button{background:#fbfbfb;height:42px;margin:2px;width:42px}.ML__keyboard.alternate-keys ul>li.small-button:hover{background:var(--keyboard-alternate-background-active)}.ML__keyboard.alternate-keys ul>li.box>div,.ML__keyboard.alternate-keys ul>li.box>span{border:1px dashed rgba(0,0,0,.24)}.ML__keyboard.alternate-keys ul>li .warning{align-items:center;background:#cd0030;border-radius:5px;color:#fff;display:flex;justify-content:center;min-height:60px;min-width:60px;padding:5px}.ML__keyboard.alternate-keys ul>li .warning.is-active,.ML__keyboard.alternate-keys ul>li .warning.is-pressed,.ML__keyboard.alternate-keys ul>li .warning:hover{background:red}.ML__keyboard.alternate-keys ul>li .warning svg.svg-glyph{height:50px;width:50px}.ML__keyboard.alternate-keys ul>li aside{font-size:var(--keyboard-alternate-key-aside-font-size);line-height:12px;opacity:.78;padding-top:2px}.ML__keyboard .ML__keyboard--plate{-webkit-backdrop-filter:grayscale(50%);backdrop-filter:grayscale(50%);background-color:var(--keyboard-background);border:1px solid var(--keyboard-background-border);bottom:calc(var(--keyboard-height, 276px)*-1);box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);box-sizing:border-box;cursor:pointer;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:16px;font-weight:400;left:0;margin:0;opacity:0;padding-top:5px;pointer-events:all;position:absolute;text-shadow:none;touch-action:none;transform:translate(0);transition:.28s cubic-bezier(0,0,.2,1);transition-property:transform,opacity;-webkit-user-select:none;user-select:none;visibility:hidden;width:100%}.ML__keyboard .ML__keyboard--plate .tex{font-family:KaTeX_Math,KaTeX_Main,Cambria Math,Asana Math,OpenSymbol,Symbola,STIX,Times,serif!important}.ML__keyboard .ML__keyboard--plate .tex-math{font-family:KaTeX_Math,Cambria Math,Asana Math,OpenSymbol,Symbola,STIX,Times,serif!important}.ML__keyboard .ML__keyboard--plate .tt{font-family:IBM Plex Mono,Source Code Pro,Consolas,Roboto Mono,Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Courier,monospace!important;font-size:var(--keycap-tt-font-size,30px);font-weight:400}.ML__keyboard .ML__keyboard--plate>div.keyboard-layer{display:none;outline:none}.ML__keyboard .ML__keyboard--plate>div.keyboard-layer.is-visible{display:flex;flex-flow:column}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar{align-self:center;display:flex;flex-flow:row;justify-content:space-between;min-width:736px}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar{min-width:556px}}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar{max-width:100vw;min-width:365px;width:365px}}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar svg{height:20px;width:20px}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar svg{height:13px;width:17px}}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>.left{display:flex;flex-flow:row;justify-content:flex-start;position:relative}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>.right{display:flex;flex-flow:row;justify-content:flex-end}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div{fill:currentColor;align-items:baseline;background:0;border:none;border-bottom:2px solid transparent;box-shadow:none;color:var(--keyboard-text);cursor:pointer;display:flex;font-size:110%;justify-content:center;margin:7px 4px 6px;min-height:0;padding:4px 10px}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.disabled svg,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.disabled.is-pressed svg,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.disabled:hover svg{color:var(--keyboard-text);opacity:.2}@media only screen and (max-width:414px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div{font-size:100%;padding:0 6px 0 0}}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div{font-size:90%;padding-left:4px;padding-right:4px}}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.is-active,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.is-pressed,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div:active,.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div:hover{color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate>div>div.keyboard-toolbar>div>div.selected{border-bottom:2px solid var(--keyboard-text-active);color:var(--keyboard-text-active);margin-bottom:8px;padding-bottom:0}.ML__keyboard .ML__keyboard--plate [data-tooltip]{position:relative}.ML__keyboard .ML__keyboard--plate [data-tooltip]:after{background:#616161;border-radius:2px;bottom:100%;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2);color:#fff;content:attr(data-tooltip);display:inline-table;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:12px;font-weight:400;max-width:200px;opacity:0;padding:8px;position:absolute;text-align:center;top:inherit;transform:scale(.5);transition:all .15s cubic-bezier(.4,0,1,1) 1s;width:max-content;z-index:2}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate [data-tooltip]:after{font-size:16px;padding:8px 16px}}.ML__keyboard .ML__keyboard--plate [data-tooltip]:hover{position:relative}.ML__keyboard .ML__keyboard--plate [data-tooltip]:hover:after{opacity:1;transform:scale(1)}.ML__keyboard .ML__keyboard--plate div .rows{align-items:center;border:0;border-collapse:separate;clear:both;display:flex;flex-flow:column;margin:auto}.ML__keyboard .ML__keyboard--plate div .rows>ul{height:40px;list-style:none;margin:0 0 3px;padding:0}.ML__keyboard .ML__keyboard--plate div .rows>ul>li{fill:currentColor;-webkit-tap-highlight-color:transparent;align-items:center;background:var(--keycap-background);border:1px solid var(--keycap-background-border);border-bottom-color:var(--keycap-background-border-bottom);border-radius:5px;box-sizing:border-box;color:var(--keycap-text);display:flex;flex-flow:column;float:left;font-size:var(--keycap-font-size,20px);height:40px;justify-content:center;margin-right:2px;overflow:hidden;padding:8px 0;position:relative;text-align:center;-webkit-user-select:none;user-select:none;vertical-align:top;width:34px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li:last-child{margin-right:0}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.small{font-size:var(--keycap-small-font-size,16px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.tt{color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.bottom{justify-content:flex-end}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.left{align-items:flex-start;padding-left:4px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.right{align-items:flex-end;padding-right:4px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li svg.svg-glyph{height:20px;width:20px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning{align-items:center;background:#cd0030;border-radius:100%;color:#fff;display:flex;height:25px;justify-content:center;margin-bottom:-2px;min-height:25px;min-width:25px;padding:5px;width:25px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning svg.svg-glyph{height:16px;width:16px}@media only screen and (max-width:768px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning{height:16px;min-height:16px;min-width:16px;width:16px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li .warning svg.svg-glyph{height:14px;width:14px}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w0{width:0}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w5{width:16px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w15{width:52px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w20{width:70px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li>.w50{width:178px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.separator{background:transparent;border:none;pointer-events:none}@media only screen and (max-width:560px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.if-wide{display:none}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.tex-math{font-size:25px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.is-pressed,.ML__keyboard .ML__keyboard--plate div .rows>ul>li:hover{background:var(--keycap-background-active);color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action:active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.keycap.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.keycap:active{color:var(--keyboard-text-active);transform:translateY(calc(var(--keycap-height, 52px)*-.2)) scale(1.4);z-index:calc(var(--keyboard-zindex, 105) - 5)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier:active{background:var(--keyboard-text-active);color:var(--keycap-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.font-glyph,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.font-glyph{font-size:18px}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.font-glyph,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.font-glyph{font-size:16px}}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.fnbutton{font-size:12px}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.bigfnbutton{font-size:var(--keycap-extra-small-font-size,14px)}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li.bigfnbutton{font-size:calc(var(--keycap-extra-small-font-size, 14px)/1.55)}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier{background-color:var(--keycap-modifier-background);border-color:var(--keycap-modifier-border);border-bottom-color:var(--keycap-modifier-border-bottom);font-size:65%;font-weight:100}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected{color:var(--keyboard-text-active)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected.is-pressed,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected:active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.action.selected:hover,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected.is-active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected.is-pressed,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected:active,.ML__keyboard .ML__keyboard--plate div .rows>ul>li.modifier.selected:hover{color:#fff}.ML__keyboard .ML__keyboard--plate div .rows>ul>li.keycap.w50{font-size:80%;font-weight:100;padding-top:10px}.ML__keyboard .ML__keyboard--plate div .rows>ul>li small{color:#555}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li small{font-size:9px}}.ML__keyboard .ML__keyboard--plate div .rows>ul>li aside{color:#666;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:10px;line-height:10px}@media only screen and (max-width:767px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li aside{display:none}}@media only screen and (max-width:414px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li{margin-right:2px;width:calc(10vw - 2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:calc(5vw - 2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:calc(15vw - 2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:calc(20vw - 2px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:calc(50vw - 2px)}}@media only screen and (min-width:415px) and (max-width:768px){.ML__keyboard .ML__keyboard--plate div .rows>ul>li{margin-right:3px;width:37px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:17px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:57px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:77px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:197px}}@media only screen and (min-width:768px) and (max-width:1024px){.ML__keyboard .ML__keyboard--plate div .rows>ul{height:var(--keycap-height,52px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li{height:var(--keycap-height,52px);margin-right:4px;width:51px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:23.5px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:78.5px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:106px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:271px}}@media only screen and (min-width:1025px){.ML__keyboard .ML__keyboard--plate div .rows>ul{height:var(--keycap-height,52px)}.ML__keyboard .ML__keyboard--plate div .rows>ul>li{height:var(--keycap-height,52px);margin-right:6px;width:66px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.action,.ML__keyboard .ML__keyboard--plate div .rows>ul>.modifier{font-size:80%}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w5{width:30px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w15{width:102px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w20{width:138px}.ML__keyboard .ML__keyboard--plate div .rows>ul>.w50{width:354px}}@media (prefers-color-scheme:dark){body:not([theme=light]) .ML__keyboard{--hue:206;--keyboard-background:#4e6373;--keyboard-background:#4e6073;--keyboard-background:hsl(var(--hue),19%,38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue),100%,60%);--keyboard-background-border:#333;--keycap-background:hsl(var(--hue),25%,39%);--keycap-background-active:hsl(var(--hue),35%,42%);--keycap-background-border:hsl(var(--hue),25%,35%);--keycap-background-border-bottom:#426b8a;--keycap-text:#d0d0d0;--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue),35%,40%);--keycap-modifier-border:hsl(var(--hue),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue),35%,42%);--keyboard-alternate-background:hsl(var(--hue),19%,38%)}}body[theme=dark] .ML__keyboard{--hue:206;--keyboard-background:hsl(var(--hue),19%,38%);--keyboard-text:#f0f0f0;--keyboard-text-active:hsl(var(--hue),100%,60%);--keyboard-background-border:#333;--keycap-background:hsl(var(--hue),25%,39%);--keycap-background-active:hsl(var(--hue),35%,42%);--keycap-background-border:hsl(var(--hue),25%,35%);--keycap-background-border-bottom:#426b8a;--keycap-text:#d0d0d0;--keycap-text-active:#000;--keycap-secondary-text:#fff;--keycap-modifier-background:hsl(var(--hue),35%,40%);--keycap-modifier-border:hsl(var(--hue),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue),35%,42%);--keyboard-alternate-background:hsl(var(--hue),19%,38%)}div.ML__keyboard.material{--keyboard-background:rgba(209,213,217,.9);--keyboard-background-border:#ddd;--keycap-background:transparent;--keycap-background-active:#cccfd1;--keycap-background-border:transparent;--keyboard-alternate-background:#efefef;--keyboard-alternate-text:#000;font-family:Roboto,sans-serif}div.ML__keyboard.material.alternate-keys{background:var(--keyboard-alternate-background);border:1px solid transparent;border-radius:5px;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}div.ML__keyboard.material.alternate-keys ul li.is-active,div.ML__keyboard.material.alternate-keys ul li.is-pressed,div.ML__keyboard.material.alternate-keys ul li:active,div.ML__keyboard.material.alternate-keys ul li:hover{fill:currentColor;background:#5f97fc;border:1px solid transparent;color:#fff}div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar>div>div{font-size:16px}div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div div:active,div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div div:hover,div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div.div.is-active,div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar div.div.is-pressed{fill:currentColor;color:#5f97fc}div.ML__keyboard.material .ML__keyboard__plate .keyboard-toolbar>div>.selected{fill:currentColor;border-bottom:2px solid #5f97fc;color:#5f97fc;margin-bottom:8px;padding-bottom:0}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap{fill:currentColor;background:transparent;border:1px solid transparent;border-radius:5px;color:var(--keycap-text);transition:none}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap.tt{color:#5f97fc}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=" "]{background:#e0e0e0;height:20px;margin-bottom:10px;margin-top:10px}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=" "].is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=" "].is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=" "]:active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap[data-key=" "]:hover{background:#d0d0d0;box-shadow:none;transform:none}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]):hover{background:var(--keycap-background-active);border:1px solid transparent;box-shadow:none}div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]).is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]).is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]):active{background:var(--keyboard-alternate-background);box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);color:var(--keyboard-alternate-text)}@media only screen and (max-width:767px){div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]).is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]).is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]):active{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23);font-size:10px;justify-content:flex-start;margin-left:10px;margin-right:10px;padding:2px 0 0;transform:translateY(-10px) scale(2);transition:none;vertical-align:top;width:19.5px;z-index:calc(var(--ML_keyboard-zindex, 105) - 5)}}@media only screen and (max-width:414px){div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]).is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]).is-pressed,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:not([data-key=" "]):active{width:16.5px}}@media only screen and (max-width:767px){div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:last-child.is-active,div.ML__keyboard.material .ML__keyboard__plate div>.rows>ul>.keycap:last-child:active{margin-left:14px;margin-right:0}}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier{fill:currentColor;background:transparent;border:0;color:#869096;font-size:16px;transition:none}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action.selected,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier.selected{border-bottom:2px solid #5f97fc;border-radius:0;color:#5f97fc}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.action:hover,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.modifier:hover{background:var(--keycap-background-active);border:0;box-shadow:none;color:var(--keycap-text)}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton{background:transparent;border:0}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.selected,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.selected{fill:currentColor;border-bottom:2px solid #5f97fc;border-radius:0;color:#5f97fc}div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.bigfnbutton:hover,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.is-active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton.is-pressed,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton:active,div.ML__keyboard.material .ML__keyboard__plate div div.rows ul li.fnbutton:hover{fill:currentColor;background:var(--keycap-background-active);border:0;box-shadow:none;color:#5f97fc}@media (prefers-color-scheme:dark){body:not([theme=light]) div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue),19%,18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:#333;--keycap-background:hsl(var(--hue),25%,39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:#d0d0d0;--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue),35%,40%);--keycap-modifier-border:hsl(var(--hue),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue),35%,42%);--keyboard-alternate-background:hsl(var(--hue),8%,2%);--keyboard-alternate-background-active:hsl(var(--hue),35%,42%);--keyboard-alternate-text:#d1d1d1}}body[theme=dark] div.ML__keyboard.material{--hue:198;--keyboard-background:hsl(var(--hue),19%,18%);--keyboard-text:#d4d6d7;--keyboard-text-active:#5f97fc;--keyboard-background-border:#333;--keycap-background:hsl(var(--hue),25%,39%);--keycap-background-active:#5f97fc;--keycap-background-border:transparent;--keycap-background-border-bottom:transparent;--keycap-text:#d0d0d0;--keycap-text-active:#d4d6d7;--keycap-secondary-text:#5f97fc;--keycap-modifier-background:hsl(var(--hue),35%,40%);--keycap-modifier-border:hsl(var(--hue),35%,35%);--keycap-modifier-border-bottom:hsl(var(--hue),35%,42%);--keyboard-alternate-background:hsl(var(--hue),8%,2%);--keyboard-alternate-background-active:hsl(var(--hue),35%,42%);--keyboard-alternate-text:#d1d1d1}';
function jn(e5, t2, i2, n2) {
  const r2 = t2.split(" ");
  for (const t3 of r2) {
    const r3 = t3.match(/(.*):(.*)/);
    if (r3) {
      const t4 = null != n2 ? n2 : {};
      "active" === r3[2] ? t4.passive = false : t4[r3[2]] = true, e5.addEventListener(r3[1], i2, t4);
    } else
      e5.addEventListener(t3, i2, n2);
  }
}
function Hn(e5, t2, i2, n2) {
  const r2 = t2.split(" ");
  for (const t3 of r2) {
    const r3 = t3.match(/(.*):(.*)/);
    if (r3) {
      const t4 = null != n2 ? n2 : {};
      "active" === r3[2] ? t4.passive = false : t4[r3[2]] = true, e5.removeEventListener(r3[1], i2, t4);
    } else
      e5.removeEventListener(t3, i2, n2);
  }
}
function Wn(e5) {
  var t2;
  i();
  let n2 = document.getElementById(e5);
  return n2 ? n2.dataset.refcount = Number(Number.parseInt(null !== (t2 = n2.getAttribute("data-refcount")) && void 0 !== t2 ? t2 : "0") + 1).toString() : (n2 = document.createElement("div"), n2.setAttribute("aria-hidden", "true"), n2.dataset.refcount = "1", n2.id = e5, document.body.append(n2)), n2;
}
function Zn(e5) {
  var t2;
  if (!e5)
    return;
  const i2 = Number.parseInt(null !== (t2 = e5.getAttribute("data-refcount")) && void 0 !== t2 ? t2 : "0");
  i2 <= 1 ? e5.remove() : e5.dataset.refcount = Number(i2 - 1).toString();
}
function Gn(e5) {
  var t2;
  return (null === (t2 = e5.element) || void 0 === t2 ? void 0 : t2.mathfield) === e5;
}
function Un(e5) {
  const t2 = function(e6) {
    var t3, i3;
    return null !== (i3 = null !== (t3 = e6.querySelector(".ML__caret")) && void 0 !== t3 ? t3 : e6.querySelector(".ML__text-caret")) && void 0 !== i3 ? i3 : e6.querySelector(".ML__latex-caret");
  }(e5);
  if (!t2)
    return null;
  const i2 = t2.getBoundingClientRect();
  return { x: i2.right, y: i2.bottom, height: i2.height };
}
function Jn(e5) {
  var t2;
  if (!e5.parent)
    return "root";
  let i2 = null !== (t2 = e5.parent.id) && void 0 !== t2 ? t2 : "";
  return i2 += "string" == typeof e5.treeBranch ? "-" + e5.treeBranch : `-${e5.treeBranch[0]}/${e5.treeBranch[0]}`, i2;
}
function Xn(e5, t2) {
  if (!t2)
    return null;
  const i2 = e5.field.getBoundingClientRect(), n2 = t2.right - t2.left, r2 = t2.bottom - t2.top, a2 = Math.ceil(t2.left - i2.left + e5.field.scrollLeft), o2 = Math.ceil(t2.top - i2.top);
  return { left: a2, right: a2 + n2, top: o2, bottom: o2 + r2 };
}
function Yn(e5) {
  const t2 = e5.getBoundingClientRect(), i2 = parseInt(getComputedStyle(e5).marginRight), n2 = { top: t2.top - 1, bottom: t2.bottom, left: t2.left, right: t2.right - 1 + i2 };
  if (0 === e5.children.length || "SVG" === e5.tagName.toUpperCase())
    return n2;
  for (const t3 of e5.children)
    if (1 === t3.nodeType && "atomId" in t3.dataset && !t3.classList.contains("pstrut")) {
      const e6 = Yn(t3);
      n2.left = Math.min(n2.left, e6.left), n2.right = Math.max(n2.right, e6.right), n2.top = Math.min(n2.top, e6.top), n2.bottom = Math.max(n2.bottom, e6.bottom);
    }
  return n2;
}
function Qn(e5, t2) {
  var i2, n2;
  if (!t2.id)
    return null;
  let r2 = null !== (n2 = null === (i2 = e5.atomBoundsCache) || void 0 === i2 ? void 0 : i2.get(t2.id)) && void 0 !== n2 ? n2 : null;
  if (null !== r2)
    return r2;
  const a2 = e5.field.querySelector(`[data-atom-id="${t2.id}"]`);
  return r2 = a2 ? Yn(a2) : null, e5.atomBoundsCache && (r2 ? e5.atomBoundsCache.set(t2.id, r2) : e5.atomBoundsCache.delete(t2.id)), null != r2 ? r2 : null;
}
function er(e5, t2) {
  return e5.model.selection.ranges.reduce((i2, n2) => i2.concat(...function(e6, t3, i3) {
    const n3 = /* @__PURE__ */ new Map();
    for (const r2 of e6.model.getAtoms(t3, { includeChildren: true })) {
      if ((null == i3 ? void 0 : i3.excludeAtomsWithBackground) && r2.style.backgroundColor)
        break;
      const t4 = Xn(e6, Qn(e6, r2));
      if (t4) {
        const e7 = Jn(r2);
        if (n3.has(e7)) {
          const i4 = n3.get(e7);
          n3.set(e7, { left: Math.min(i4.left, t4.left), right: Math.max(i4.right, t4.right), top: Math.min(i4.top, t4.top), bottom: Math.max(i4.bottom, t4.bottom) });
        } else
          n3.set(e7, t4);
      }
    }
    return [...n3.values()];
  }(e5, n2, t2)), []);
}
function tr(e5, t2) {
  return "*" === e5 || "none" === t2 || ("same-origin" === t2 ? !window.origin || e5 === window.origin : "function" == typeof t2 && t2(e5));
}
function ir(e5) {
  let t2 = 0, i2 = 0;
  const n2 = e5.offsetWidth, r2 = e5.offsetHeight;
  for (; e5 instanceof HTMLElement; )
    t2 += e5.offsetTop, i2 += e5.offsetLeft, e5 = e5.offsetParent;
  return new DOMRect(i2, t2, n2, r2);
}
function nr(e5, t2, i2) {
  let n2, r2, a2, o2, s2;
  "object" == typeof i2 && ("default" in i2 || "pressed" in i2) ? (i2.default && (t2.dataset.command = JSON.stringify(i2.default)), i2.alt && (t2.dataset.commandAlt = JSON.stringify(i2.alt)), i2.altshift && (t2.dataset.commandAltshift = JSON.stringify(i2.altshift)), i2.shift && (t2.dataset.commandShift = JSON.stringify(i2.shift)), i2.pressed && (t2.dataset.commandPressed = JSON.stringify(i2.pressed)), i2.pressAndHoldStart && (t2.dataset.commandPressAndHoldStart = JSON.stringify(i2.pressAndHoldStart)), i2.pressAndHoldEnd && (t2.dataset.commandPressAndHoldEnd = JSON.stringify(i2.pressAndHoldEnd))) : t2.dataset.command = JSON.stringify(i2), jn(t2, "mousedown touchstart:passive", (i3) => {
    if ("mousedown" !== i3.type || 1 === i3.buttons) {
      i3.stopPropagation(), "touchstart" !== i3.type && i3.preventDefault(), document.body.style["-webkit-user-select"] = "none", t2.classList.add("is-pressed"), n2 = Date.now(), "touchstart" === i3.type && (a2 = i3.changedTouches[0].identifier);
      const o3 = t2.getAttribute("data-command-pressed");
      o3 && e5(JSON.parse(o3));
      const l2 = t2.getAttribute("data-command-press-and-hold-start");
      l2 && (r2 = t2, s2 && clearTimeout(s2), s2 = setTimeout(() => {
        t2.classList.contains("is-pressed") && e5(JSON.parse(l2));
      }, 300));
    }
  }), jn(t2, "mouseleave touchcancel", () => {
    t2.classList.remove("is-pressed");
  }), jn(t2, "touchmove:passive", (e6) => {
    for (let t3 = 0; t3 < e6.changedTouches.length; t3++)
      if (e6.changedTouches[t3].identifier === a2) {
        const i3 = document.elementsFromPoint(e6.changedTouches[t3].clientX, e6.changedTouches[t3].clientY), n3 = i3[i3.length - 1];
        n3 !== o2 && o2 && (o2.dispatchEvent(new MouseEvent("mouseleave"), { bubbles: true }), o2 = null), n3 && (o2 = n3, n3.dispatchEvent(new MouseEvent("mouseenter", { bubbles: true, buttons: 1 })));
      }
  }), jn(t2, "mouseenter", (e6) => {
    1 === e6.buttons && t2.classList.add("is-pressed");
  }), jn(t2, "mouseup touchend click", (i3) => {
    if (document.body.style["-webkit-user-select"] = "", o2) {
      i3.stopPropagation(), i3.preventDefault();
      const e6 = o2;
      return o2 = null, void e6.dispatchEvent(new MouseEvent("mouseup", { bubbles: true }));
    }
    if (t2.classList.remove("is-pressed"), t2.classList.add("is-active"), "click" === i3.type && 0 !== i3.detail)
      return i3.stopPropagation(), void i3.preventDefault();
    setTimeout(() => t2.classList.remove("is-active"), 150);
    let a3 = t2.getAttribute("data-command-press-and-hold-end");
    const s3 = Date.now();
    (t2 !== r2 || s3 < n2 + 300) && (a3 = null), !a3 && i3.altKey && i3.shiftKey && (a3 = t2.getAttribute("data-command-altshift")), !a3 && i3.altKey && (a3 = t2.getAttribute("data-command-alt")), !a3 && i3.shiftKey && (a3 = t2.getAttribute("data-command-shift")), a3 || (a3 = t2.getAttribute("data-command")), a3 && e5(JSON.parse(a3)), i3.stopPropagation(), i3.preventDefault();
  });
}
var rr = '#mathlive-popover-panel{background-color:rgba(97,97,97,.95);border-radius:6px;box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22);color:#fff;display:flex;flex-direction:column;justify-content:center;min-width:160px;position:fixed;text-align:center;transition:all .2s cubic-bezier(.64,.09,.08,1);visibility:hidden;z-index:1}#mathlive-popover-panel:after{border-bottom:5px solid rgba(97,97,97,.9);border-left:5px solid transparent;border-right:5px solid transparent;content:"";font-size:1rem;height:0;left:calc(50% - 3px);position:absolute;top:-5px;width:0}.ML__popover--reverse-direction:after{border-bottom:0;border-top:5px solid rgba(97,97,97,.9);bottom:-5px;top:auto}#mathlive-popover-panel.is-visible{animation:ML__fade-in .15s cubic-bezier(0,0,.2,1);visibility:inherit}@keyframes ML__fade-in{0%{opacity:0}to{opacity:1}}.ML__popover__content{border-radius:6px;cursor:pointer;display:flex;flex-direction:column;justify-content:center;margin-left:8px;margin-right:8px;min-height:100px;padding:2px}.ML__popover__content a{color:#5ea6fd;display:block;margin-top:.4em;padding-top:.3em}.ML__popover__content a:hover{color:#5ea6fd;text-decoration:underline}.ML__popover__content.is-active,.ML__popover__content.is-pressed,.ML__popover__content:hover{background:hsla(0,0%,100%,.1)}.ML__popover__command{font-family:KaTeX_Main;font-size:1.6rem}.ML__popover__prev-shortcut{cursor:pointer;height:31px;margin-left:8px;margin-right:8px;opacity:.1;padding-bottom:2px;padding-top:4px}.ML__popover__next-shortcut:hover,.ML__popover__prev-shortcut:hover{opacity:.3}.ML__popover__next-shortcut.is-active,.ML__popover__next-shortcut.is-pressed,.ML__popover__prev-shortcut.is-active,.ML__popover__prev-shortcut.is-pressed{opacity:1}.ML__popover__next-shortcut>span,.ML__popover__prev-shortcut>span{border-radius:8px;display:inline-block;height:20px;padding:5px;width:20px}.ML__popover__prev-shortcut>span>span{display:block;margin-top:-2px}.ML__popover__next-shortcut>span>span{display:block;margin-top:2px}.ML__popover__next-shortcut:hover>span,.ML__popover__prev-shortcut:hover>span{background:hsla(0,0%,100%,.1)}.ML__popover__next-shortcut{cursor:pointer;height:34px;margin-left:8px;margin-right:8px;opacity:.1;padding-bottom:4px;padding-top:2px}.ML__popover__shortcut{font-size:.8em;margin-top:.25em}.ML__popover__note,.ML__popover__shortcut{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;opacity:.7;padding-top:.25em}.ML__popover__note{font-size:.8rem;line-height:1em;padding-left:.5em;padding-right:.5em}.ML__shortcut-join{opacity:.5}';
var ar;
var or = null;
var sr = null;
var lr = { "\\text": "roman text", "\\textrm": "roman text", "\\textnormal": "roman text", "\\textit": "italic text", "\\textbf": "bold text", "\\texttt": "monospaced text", "\\textsf": "sans-serif text", "\\mathrm": ["roman", "(upright)"], "\\mathbf": "bold", "\\bf": "bold", "\\bold": "bold", "\\mathit": "italic", "\\mathbb": "blackboard", "\\mathscr": "script", "\\mathtt": ["typewriter", "(monospaced)"], "\\mathsf": "sans-serif", "\\mathcal": "caligraphic", "\\frak": ["fraktur", "(gothic)"], "\\mathfrak": ["fraktur", "(gothic)"], "\\textcolor": "text color", "\\color": "color", "\\forall": "for all", "\\exists": "there exists", "\\nexists": "there does not exist", "\\frac": "fraction", "\\dfrac": "display fraction", "\\cfrac": "continuous fraction", "\\tfrac": "text fraction", "\\binom": "binomial coefficient", "\\dbinom": "display binomial coefficient", "\\tbinom": "text binomial coefficient", "\\pdiff": "partial differential", "\\vec": "vector", "\\check": "caron", "\\acute": "acute", "\\breve": "breve", "\\tilde": "tilde", "\\dot": "dot", "\\hat": ["hat", "circumflex"], "\\ddot": "double dot", "\\bar": "bar", "\\prime": "prime", "\\doubleprime": "double prime", "\\varnothing": "empty set", "\\emptyset": "empty set", "\\subseteq": "subset of or <br>equal to", "\\supseteq": "superset of or <br>equal to", "\\supset": "superset of", "\\subset": "subset of", "\\partial": "partial derivative", "\\bigcup": "union", "\\bigcap": "intersection", "\\approx": "approximately equal to", "\\notin": "not an element of", "\\in": ["element of", "included in"], "\\infty": "infinity", "\\land": "logical and", "\\sqrt": "square root", "\\prod": "product", "\\sum": "summation", "\\amalg": ["amalgamation", "coproduct", "free product", "disjoint union"], "\\cup": "union with", "\\cap": "intersection with", "\\int": "integral", "\\iint": "surface integral", "\\oint": "curve integral", "\\iiint": "volume integral", "\\iff": "if and only if", "\\ln": "natural logarithm", "\\boldsymbol": "bold", "\\setminus": "set subtraction", "\\stackrel": "relation with symbol above", "\\stackbin": "operator with symbol above", "\\underset": "symbol with annotation below", "\\overset": "symbol with annotation above", "\\hslash": ["h-bar", "Planck constant"], "\\gtrsim": "greater than or <br>similar to", "\\propto": "proportional to", "\\equiv": "equivalent to", "\\!": ["negative thin space", "(-3 mu)"], "\\ ": ["space", "(6 mu)"], "\\,": ["thin space", "(3 mu)"], "\\:": ["medium space", "(4 mu)"], "\\;": ["thick space", "(5 mu)"], "\\quad": ["1 em space", "(18 mu)"], "\\qquad": ["2 em space", "(36 mu)"], "\\enskip": ["&#189; em space", "(9 mu)"], "\\mp": "minus or plus", "\\pm": "plus or minus", "\\Im": "Imaginary part of", "\\Re": "Real part of", "\\gothicCapitalR": "Real part of", "\\gothicCapitalI": "Imaginary part part of", "\\differentialD": "differential d", "\\aleph": ["aleph", "infinite cardinal", '<a target="_blank" href="https://en.wikipedia.org/wiki/Cardinal_number">Wikipedia <big>&#x203A;</big></a>'], "\\beth": ["beth", "beth number", '<a target="_blank" href="https://en.wikipedia.org/wiki/Beth_number">Wikipedia <big>&#x203A;</big></a>'], "\\gimel": ["gimel", "gimel function", '<a target="_blank" href="https://en.wikipedia.org/wiki/Gimel_function">Wikipedia <big>&#x203A;</big></a>'], "\\O": "empty set", "\\N": "set of <br>natural numbers", "\\Z": "set of <br>integers", "\\Q": "set of <br>rational numbers", "\\C": "set of <br>complex numbers", "\\R": "set of <br>real numbers", "\\P": "set of <br>prime numbers", "\\lesseqqgtr": "less than, equal to or<br> greater than", "\\gnapprox": "greater than and <br>not approximately", "\\lnapprox": "lesser than and <br>not approximately", "\\j": "dotless j", "\\i": "dotless i", "\\cdot": "centered dot", "\\lmoustache": "left moustache", "\\rmoustache": "right moustache", "\\nabla": ["nabla", "del", "differential vector operator"], "\\square": ["square", "d\u2019Alembert operator", '<a target="_blank" href="https://en.wikipedia.org/wiki/D%27Alembert_operator">Wikipedia <big>&#x203A;</big></a>'], "\\blacksquare": ["black square", "end of proof", "tombstone", "Halmos symbol"], "\\Box": "end of proof", "\\colon": ["such that", "ratio"], "\\coloneq": ["is defined by", "is assigned"], "\\Colon": ["is defined by", "as"], "\\_": ["underbar", "underscore"], "\\ll": "much less than", "\\gg": "much greater than", "\\doteq": "approximately equal to", "\\Doteq": "approximately equal to", "\\doteqdot": "approximately equal to", "\\cong": ["isomorphism of", "(for algebras, modules...)"], "\\det": ["determinant of", "(of a matrix)"], "\\dotplus": "Cartesian product algebra", "\\otimes": ["tensor product", "(of algebras)", "Kronecker product", "(of matrices)"], "\\oplus": ["direct sum", "(of modules)"], "\\lb": "base-2 logarithm", "\\lg": "base-10 logarithm", "\\wp": ["Weierstrass P", '<a target="_blank" href="https://en.wikipedia.org/wiki/Weierstrass%27s_elliptic_functions">Wikipedia <big>&#x203A;</big></a>'], "\\wr": ["wreath product", '<a target="_blank" href="https://en.wikipedia.org/wiki/Wreath_product">Wikipedia <big>&#x203A;</big></a>'], "\\top": ["tautology", "Proposition P is universally true"], "\\bot": ["contradiction", "Proposition P is contradictory"], "\\mid": ["probability", "of event A given B"], "\\mho": ["Siemens", "electrical conductance in SI unit", '<a target="_blank" href="https://en.wikipedia.org/wiki/Siemens_(unit)">Wikipedia <big>&#x203A;</big></a>'], "\\Longrightarrow": "implies", "\\Longleftrightarrow": "if, and only if,", "\\prec": "precedes", "\\preceq": "precedes or is equal to", "\\succ": "succeedes", "\\succeq": "succeedes or is equal to", "\\perp": ["is perpendicular to", "is independent of"], "\\models": ["entails", "double-turnstyle, models", "is a semantic consequence of", '<a target="_blank" href="https://en.wikipedia.org/wiki/Double_turnstile">Wikipedia <big>&#x203A;</big></a>'], "\\vdash": ["satisfies", "turnstyle, assertion sign", "syntactic inference", '<a target="_blank" href="https://en.wikipedia.org/wiki/Turnstile_(symbol)">Wikipedia <big>&#x203A;</big></a>'], "\\implies": ["implies", "logical consequence"], "\\impliedby": ["implied by", "logical consequence"], "\\surd": ["surd", "root of", "checkmark"], "\\ltimes": ["semi direct product", '<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'], "\\rtimes": ["semi direct product", '<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'], "\\leftthreetimes": ["semi direct product", '<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'], "\\rightthreetimes": ["semi direct product", '<a target="_blank" href="https://en.wikipedia.org/wiki/Semidirect_product">Wikipedia <big>&#x203A;</big></a>'], "\\divideontimes": ["divide on times"], "\\curlywedge": "nor", "\\curlyvee": "nand", "\\simeq": "is group isomorphic with", "\\vartriangleleft": ["is a normal subgroup of", "is an ideal ring of"], "\\circ": ["circle", "ring", "function composition"], "\\rlap": ["overlap right", "\\rlap{x}o"], "\\llap": ["overlap left", "o\\llap{/}"], "\\colorbox": ["color box", "\\colorbox{#fbc0bd}{...}"], "\\ast": ["asterisk", "reflexive closure (as a superscript)"], "\\bullet": "bullet", "\\lim": "limit" };
function ur(e5, t2) {
  var i2;
  if (e5.element && e5.element.mathfield === e5 && e5.popover && e5.popoverVisible)
    if (null == t2 ? void 0 : t2.deferred)
      setTimeout(() => ur(e5), 100);
    else if ("latex" !== (null === (i2 = e5.model.at(e5.model.position)) || void 0 === i2 ? void 0 : i2.type))
      dr(e5);
    else {
      const t3 = Un(e5.field);
      t3 && cr(e5, t3);
    }
}
function cr(e5, t2) {
  if (i(), !e5.popover || !e5.popoverVisible)
    return;
  const n2 = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight, r2 = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, a2 = window.innerWidth - document.documentElement.clientWidth, o2 = window.innerHeight - document.documentElement.clientHeight, s2 = e5.virtualKeyboard.height;
  t2.x + e5.popover.offsetWidth / 2 > r2 - a2 ? e5.popover.style.left = r2 - e5.popover.offsetWidth - a2 + "px" : t2.x - e5.popover.offsetWidth / 2 < 0 ? e5.popover.style.left = "0" : e5.popover.style.left = t2.x - e5.popover.offsetWidth / 2 + "px", t2.y + e5.popover.offsetHeight + 5 > n2 - o2 - s2 ? (e5.popover.classList.add("ML__popover--reverse-direction"), e5.popover.style.top = t2.y - t2.height - e5.popover.offsetHeight - 5 + "px") : (e5.popover.classList.remove("ML__popover--reverse-direction"), e5.popover.style.top = `${t2.y + 5}px`);
}
function dr(e5) {
  e5.suggestionIndex = 0, e5.popoverVisible = false, e5.popover && (e5.popover.classList.remove("is-visible"), e5.popover.innerHTML = "");
}
function hr(e5) {
  let t2 = 0;
  for (let i2 = 0; i2 < e5.length; i2++)
    t2 = 31 * t2 + e5.charCodeAt(i2), t2 |= 0;
  return Math.abs(t2);
}
function mr(e5, t2) {
  e5.dirty || (e5.dirty = true, requestAnimationFrame(() => {
    Gn(e5) && e5.dirty && (e5.atomBoundsCache = /* @__PURE__ */ new Map(), pr(e5, t2), e5.atomBoundsCache = void 0);
  }));
}
function pr(e5, t2) {
  var n2, r2;
  if (i(), !Gn(e5))
    return;
  t2 = null != t2 ? t2 : {}, e5.dirty = false;
  const { model: a2 } = e5;
  "mathlive" in window || (window.mathlive = {}), a2.root.caret = "", a2.root.isSelected = false, a2.root.containsCaret = true;
  for (const e6 of a2.atoms)
    e6.caret = "", e6.isSelected = false, e6.containsCaret = false;
  const o2 = !e5.options.readOnly && e5.hasFocus();
  if (a2.selectionIsCollapsed)
    a2.at(a2.position).caret = o2 ? e5.mode : "";
  else {
    const e6 = a2.getAtoms(a2.selection, { includeChildren: true });
    for (const t3 of e6)
      t3.isSelected = true;
  }
  if (o2) {
    let e6 = a2.at(a2.position).parent;
    for (; e6; )
      e6.containsCaret = true, e6 = e6.parent;
  }
  const s2 = a2.root.render(new he({ registers: e5.registers, atomIdsSettings: { seed: t2.forHighlighting ? hr(nt.serialize(a2.root, { expandMacro: false, defaultMode: e5.options.defaultMode })) : "random", groupNumbers: null !== (n2 = t2.forHighlighting) && void 0 !== n2 && n2 }, renderPlaceholder: e5.options.readOnly ? (t3, i2) => {
    if (i2.placeholderId) {
      const n3 = e5.getPlaceholderField(i2.placeholderId);
      return i2.createMathfieldBox(t3, { placeholderId: i2.placeholderId, element: n3 });
    }
    return i2.createBox(t3);
  } : void 0 }, { fontSize: 5, letterShapeStyle: e5.options.letterShapeStyle }, "inline-math" === e5.options.defaultMode ? "textstyle" : "displaystyle")), l2 = Be(Pe(s2, e5.options.horizontalSpacingScale), { classes: "ML__mathlive", attributes: { translate: "no", "aria-hidden": "true" } }), u2 = e5.field, c2 = u2.classList.contains("ML__focused");
  c2 && !o2 ? u2.classList.remove("ML__focused") : !c2 && o2 && u2.classList.add("ML__focused"), u2.innerHTML = e5.options.createHTML(l2.toMarkup()), e5.fieldContent = u2.querySelector(".ML__mathlive"), e5.accessibleNode.innerHTML = e5.options.createHTML('<math xmlns="http://www.w3.org/1998/Math/MathML">' + Fn(a2.root, e5.options) + "</math>"), fr(e5), e5.options.readOnly && e5.attachNestedMathfield(), null !== (r2 = t2.interactive) && void 0 !== r2 && r2 || setTimeout(() => fr(e5), 32);
}
function fr(e5) {
  i();
  const t2 = e5.field;
  if (!t2)
    return;
  for (const e6 of t2.querySelectorAll(".ML__selection, .ML__contains-highlight"))
    e6.remove();
  if (!e5.hasFocus())
    return;
  const n2 = e5.model, r2 = parseFloat(getComputedStyle(t2).width);
  let a2 = t2.getBoundingClientRect().width / r2;
  if (a2 = isNaN(a2) ? 1 : a2, n2.selectionIsCollapsed) {
    setTimeout(() => ur(e5), 32);
    let i2 = n2.at(n2.position);
    for (; i2 && (!i2.containsCaret || !i2.displayContainsHighlight); )
      i2 = i2.parent;
    if ((null == i2 ? void 0 : i2.containsCaret) && i2.displayContainsHighlight) {
      const n3 = Xn(e5, Qn(e5, i2));
      if (n3) {
        n3.left /= a2, n3.right /= a2, n3.top /= a2, n3.bottom /= a2;
        const e6 = document.createElement("div");
        e6.classList.add("ML__contains-highlight"), e6.style.position = "absolute", e6.style.left = `${n3.left}px`, e6.style.top = `${n3.top}px`, e6.style.width = `${Math.ceil(n3.right - n3.left)}px`, e6.style.height = `${Math.ceil(n3.bottom - n3.top - 1)}px`, t2.insertBefore(e6, t2.childNodes[0]);
      }
    }
  } else
    for (const i2 of function(e6) {
      let t3 = [];
      for (const i3 of e6) {
        let e7 = false;
        for (const n3 of t3)
          if (i3.left === n3.left && i3.right === n3.right && i3.top === n3.top && i3.bottom === n3.bottom) {
            e7 = true;
            break;
          }
        e7 || t3.push(i3);
      }
      e6 = t3, t3 = [];
      for (const i3 of e6) {
        let n3 = 0;
        for (const t4 of e6)
          if (i3.left >= t4.left && i3.right <= t4.right && i3.top >= t4.top && i3.bottom <= t4.bottom && (n3 += 1, n3 > 1))
            break;
        1 === n3 && t3.push(i3);
      }
      return t3;
    }(er(e5, { excludeAtomsWithBackground: true }))) {
      i2.left /= a2, i2.right /= a2, i2.top /= a2, i2.bottom /= a2;
      const e6 = document.createElement("div");
      e6.classList.add("ML__selection"), e6.style.position = "absolute", e6.style.left = `${i2.left}px`, e6.style.top = `${i2.top}px`, e6.style.width = `${Math.ceil(i2.right - i2.left)}px`, e6.style.height = `${Math.ceil(i2.bottom - i2.top - 1)}px`, t2.insertBefore(e6, t2.childNodes[0]);
    }
}
function gr(e5, t2) {
  return e5[0] === t2[0] && e5[1] === t2[1] ? "equal" : "different";
}
function yr(e5) {
  let t2 = 1 / 0, i2 = -1 / 0;
  for (const n2 of e5.ranges)
    t2 = Math.min(t2, n2[0], n2[1]), i2 = Math.max(i2, n2[0], n2[1]);
  return [t2, i2];
}
function br(e5) {
  var t2;
  "function" != typeof (null === (t2 = e5.listeners) || void 0 === t2 ? void 0 : t2.onSelectionDidChange) || e5.suppressChangeNotifications || (e5.suppressChangeNotifications = true, e5.listeners.onSelectionDidChange(e5), e5.suppressChangeNotifications = false);
}
function vr(e5, t2 = {}) {
  if (e5.suppressChangeNotifications || !e5.mathfield.host)
    return true;
  e5.suppressChangeNotifications = true;
  const i2 = e5.mathfield.host.dispatchEvent(new InputEvent("beforeinput", { ...t2, cancelable: true, bubbles: true, composed: true }));
  return e5.suppressChangeNotifications = false, i2;
}
function xr(e5, t2) {
  !e5.suppressChangeNotifications && e5.mathfield.host && (e5.suppressChangeNotifications = true, e5.mathfield.host.dispatchEvent(new InputEvent("input", { ...t2, bubbles: true, composed: true })), e5.suppressChangeNotifications = false);
}
var kr = (e5, t2, i2) => (Li.some((e6) => t2.startsWith(e6[0]) && t2.endsWith(e6[1])) || (t2 = `$$ ${t2} $$`), t2);
var _r = class {
  constructor(e5) {
    _r._registry[e5] = this;
  }
  static onPaste(e5, t2, i2) {
    var n2;
    const r2 = new ClipboardEvent("paste", { clipboardData: i2.clipboardData, cancelable: true });
    return !!(null === (n2 = t2.host) || void 0 === n2 ? void 0 : n2.dispatchEvent(r2)) && _r._registry[e5].onPaste(t2, i2);
  }
  static onCopy(e5, t2) {
    if (!t2.clipboardData)
      return;
    const i2 = e5.model, n2 = i2.selectionIsCollapsed ? [0, i2.lastOffset] : yr(i2.selection);
    let r2 = i2.getAtoms(n2);
    if (r2.every((e6) => "text" === e6.mode || !e6.mode))
      t2.clipboardData.setData("text/plain", r2.filter((e6) => e6 instanceof At).map((e6) => e6.value).join(""));
    else if (r2.every((e6) => "latex" === e6.mode))
      t2.clipboardData.setData("text/plain", i2.getAtoms(n2, { includeChildren: true }).map((e6) => {
        var t3;
        return null !== (t3 = e6.value) && void 0 !== t3 ? t3 : "";
      }).join(""));
    else {
      let a2;
      a2 = 1 === r2.length && void 0 !== r2[0].verbatimLatex ? r2[0].verbatimLatex : i2.getValue(n2, "latex-expanded"), t2.clipboardData.setData("application/x-latex", a2);
      try {
        t2.clipboardData.setData("text/plain", e5.options.onExport(e5, a2, n2));
      } catch {
      }
      1 !== r2.length || "root" !== r2[0].type && "group" !== r2[0].type || (r2 = r2[0].body.filter((e6) => "first" !== e6.type));
      try {
        t2.clipboardData.setData("application/json+mathlive", JSON.stringify(r2.map((e6) => e6.toJson())));
      } catch {
      }
      try {
        const i3 = e5.computeEngine;
        i3.jsonSerializationOptions = { metadata: ["latex"] };
        const n3 = i3.parse(a2), r3 = JSON.stringify(n3.json);
        r3 && t2.clipboardData.setData("application/json", r3);
      } catch {
      }
    }
    t2.preventDefault();
  }
  static insert(e5, t2, i2, n2 = {}) {
    return _r._registry[e5].insert(t2, i2, n2);
  }
  onPaste(e5, t2) {
    return false;
  }
  insert(e5, t2, i2) {
    return false;
  }
};
function wr(e5) {
  var t2, i2;
  const n2 = e5.atoms.find((e6) => e6 instanceof ii);
  return n2 && null !== (i2 = null === (t2 = n2.body) || void 0 === t2 ? void 0 : t2.filter((e6) => e6 instanceof ti)) && void 0 !== i2 ? i2 : [];
}
function Sr(e5, t2) {
  var i2;
  let n2 = 0, r2 = false;
  const a2 = Number.isFinite(null == t2 ? void 0 : t2.before) ? null !== (i2 = null == t2 ? void 0 : t2.before) && void 0 !== i2 ? i2 : 0 : e5.lastOffset;
  for (; n2 <= a2 && !r2; ) {
    const t3 = e5.at(n2);
    r2 = t3 instanceof ti && t3.isSuggestion, r2 || n2++;
  }
  if (!r2)
    return [void 0, void 0];
  let o2 = n2, s2 = false;
  for (; o2 <= a2 && !s2; ) {
    const t3 = e5.at(o2);
    s2 = !(t3 instanceof ti && t3.isSuggestion), s2 || o2++;
  }
  return [n2 - 1, o2 - 1];
}
function Mr(e5) {
  const t2 = wr(e5.model).filter((e6) => e6.isSuggestion);
  if (0 !== t2.length) {
    e5.model.position = e5.model.offsetOf(t2[0].leftSibling);
    for (const e6 of t2)
      e6.parent.removeChild(e6);
  }
}
function Nr(t2, i2) {
  var n2;
  const { model: r2 } = t2;
  Mr(t2);
  for (const e5 of wr(r2))
    e5.isError = false;
  if (!r2.selectionIsCollapsed)
    return void dr(t2);
  const a2 = [];
  let o2 = r2.at(r2.position);
  for (; o2 && o2 instanceof ti && /^[a-zA-Z\*]$/.test(o2.value); )
    o2 = o2.leftSibling;
  if (o2 && o2 instanceof ti && "\\" === o2.value)
    for (a2.push(o2), o2 = o2.rightSibling; o2 && o2 instanceof ti && /^[a-zA-Z\*]$/.test(o2.value); )
      a2.push(o2), o2 = o2.rightSibling;
  const l2 = a2.map((e5) => e5.value).join(""), c2 = l2 ? function(e5, t3) {
    var i3, n3;
    if ("\\" === t3)
      return [];
    if (!t3.startsWith("\\"))
      return [];
    const r3 = [];
    for (const e6 in u)
      e6.startsWith(t3) && !u[e6].infix && r3.push({ match: e6, frequency: null !== (i3 = u[e6].frequency) && void 0 !== i3 ? i3 : 0 });
    for (const e6 in s)
      e6.startsWith(t3) && r3.push({ match: e6, frequency: null !== (n3 = s[e6].frequency) && void 0 !== n3 ? n3 : 0 });
    const a3 = t3.substring(1);
    for (const t4 of Object.keys(e5.options.macros))
      t4.startsWith(a3) && r3.push({ match: "\\" + t4, frequency: 0 });
    return r3.sort((e6, t4) => {
      var i4, n4;
      return e6.frequency === t4.frequency ? e6.match.length === t4.match.length ? e6.match < t4.match ? -1 : 1 : e6.match.length - t4.match.length : (null !== (i4 = t4.frequency) && void 0 !== i4 ? i4 : 0) - (null !== (n4 = e6.frequency) && void 0 !== n4 ? n4 : 0);
    }), r3.map((e6) => e6.match);
  }(t2, l2) : [];
  if (0 === c2.length)
    return /^\\[a-zA-Z\*]+$/.test(l2) && a2.forEach((e5) => {
      e5.isError = true;
    }), void dr(t2);
  t2.suggestionIndex = null !== (n2 = null == i2 ? void 0 : i2.atIndex) && void 0 !== n2 ? n2 : 0, t2.suggestionIndex < 0 && (t2.suggestionIndex = c2.length - 1);
  const d2 = c2[t2.suggestionIndex % c2.length];
  if (d2 !== l2) {
    const e5 = a2[a2.length - 1];
    e5.parent.addChildrenAfter([...d2.slice(l2.length - d2.length)].map((e6) => new ti(e6, t2, { isSuggestion: true })), e5), mr(t2);
  }
  !function(t3, i3, n3) {
    if (!i3 || 0 === i3.length)
      return void dr(t3);
    const r3 = i3, a3 = function(e5) {
      const t4 = ln(), i4 = new nt("root", t4);
      return i4.body = Dt(e5, t4, { parseMode: "math" }), Be(Ie(Pe(new ze(i4.render(new he({ registers: t4.registers }, { fontSize: 5 }, "displaystyle")), { classes: "ML__base" }))), { classes: "ML__mathlive" }).toMarkup();
    }(i3), o3 = function(t4) {
      var i4;
      let n4 = null !== (i4 = lr[t4]) && void 0 !== i4 ? i4 : "";
      return e(n4) && (n4 = n4.join("<br>")), n4;
    }(r3), s2 = function(t4, i4) {
      let n4 = [];
      if ("string" == typeof i4) {
        const t5 = Pi[i4];
        e(t5) ? n4 = t5.slice() : t5 && n4.push(t5);
      }
      const r4 = Zi(i4), a4 = new RegExp("^" + r4.replace("\\", "\\\\").replace("|", "\\|").replace("*", "\\*").replace("$", "\\$").replace("^", "\\^") + "([^*a-zA-Z]|$)");
      for (const e5 of t4)
        a4.test(Zi(e5.command)) && n4.push(e5.key);
      return n4.map(Gi);
    }(t3.keybindings, r3).join("<br>");
    let l3 = n3 ? '<div class="ML__popover__prev-shortcut" role="button" aria-label="Previous suggestion"><span><span>&#x25B2;</span></span></div>' : "";
    l3 += '<span class="ML__popover__content" role="button">', l3 += '<div class="ML__popover__command">' + a3 + "</div>", o3 && (l3 += '<div class="ML__popover__note">' + o3 + "</div>"), s2 && (l3 += '<div class="ML__popover__shortcut">' + s2 + "</div>"), l3 += "</span>", l3 += n3 ? '<div class="ML__popover__next-shortcut" role="button" aria-label="Next suggestion"><span><span>&#x25BC;</span></span></div>' : "", t3.popover = function(e5, t4) {
      return e5.popover ? (e5.popover.innerHTML = e5.options.createHTML(t4), e5.popover) : (e5.popover = Wn("mathlive-popover-panel"), void 0 === ar && (ar = Ot(rr).toString(36)), or = Ft(null, rr, ar), sr = Ft(null, It, Ot(It).toString(36)), e5.popover.innerHTML = e5.options.createHTML(t4), e5.popover);
    }(t3, l3);
    let u2 = t3.popover.querySelectorAll(".ML__popover__content");
    u2 && u2.length > 0 && nr((e5) => t3.executeCommand(e5), u2[0], { default: ["complete", "accept-suggestion"] }), u2 = t3.popover.querySelectorAll(".ML__popover__prev-shortcut"), u2 && u2.length > 0 && nr((e5) => t3.executeCommand(e5), u2[0], "previousSuggestion"), u2 = t3.popover.querySelectorAll(".ML__popover__next-shortcut"), u2 && u2.length > 0 && nr((e5) => t3.executeCommand(e5), u2[0], "nextSuggestion"), setTimeout(() => {
      const e5 = Un(t3.field);
      e5 && cr(t3, e5), t3.popover && (t3.popover.classList.add("is-visible"), t3.popoverVisible = true);
    }, 32);
  }(t2, d2, c2.length > 1);
}
function Lr(e5) {
  const [t2, i2] = Sr(e5, { before: e5.position });
  if (void 0 === t2 || void 0 === i2)
    return false;
  let n2 = false;
  return e5.getAtoms([t2, i2]).forEach((e6) => {
    e6.isSuggestion && (e6.isSuggestion = false, n2 = true);
  }), n2;
}
function Ar(e5, t2 = "accept", i2) {
  var n2, r2;
  dr(e5);
  const a2 = e5.model.atoms.find((e6) => e6 instanceof ii);
  if (!a2)
    return false;
  if ("accept-suggestion" === t2) {
    const t3 = wr(e5.model).filter((e6) => e6.isSuggestion);
    if (0 === t3.length)
      return false;
    for (const e6 of t3)
      e6.isSuggestion = false;
    return e5.model.position = e5.model.offsetOf(t3[t3.length - 1]), true;
  }
  const o2 = wr(e5.model).filter((e6) => !e6.isSuggestion), s2 = o2.map((e6) => e6.value).join(""), l2 = a2.leftSibling;
  return a2.parent.removeChild(a2), e5.model.position = e5.model.offsetOf(l2), e5.mode = null !== (n2 = null == i2 ? void 0 : i2.mode) && void 0 !== n2 ? n2 : "math", "reject" === t2 || (_r.insert("math", e5.model, s2, { selectionMode: null !== (r2 = null == i2 ? void 0 : i2.selectItem) && void 0 !== r2 && r2 ? "item" : "placeholder", format: "latex" }), e5.snapshot(), e5.model.announce("replacement")), true;
}
_r._registry = {}, new class extends _r {
  constructor() {
    super("latex");
  }
  createAtom(e5, t2, i2) {
    return new ti(e5, t2);
  }
  onPaste(e5, t2) {
    if (!t2.clipboardData)
      return false;
    let i2 = t2.clipboardData.getData("text/x-latex");
    return i2 || (i2 = t2.clipboardData.getData("text/plain")), !(!i2 || !vr(e5.model, { inputType: "insertFromPaste", data: i2 }) || (e5.snapshot(), this.insert(e5.model, i2) && (xr(e5.model, { inputType: "insertFromPaste" }), mr(e5)), t2.preventDefault(), t2.stopPropagation(), 0));
  }
  insert(e5, t2, i2) {
    if (!vr(e5, { data: t2, inputType: "insertText" }))
      return false;
    i2 || (i2 = {}), i2.insertionMode || (i2.insertionMode = "replaceSelection"), i2.selectionMode || (i2.selectionMode = "placeholder");
    const { suppressChangeNotifications: n2 } = e5;
    i2.suppressChangeNotifications && (e5.suppressChangeNotifications = true);
    const r2 = e5.suppressChangeNotifications;
    e5.suppressChangeNotifications = true, "replaceSelection" !== i2.insertionMode || e5.selectionIsCollapsed ? "replaceAll" === i2.insertionMode ? (e5.root.setChildren([], "body"), e5.position = 0) : "insertBefore" === i2.insertionMode ? e5.collapseSelection("backward") : "insertAfter" === i2.insertionMode && e5.collapseSelection("forward") : e5.deleteAtoms(yr(e5.selection));
    const a2 = [];
    for (const i3 of t2)
      m.test(i3) && a2.push(new ti(i3, e5.mathfield));
    let o2 = e5.at(e5.position);
    if (o2 instanceof ii && (o2 = o2.lastChild), !(o2.parent instanceof ii)) {
      const t3 = new ii("", e5.mathfield);
      o2.parent.addChildAfter(t3, o2), o2 = t3.firstChild;
    }
    const s2 = o2.parent.addChildrenAfter(a2, o2);
    return e5.suppressChangeNotifications = r2, "before" === i2.selectionMode || ("item" === i2.selectionMode ? e5.setSelection(e5.anchor, e5.offsetOf(s2)) : s2 && (e5.position = e5.offsetOf(s2))), xr(e5, { data: t2, inputType: "insertText" }), e5.suppressChangeNotifications = n2, true;
  }
}();
var Cr = {};
function Er(e5, t2) {
  t2 = null != t2 ? t2 : { target: "mathfield", canUndo: false };
  for (const i2 of Object.keys(e5))
    Cr[i2] = { ...t2, fn: e5[i2] };
}
function Dr(t2) {
  var i2;
  let n2;
  return n2 = e(t2) ? t2[0] : t2, n2 = n2.replace(/-\w/g, (e5) => e5[1].toUpperCase()), null === (i2 = Cr[n2]) || void 0 === i2 ? void 0 : i2.target;
}
Er({ performWithFeedback: (e5, t2) => function(e6, t3) {
  var i2, n2, a2;
  e6.focus(), e6.options.keypressVibration && r() && navigator.vibrate(3), t3 = t3.replace(/-\w/g, (e7) => e7[1].toUpperCase()), "moveToNextPlaceholder" === t3 || "moveToPreviousPlaceholder" === t3 || "complete" === t3 ? null === (i2 = e6.returnKeypressSound) || void 0 === i2 || i2.play().catch(console.warn) : "deleteBackward" === t3 || "deleteForward" === t3 || "deletePreviousWord" === t3 || "deleteNextWord" === t3 || "deleteToGroupStart" === t3 || "deleteToGroupEnd" === t3 || "deleteToMathFieldStart" === t3 || "deleteToMathFieldEnd" === t3 ? null === (n2 = e6.deleteKeypressSound) || void 0 === n2 || n2.play().catch(console.warn) : null === (a2 = e6.keypressSound) || void 0 === a2 || a2.play().catch(console.warn);
  const o2 = e6.executeCommand(t3);
  return e6.scrollIntoView(), o2;
}(e5, t2) }), Er({ complete: Ar, nextSuggestion: function(e5) {
  return Nr(e5, { atIndex: e5.suggestionIndex + 1 }), false;
}, previousSuggestion: function(e5) {
  return Nr(e5, { atIndex: e5.suggestionIndex - 1 }), false;
} }, { target: "mathfield", category: "autocomplete" });
var Tr = class {
  constructor(e5) {
    var t2, i2;
    this.preventOverlayClose = null !== (t2 = null == e5 ? void 0 : e5.preventOverlayClose) && void 0 !== t2 && t2, this.translucent = null !== (i2 = null == e5 ? void 0 : e5.translucent) && void 0 !== i2 && i2, this.state = "closed";
  }
  get element() {
    if (this._element)
      return this._element;
    const e5 = document.createElement("div");
    return e5.setAttribute("role", "presentation"), e5.style.position = "fixed", e5.style.contain = "content", e5.style.top = "0", e5.style.left = "0", e5.style.right = "0", e5.style.bottom = "0", e5.style.zIndex = "var(--scrim-zindex, 10099)", e5.style.outline = "none", this.translucent ? (e5.style.background = "rgba(255, 255, 255, .2)", e5.style.backdropFilter = "contrast(40%)") : e5.style.background = "transparent", this._element = e5, e5;
  }
  open(e5) {
    var t2;
    if ("closed" !== this.state)
      return;
    this.state = "opening", this.savedActiveElement = zr();
    const { element: i2 } = this;
    (null !== (t2 = null == e5 ? void 0 : e5.root) && void 0 !== t2 ? t2 : document.body).appendChild(i2), i2.addEventListener("click", this), document.addEventListener("touchmove", this, false), document.addEventListener("scroll", this, false);
    const n2 = window.innerWidth - document.documentElement.clientWidth;
    this.savedMarginRight = document.body.style.marginRight, this.savedOverflow = document.body.style.overflow, document.body.style.overflow = "hidden";
    const r2 = Number.parseFloat(getComputedStyle(document.body).marginRight);
    document.body.style.marginRight = `${r2 + n2}px`, (null == e5 ? void 0 : e5.child) && i2.append(e5.child), this.state = "open";
  }
  close() {
    var e5, t2, i2, n2;
    if ("open" !== this.state)
      return;
    this.state = "closing", "function" == typeof this.onClose && this.onClose();
    const { element: r2 } = this;
    r2.removeEventListener("click", this), document.removeEventListener("touchmove", this, false), document.removeEventListener("scroll", this, false), r2.remove(), document.body.style.overflow = null !== (e5 = this.savedOverflow) && void 0 !== e5 ? e5 : "", document.body.style.marginRight = null !== (t2 = this.savedMarginRight) && void 0 !== t2 ? t2 : "", zr() !== this.savedActiveElement && (null === (n2 = null === (i2 = this.savedActiveElement) || void 0 === i2 ? void 0 : i2.focus) || void 0 === n2 || n2.call(i2)), r2.innerHTML = "", this.state = "closed";
  }
  handleEvent(e5) {
    this.preventOverlayClose || (e5.target === this._element && "click" === e5.type ? (this.close(), e5.preventDefault(), e5.stopPropagation()) : e5.target !== document || "touchmove" !== e5.type && "scroll" !== e5.type || (this.close(), e5.preventDefault(), e5.stopPropagation()));
  }
};
function zr() {
  var e5;
  let t2 = document.activeElement;
  for (; null === (e5 = null == t2 ? void 0 : t2.shadowRoot) || void 0 === e5 ? void 0 : e5.activeElement; )
    t2 = t2.shadowRoot.activeElement;
  return t2;
}
var qr;
function Ir() {
  var e5;
  i();
  const t2 = document.querySelector("#mathlive-alternate-keys-panel");
  return t2 && (t2.classList.remove("is-visible"), t2.innerHTML = ""), null === (e5 = Tr.scrim) || void 0 === e5 || e5.close(), false;
}
var Fr = class {
  constructor(e5, t2) {
    this.originalContainerBottomPadding = null, this.options = e5, this.visible = false, this._mathfield = t2, this.coreStylesheet = null, this.virtualKeyboardStylesheet = null;
  }
  setOptions(e5) {
    var t2, i2;
    let n2 = "";
    if (this._element) {
      const e6 = this._element.querySelector("div.keyboard-layer.is-visible");
      e6 && (n2 = null !== (t2 = e6.getAttribute("data-layer")) && void 0 !== t2 ? t2 : ""), this._element.remove(), this._element = void 0;
    }
    if (this.options = e5, this.visible) {
      this.buildAndAttachElement(e5.virtualKeyboardTheme);
      const t3 = this.element.querySelector(`.keyboard-layer[data-layer="${n2}"]`);
      t3 && (null === (i2 = this.element.querySelector(".keyboard-layer.is-visible")) || void 0 === i2 || i2.classList.remove("is-visible"), t3.classList.add("is-visible")), this.element.classList.add("is-visible");
    }
  }
  get element() {
    return this._element;
  }
  set element(e5) {
    var t2;
    this._element !== e5 && (null === (t2 = this._element) || void 0 === t2 || t2.remove(), this._element = e5);
  }
  get visible() {
    return this._visible;
  }
  set visible(e5) {
    this._visible = e5;
  }
  get height() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.element) || void 0 === e5 ? void 0 : e5.offsetHeight) && void 0 !== t2 ? t2 : 0;
  }
  buildAndAttachElement(e5) {
    var t2;
    this.element = function(e6, t3) {
      var n2, r2, a2, o2;
      i();
      let s2 = '<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">\n\n    <symbol id="svg-delete-backward" viewBox="0 0 576 512">\n      <path d="M432.1 208.1L385.9 256L432.1 303C442.3 312.4 442.3 327.6 432.1 336.1C423.6 346.3 408.4 346.3 399 336.1L352 289.9L304.1 336.1C295.6 346.3 280.4 346.3 271 336.1C261.7 327.6 261.7 312.4 271 303L318.1 256L271 208.1C261.7 199.6 261.7 184.4 271 175C280.4 165.7 295.6 165.7 304.1 175L352 222.1L399 175C408.4 165.7 423.6 165.7 432.1 175C442.3 184.4 442.3 199.6 432.1 208.1V208.1zM512 64C547.3 64 576 92.65 576 128V384C576 419.3 547.3 448 512 448H205.3C188.3 448 172 441.3 160 429.3L9.372 278.6C3.371 272.6 0 264.5 0 256C0 247.5 3.372 239.4 9.372 233.4L160 82.75C172 70.74 188.3 64 205.3 64L512 64zM528 128C528 119.2 520.8 112 512 112H205.3C201 112 196.9 113.7 193.9 116.7L54.63 256L193.9 395.3C196.9 398.3 201 400 205.3 400H512C520.8 400 528 392.8 528 384V128z"/>\n    </symbol>\n\n    <symbol id="svg-shift" viewBox="0 0 384 512">\n      <path d="M2.438 252.3C7.391 264.2 19.06 272 32 272h80v160c0 26.51 21.49 48 48 48h64C250.5 480 272 458.5 272 432v-160H352c12.94 0 24.61-7.797 29.56-19.75c4.953-11.97 2.219-25.72-6.938-34.88l-160-176C208.4 35.13 200.2 32 192 32S175.6 35.13 169.4 41.38l-160 176C.2188 226.5-2.516 240.3 2.438 252.3zM192 86.63L313.4 224H224v208H160V224H70.63L192 86.63z"/>\n    </symbol>\n\n    <symbol id="svg-commit" viewBox="0 0 512 512">\n      <path d="M135 432.1l-128-128C2.344 300.3 0 294.2 0 288s2.344-12.28 7.031-16.97l128-128c9.375-9.375 24.56-9.375 33.94 0s9.375 24.56 0 33.94L81.94 264H464v-208C464 42.75 474.8 32 488 32S512 42.75 512 56V288c0 13.25-10.75 24-24 24H81.94l87.03 87.03c9.375 9.375 9.375 24.56 0 33.94S144.4 442.3 135 432.1z"/>\n    </symbol>\n\n    <symbol id="svg-command" viewBox="0 0 640 512">\n      <path d="M34.495 36.465l211.051 211.05c4.686 4.686 4.686 12.284 0 16.971L34.495 475.535c-4.686 4.686-12.284 4.686-16.97 0l-7.071-7.07c-4.686-4.686-4.686-12.284 0-16.971L205.947 256 10.454 60.506c-4.686-4.686-4.686-12.284 0-16.971l7.071-7.07c4.686-4.687 12.284-4.687 16.97 0zM640 468v-10c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h328c6.627 0 12-5.373 12-12z"/>\n    </symbol>\n\n    <symbol id="svg-undo" viewBox="0 0 512 512">\n      <path d="M20 8h10c6.627 0 12 5.373 12 12v110.625C85.196 57.047 165.239 7.715 256.793 8.001 393.18 8.428 504.213 120.009 504 256.396 503.786 393.181 392.834 504 256 504c-63.926 0-122.202-24.187-166.178-63.908-5.113-4.618-5.354-12.561-.482-17.433l7.069-7.069c4.503-4.503 11.749-4.714 16.482-.454C150.782 449.238 200.935 470 256 470c117.744 0 214-95.331 214-214 0-117.744-95.331-214-214-214-82.862 0-154.737 47.077-190.289 116H180c6.627 0 12 5.373 12 12v10c0 6.627-5.373 12-12 12H20c-6.627 0-12-5.373-12-12V20c0-6.627 5.373-12 12-12z"/>\n    </symbol>\n    <symbol id="svg-redo" viewBox="0 0 512 512">\n      <path d="M492 8h-10c-6.627 0-12 5.373-12 12v110.625C426.804 57.047 346.761 7.715 255.207 8.001 118.82 8.428 7.787 120.009 8 256.396 8.214 393.181 119.166 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-7.069-7.069c-4.503-4.503-11.749-4.714-16.482-.454C361.218 449.238 311.065 470 256 470c-117.744 0-214-95.331-214-214 0-117.744 95.331-214 214-214 82.862 0 154.737 47.077 190.289 116H332c-6.627 0-12 5.373-12 12v10c0 6.627 5.373 12 12 12h160c6.627 0 12-5.373 12-12V20c0-6.627-5.373-12-12-12z"/>\n    </symbol>\n    <symbol id="svg-arrow-left" viewBox="0 0 320 512">\n      <path d="M206.7 464.6l-183.1-191.1C18.22 267.1 16 261.1 16 256s2.219-11.97 6.688-16.59l183.1-191.1c9.152-9.594 24.34-9.906 33.9-.7187c9.625 9.125 9.938 24.37 .7187 33.91L73.24 256l168 175.4c9.219 9.5 8.906 24.78-.7187 33.91C231 474.5 215.8 474.2 206.7 464.6z"/>\n    </symbol>\n    <symbol id="svg-arrow-right" viewBox="0 0 320 512">\n      <path d="M113.3 47.41l183.1 191.1c4.469 4.625 6.688 10.62 6.688 16.59s-2.219 11.97-6.688 16.59l-183.1 191.1c-9.152 9.594-24.34 9.906-33.9 .7187c-9.625-9.125-9.938-24.38-.7187-33.91l168-175.4L78.71 80.6c-9.219-9.5-8.906-24.78 .7187-33.91C88.99 37.5 104.2 37.82 113.3 47.41z"/>\n    </symbol>\n    <symbol id="svg-tab" viewBox="0 0 448 512">\n      <path d="M32 217.1c0-8.8 7.2-16 16-16h144v-93.9c0-7.1 8.6-10.7 13.6-5.7l143.5 143.1c6.3 6.3 6.3 16.4 0 22.7L205.6 410.4c-5 5-13.6 1.5-13.6-5.7v-93.9H48c-8.8 0-16-7.2-16-16v-77.7m-32 0v77.7c0 26.5 21.5 48 48 48h112v61.9c0 35.5 43 53.5 68.2 28.3l143.6-143c18.8-18.8 18.8-49.2 0-68L228.2 78.9c-25.1-25.1-68.2-7.3-68.2 28.3v61.9H48c-26.5 0-48 21.6-48 48zM436 64h-8c-6.6 0-12 5.4-12 12v360c0 6.6 5.4 12 12 12h8c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12z"/>\n    </symbol>\n    <symbol id="svg-copy" viewBox="0 0 448 512">\n      <path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM352 32.491a15.88 15.88 0 0 1 7.431 4.195l51.882 51.883A15.885 15.885 0 0 1 415.508 96H352V32.491zM288 464c0 8.822-7.178 16-16 16H48c-8.822 0-16-7.178-16-16V144c0-8.822 7.178-16 16-16h80v240c0 26.51 21.49 48 48 48h112v48zm128-96c0 8.822-7.178 16-16 16H176c-8.822 0-16-7.178-16-16V48c0-8.822 7.178-16 16-16h144v72c0 13.2 10.8 24 24 24h72v240z"/>\n    </symbol>\n    <symbol id="svg-angle-double-right" viewBox="0 0 320 512">\n      <path d="M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17zm128-17l-117.8-116c-4.7-4.7-12.3-4.7-17 0l-7.1 7.1c-4.7 4.7-4.7 12.3 0 17L255.3 256 153.1 356.4c-4.7 4.7-4.7 12.3 0 17l7.1 7.1c4.7 4.7 12.3 4.7 17 0l117.8-116c4.6-4.7 4.6-12.3-.1-17z"/>\n    </symbol>\n    <symbol id="svg-angle-double-left" viewBox="0 0 320 512">\n      <path d="M153.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L192.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L153 264.5c-4.6-4.7-4.6-12.3.1-17zm-128 17l117.8 116c4.7 4.7 12.3 4.7 17 0l7.1-7.1c4.7-4.7 4.7-12.3 0-17L64.7 256l102.2-100.4c4.7-4.7 4.7-12.3 0-17l-7.1-7.1c-4.7-4.7-12.3-4.7-17 0L25 247.5c-4.6 4.7-4.6 12.3.1 17z"/>\n    </symbol>\n    <symbol id="svg-trash" viewBox="0 0 448 512">\n      <path d="M336 64l-33.6-44.8C293.3 7.1 279.1 0 264 0h-80c-15.1 0-29.3 7.1-38.4 19.2L112 64H24C10.7 64 0 74.7 0 88v2c0 3.3 2.7 6 6 6h26v368c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V96h26c3.3 0 6-2.7 6-6v-2c0-13.3-10.7-24-24-24h-88zM184 32h80c5 0 9.8 2.4 12.8 6.4L296 64H152l19.2-25.6c3-4 7.8-6.4 12.8-6.4zm200 432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V96h320v368zm-176-44V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm-80 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12zm160 0V156c0-6.6 5.4-12 12-12h8c6.6 0 12 5.4 12 12v264c0 6.6-5.4 12-12 12h-8c-6.6 0-12-5.4-12-12z"/>\n    </symbol>\n</svg>\n        ';
      e6.create(), Br["foreground-color"] = [];
      for (const e7 of Object.keys(ke))
        Br["foreground-color"].push({ class: "small-button", content: '<span style="border-radius:50%;width:32px;height:32px; box-sizing: border-box; border: 3px solid ' + ke[e7] + '"></span>', command: ["applyStyle", { color: e7 }] });
      Br["background-color"] = [];
      for (const e7 of Object.keys(xe))
        Br["background-color"].push({ class: "small-button", content: '<span style="border-radius:50%;width:32px;height:32px; background:' + xe[e7] + '"></span>', command: ["applyStyle", { backgroundColor: e7 }] });
      $r = { ...Br };
      for (const e7 of Object.keys($r))
        $r[e7] = $r[e7].slice();
      for (let e7 = 0; e7 < 26; e7++) {
        const t4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[e7];
        $r[t4] || ($r[t4] = []), $r[t4].unshift({ latex: "\\mathbb{" + t4 + "}", aside: "blackboard", insert: "\\mathbb{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathbf{" + t4 + "}", aside: "bold", insert: "\\mathbf{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathsf{" + t4 + "}", aside: "sans", insert: "\\mathsf{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathtt{" + t4 + "}", aside: "monospace", insert: "\\mathtt{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathcal{" + t4 + "}", aside: "calligraphy", insert: "\\mathcal{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathfrak{" + t4 + "}", aside: "fraktur", insert: "\\mathfrak{" + t4 + "}" });
      }
      for (let e7 = 0; e7 <= 26; e7++) {
        const t4 = "abcdefghijklmnopqrstuvwxyz"[e7];
        $r[t4] || ($r[t4] = []), $r[t4].unshift({ latex: "\\mathsf{" + t4 + "}", aside: "sans", insert: "\\mathsf{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathbf{" + t4 + "}", aside: "bold", insert: "\\mathbf{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathtt{" + t4 + "}", aside: "monospace", insert: "\\mathtt{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathfrak{" + t4 + "}", aside: "fraktur", insert: "\\mathfrak{" + t4 + "}" });
      }
      for (let e7 = 0; e7 < 10; e7++) {
        const t4 = "0123456789"[e7];
        $r[t4] || ($r[t4] = []), $r[t4].unshift({ latex: "\\mathbf{" + t4 + "}", aside: "bold", insert: "\\mathbf{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathsf{" + t4 + "}", aside: "sans", insert: "\\mathsf{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathtt{" + t4 + "}", aside: "monospace", insert: "\\mathtt{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathcal{" + t4 + "}", aside: "script", insert: "\\mathcal{" + t4 + "}" }), $r[t4].unshift({ latex: "\\mathfrak{" + t4 + "}", aside: "fraktur", insert: "\\mathfrak{" + t4 + "}" });
      }
      let l2 = e6.options.virtualKeyboards;
      l2 || (l2 = "all"), l2 = l2.replace(/\ball\b/i, "numeric functions symbols roman  greek");
      const u2 = { ...Vr, ...null !== (n2 = e6.options.customVirtualKeyboardLayers) && void 0 !== n2 ? n2 : {} }, c2 = { ...Or, ...null !== (r2 = e6.options.customVirtualKeyboards) && void 0 !== r2 ? r2 : {} }, d2 = l2.replace(/\s+/g, " ").split(" ");
      for (const t4 of d2) {
        if (!c2[t4])
          continue;
        let i2 = null !== (a2 = c2[t4].layers) && void 0 !== a2 ? a2 : [];
        c2[t4].layer && i2.push(c2[t4].layer), i2 = [...new Set(i2)];
        for (const n3 of i2) {
          if (!u2[n3])
            break;
          if ("object" == typeof u2[n3]) {
            const e7 = u2[n3];
            let t5 = "";
            if ("string" == typeof e7.styles ? t5 += `<style>${e7.styles}</style>` : "object" == typeof e7.styles && (t5 += `<style>${Zr(e7.styles)}</style>`), e7.backdrop && (t5 += `<div class='${e7.backdrop}'>`), e7.container && (t5 += `<div class='${e7.container}'>`), e7.rows) {
              t5 += "<div class='rows'>";
              for (const i4 of e7.rows) {
                t5 += "<ul>";
                for (const e8 of i4) {
                  if (t5 += "<li", e8.class) {
                    let i5 = e8.class;
                    e8.layer && !/layer-switch/.test(i5) && (i5 += " layer-switch"), /separator/.test(i5) || (i5 += " keycap"), t5 += ` class="${i5}"`;
                  } else
                    t5 += ' class="keycap"';
                  if (e8.key && (t5 += ` data-key="${e8.key}"`), e8.command && ("string" == typeof e8.command ? t5 += ` data-command='"${e8.command}"'` : (t5 += " data-command='", t5 += JSON.stringify(e8.command), t5 += "'")), e8.insert && (t5 += ` data-insert="${e8.insert}"`), e8.latex && (t5 += ` data-latex="${e8.latex}"`), e8.aside && (t5 += ` data-aside="${e8.aside}"`), e8.variants) {
                    const i5 = Date.now().toString(36).slice(-2) + Math.floor(1e5 * Math.random()).toString(36);
                    $r[i5] = e8.variants, t5 += ` data-alt-keys="${i5}"`;
                  }
                  e8.shifted && (t5 += ` data-shifted="${e8.shifted}"`), e8.shiftedCommand && (t5 += ` data-shifted-command="${e8.shiftedCommand}"`), e8.layer && (t5 += ` data-layer="${e8.layer}"`), t5 += `>${e8.label ? e8.label : ""}</li>`;
                }
                t5 += "</ul>";
              }
              t5 += "</div>";
            }
            e7.container && (t5 += "</div>"), e7.backdrop && (t5 += "</div>"), u2[n3] = t5;
          }
          s2 += `<div tabindex="-1" class='keyboard-layer' data-layer='${n3}'>`, s2 += Rr(e6.options, l2, t4);
          const i3 = u2[n3];
          "string" == typeof i3 && (s2 += Hr(e6.options, i3)), s2 += "</div>";
        }
      }
      const h2 = document.createElement("div");
      h2.className = "ML__keyboard", t3 ? h2.classList.add(t3) : e6.options.virtualKeyboardTheme && h2.classList.add(e6.options.virtualKeyboardTheme);
      const m2 = document.createElement("div");
      m2.className = "ML__keyboard--plate", m2.innerHTML = e6.options.createHTML(s2), h2.appendChild(m2);
      const p2 = h2.querySelectorAll(".keycap, .action, .fnbutton, .bigfnbutton");
      for (const e7 of p2)
        e7.id = "ML__k" + Date.now().toString(36).slice(-2) + Math.floor(1e5 * Math.random()).toString(36);
      jr(e6, [...p2]);
      const f2 = h2.querySelectorAll(".layer-switch");
      for (const t4 of f2)
        t4.classList.contains("shift") ? nr((t5) => e6.executeCommand(t5), t4, { pressed: "shiftKeyboardLayer", default: ["switchKeyboardLayer", t4.getAttribute("data-layer")], pressAndHoldEnd: "unshiftKeyboardLayer" }) : nr((t5) => e6.executeCommand(t5), t4, { default: ["switchKeyboardLayer", t4.getAttribute("data-layer")] });
      const g2 = h2.querySelectorAll(".keyboard-layer");
      for (const e7 of g2)
        e7.addEventListener("mousedown", (e8) => {
          e8.preventDefault(), e8.stopPropagation();
        }), e7.addEventListener("touchstart", (e8) => {
          e8.preventDefault(), e8.stopPropagation();
        }, { passive: false });
      return null === (o2 = g2[0]) || void 0 === o2 || o2.classList.add("is-visible"), h2;
    }(this, null != e5 ? e5 : ""), jn(this.element, "touchstart:passive mousedown", () => this.focusMathfield()), null === (t2 = this.options.virtualKeyboardContainer) || void 0 === t2 || t2.appendChild(this.element);
  }
  handleEvent(e5) {
    if (this.element)
      switch (e5.type) {
        case "mouseup":
        case "blur":
        case "touchend":
        case "touchcancel":
          document.body.style.userSelect = "", Wr(this);
      }
  }
  focusMathfield() {
    var e5, t2;
    null === (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.focus) || void 0 === t2 || t2.call(e5);
  }
  blurMathfield() {
    var e5, t2;
    null === (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.blur) || void 0 === t2 || t2.call(e5);
  }
  stateChanged() {
    var e5, t2;
    null === (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.element) || void 0 === t2 || t2.dispatchEvent(new Event("virtual-keyboard-toggle", { bubbles: true, cancelable: false, composed: true }));
  }
  executeCommand(t2) {
    var i2, n2, r2;
    let a2, o2 = [];
    return e(t2) ? (a2 = t2[0], o2 = t2.slice(1)) : a2 = t2, a2 = a2.replace(/-\w/g, (e5) => e5[1].toUpperCase()), "virtual-keyboard" === (null === (i2 = Cr[a2]) || void 0 === i2 ? void 0 : i2.target) ? Cr[a2].fn(this, ...o2) : null !== (r2 = null === (n2 = this._mathfield) || void 0 === n2 ? void 0 : n2.executeCommand(t2)) && void 0 !== r2 && r2;
  }
  create() {
    this.virtualKeyboardStylesheet || (qr || (qr = Ot(Rn).toString(36)), this.virtualKeyboardStylesheet = Ft(null, Rn, qr)), this.coreStylesheet || (this.coreStylesheet = Ft(null, It, Ot(It).toString(36))), null !== this.options.fontsDirectory && pi(this.options.fontsDirectory);
  }
  enable() {
    t() && (window.addEventListener("mouseup", this), window.addEventListener("blur", this), window.addEventListener("touchend", this), window.addEventListener("touchcancel", this));
  }
  disable() {
    t() && (window.removeEventListener("mouseup", this), window.removeEventListener("blur", this), window.removeEventListener("touchend", this), window.removeEventListener("touchcancel", this));
  }
  dispose() {
  }
};
var Or = { numeric: { tooltip: "keyboard.tooltip.numeric", layer: "math", label: "123", layers: ["math"] }, roman: { tooltip: "keyboard.tooltip.roman", layer: "lower-roman", label: "ABC", layers: ["lower-roman", "upper-roman"] }, greek: { tooltip: "keyboard.tooltip.greek", layer: "lower-greek", label: "&alpha;&beta;&gamma;", classes: "tex-math", layers: ["lower-greek", "upper-greek"] }, functions: { tooltip: "keyboard.tooltip.functions", layer: "functions", label: "<i>f</i>&thinsp;()", classes: "tex", layers: ["functions"] }, symbols: { tooltip: "keyboard.tooltip.symbols", layer: "symbols", label: "&infin;\u2260\u2208", classes: "tex", layers: ["symbols"] }, latex: { tooltip: "keyboard.tooltip.command", command: ["switchMode", "latex"], label: `<svg class="svg-glyph"><use xlink:href='#svg-command' /></svg>`, layers: ["latex-lower", "latex-upper", "latex-symbols"] }, style: { tooltip: "keyboard.tooltip.style", layer: "style", label: "<b>b</b><i>i</i>\u{1D539}" } };
var Pr = { "\\varphi ": ["&Phi;", "\\Phi "], "\\varsigma ": ["&Sigma;", "\\Sigma "], "\\epsilon ": ["&#x0190;", '\\char"0190'], "\\rho ": ["&#x3A1", '\\char"3A1'], "\\tau ": ["&#x3A4;", '\\char"3A4'], "\\upsilon ": ["&Upsilon;", "\\Upsilon "], "\\theta ": ["&Theta;", "\\Theta "], "\\iota ": ["&Iota;", '\\char"399'], "\\omicron ": ["&#x039F;", '\\char"39F'], "\\pi ": ["&Pi;", "\\Pi "], "\\alpha ": ["&Alpha;", '\\char"391'], "\\sigma ": ["&Sigma;", "\\Sigma "], "\\delta ": ["&Delta;", "\\Delta "], "\\phi ": ["&#x03a6;", "\\Phi "], "\\gamma ": ["&Gamma;", "\\Gamma "], "\\eta ": ["&Eta;", '\\char"397'], "\\xi ": ["&Xi;", "\\Xi "], "\\kappa ": ["&Kappa;", '\\char"39A'], "\\lambda ": ["&Lambda;", "\\Lambda "], "\\zeta ": ["&Zeta;", '\\char"396'], "\\chi ": ["&Chi;", '\\char"3A7'], "\\psi ": ["&Psi;", "\\Psi "], "\\omega ": ["&Omega;", "\\Omega "], "\\beta ": ["&Beta;", '\\char"392'], "\\nu ": ["&Nu;", '\\char"39D'], "\\mu ": ["&Mu;", '\\char"39C'] };
var Br = { 0: ["\\emptyset", "\\varnothing", "\\infty", { latex: "#?_0", insert: "#@_0" }, "\\circ", "\\bigcirc", "\\bullet"], 2: ["\\frac{1}{2}", { latex: "#?^2", insert: "#@^2" }], 3: ["\\frac{1}{3}", { latex: "#?^3", insert: "#@^3" }], ".": [".", ",", ";", "\\colon", { latex: ":", aside: "ratio" }, { latex: "\\cdotp", aside: "center dot", class: "box" }, { latex: "\\cdots", aside: "center ellipsis", class: "box" }, { latex: "\\ldotp", aside: "low dot", class: "box" }, { latex: "\\ldots", aside: "low ellipsis", class: "box" }, { latex: "\\vdots", aside: "", class: "box" }, { latex: "\\ddots", aside: "", class: "box" }, "\\odot", "\\oslash", "\\circledcirc"], "*": ["\\cdot", "\\ast", "\\star", "\\bigstar", "\\ltimes", "\\rtimes", "\\rightthreetimes", "\\leftthreetimes", "\\intercal", "\\prod", { latex: "\\prod_{n\\mathop=0}^{\\infty}", class: "small" }], "+": ["\\pm", "\\mp", "\\sum", { latex: "\\sum_{n\\mathop=0}^{\\infty}", class: "small" }, "\\dotplus", "\\oplus"], "-": ["\\pm", "\\mp", "\\ominus", "\\vert #0  \\vert"], "/": ["\\divideontimes", "/", "\\div", "\\%"], "(": ["\\left( #0\\right)", "\\left[ #0\\right]", "\\left\\{ #0\\right\\}", "\\left\\langle #0\\right\\rangle", "\\lfloor", "\\llcorner", "(", "\\lbrack", "\\lvert", "\\lVert", "\\lgroup", "\\langle", "\\lceil", "\\ulcorner", "\\lmoustache", "\\lbrace"], ")": ["\\rfloor", "\\lrcorner", ")", "\\rbrack", "\\rvert", "\\rVert", "\\rgroup", "\\rangle", "\\rceil", "\\urcorner", "\\rmoustache", "\\rbrace"], "=": ["\\cong", "\\asymp", "\\equiv", "\\differencedelta", "\\varpropto", "\\thickapprox", "\\approxeq", "\\thicksim", "\\backsim", "\\eqsim", "\\simeq", "\\Bumpeq", "\\bumpeq", "\\doteq", "\\Doteq", "\\fallingdotseq", "\\risingdotseq", "\\coloneq", "\\eqcirc", "\\circeq", "\\triangleq", "\\between"], "!=": ["\\neq", "\\ncong", "", "\\nsim"], "<": ["\\leq", "\\leqq", "\\lneqq", "\\ll", "\\lessgtr", "\\nless", "\\nleq", "\\lesssim", "\\precsim", "\\prec", "\\nprec", "\\preccurlyeq", "\\lessdot"], ">": ["\\geq", "\\geqq", "\\gneqq", "\\gg", "\\gtrless", "\\ngtr", "\\ngeq", "\\gtrsim", "\\succsim", "\\succ", "\\nsucc", "\\succcurlyeq", "\\gtrdot"], in: ["\\owns"], "!in": ["\\backepsilon"], subset: ["\\subseteq", "\\nsubset", "\\nsubseteq"], superset: ["\\supseteq", "\\nsupset", "\\nsupseteq"], infinity: ["\\aleph_0", "\\aleph_1", "\\omega", "\\mathfrak{m}"], "numeric-pi": ["\\prod", "\\theta", "\\rho", "\\sin", "\\cos", "\\tan"], ee: ["\\times 10^{#?}", "\\ln", "\\ln_{10}", "\\log"], "^": ["_{#?}"], int: [{ latex: "\\int_{#?}^{#?}", class: "small" }, { latex: "\\int", class: "small" }, { latex: "\\smallint", class: "small" }, { latex: "\\iint", class: "small" }, { latex: "\\iiint", class: "small" }, { latex: "\\oint", class: "small" }, { latex: "\\dfrac{\\rd}{\\rd x}", class: "small" }, { latex: "\\frac{\\partial}{\\partial x}", class: "small" }, "\\capitalDifferentialD", "\\rd", "\\partial"], nabla: ["\\nabla\\times", "\\nabla\\cdot", "\\nabla^{2}"], "!": ["!!", "\\Gamma", "\\Pi"], accents: ["\\bar{#@}", "\\vec{#@}", "\\hat{#@}", "\\check{#@}", "\\dot{#@}", "\\ddot{#@}", "\\mathring{#@}", "\\breve{#@}", "\\acute{#@}", "\\tilde{#@}", "\\grave{#@}"], underline: ["\\underbrace{#@}", "\\underlinesegment{#@}", "\\underleftrightarrow{#@}", "\\underrightarrow{#@}", "\\underleftarrow{#@}", "\\undergroup{#@}"], overline: ["\\overbrace{#@}", "\\overlinesegment{#@}", "\\overleftrightarrow{#@}", "\\overrightarrow{#@}", "\\overleftarrow{#@}", "\\overgroup{#@}"], xleftarrows: ["\\xlongequal{}", "\\xleftrightarrow{}", "\\xLeftrightarrow{}", "\\xleftrightharpoons{}", "\\xLeftarrow{}", "\\xleftharpoonup{}", "\\xleftharpoondown{}", "\\xtwoheadleftarrow{}", "\\xhookleftarrow{}", "\\xtofrom{}", "\\xleftequilibrium{}", "\\xrightleftarrows{}"], xrightarrows: ["\\xlongequal{}", "\\xleftrightarrow{}", "\\xLeftrightarrow{}", "\\xleftrightharpoons{}", "\\xRightarrow{}", "\\xrightharpoonup{}", "\\xrightharpoondown{}", "\\xtwoheadrightarrow{}", "\\xrightleftharpoons{}", "\\xhookrightarrow{}", "\\xmapsto{}", "\\xrightequilibrium{}", "\\xrightleftarrows{}"], A: [{ latex: "\\aleph", aside: "aleph" }, { latex: "\\forall", aside: "for all" }], a: [{ latex: "\\aleph", aside: "aleph" }, { latex: "\\forall", aside: "for all" }], b: [{ latex: "\\beth", aside: "beth" }], B: [{ latex: "\\beth", aside: "beth" }], c: [{ latex: "\\C", aside: "set of complex numbers" }], d: [{ latex: "\\daleth", aside: "daleth" }], D: [{ latex: "\\daleth", aside: "daleth" }], e: [{ latex: "\\exponentialE", aside: "exponential e" }, { latex: "\\exists", aside: "there is" }, { latex: "\\nexists", aside: "there isn\u2019t" }], g: [{ latex: "\\gimel", aside: "gimel" }], G: [{ latex: "\\gimel", aside: "gimel" }], h: [{ latex: "\\hbar", aside: "h bar" }, { latex: "\\hslash", aside: "h slash" }], i: [{ latex: "\\imaginaryI", aside: "imaginary i" }], j: [{ latex: "\\imaginaryJ", aside: "imaginary j" }], l: [{ latex: "\\ell", aside: "ell" }], n: [{ latex: "\\mathbb{N}", aside: "set of natural numbers" }], p: [{ latex: "\\mathbb{P}", aside: "set of primes" }], q: [{ latex: "\\mathbb{Q}", aside: "set of rational numbers" }], r: [{ latex: "\\mathbb{R}", aside: "set of real numbers" }], z: [{ latex: "\\mathbb{Z}", aside: "set of integers" }], "x-var": ["y", "z", "t", "r", { latex: "f(#?)", class: "small" }, { latex: "g(#?)", class: "small" }, "x^2", "x^n", "x_n", "x_{n+1}", "x_i", "x_{i+1}"], "n-var": ["i", "j", "p", "k", "a", "u"], ii: ["\\Re", "\\Im", "\\imaginaryJ", "\\Vert #0 \\Vert"], logic: [{ latex: "\\exists", aside: "there is" }, { latex: "\\nexists", aside: "there isn\u2019t" }, { latex: "\\ni", aside: "such that" }, { latex: "\\Colon", aside: "such that" }, { latex: "\\implies", aside: "implies" }, { latex: "\\impliedby", aside: "implied by" }, { latex: "\\iff", aside: "if and only if" }, { latex: "\\land", aside: "and" }, { latex: "\\lor", aside: "or" }, { latex: "\\oplus", aside: "xor" }, { latex: "\\lnot", aside: "not" }, { latex: "\\downarrow", aside: "nor" }, { latex: "\\uparrow", aside: "nand" }, { latex: "\\curlywedge", aside: "nor" }, { latex: "\\bar\\curlywedge", aside: "nand" }, { latex: "\\therefore", aside: "therefore" }, { latex: "\\because", aside: "because" }, { latex: "^\\biconditional", aside: "biconditional" }, "\\leftrightarrow", "\\Leftrightarrow", "\\to", "\\models", "\\vdash", "\\gets", "\\dashv", "\\roundimplies"], "set-operators": ["\\cap", "\\cup", "\\setminus", "\\smallsetminus", "\\complement"], "set-relations": ["\\in", "\\notin", "\\ni", "\\owns", "\\subset", "\\supset", "\\subseteq", "\\supseteq", "\\subsetneq", "\\supsetneq", "\\varsubsetneq", "\\subsetneqq", "\\nsubset", "\\nsupset", "\\nsubseteq", "\\nsupseteq"], space: [{ latex: '\\char"203A\\!\\char"2039', insert: "\\!", aside: "negative thin space<br>\u207B\xB3\u29F8\u2081\u2088 em" }, { latex: '\\unicode{"203A}\\,\\unicode{"2039}', insert: "\\,", aside: "thin space<br>\xB3\u29F8\u2081\u2088 em" }, { latex: '\\unicode{"203A}\\:\\unicode{"2039}', insert: "\\:", aside: "medium space<br>\u2074\u29F8\u2081\u2088 em" }, { latex: '\\unicode{"203A}\\;\\unicode{"2039}', insert: "\\;", aside: "thick space<br>\u2075\u29F8\u2081\u2088 em" }, { latex: '\\unicode{"203A}\\ \\unicode{"2039}', insert: "\\ ", aside: "\u2153 em" }, { latex: '\\unicode{"203A}\\enspace\\unicode{"2039}', insert: "\\enspace", aside: "\xBD em" }, { latex: '\\unicode{"203A}\\quad\\unicode{"2039}', insert: "\\quad", aside: "1 em" }, { latex: '\\unicode{"203A}\\qquad\\unicode{"2039}', insert: "\\qquad", aside: "2 em" }], delete: [{ label: '<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>', command: "deleteAll" }], "->|": [] };
var $r = {};
var Vr = { math: `
        <div class='rows'>
            <ul>
                <li class='keycap tex' data-alt-keys='x-var'><i>x</i></li>
                <li class='keycap tex' data-alt-keys='n-var'><i>n</i></li>
                <li class='separator w5'></li>
                <row name='numpad-1'/>
                <li class='separator w5'></li>
                <li class='keycap tex' data-latex='\\exponentialE' data-alt-keys='ee'>e</li>
                <li class='keycap tex' data-latex='\\imaginaryI' data-alt-keys='ii'>i</li>
                <li class='keycap tex' data-latex='\\pi' data-alt-keys='numeric-pi'></li>
            </ul>
            <ul>
                <li class='keycap tex' data-key='<' data-alt-keys='<'>&lt;</li>
                <li class='keycap tex' data-key='>' data-alt-keys='>'>&gt;</li>
                <li class='separator w5'></li>
                <row name='numpad-2'/>
                <li class='separator w5'></li>
                <li class='keycap tex' data-latex='#@^{2}' data-latex='x^2'></li>
                <li class='keycap tex' data-alt-keys='^' data-insert='#@^{#?}' data-latex='x^\\placeholder'></li>
                <li class='keycap tex small' data-insert='\\sqrt{#0}' data-latex='\\sqrt{#0}'></li>
            </ul>
            <ul>
                <li class='keycap tex' data-alt-keys='(' >(</li>
                <li class='keycap tex' data-alt-keys=')' >)</li>
                <li class='separator w5'></li>
                <row name='numpad-3'/>
                <li class='separator w5'></li>
                <li class='keycap small' data-alt-keys='int' data-latex='\\int_0^\\infty'></li>
                <li class='keycap' data-latex='\\forall' data-alt-keys='logic' ></li>
                <li class='action font-glyph bottom right' data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li></ul>
            </ul>
            <ul>
                <li class='keycap' data-alt-keys='foreground-color' data-command='["applyStyle",{"color":"red"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428; box-sizing: border-box'></span></li>
                <li class='keycap' data-alt-keys='background-color' data-command='["applyStyle",{"backgroundColor":"yellow"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590; box-sizing: border-box'></span></li>
                <li class='separator w5'></li>
                <row name='numpad-4'/>
                <li class='separator w5'></li>
                <arrows/>
            </ul>
        </div>
    `, "lower-roman": "\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='lower-1' shift-layer='upper-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='lower-2'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='lower-3'  shift-layer='upper-roman''/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap' >;</li>\n                <li class='keycap' >,</li>\n                <li class='keycap w50' data-key=' ' data-alt-keys='space'>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>", "upper-roman": "\n        <div class='rows'>\n            <ul>\n                <row name='numpad-1' class='if-wide'/>\n                <row name='upper-1'  shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-2' class='if-wide'/>\n                <row name='upper-2' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-3' class='if-wide'/>\n                <row name='upper-3' shift-layer='lower-roman'/>\n            </ul>\n            <ul>\n                <row name='numpad-4' class='if-wide'/>\n                <li class='keycap' >;</li>\n                <li class='keycap' data-alt-keys='.'>;</li>\n                <li class='keycap w50' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>", symbols: `
        <div class='rows'>
            <ul>
                <row name='numpad-1' class='if-wide'/>
                <li class='keycap tex' data-alt-keys='(' data-insert='\\lbrace '>{</li>
                <li class='keycap tex' data-alt-keys=')' data-insert='\\rbrace '>}</li>
                <li class='separator w5'></li>
                <li class='keycap tex' data-alt-keys='in' data-insert='\\in '>&#x2208;</li>
                <li class='keycap tex' data-alt-keys='!in' data-insert='\\notin '>&#x2209;</li>
                <li class='keycap tex' data-insert='\\Re '>&#x211c;<aside>Real</aside></li>
                <li class='keycap tex' data-insert='\\Im '>&#x2111;<aside>Imaginary</aside></li>
                <li class='keycap w15' data-insert='\\ulcorner#0\\urcorner '><span><sup>&#x250c;</sup><span><span style='color:#ddd'>o</span><sup>&#x2510;</sup></span><aside>ceil</aside></li>
                <li class='keycap tex' data-alt-keys='nabla' data-insert='\\nabla '>&#x2207;<aside>nabla</aside></li>
                <li class='keycap tex' data-alt-keys='infinity' data-insert='\\infty '>&#x221e;</li>

            </ul>
            <ul>
                <row name='numpad-2' class='if-wide'/>
                <li class='keycap tex' data-alt-keys='(' data-insert='\\lbrack '>[</li>
                <li class='keycap tex' data-alt-keys=')' data-insert='\\rbrack '>]</li>
                <li class='separator w5'></li>
                <li class='keycap tex' data-alt-keys='subset' data-insert='\\subset '>&#x2282;</li>
                <li class='keycap tex' data-alt-keys='superset' data-insert='\\supset '>&#x2283;</li>
                <li class='keycap tex' data-key='!' data-alt-keys='!'>!<aside>factorial</aside></li>
                <li class='keycap' data-latex='^{\\prime} '><span><sup><span><span style='color:#ddd'>o</span>&#x2032</sup></span><aside>prime</aside></li>
                <li class='keycap w15' data-insert='\\llcorner#0\\lrcorner '><span><sub>&#x2514;</sub><span style='color:#ddd'>o</span><sub>&#x2518;</sub></span><aside>floor</aside></li>
                <li class='keycap tex' data-insert='\\partial '>&#x2202;<aside>partial<br>derivative</aside></li>
                <li class='keycap tex' data-insert='\\emptyset '>&#x2205;<aside>empty set</aside></li>

            </ul>
            <ul>
                <row name='numpad-3' class='if-wide'/>
                <li class='keycap tex' data-alt-keys='(' data-insert='\\langle '>&#x27e8;</li>
                <li class='keycap tex' data-alt-keys=')' data-insert='\\rangle '>&#x27e9;</li>
                <li class='separator w5'></li>
                <li class='keycap tex' data-alt-keys='overline' data-latex='\\overline{#@}' data-aside='overline'></li>
                <li class='keycap tex' data-alt-keys='underline' data-latex='\\underline{#@}' data-aside='underline'></li>
                <li class='keycap tex' data-alt-keys='accents' data-insert='\\vec{#@}' data-latex='\\vec{#?}' data-aside='vector'></li>
                <li class='keycap tex small' data-alt-keys='xleftarrows' data-latex='\\xleftarrow{}' ></li>
                <li class='keycap tex small' data-alt-keys='xrightarrows' data-latex='\\xrightarrow{}' ></li>
                <li class='keycap tex' data-alt-keys='absnorm' data-insert='\\left| #0 \\right|' data-latex='\\left| #? \\right|' data-aside='abs'></li>

                <li class='action font-glyph bottom right w15'
                    data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                    data-shifted-command='"deleteAll"'
                    data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>
            </ul>
            <ul>
                <row name='numpad-4' class='if-wide'/>
                <li class='keycap tex' data-insert=','>,</li>
                <li class='keycap tex' data-insert='\\cdot '>&#x22c5;<aside>centered dot</aside></li>
                <li class='keycap tex' data-insert='\\colon '>:<aside>colon</aside></li>
                <li class='keycap tex' data-insert='\\circ '>&#x2218;<aside>circle</aside></li>
                <li class='keycap tex' data-insert='\\approx '>&#x2248;<aside>approx.</aside></li>
                <li class='keycap tex' data-insert='\\ne '>&#x2260;</li>
                <li class='keycap tex' data-insert='\\pm '>&#x00b1;</li>
                <arrows/>
            </ul>
        </div>`, "lower-greek": `
        <div class='rows'>
            <ul><li class='keycap tex' data-insert='\\varphi '><i>&#x03c6;</i><aside>phi var.</aside></li>
                <li class='keycap tex' data-insert='\\varsigma '><i>&#x03c2;</i><aside>sigma var.</aside></li>
                <li class='keycap tex' data-insert='\\epsilon '><i>&#x03f5;</i></li>
                <li class='keycap tex' data-insert='\\rho '><i>&rho;</i></li>
                <li class='keycap tex' data-insert='\\tau '><i>&tau;</i></li>
                <li class='keycap tex' data-insert='\\upsilon '><i>&upsilon;</i></li>
                <li class='keycap tex' data-insert='\\theta '><i>&theta;</i></li>
                <li class='keycap tex' data-insert='\\iota '><i>&iota;</i></li>
                <li class='keycap tex' data-insert='\\omicron '>&omicron;</i></li>
                <li class='keycap tex' data-insert='\\pi '><i>&pi;</i></li>
            </ul>
            <ul><li class='keycap tex' data-insert='\\alpha ' data-shifted='&Alpha;' data-shifted-command='["insert","\\\\char\\"391"]'><i>&alpha;</i></li>
                <li class='keycap tex' data-insert='\\sigma '><i>&sigma;</i></li>
                <li class='keycap tex' data-insert='\\delta '><i>&delta;</i></li>
                <li class='keycap tex' data-insert='\\phi '><i>&#x03d5;</i></i></li>
                <li class='keycap tex' data-insert='\\gamma '><i>&gamma;</i></li>
                <li class='keycap tex' data-insert='\\eta '><i>&eta;</i></li>
                <li class='keycap tex' data-insert='\\xi '><i>&xi;</i></li>
                <li class='keycap tex' data-insert='\\kappa '><i>&kappa;</i></li>
                <li class='keycap tex' data-insert='\\lambda '><i>&lambda;</i></li>
            </ul>
            <ul><li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='upper-greek'><svg class="svg-glyph"><use xlink:href="#svg-shift" /></svg></li>
                <li class='keycap tex' data-insert='\\zeta '><i>&zeta;</i></li>
                <li class='keycap tex' data-insert='\\chi '><i>&chi;</i></li>
                <li class='keycap tex' data-insert='\\psi '><i>&psi;</i></li>
                <li class='keycap tex' data-insert='\\omega '><i>&omega;</i></li>
                <li class='keycap tex' data-insert='\\beta '><i>&beta;</i></li>
                <li class='keycap tex' data-insert='\\nu '><i>&nu;</i></li>
                <li class='keycap tex' data-insert='\\mu '><i>&mu;</i></li>
                <li class='action font-glyph bottom right w15'
                    data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                    data-shifted-command='"deleteAll"'
                    data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>
            </ul>
            <ul>
                <li class='keycap ' data-key=' '>&nbsp;</li>
                <li class='keycap'>,</li>
                <li class='keycap tex' data-insert='\\varepsilon '><i>&#x03b5;</i><aside>epsilon var.</aside></li>
                <li class='keycap tex' data-insert='\\vartheta '><i>&#x03d1;</i><aside>theta var.</aside></li>
                <li class='keycap tex' data-insert='\\varkappa '><i>&#x3f0;</i><aside>kappa var.</aside></li>
                <li class='keycap tex' data-insert='\\varpi '><i>&#x03d6;<aside>pi var.</aside></i></li>
                <li class='keycap tex' data-insert='\\varrho '><i>&#x03f1;</i><aside>rho var.</aside></li>
                <arrows/>
            </ul>
        </div>`, "upper-greek": `
        <div class='rows'>
            <ul><li class='keycap tex' data-insert='\\Phi '>&Phi;<aside>phi</aside></li>
                <li class='keycap tex' data-insert='\\Sigma '>&Sigma;<aside>sigma</aside></li>
                <li class='keycap tex' data-insert='\\char"0190'>&#x0190;<aside>epsilon</aside></li>
                <li class='keycap tex' data-insert='\\char"3A1'>&#x3A1;<aside>rho</aside></li>
                <li class='keycap tex' data-insert='\\char"3A4'>&#x3A4;<aside>tau</aside></li>
                <li class='keycap tex' data-insert='\\Upsilon '>&Upsilon;<aside>upsilon</aside></li>
                <li class='keycap tex' data-insert='\\Theta '>&Theta;<aside>theta</aside></li>
                <li class='keycap tex' data-insert='\\char"399'>&Iota;<aside>iota</aside></li>
                <li class='keycap tex' data-insert='\\char"39F'>&#x039F;<aside>omicron</aside></li>
                <li class='keycap tex' data-insert='\\Pi '>&Pi;<aside>pi</aside></li></ul>
            <ul><li class='keycap tex' data-insert='\\char"391'>&#x391;<aside>alpha</aside></li>
                <li class='keycap tex' data-insert='\\Sigma '>&Sigma;<aside>sigma</aside></li>
                <li class='keycap tex' data-insert='\\Delta '>&Delta;<aside>delta</aside></li>
                <li class='keycap tex' data-insert='\\Phi '>&#x03a6;<aside>phi</aside></li>
                <li class='keycap tex' data-insert='\\Gamma '>&Gamma;<aside>gamma</aside></li>
                <li class='keycap tex' data-insert='\\char"397'>&Eta;<aside>eta</aside></li>
                <li class='keycap tex' data-insert='\\Xi '>&Xi;<aside>xi</aside></li>
                <li class='keycap tex' data-insert='\\char"39A'>&Kappa;<aside>kappa</aside></li>
                <li class='keycap tex' data-insert='\\Lambda '>&Lambda;<aside>lambda</aside></li></ul>
            <ul><li class='shift modifier font-glyph bottom left selected w15 layer-switch' data-layer='lower-greek'><svg class="svg-glyph"><use xlink:href="#svg-shift" /></svg></li>
                <li class='keycap tex' data-insert='\\char"396'>&Zeta;<aside>zeta</aside></li>
                <li class='keycap tex' data-insert='\\char"3A7'>&Chi;<aside>chi</aside></li>
                <li class='keycap tex' data-insert='\\Psi '>&Psi;<aside>psi</aside></li>
                <li class='keycap tex' data-insert='\\Omega '>&Omega;<aside>omega</aside></li>
                <li class='keycap tex' data-insert='\\char"392'>&Beta;<aside>beta</aside></li>
                <li class='keycap tex' data-insert='\\char"39D'>&Nu;<aside>nu</aside></li>
                <li class='keycap tex' data-insert='\\char"39C'>&Mu;<aside>mu</aside></li>
                <li class='action font-glyph bottom right w15' data-command='["performWithFeedback","deleteBackward"]'><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li></ul>
            <ul>
                <li class='separator w10'>&nbsp;</li>
                <li class='keycap'>.</li>
                <li class='keycap w50' data-key=' '>&nbsp;</li>
                <arrows/>
            </ul>
        </div>`, "latex-lower": `
        <div class='rows'>
            <ul><row name='lower-1' class='tt' shift-layer='latex-upper'/></ul>
            <ul><row name='lower-2' class='tt' shift-layer='latex-upper'/></ul>
            <ul><row name='lower-3' class='tt' shift-layer='latex-upper'/></ul>
            <ul>
                <li class='layer-switch font-glyph modifier bottom left' data-layer='latex-symbols'>01#</li>
                <li class='keycap tt' data-shifted='[' data-shifted-command='["insertAndUnshiftKeyboardLayer", "["]'>{</li>
                <li class='keycap tt' data-shifted=']' data-shifted-command='["insertAndUnshiftKeyboardLayer", "]"]'>}</li>
                <li class='keycap tt' data-shifted='(' data-shifted-command='["insertAndUnshiftKeyboardLayer", "("]'>^</li>
                <li class='keycap tt' data-shifted=')' data-shifted-command='["insertAndUnshiftKeyboardLayer", ")"]'>_</li>
                <li class='keycap w20' data-key=' '>&nbsp;</li>
                <arrows/>
            </ul>
        </div>`, "latex-upper": "\n        <div class='rows'>\n            <ul><row name='upper-1' class='tt' shift-layer='latex-lower'/></ul>\n            <ul><row name='upper-2' class='tt' shift-layer='latex-lower'/></ul>\n            <ul><row name='upper-3' class='tt' shift-layer='latex-lower'/></ul>\n            <ul>\n                <li class='layer-switch font-glyph modifier bottom left' data-layer='latex-symbols'01#</li>\n                <li class='keycap tt'>[</li>\n                <li class='keycap tt'>]</li>\n                <li class='keycap tt'>(</li>\n                <li class='keycap tt'>)</li>\n                <li class='keycap w20' data-key=' '>&nbsp;</li>\n                <arrows/>\n            </ul>\n        </div>", "latex-symbols": `
        <div class='rows'>
            <ul><li class='keycap tt'>1</li><li class='keycap tt'>2</li><li class='keycap tt'>3</li><li class='keycap tt'>4</li><li class='keycap tt'>5</li><li class='keycap tt'>6</li><li class='keycap tt'>7</li><li class='keycap tt'>8</li><li class='keycap tt'>9</li><li class='keycap tt'>0</li></ul>
            <ul><li class='keycap tt'>!</li><li class='keycap tt'>@</li><li class='keycap tt'>#</li><li class='keycap tt'>$</li><li class='keycap tt'>%</li><li class='keycap tt'>^</li><li class='keycap tt'>&</li><li class='keycap tt'>*</li><li class='keycap tt'>+</li><li class='keycap tt'>=</li></ul>
            <ul>
                <li class='keycap tt'>\\</li>
                <li class='keycap tt'>|</li>
                <li class='keycap tt'>/</li>
                <li class='keycap tt'>\`</li>
                <li class='keycap tt'>;</li>
                <li class='keycap tt'>:</li>
                <li class='keycap tt'>?</li>
                <li class='keycap tt'>'</li>
                <li class='keycap tt'>"</li>
                <li class='action font-glyph bottom right'
                    data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                    data-shifted-command='"deleteAll"'
                    data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>
            </ul>
            <ul>
                <li class='layer-switch font-glyph modifier bottom left' data-layer='latex-lower'>abc</li>
                <li class='keycap tt'>&lt;</li>
                <li class='keycap tt'>&gt;</li>
                <li class='keycap tt'>~</li>
                <li class='keycap tt'>,</li>
                <li class='keycap tt'>.</li>
                <li class='keycap' data-key=' '>&nbsp;</li>
                <arrows/>
            </ul>
        </div>`, functions: `
        <div class='rows'>
            <ul><li class='separator'></li>
                <li class='fnbutton' data-insert='\\sin'></li>
                <li class='fnbutton' data-insert='\\sin^{-1}'></li>
                <li class='fnbutton' data-insert='\\ln'></li>
                <li class='fnbutton' data-insert='\\exponentialE^{#?}'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{lcm}(#?)' data-latex='\\operatorname{lcm}()'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{ceil}(#?)' data-latex='\\operatorname{ceil}()'></li>
                <li class='bigfnbutton' data-insert='\\lim_{n\\to\\infty}'></li>
                <li class='bigfnbutton' data-insert='\\int'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{abs}(#?)' data-latex='\\operatorname{abs}()'></li>
            </ul>
            <ul><li class='separator'></li>
                <li class='fnbutton' data-latex='\\cos'></li>
                <li class='fnbutton' data-latex='\\cos^{-1}'></li>
                <li class='fnbutton' data-latex='\\ln_{10}'></li>
                <li class='fnbutton' data-latex='10^{#?}'></li>
                <li class='bigfnbutton' data-latex='\\operatorname{gcd}(#?)' data-latex='\\operatorname{gcd}()'></li>
                <li class='bigfnbutton' data-latex='\\operatorname{floor}(#?)' data-latex='\\operatorname{floor}()'></li>
                <li class='bigfnbutton' data-latex='\\sum_{n\\mathop=0}^{\\infty}'></li>
                <li class='bigfnbutton' data-latex='\\int_{0}^{\\infty}'></li>
                <li class='bigfnbutton' data-latex='\\operatorname{sign}(#?)' data-latex='\\operatorname{sign}()'></li>
            </ul>
            <ul><li class='separator'></li>
                <li class='fnbutton' data-latex='\\tan'></li>
                <li class='fnbutton' data-latex='\\tan^{-1}'></li>
                <li class='fnbutton' data-latex='\\log_{#?}'></li>
                <li class='fnbutton' data-latex='\\sqrt[#?]{#0}'></li>
                <li class='bigfnbutton' data-insert='#0 \\mod' data-latex='\\mod'></li>
                <li class='bigfnbutton' data-insert='\\operatorname{round}(#?) ' data-latex='\\operatorname{round}()'></li>
                <li class='bigfnbutton' data-insert='\\prod_{n\\mathop=0}^{\\infty}' data-latex='{\\scriptstyle \\prod_{n=0}^{\\infty}}'></li>
                <li class='bigfnbutton' data-insert='\\frac{\\differentialD #0}{\\differentialD x}'></li>
                <li class='action font-glyph bottom right' data-command='["performWithFeedback","deleteBackward"]'><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li></ul>
            <ul><li class='separator'></li>
                <li class='fnbutton'>(</li>
                <li class='fnbutton'>)</li>
                <li class='fnbutton' data-insert='^{#?}' data-latex='x^{#?}'></li>
                <li class='fnbutton' data-insert='_{#?}' data-latex='x_{#?}'></li>
                <li class='keycap w20 ' data-key=' '>&nbsp;</li>
                <arrows/>
            </ul>
        </div>`, style: `
        <div class='rows'>
            <ul>
                <li class='keycap' data-alt-keys='foreground-color' data-command='["applyStyle",{"color":"red"}]'><span style='border-radius: 50%;width:22px;height:22px; border: 3px solid #cc2428'></span></li>
                <li class='keycap' data-alt-keys='background-color' data-command='["applyStyle",{"backgroundColor":"yellow"}]'><span style='border-radius: 50%;width:22px;height:22px; background:#fff590'></span></li>
                <li class='separator w5'></li>
                <li class='keycap' data-command='["applyStyle",{"size":"3"}]' data-latex='\\scriptsize\\text{small}'></li>
                <li class='keycap' data-command='["applyStyle",{"size":"5"}]' data-latex='\\scriptsize\\text{normal}'></li>
                <li class='keycap' data-command='["applyStyle",{"size":"9"}]' data-latex='\\huge\\text{big}'></li>
                <li class='separator w5'></li>
                <li class='keycap' data-latex='\\langle' data-command='["insert", "\\\\langle", {"smartFence":true}]'></li>
            </ul>
            <ul>
                <li class='keycap' data-command='["applyStyle",{"series":"l"}]' data-latex='\\fontseries{l}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"m"}]' data-latex='\\fontseries{m}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"b"}]' data-latex='\\fontseries{b}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"bx"}]' data-latex='\\fontseries{bx}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"sb"}]' data-latex='\\fontseries{sb}\\text{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"series":"c"}]' data-latex='\\fontseries{c}\\text{Ab}'></li>
            </ul>
            <ul>
                <li class='keycap' data-command='["applyStyle",{"shape":"up"}]' data-latex='\\textup{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"shape":"it"}]' data-latex='\\textit{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"shape":"sl"}]' data-latex='\\textsl{Ab}'></li>
                <li class='keycap' data-command='["applyStyle",{"shape":"sc"}]' data-latex='\\textsc{Ab}'></li>
                <li class='separator w5'></li>
                <li class='keycap' data-insert='\\emph{#@} ' data-latex='\\text{\\emph{emph}}'></li>
            </ul>
            <ul>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmr"}]' data-latex='\\textrm{Az}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmtt"}]' data-latex='\\texttt{Az}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cmss"}]' data-latex='\\textsf{Az}'></li>

                <li class='keycap' data-command='["applyStyle",{"fontFamily":"bb"}]'  data-latex='\\mathbb{AZ}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"scr"}]'  data-latex='\\mathscr{AZ}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"cal"}]' data-latex='\\mathcal{A1}'></li>
                <li class='keycap' data-command='["applyStyle",{"fontFamily":"frak"}]' data-latex='\\mathfrak{Az}'></li>
            </ul>
        </div>` };
function Kr(e5, t2) {
  e5 = e5.replace(/(^|[^\\])#@/g, "$1#?");
  const i2 = ln(), n2 = new nt("root", i2);
  return n2.body = Dt(e5, i2, { parseMode: "math", args: t2 }), Be(Ie(Pe(new ze(n2.render(new he({ registers: i2.registers }, { fontSize: 5 }, "displaystyle")), { classes: "ML__base" }))), { classes: "ML__mathlive" }).toMarkup();
}
function Rr(e5, t2, i2) {
  var n2, r2, a2;
  let o2 = "<div class='left'>";
  const s2 = t2.replace(/\s+/g, " ").split(" ");
  if (s2.length > 1) {
    const t3 = { ...Or, ...null !== (n2 = e5.customVirtualKeyboards) && void 0 !== n2 ? n2 : {} };
    for (const e6 of s2) {
      if (!t3[e6])
        break;
      o2 += "<div class='", e6 === i2 ? o2 += "selected " : t3[e6].command ? o2 += "action " : o2 += "layer-switch ", o2 += (null !== (r2 = t3[e6].classes) && void 0 !== r2 ? r2 : "") + "'", t3[e6].tooltip && (o2 += "data-tooltip='" + (null !== (a2 = sn(t3[e6].tooltip)) && void 0 !== a2 ? a2 : t3[e6].tooltip) + "' "), e6 !== i2 && ("string" == typeof t3[e6].command ? o2 += `data-command='"${t3[e6].command}"'` : Array.isArray(t3[e6].command) && (o2 += `data-command='"${t3[e6].command.join("")}"'`), t3[e6].layer && (o2 += "data-layer='" + t3[e6].layer + "'")), o2 += ">" + t3[e6].label + "</div>";
    }
  }
  o2 += "</div>";
  const l2 = "default" === e5.virtualKeyboardToolbar ? ["copyToClipboard", "undo", "redo"] : [], u2 = { copyToClipboard: `
            <div class='action'
                data-command='"copyToClipboard"'
                data-tooltip='${sn("tooltip.copy to clipboard")}'>
                <svg><use xlink:href='#svg-copy' /></svg>
            </div>
        `, undo: `
            <div class='action disabled'
                data-command='"undo"'
                data-tooltip='${sn("tooltip.undo")}'>
                <svg><use xlink:href='#svg-undo' /></svg>
            </div>
        `, redo: `
            <div class='action disabled'
                data-command='"redo"'
                data-tooltip='${sn("tooltip.redo")}'>
                <svg><use xlink:href='#svg-redo' /></svg>
            </div>
        ` };
  return l2.length > 0 && (o2 += `
            <div class='right'>
                ${l2.map((e6) => u2[e6]).join("")}
            </div>
        `), "<div class='keyboard-toolbar' role='toolbar'>" + o2 + "</div>";
}
function jr(e5, t2, i2) {
  var n2, r2;
  for (const a2 of t2) {
    let t3;
    a2.getAttribute("data-latex") ? t3 = Kr(a2.getAttribute("data-latex").replace(/&quot;/g, '"'), () => "\\placeholder{}") : a2.getAttribute("data-insert") && "" === a2.innerHTML ? t3 = Kr(a2.getAttribute("data-insert").replace(/&quot;/g, '"'), () => "\\placeholder{}") : a2.getAttribute("data-content") && (t3 = a2.getAttribute("data-content").replace(/&quot;/g, '"')), a2.getAttribute("data-aside") && (t3 = (null != t3 ? t3 : "") + "<aside>" + a2.getAttribute("data-aside").replace(/&quot;/g, '"') + "</aside>"), void 0 !== t3 && (a2.innerHTML = e5.options.createHTML(t3)), a2.getAttribute("data-classes") && a2.classList.add(a2.getAttribute("data-classes"));
    const o2 = null === (n2 = a2.getAttribute("data-insert")) || void 0 === n2 ? void 0 : n2.replace(/&quot;/g, '"');
    let s2;
    o2 && Pr[o2] && (a2.dataset.shifted = Pr[o2][0], a2.dataset.shiftedCommand = JSON.stringify(["insertAndUnshiftKeyboardLayer", Pr[o2][1]]));
    const l2 = a2.getAttribute("data-command");
    if (l2)
      if (/^[a-zA-Z]+$/.test(l2))
        s2 = l2;
      else
        try {
          s2 = JSON.parse(l2);
        } catch (e6) {
        }
    else
      s2 = a2.getAttribute("data-insert") ? ["insert", a2.getAttribute("data-insert"), { focus: true, feedback: true, scrollIntoView: true, mode: "math", format: "latex", resetStyle: true }] : a2.getAttribute("data-latex") ? ["insert", a2.getAttribute("data-latex"), { focus: true, feedback: true, scrollIntoView: true, mode: "math", format: "latex", resetStyle: true }] : ["typedText", null !== (r2 = a2.getAttribute("data-key")) && void 0 !== r2 ? r2 : a2.textContent, { focus: true, feedback: true, simulateKeystroke: true }];
    if (s2) {
      i2 && (s2 = [i2, s2]);
      let t4 = s2;
      const n3 = a2.getAttribute("data-alt-keys");
      n3 && $r[n3] && (t4 = { default: s2, pressAndHoldStart: ["showAlternateKeys", n3], pressAndHoldEnd: "hideAlternateKeys" }), nr((t5) => e5.executeCommand(t5), a2, t4);
    }
  }
}
function Hr(e5, t2) {
  var i2, n2, r2, a2;
  const o2 = { qwerty: { "lower-1": "qwertyuiop", "lower-2": " asdfghjkl ", "lower-3": "^zxcvbnm~", "upper-1": "QWERTYUIOP", "upper-2": " ASDFGHJKL ", "upper-3": "^ZXCVBNM~", "numpad-1": "789/", "numpad-2": "456*", "numpad-3": "123-", "numpad-4": "0.=+" }, azerty: { "lower-1": "azertyuiop", "lower-2": "qsdfghjklm", "lower-3": "^ wxcvbn ~", "upper-1": "AZERTYUIOP", "upper-2": "QSDFGHJKLM", "upper-3": "^ WXCVBN ~" }, qwertz: { "lower-1": "qwertzuiop", "lower-2": " asdfghjkl ", "lower-3": "^yxcvbnm~", "upper-1": "QWERTZUIOP", "upper-2": " ASDFGHJKL", "upper-3": "^YXCVBNM~" }, dvorak: { "lower-1": "^  pyfgcrl ", "lower-2": "aoeuidhtns", "lower-3": "qjkxbmwvz~", "upper-1": "^  PYFGCRL ", "upper-2": "AOEUIDHTNS", "upper-3": "QJKXBMWVZ~" }, colemak: { "lower-1": " qwfpgjluy ", "lower-2": "arstdhneio", "lower-3": "^zxcvbkm~", "upper-1": " QWFPGNLUY ", "upper-2": "ARSTDHNEIO", "upper-3": "^ZXCVBKM~" } };
  let s2 = e5.virtualKeyboardLayout;
  if ("auto" === s2) {
    const e6 = Wi();
    e6 && (s2 = e6.virtualLayout), s2 && "auto" !== s2 || (s2 = null !== (i2 = { fr: "azerty", be: "azerty", al: "qwertz", ba: "qwertz", cz: "qwertz", de: "qwertz", hu: "qwertz", sk: "qwertz", ch: "qwertz" }[on.locale.slice(0, 2)]) && void 0 !== i2 ? i2 : "qwerty");
  }
  const l2 = null !== (n2 = o2[s2]) && void 0 !== n2 ? n2 : o2.qwerty;
  let u2, c2 = t2;
  c2 = c2.replace(/<arrows\/>/g, `
        <li class='action' data-command='["performWithFeedback","moveToPreviousChar"]'
            data-shifted='<svg class="svg-glyph"><use xlink:href="#svg-angle-double-left" /></svg>'
            data-shifted-command='["performWithFeedback","extendToPreviousChar"]'>
            <svg class="svg-glyph"><use xlink:href='#svg-arrow-left' /></svg>
        </li>
        <li class='action' data-command='["performWithFeedback","moveToNextChar"]'
            data-shifted='<svg class="svg-glyph"><use xlink:href="#svg-angle-double-right" /></svg>'
            data-shifted-command='["performWithFeedback","extendToNextChar"]'>
            <svg class="svg-glyph"><use xlink:href='#svg-arrow-right' /></svg>
        </li>
        <li class='action' data-command='["performWithFeedback","commit"]'>
        <svg class="svg-glyph"><use xlink:href='#svg-commit' /></svg></li>`);
  let d2 = c2.match(/(<row\s+)(.*)((?:<\/row|\/)>)/);
  for (; d2; ) {
    u2 = "";
    const t3 = d2[2].match(/[a-zA-Z][a-zA-Z\d-]*=(['"])(.*?)\1/g), i3 = {};
    if (t3)
      for (const e6 of t3) {
        const t4 = e6.match(/([a-zA-Z][a-zA-Z\d-]*)=(['"])(.*?)\2/);
        t4 && (i3[t4[1]] = t4[3]);
      }
    let n3 = l2[i3.name];
    if (n3 || (n3 = o2.qwerty[i3.name]), n3)
      for (const t4 of n3) {
        let o3 = null !== (r2 = i3.class) && void 0 !== r2 ? r2 : "";
        o3 && (o3 = ` ${o3}`), "~" === t4 ? (u2 += "<li class='action font-glyph bottom right ", u2 += n3.length - (n3.match(/ /g) || []).length / 2 == 10 ? "w10" : "w15", u2 += `' data-shifted='<span class="warning"><svg class="svg-glyph"><use xlink:href="#svg-trash" /></svg></span>'
                        data-shifted-command='"deleteAll"'
                        data-alt-keys='delete' data-command='["performWithFeedback","deleteBackward"]'
                        ><svg class="svg-glyph"><use xlink:href="#svg-delete-backward" /></svg></li>`) : " " === t4 ? u2 += "<li class='separator w5'></li>" : "^" === t4 ? u2 += "<li class='shift modifier font-glyph bottom left w15 layer-switch' data-layer='" + i3["shift-layer"] + `'><svg class="svg-glyph"><use xlink:href="#svg-shift" /></svg></li>` : "/" === t4 ? u2 += "<li class='keycap" + o3 + "' data-alt-keys='/' data-insert='\\frac{#@}{#?}'>&divide;</li>" : "*" === t4 ? u2 += "<li class='keycap" + o3 + "' data-alt-keys='*' data-insert='\\times '>&times;</li>" : "-" === t4 ? u2 += "<li class='keycap" + o3 + "' data-alt-keys='-' data-key='-'>&#x2212;</li>" : "." === t4 ? u2 += "<li class='keycap" + o3 + `' data-alt-keys='.' data-command='"insertDecimalSeparator"'>` + (null !== (a2 = e5.decimalSeparator) && void 0 !== a2 ? a2 : ".") + "</li>" : o3.includes("tt") ? u2 += `<li class='keycap${o3}' data-alt-keys='${t4}' data-command='["typedText","${t4}",{"mode":"command", "focus":true, "feedback":true}]'>${t4}</li>` : u2 += "<li class='keycap" + o3 + "' data-alt-keys='" + t4 + "'>" + t4 + "</li>";
      }
    c2 = c2.replace(new RegExp(d2[1] + d2[2] + d2[3]), u2), d2 = c2.match(/(<row\s+)(.*)((?:<\/row|\/)>)/);
  }
  return c2;
}
function Wr(e5) {
  Ir();
  const t2 = e5.element.querySelectorAll("div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action");
  if (t2)
    for (const i2 of t2) {
      const t3 = i2.getAttribute("data-unshifted-content");
      t3 && (i2.innerHTML = e5.options.createHTML(t3), i2.dataset.unshiftedContent = "");
      const n2 = i2.getAttribute("data-unshifted-command");
      n2 && (i2.dataset.command = n2, i2.dataset.unshiftedCommand = "");
    }
  return false;
}
function Zr(e5) {
  return Object.keys(e5).map((t2) => `${t2} {${function(e6) {
    return "string" == typeof e6 ? e6 : Object.entries(e6).map(([e7, t3]) => `${e7}:${t3} !important`).join(";");
  }(e5[t2])}}`).join("");
}
function Gr(e5, t2) {
  "lower-command" !== t2 && "upper-command" !== t2 && "symbols-command" !== t2 && e5.executeCommand("complete"), Ur(e5), Ir(), Wr(e5);
  const i2 = null == e5 ? void 0 : e5.element.querySelectorAll(".keyboard-layer");
  let n2 = false;
  for (const e6 of i2)
    if (e6.dataset.layer === t2) {
      n2 = true;
      break;
    }
  if (n2)
    for (const e6 of i2)
      e6.dataset.layer === t2 ? e6.classList.add("is-visible") : e6.classList.remove("is-visible");
  return e5.focusMathfield(), true;
}
function Ur(e5, t2 = "") {
  var i2, n2;
  const r2 = e5.options.virtualKeyboardContainer;
  if (!r2)
    return false;
  if (e5.element ? e5.element.classList.add("is-visible") : e5.buildAndAttachElement(t2), !e5.visible) {
    (null === (i2 = window.mathlive) || void 0 === i2 ? void 0 : i2.visibleVirtualKeyboard) && Jr(null === (n2 = window.mathlive) || void 0 === n2 ? void 0 : n2.visibleVirtualKeyboard), window.mathlive || (window.mathlive = {}), window.mathlive.visibleVirtualKeyboard = e5;
    const t3 = r2.style.paddingBottom;
    e5.originalContainerBottomPadding = t3, r2.style.paddingBottom = t3 ? `calc(${t3} + var(--keyboard-height, 276px) - 1px)` : "calc(var(--keyboard-height, 276px) - 1px)";
  }
  return setTimeout(() => {
    var t3;
    null === (t3 = e5.element) || void 0 === t3 || t3.classList.add("is-visible"), e5.focusMathfield();
  }, 1), e5.visible = true, e5.stateChanged(), false;
}
function Jr(e5) {
  var t2, i2, n2;
  const r2 = e5.options.virtualKeyboardContainer;
  return !!r2 && (e5.element && (window.mathlive || (window.mathlive = {}), window.mathlive.visibleVirtualKeyboard = void 0, e5.disable(), Ir(), e5.visible = false, null === (t2 = e5.coreStylesheet) || void 0 === t2 || t2.release(), e5.coreStylesheet = null, null === (i2 = e5.virtualKeyboardStylesheet) || void 0 === i2 || i2.release(), e5.virtualKeyboardStylesheet = null, null === (n2 = e5._element) || void 0 === n2 || n2.remove(), e5._element = void 0, null !== e5.originalContainerBottomPadding && (r2.style.paddingBottom = e5.originalContainerBottomPadding)), e5.visible = false, e5.stateChanged(), false);
}
Er({ showAlternateKeys: function(e5, t2) {
  var n2;
  i();
  const r2 = $r[t2], a2 = document.createElement("div");
  a2.setAttribute("aria-hidden", "true"), a2.className = "ML__keyboard alternate-keys" + (e5.element.classList.contains("material") ? " material" : ""), a2.id = "mathlive-alternate-keys-panel", r2.length >= 14 ? a2.style.width = "236px" : r2.length >= 7 ? a2.style.width = "286px" : 4 === r2.length || 2 === r2.length ? a2.style.width = "146px" : 1 === r2.length ? a2.style.width = "86px" : a2.style.width = "146px", a2.style.height = "auto";
  let o2 = "";
  for (const e6 of r2)
    o2 += "<li", "string" == typeof e6 ? o2 += ' data-latex="' + e6.replace(/"/g, "&quot;") + '"' : (e6.latex && (o2 += ' data-latex="' + e6.latex.replace(/"/g, "&quot;") + '"'), e6.content && (o2 += ' data-content="' + e6.content.replace(/"/g, "&quot;") + '"'), e6.insert && (o2 += ' data-insert="' + e6.insert.replace(/"/g, "&quot;") + '"'), e6.command && ("string" == typeof e6.command ? o2 += ` data-command="${e6.command.replace(/"/g, "&quot;")}"` : o2 += " data-command='" + JSON.stringify(e6.command).replace(/"/g, "&quot;") + "'"), e6.aside && (o2 += ` data-aside="${e6.aside.replace(/"/g, "&quot;")}"`), e6.class && (o2 += ` data-classes="${e6.class}"`)), o2 += ">", o2 += "string" == typeof e6 ? e6 : null !== (n2 = e6.label) && void 0 !== n2 ? n2 : "", o2 += "</li>";
  o2 = "<ul>" + o2 + "</ul>", a2.innerHTML = e5.options.createHTML(o2), jr(e5, [...a2.querySelectorAll("li")], "performAlternateKeys"), Tr.scrim || (Tr.scrim = new Tr()), Tr.scrim.open({ root: e5.options.virtualKeyboardContainer, child: a2 });
  const s2 = null == e5 ? void 0 : e5.element.querySelector('div.keyboard-layer.is-visible div.rows ul li[data-alt-keys="' + t2 + '"]'), l2 = null == s2 ? void 0 : s2.getBoundingClientRect();
  if (l2) {
    l2.top - a2.clientHeight < 0 && (a2.style.width = "auto", r2.length <= 6 ? a2.style.height = "56px" : r2.length <= 12 ? a2.style.height = "108px" : r2.length <= 18 ? a2.style.height = "205px" : a2.classList.add("compact"));
    const e6 = (l2.top - a2.clientHeight + 5).toString() + "px", t3 = Math.max(0, Math.min(window.innerWidth - a2.offsetWidth, (l2.left + l2.right - a2.offsetWidth) / 2)) + "px";
    a2.style.transform = "translate(" + t3 + "," + e6 + ")", a2.classList.add("is-visible");
  }
  return false;
} }, { target: "virtual-keyboard" }), Er({ shiftKeyboardLayer: function(t2) {
  const i2 = null == t2 ? void 0 : t2.element.querySelectorAll("div.keyboard-layer.is-visible .rows .keycap, div.keyboard-layer.is-visible .rows .action");
  if (i2)
    for (const n2 of i2) {
      if (n2.dataset.unshiftedContent)
        return false;
      let i3 = n2.getAttribute("data-shifted");
      if (i3 || /^[a-z]$/.test(n2.innerHTML)) {
        n2.dataset.unshiftedContent = n2.innerHTML, i3 || (i3 = n2.innerHTML.toUpperCase()), n2.innerHTML = t2.options.createHTML(i3);
        const r2 = n2.getAttribute("data-command");
        if (r2) {
          n2.dataset.unshiftedCommand = r2;
          const t3 = n2.getAttribute("data-shifted-command");
          if (t3)
            n2.dataset.command = t3;
          else {
            const t4 = JSON.parse(r2);
            e(t4) && (t4[1] = t4[1].toUpperCase()), n2.dataset.command = JSON.stringify(t4);
          }
        }
      }
    }
  return false;
} }, { target: "virtual-keyboard" }), Er({ hideAlternateKeys: () => Ir(), performAlternateKeys: function(e5, t2) {
  return Ir(), e5.executeCommand(t2);
}, switchKeyboardLayer: (e5, t2) => Gr(e5, t2), unshiftKeyboardLayer: (e5) => Wr(e5), insertAndUnshiftKeyboardLayer: function(e5, t2) {
  return e5.executeCommand(["insert", t2]), Wr(e5), true;
} }, { target: "virtual-keyboard" }), Er({ toggleVirtualKeyboardAlt: function(e5) {
  let t2 = false;
  return (null == e5 ? void 0 : e5.element) && (t2 = null == e5 ? void 0 : e5.element.classList.contains("material"), e5.disable()), Ur(e5, t2 ? "" : "material"), false;
}, toggleVirtualKeyboardShift: function(e5) {
  var t2, i2;
  e5.options.virtualKeyboardLayout = { qwerty: "azerty", azerty: "qwertz", qwertz: "dvorak", dvorak: "colemak", colemak: "qwerty" }[e5.options.virtualKeyboardLayout];
  const n2 = null !== (i2 = null === (t2 = null == e5 ? void 0 : e5.element.querySelector("div.keyboard-layer.is-visible")) || void 0 === t2 ? void 0 : t2.id) && void 0 !== i2 ? i2 : "";
  return e5 && e5.disable(), Ur(e5), n2 && Gr(e5, n2), false;
} }, { target: "virtual-keyboard" }), Er({ toggleVirtualKeyboard: (e5, t2) => function(e6, t3) {
  return e6.visible ? Jr(e6) : Ur(e6, t3), false;
}(e5, t2), hideVirtualKeyboard: (e5) => Jr(e5), showVirtualKeyboard: (e5, t2) => Ur(e5, t2), onUndoStateChanged: (e5, t2, i2) => function(e6, t3, i3) {
  var n2;
  const r2 = null === (n2 = e6.element) || void 0 === n2 ? void 0 : n2.querySelector(".keyboard-toolbar");
  if (!r2)
    return false;
  const a2 = r2.querySelector(`[data-command='"undo"']`), o2 = r2.querySelector(`[data-command='"redo"']`);
  return o2 && (i3 ? o2.classList.remove("disabled") : o2.classList.add("disabled")), a2 && (t3 ? a2.classList.remove("disabled") : a2.classList.add("disabled")), false;
}(e5, t2, i2) }, { target: "virtual-keyboard" });
var Xr = "mathlive#remote-virtual-keyboard-message";
var Yr = class {
  constructor(e5) {
    var t2, i2, n2;
    this.targetOrigin = null !== (i2 = null !== (t2 = e5.targetOrigin) && void 0 !== t2 ? t2 : window.origin) && void 0 !== i2 ? i2 : "*", this.originValidator = null !== (n2 = e5.originValidator) && void 0 !== n2 ? n2 : "same-origin", this._mathfield = e5.mathfield;
  }
  get visible() {
    var e5, t2, i2;
    return null !== (i2 = null === (t2 = null === (e5 = window.mathlive) || void 0 === e5 ? void 0 : e5.sharedVirtualKeyboard) || void 0 === t2 ? void 0 : t2.visible) && void 0 !== i2 && i2;
  }
  set visible(e5) {
    window.mathlive.sharedVirtualKeyboard.visible = e5;
  }
  setOptions(e5) {
    this.sendMessage("setOptions", { options: JSON.stringify(ea(e5)) });
  }
  create() {
  }
  dispose() {
    this.disable();
  }
  enable() {
    this.enabled || (this.enabled = true, window.addEventListener("message", this));
  }
  disable() {
    this.enabled && (window.removeEventListener("message", this), this.enabled = false);
  }
  executeCommand(e5) {
    var t2, i2, n2;
    return "virtual-keyboard" === Dr(e5) ? (this._mathfield && (this.setOptions(ea(this._mathfield.getOptions())), ("showVirtualKeyboard" === e5 || "toggleVirtualKeyboard" === e5 && false === this.visible) && (null === (i2 = (t2 = this._mathfield).focus) || void 0 === i2 || i2.call(t2))), this.sendMessage("executeCommand", { command: e5 }), false) : null === (n2 = this._mathfield) || void 0 === n2 ? void 0 : n2.executeCommand(e5);
  }
  focusMathfield() {
  }
  blurMathfield() {
  }
  stateChanged() {
  }
  handleEvent(e5) {
    var t2, i2, n2, r2;
    if ("message" === e5.type && e5.data && e5.data.type === Xr) {
      if (!tr(e5.origin, this.originValidator))
        throw new Error(`Message from unknown origin (${e5.origin}) cannot be handled`);
      const { action: a2 } = e5.data;
      if ("executeCommand" === a2) {
        if ("virtual-keyboard" === Dr(e5.data.command) && window === window.parent)
          return;
        this.executeCommand(e5.data.command);
      } else
        "updateState" === a2 ? (this.visible = e5.data.state.visible, this.height = e5.data.state.height) : "focus" === a2 ? null === (i2 = null === (t2 = this._mathfield) || void 0 === t2 ? void 0 : t2.focus) || void 0 === i2 || i2.call(t2) : "blur" === a2 && (null === (r2 = null === (n2 = this._mathfield) || void 0 === n2 ? void 0 : n2.blur) || void 0 === r2 || r2.call(n2));
    }
  }
  sendMessage(e5, t2 = {}) {
    return !!window.parent && (window.parent.postMessage({ type: Xr, action: e5, ...t2 }, this.targetOrigin), true);
  }
};
var Qr = class extends Fr {
  constructor(e5) {
    const t2 = { ...Qr.defaultOptions, ...ea(e5) };
    (null == e5 ? void 0 : e5.createHTML) && (t2.createHTML = e5.createHTML), (null == e5 ? void 0 : e5.virtualKeyboardContainer) && (t2.virtualKeyboardContainer = e5.virtualKeyboardContainer), super(t2), this.listeners = /* @__PURE__ */ new Set(), window.addEventListener("message", this), document.body.addEventListener("focusin", (e6) => {
      var t3;
      const i2 = e6.target;
      if ((null == i2 ? void 0 : i2.isConnected) && "math-field" === (null === (t3 = i2.tagName) || void 0 === t3 ? void 0 : t3.toLowerCase())) {
        const e7 = i2;
        "onfocus" === e7.virtualKeyboardMode && "hidden" === e7.virtualKeyboardState && (e7.virtualKeyboardState = "visible");
      }
    }), document.addEventListener("focusout", (e6) => {
      var t3;
      const i2 = e6.target;
      (null == i2 ? void 0 : i2.isConnected) && "math-field" === (null === (t3 = i2.tagName) || void 0 === t3 ? void 0 : t3.toLowerCase()) && setTimeout(() => {
        var e7, t4;
        if ("math-field" !== (null === (t4 = null === (e7 = document.activeElement) || void 0 === e7 ? void 0 : e7.tagName) || void 0 === t4 ? void 0 : t4.toLowerCase())) {
          const e8 = document.querySelector("math-field");
          e8 && (e8.virtualKeyboardState = "hidden");
        }
      }, 300);
    });
  }
  static get defaultOptions() {
    var e5, t2;
    return { createHTML: (e6) => e6, fontsDirectory: "./fonts", soundsDirectory: "./sounds", targetOrigin: window.origin, originValidator: "same-origin", virtualKeyboards: "all", virtualKeyboardLayout: "auto", customVirtualKeyboardLayers: {}, customVirtualKeyboards: {}, virtualKeyboardTheme: /macos|ios/.test(a()) ? "apple" : "material", keypressVibration: true, keypressSound: null, plonkSound: null, virtualKeyboardToolbar: "default", virtualKeyboardContainer: null !== (t2 = null === (e5 = globalThis.document) || void 0 === e5 ? void 0 : e5.body) && void 0 !== t2 ? t2 : null };
  }
  addEventListener(e5, t2, i2) {
    if ("virtual-keyboard-toggle" !== e5)
      throw new TypeError("Unexpected event type");
    this.listeners.has(t2) || this.listeners.add(t2);
  }
  dispatchEvent(e5) {
    if ("virtual-keyboard-toggle" !== e5.type)
      throw new TypeError("Unexpected event type");
    return 0 !== this.listeners.size && (this.listeners.forEach((t2) => {
      "function" == typeof t2 ? t2(e5) : null == t2 || t2.handleEvent(e5);
    }), true);
  }
  removeEventListener(e5, t2, i2) {
    if ("virtual-keyboard-toggle" !== e5)
      throw new TypeError("Unexpected event type");
    this.listeners.delete(t2);
  }
  handleEvent(e5) {
    if ("message" === e5.type && e5.data && e5.data.type === Xr) {
      if (!tr(e5.origin, this.options.originValidator))
        throw new Error(`Can not handle message from unknown origin (${e5.origin}).`);
      const { action: t2 } = e5.data;
      if ("executeCommand" === t2) {
        const { command: t3 } = e5.data;
        if (this.sourceFrame = e5.source, "virtual-keyboard" !== Dr(t3) && window === window.parent)
          return;
        this.executeCommand(t3);
      } else if ("setOptions" === t2 && JSON.stringify(ea(this.options)) !== e5.data.options) {
        const t3 = ea(JSON.parse(e5.data.options));
        t3.createHTML = this.options.createHTML, t3.virtualKeyboardContainer = this.options.virtualKeyboardContainer, this.setOptions(t3);
      }
    }
  }
  stateChanged() {
    var e5, t2;
    this.dispatchEvent(new Event("virtual-keyboard-toggle")), this.sendMessage("stateChanged", { state: { visible: this.visible, height: null !== (t2 = null === (e5 = this.element) || void 0 === e5 ? void 0 : e5.offsetHeight) && void 0 !== t2 ? t2 : 0 } });
  }
  executeCommand(e5) {
    return "virtual-keyboard" === Dr(e5) ? super.executeCommand(e5) : (this.sendMessage("executeCommand", { command: e5 }), false);
  }
  focus() {
    this.sendMessage("focus");
  }
  blur() {
    this.sendMessage("blur");
  }
  canUndo() {
    return this.canUndoState;
  }
  canRedo() {
    return this.canRedoState;
  }
  dispose() {
    window.removeEventListener("message", this);
  }
  sendMessage(e5, t2 = {}) {
    var i2;
    null === (i2 = this.sourceFrame) || void 0 === i2 || i2.postMessage({ type: Xr, action: e5, ...t2 }, this.options.targetOrigin);
  }
};
function ea(e5) {
  if ("object" != typeof e5)
    return {};
  const t2 = {};
  return e5.fontsDirectory && (t2.fontsDirectory = e5.fontsDirectory), e5.soundsDirectory && (t2.soundsDirectory = e5.soundsDirectory), e5.virtualKeyboards && (t2.virtualKeyboards = e5.virtualKeyboards), e5.virtualKeyboardLayout && (t2.virtualKeyboardLayout = e5.virtualKeyboardLayout), e5.customVirtualKeyboardLayers && (t2.customVirtualKeyboardLayers = e5.customVirtualKeyboardLayers), e5.customVirtualKeyboards && (t2.customVirtualKeyboards = e5.customVirtualKeyboards), e5.virtualKeyboardTheme && (t2.virtualKeyboardTheme = e5.virtualKeyboardTheme), e5.keypressVibration && (t2.keypressVibration = e5.keypressVibration), e5.keypressSound && (t2.keypressSound = e5.keypressSound), e5.plonkSound && (t2.plonkSound = e5.plonkSound), e5.virtualKeyboardToolbar && (t2.virtualKeyboardToolbar = e5.virtualKeyboardToolbar), e5.targetOrigin && (t2.targetOrigin = e5.targetOrigin), e5.originValidator && (t2.originValidator = e5.originValidator), t2;
}
function ta(e5, t2, i2) {
  return t2 + Vn(i2, { ...e5, textToSpeechMarkup: "", textToSpeechRulesOptions: { ...e5.textToSpeechRulesOptions, markup: "none" } });
}
function ia(e5, i2) {
  var n2, r2;
  if (!i2 && t() && "mathlive" in window && (i2 = window.mathlive.config), (i2 = null != i2 ? i2 : {}).speechEngine && "local" !== i2.speechEngine)
    if ("amazon" === i2.speechEngine) {
      if (t() && "AWS" in window) {
        const t2 = new window.AWS.Polly({ apiVersion: "2016-06-10" }), a2 = { OutputFormat: "mp3", VoiceId: null !== (n2 = i2.speechEngineVoice) && void 0 !== n2 ? n2 : "Joanna", Engine: ["Amy", "Emma", "Brian", "Ivy", "Joanna", "Kendra", "Kimberly", "Salli", "Joey", "Justin", "Matthew"].includes(null !== (r2 = i2.speechEngineVoice) && void 0 !== r2 ? r2 : "Joanna") ? "neural" : "standard", Text: e5, TextType: "ssml" };
        t2.synthesizeSpeech(a2, (e6, t3) => {
          if (e6)
            ;
          else if (null == t3 ? void 0 : t3.AudioStream) {
            const e7 = new Uint8Array(t3.AudioStream), i3 = new Blob([e7.buffer], { type: "audio/mpeg" }), n3 = URL.createObjectURL(i3);
            new Audio(n3).play().catch((e8) => {
            });
          }
        });
      }
    } else
      i2.speechEngine;
  else if (t()) {
    const t2 = new SpeechSynthesisUtterance(e5);
    window.speechSynthesis.speak(t2);
  }
}
function na(e5) {
  if (e5.classList.remove("ML__highlight"), e5.children)
    for (const t2 of e5.children)
      na(t2);
}
function ra(e5, t2) {
  var i2;
  t2 && (null === (i2 = e5.dataset) || void 0 === i2 ? void 0 : i2.atomId) !== t2 ? (e5.classList.remove("ML__highlight"), e5.children && e5.children.length > 0 && [...e5.children].forEach((e6) => {
    e6 instanceof HTMLElement && ra(e6, t2);
  })) : (e5.classList.add("ML__highlight"), e5.children && e5.children.length > 0 && [...e5.children].forEach((e6) => {
    e6 instanceof HTMLElement && ra(e6);
  }));
}
function aa(e5, i2, n2) {
  var r2, a2;
  if (!t())
    return;
  if (!n2 && window.mathlive && (n2 = window.mathlive.config), "amazon" !== n2.speechEngine)
    return void (n2.speakHook && n2.speakHook(i2, n2));
  if (!window.AWS)
    return;
  const o2 = new window.AWS.Polly({ apiVersion: "2016-06-10" }), s2 = { OutputFormat: "json", VoiceId: null !== (r2 = n2.speechEngineVoice) && void 0 !== r2 ? r2 : "Joanna", Engine: "standard", Text: i2, TextType: "ssml", SpeechMarkTypes: ["ssml"] };
  window.mathlive = null !== (a2 = window.mathlive) && void 0 !== a2 ? a2 : {}, window.mathlive.readAloudElement = e5, o2.synthesizeSpeech(s2, (e6, t2) => {
    if (e6)
      return;
    if (!t2 || !t2.AudioStream)
      return;
    const i3 = new TextDecoder("utf-8").decode(new Uint8Array(t2.AudioStream));
    window.mathlive.readAloudMarks = i3.split("\n").map((e7) => e7 ? JSON.parse(e7) : {}), window.mathlive.readAloudTokens = [];
    for (const e7 of window.mathlive.readAloudMarks)
      e7.value && window.mathlive.readAloudTokens.push(e7.value);
    window.mathlive.readAloudCurrentMark = "", s2.OutputFormat = "mp3", s2.SpeechMarkTypes = [], o2.synthesizeSpeech(s2, (e7, t3) => {
      if (e7)
        return;
      if (!t3 || !t3.AudioStream)
        return;
      const i4 = new Uint8Array(t3.AudioStream), n3 = new Blob([i4.buffer], { type: "audio/mpeg" }), r3 = URL.createObjectURL(n3);
      window.mathlive.readAloudAudio ? window.mathlive.readAloudAudio.pause() : (window.mathlive.readAloudAudio = new Audio(), window.mathlive.readAloudAudio.addEventListener("ended", () => {
        const e8 = window.mathlive.readAloudMathField;
        window.mathlive.readAloudStatus = "ended", document.body.dispatchEvent(new Event("read-aloud-status-change", { bubbles: true, composed: true })), e8 ? (pr(e8), window.mathlive.readAloudElement = null, window.mathlive.readAloudMathField = null, window.mathlive.readAloudTokens = [], window.mathlive.readAloudMarks = [], window.mathlive.readAloudCurrentMark = "") : na(window.mathlive.readAloudElement);
      }), window.mathlive.readAloudAudio.addEventListener("timeupdate", () => {
        let e8 = "";
        const t4 = 1e3 * window.mathlive.readAloudAudio.currentTime + 100;
        for (const i5 of window.mathlive.readAloudMarks)
          i5.time < t4 && (e8 = i5.value);
        window.mathlive.readAloudCurrentMark !== e8 && (window.mathlive.readAloudCurrentToken = e8, e8 && e8 === window.mathlive.readAloudFinalToken ? window.mathlive.readAloudAudio.pause() : (window.mathlive.readAloudCurrentMark = e8, ra(window.mathlive.readAloudElement, window.mathlive.readAloudCurrentMark)));
      })), window.mathlive.readAloudAudio.src = r3, window.mathlive.readAloudStatus = "playing", document.body.dispatchEvent(new Event("read-aloud-status-change", { bubbles: true, composed: true })), window.mathlive.readAloudAudio.play();
    });
  });
}
function oa(e5, t2) {
  if (null === e5 || null == t2 || "none" === t2 || "null" === t2)
    return null;
  if (t2 instanceof HTMLAudioElement)
    return t2.load(), t2;
  if ("string" == typeof t2) {
    if (0 === (t2 = t2.trim()).length)
      return null;
    const i2 = new Audio();
    return i2.src = hi((void 0 === e5 || 0 === e5.length ? "./sounds" : e5) + "/" + t2), i2.volume = 0.5, i2.load(), i2;
  }
  return null;
}
function sa(e5) {
  e5 instanceof HTMLAudioElement && (e5.pause(), e5.removeAttribute("src"), e5.load());
}
function la(i2, r2) {
  var a2, o2, s2, l2, u2;
  const c2 = null === r2.soundsDirectory ? null : null !== (o2 = null !== (a2 = r2.soundsDirectory) && void 0 !== a2 ? a2 : i2.soundsDirectory) && void 0 !== o2 ? o2 : "./sounds", d2 = ua(i2, Object.keys(i2));
  for (const i3 of Object.keys(r2))
    switch (i3) {
      case "scriptDepth":
        if (e(r2.scriptDepth))
          d2.scriptDepth = [r2.scriptDepth[0], r2.scriptDepth[1]];
        else {
          if ("number" != typeof r2.scriptDepth)
            throw new TypeError("Unexpected value for scriptDepth");
          d2.scriptDepth = [r2.scriptDepth, r2.scriptDepth];
        }
        break;
      case "locale":
        "auto" === r2.locale ? d2.locale = t() ? navigator.language.slice(0, 5) : "en" : d2.locale = r2.locale, on.locale = d2.locale;
        break;
      case "strings":
        on.merge(r2.strings), d2.strings = on.strings;
        break;
      case "virtualKeyboardLayout":
        d2.virtualKeyboardLayout = r2.virtualKeyboardLayout;
        break;
      case "virtualKeyboardMode":
        const a3 = r2.virtualKeyboardMode.toLowerCase();
        d2.virtualKeyboardMode = "auto" === a3 ? n() ? "onfocus" : "off" : a3;
        break;
      case "customVirtualKeyboardLayers":
        d2.customVirtualKeyboardLayers = { ...d2.customVirtualKeyboardLayers, ...r2.customVirtualKeyboardLayers };
        break;
      case "customVirtualKeyboards":
        d2.customVirtualKeyboards = { ...d2.customVirtualKeyboards, ...r2.customVirtualKeyboards };
        break;
      case "letterShapeStyle":
        "auto" === r2.letterShapeStyle ? on.locale.startsWith("fr") ? d2.letterShapeStyle = "french" : d2.letterShapeStyle = "tex" : d2.letterShapeStyle = r2.letterShapeStyle;
        break;
      case "plonkSound":
        d2.plonkSound instanceof HTMLAudioElement && sa(d2.plonkSound), d2.plonkSound = oa(c2, r2.plonkSound);
        break;
      case "keypressSound":
        if ("object" == typeof d2.keypressSound && null !== d2.keypressSound && "default" in d2.keypressSound && (sa(d2.keypressSound.default), sa(d2.keypressSound.delete), sa(d2.keypressSound.return), sa(d2.keypressSound.spacebar)), null === r2.keypressSound)
          d2.keypressSound = { default: null, delete: null, return: null, spacebar: null };
        else if ("string" == typeof r2.keypressSound) {
          const e5 = oa(c2, r2.keypressSound);
          d2.keypressSound = { delete: e5, return: e5, spacebar: e5, default: e5 };
        } else
          r2.keypressSound instanceof HTMLAudioElement ? d2.keypressSound = { delete: r2.keypressSound, return: r2.keypressSound, spacebar: r2.keypressSound, default: r2.keypressSound } : "object" == typeof r2.keypressSound && "default" in r2.keypressSound && (d2.keypressSound = { ...r2.keypressSound }, d2.keypressSound.default = oa(c2, d2.keypressSound.default), d2.keypressSound.delete = null !== (s2 = oa(c2, d2.keypressSound.delete)) && void 0 !== s2 ? s2 : r2.keypressSound.default, d2.keypressSound.return = null !== (l2 = oa(c2, d2.keypressSound.return)) && void 0 !== l2 ? l2 : r2.keypressSound.default, d2.keypressSound.spacebar = null !== (u2 = oa(c2, d2.keypressSound.spacebar)) && void 0 !== u2 ? u2 : r2.keypressSound.default);
        break;
      case "virtualKeyboardContainer":
        d2.virtualKeyboardContainer = r2.virtualKeyboardContainer;
        break;
      case "macros":
        d2.macros = D(r2.macros);
        break;
      default:
        e(r2[i3]) ? d2[i3] = [...r2[i3]] : "object" == typeof r2[i3] ? d2[i3] = { ...r2[i3] } : d2[i3] = r2[i3];
    }
  return d2;
}
function ua(t2, i2) {
  let n2;
  n2 = "string" == typeof i2 ? [i2] : void 0 === i2 ? Object.keys(t2) : i2;
  const r2 = {};
  for (const i3 of n2)
    e(t2[i3]) ? r2[i3] = [...t2[i3]] : t2[i3] instanceof HTMLElement ? r2[i3] = t2[i3] : null === t2[i3] ? r2[i3] = null : "object" == typeof t2[i3] ? r2[i3] = { ...t2[i3] } : r2[i3] = t2[i3];
  return "string" == typeof i2 ? r2[i2] : r2;
}
Er({ speak: (e5, i2, n2) => function(e6, i3, n3) {
  var r2, a2;
  n3 = null != n3 ? n3 : { withHighlighting: false };
  const { model: o2 } = e6, s2 = function(e7) {
    let t2 = null;
    switch (e7) {
      case "all":
      default:
        t2 = o2.root;
        break;
      case "selection":
        t2 = o2.getAtoms(o2.selection);
        break;
      case "left":
        t2 = o2.getAtoms(o2.offsetOf(o2.at(o2.position).leftSibling), o2.position);
        break;
      case "right":
        t2 = o2.getAtoms(o2.position, o2.offsetOf(o2.at(o2.position).rightSibling));
        break;
      case "group":
        t2 = o2.getAtoms(o2.getSiblingsRange(o2.position));
        break;
      case "parent": {
        const { parent: e8 } = o2.at(o2.position);
        t2 = e8 && "root" !== e8.type ? e8 : o2.root;
        break;
      }
    }
    return t2;
  }(i3);
  if (null === s2)
    return null === (a2 = (r2 = e6.options).speakHook) || void 0 === a2 || a2.call(r2, function(e7) {
      let t2 = "";
      switch (e7) {
        case "all":
        case "group":
        default:
          break;
        case "selection":
          t2 = "no selection";
          break;
        case "left":
          t2 = "at start";
          break;
        case "right":
          t2 = "at end";
          break;
        case "parent":
          t2 = "no parent";
      }
      return t2;
    }(i3), e6.options), false;
  const l2 = { ...e6.options };
  (n3.withHighlighting || "amazon" === l2.speechEngine) && (l2.textToSpeechMarkup = t() && window.sre && "sre" === l2.textToSpeechRules ? "ssml_step" : "ssml");
  const u2 = Vn(s2, l2);
  return t() && n3.withHighlighting ? (window.mathlive.readAloudMathField = e6, pr(e6, { forHighlighting: true }), e6.options.readAloudHook && e6.options.readAloudHook(e6.field, u2, e6.options)) : e6.options.speakHook && e6.options.speakHook(u2, l2), false;
}(e5, i2, n2) }, { target: "mathfield", category: "speech" });
var ca = '<span style="width: 21px; margin-top: 4px;"><svg style="width: 21px;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z"/></svg></span>';
function da() {
  var e5, i2, n2;
  return { readOnly: false, createHTML: (e6) => e6, fontsDirectory: "./fonts", soundsDirectory: "./sounds", defaultMode: "math", macros: C(), registers: {}, colorMap: Se, backgroundColorMap: Me, horizontalSpacingScale: 1, letterShapeStyle: on.locale.startsWith("fr") ? "french" : "tex", smartMode: false, smartFence: true, smartSuperscript: true, scriptDepth: [1 / 0, 1 / 0], removeExtraneousParentheses: true, mathModeSpace: "", decimalSeparator: ".", fractionNavigationOrder: "numerator-denominator", placeholderSymbol: "\u25A2", locale: on.locale, strings: on.strings, keybindings: Oi, inlineShortcuts: _i, inlineShortcutTimeout: 0, virtualKeyboardToggleGlyph: ca, virtualKeyboardMode: "auto", virtualKeyboards: "all", virtualKeyboardLayout: "auto", customVirtualKeyboardLayers: {}, customVirtualKeyboards: {}, virtualKeyboardTheme: t() && /android|cros/i.test(navigator.userAgent) ? "material" : "apple", keypressVibration: true, keypressSound: null, plonkSound: null, virtualKeyboardToolbar: "default", virtualKeyboardContainer: null !== (i2 = null === (e5 = globalThis.document) || void 0 === e5 ? void 0 : e5.body) && void 0 !== i2 ? i2 : null, useSharedVirtualKeyboard: false, sharedVirtualKeyboardTargetOrigin: null === (n2 = globalThis.window) || void 0 === n2 ? void 0 : n2.origin, originValidator: "same-origin", textToSpeechRules: "mathlive", textToSpeechMarkup: "", textToSpeechRulesOptions: {}, speechEngine: "local", speechEngineVoice: "Joanna", speechEngineRate: "100%", speakHook: ia, readAloudHook: aa, onInlineShortcut: () => "", onExport: kr, value: "" };
}
function ha(e5) {
  return "inline-math" === e5.defaultMode ? "math" : e5.defaultMode;
}
function ma(e5) {
  return !("kind" in e5) || "symbol" === e5.kind;
}
function pa(e5) {
  return !("kind" in e5) || "function" === e5.kind;
}
function fa(e5) {
  return "kind" in e5 && "matchfix" === e5.kind;
}
function ga(e5) {
  return "kind" in e5 && "infix" === e5.kind;
}
function ya(e5) {
  return "kind" in e5 && "prefix" === e5.kind;
}
function ba(e5) {
  return "kind" in e5 && "postfix" === e5.kind;
}
function va(e5) {
  return "kind" in e5 && "environment" === e5.kind;
}
var xa;
var ka;
var _a = 9e15;
var wa = "0123456789abcdef";
var Sa = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
var Ma = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
var Na = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -_a, maxE: _a, crypto: false };
var La = true;
var Aa = "[DecimalError] Invalid argument: ";
var Ca = "[object Decimal]";
var Ea = Math.floor;
var Da = Math.pow;
var Ta = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
var za = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
var qa = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
var Ia = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
var Fa = 1e7;
var Oa = Sa.length - 1;
var Pa = Ma.length - 1;
var Ba = { toStringTag: Ca };
function $a(e5) {
  var t2, i2, n2, r2 = e5.length - 1, a2 = "", o2 = e5[0];
  if (r2 > 0) {
    for (a2 += o2, t2 = 1; t2 < r2; t2++)
      (i2 = 7 - (n2 = e5[t2] + "").length) && (a2 += Xa(i2)), a2 += n2;
    (i2 = 7 - (n2 = (o2 = e5[t2]) + "").length) && (a2 += Xa(i2));
  } else if (0 === o2)
    return "0";
  for (; o2 % 10 == 0; )
    o2 /= 10;
  return a2 + o2;
}
function Va(e5, t2, i2) {
  if (e5 !== ~~e5 || e5 < t2 || e5 > i2)
    throw Error(Aa + e5);
}
function Ka(e5, t2, i2, n2) {
  var r2, a2, o2, s2;
  for (a2 = e5[0]; a2 >= 10; a2 /= 10)
    --t2;
  return --t2 < 0 ? (t2 += 7, r2 = 0) : (r2 = Math.ceil((t2 + 1) / 7), t2 %= 7), a2 = Da(10, 7 - t2), s2 = e5[r2] % a2 | 0, null == n2 ? t2 < 3 ? (0 == t2 ? s2 = s2 / 100 | 0 : 1 == t2 && (s2 = s2 / 10 | 0), o2 = i2 < 4 && 99999 == s2 || i2 > 3 && 49999 == s2 || 5e4 == s2 || 0 == s2) : o2 = (i2 < 4 && s2 + 1 == a2 || i2 > 3 && s2 + 1 == a2 / 2) && (e5[r2 + 1] / a2 / 100 | 0) == Da(10, t2 - 2) - 1 || (s2 == a2 / 2 || 0 == s2) && 0 == (e5[r2 + 1] / a2 / 100 | 0) : t2 < 4 ? (0 == t2 ? s2 = s2 / 1e3 | 0 : 1 == t2 ? s2 = s2 / 100 | 0 : 2 == t2 && (s2 = s2 / 10 | 0), o2 = (n2 || i2 < 4) && 9999 == s2 || !n2 && i2 > 3 && 4999 == s2) : o2 = ((n2 || i2 < 4) && s2 + 1 == a2 || !n2 && i2 > 3 && s2 + 1 == a2 / 2) && (e5[r2 + 1] / a2 / 1e3 | 0) == Da(10, t2 - 3) - 1, o2;
}
function Ra(e5, t2, i2) {
  for (var n2, r2, a2 = [0], o2 = 0, s2 = e5.length; o2 < s2; ) {
    for (r2 = a2.length; r2--; )
      a2[r2] *= t2;
    for (a2[0] += wa.indexOf(e5.charAt(o2++)), n2 = 0; n2 < a2.length; n2++)
      a2[n2] > i2 - 1 && (void 0 === a2[n2 + 1] && (a2[n2 + 1] = 0), a2[n2 + 1] += a2[n2] / i2 | 0, a2[n2] %= i2);
  }
  return a2.reverse();
}
Ba.absoluteValue = Ba.abs = function() {
  var e5 = new this.constructor(this);
  return e5.s < 0 && (e5.s = 1), Ha(e5);
}, Ba.ceil = function() {
  return Ha(new this.constructor(this), this.e + 1, 2);
}, Ba.clampedTo = Ba.clamp = function(e5, t2) {
  var i2 = this, n2 = i2.constructor;
  if (e5 = new n2(e5), t2 = new n2(t2), !e5.s || !t2.s)
    return new n2(NaN);
  if (e5.gt(t2))
    throw Error(Aa + t2);
  return i2.cmp(e5) < 0 ? e5 : i2.cmp(t2) > 0 ? t2 : new n2(i2);
}, Ba.comparedTo = Ba.cmp = function(e5) {
  var t2, i2, n2, r2, a2 = this, o2 = a2.d, s2 = (e5 = new a2.constructor(e5)).d, l2 = a2.s, u2 = e5.s;
  if (!o2 || !s2)
    return l2 && u2 ? l2 !== u2 ? l2 : o2 === s2 ? 0 : !o2 ^ l2 < 0 ? 1 : -1 : NaN;
  if (!o2[0] || !s2[0])
    return o2[0] ? l2 : s2[0] ? -u2 : 0;
  if (l2 !== u2)
    return l2;
  if (a2.e !== e5.e)
    return a2.e > e5.e ^ l2 < 0 ? 1 : -1;
  for (t2 = 0, i2 = (n2 = o2.length) < (r2 = s2.length) ? n2 : r2; t2 < i2; ++t2)
    if (o2[t2] !== s2[t2])
      return o2[t2] > s2[t2] ^ l2 < 0 ? 1 : -1;
  return n2 === r2 ? 0 : n2 > r2 ^ l2 < 0 ? 1 : -1;
}, Ba.cosine = Ba.cos = function() {
  var e5, t2, i2 = this, n2 = i2.constructor;
  return i2.d ? i2.d[0] ? (e5 = n2.precision, t2 = n2.rounding, n2.precision = e5 + Math.max(i2.e, i2.sd()) + 7, n2.rounding = 1, i2 = function(e6, t3) {
    var i3, n3, r2;
    if (t3.isZero())
      return t3;
    (n3 = t3.d.length) < 32 ? r2 = "" + 1 / oo(4, i3 = Math.ceil(n3 / 3)) : (i3 = 16, r2 = "2.3283064365386962890625e-10"), e6.precision += i3, t3 = ao(e6, 1, t3.times(r2), new e6(1));
    for (var a2 = i3; a2--; ) {
      var o2 = t3.times(t3);
      t3 = o2.times(o2).minus(o2).times(8).plus(1);
    }
    return e6.precision -= i3, t3;
  }(n2, so(n2, i2)), n2.precision = e5, n2.rounding = t2, Ha(2 == ka || 3 == ka ? i2.neg() : i2, e5, t2, true)) : new n2(1) : new n2(NaN);
}, Ba.cubeRoot = Ba.cbrt = function() {
  var e5, t2, i2, n2, r2, a2, o2, s2, l2, u2, c2 = this, d2 = c2.constructor;
  if (!c2.isFinite() || c2.isZero())
    return new d2(c2);
  for (La = false, (a2 = c2.s * Da(c2.s * c2, 1 / 3)) && Math.abs(a2) != 1 / 0 ? n2 = new d2(a2.toString()) : (i2 = $a(c2.d), (a2 = ((e5 = c2.e) - i2.length + 1) % 3) && (i2 += 1 == a2 || -2 == a2 ? "0" : "00"), a2 = Da(i2, 1 / 3), e5 = Ea((e5 + 1) / 3) - (e5 % 3 == (e5 < 0 ? -1 : 2)), (n2 = new d2(i2 = a2 == 1 / 0 ? "5e" + e5 : (i2 = a2.toExponential()).slice(0, i2.indexOf("e") + 1) + e5)).s = c2.s), o2 = (e5 = d2.precision) + 3; ; )
    if (u2 = (l2 = (s2 = n2).times(s2).times(s2)).plus(c2), n2 = ja(u2.plus(c2).times(s2), u2.plus(l2), o2 + 2, 1), $a(s2.d).slice(0, o2) === (i2 = $a(n2.d)).slice(0, o2)) {
      if ("9999" != (i2 = i2.slice(o2 - 3, o2 + 1)) && (r2 || "4999" != i2)) {
        +i2 && (+i2.slice(1) || "5" != i2.charAt(0)) || (Ha(n2, e5 + 1, 1), t2 = !n2.times(n2).times(n2).eq(c2));
        break;
      }
      if (!r2 && (Ha(s2, e5 + 1, 0), s2.times(s2).times(s2).eq(c2))) {
        n2 = s2;
        break;
      }
      o2 += 4, r2 = 1;
    }
  return La = true, Ha(n2, e5, d2.rounding, t2);
}, Ba.decimalPlaces = Ba.dp = function() {
  var e5, t2 = this.d, i2 = NaN;
  if (t2) {
    if (i2 = 7 * ((e5 = t2.length - 1) - Ea(this.e / 7)), e5 = t2[e5])
      for (; e5 % 10 == 0; e5 /= 10)
        i2--;
    i2 < 0 && (i2 = 0);
  }
  return i2;
}, Ba.dividedBy = Ba.div = function(e5) {
  return ja(this, new this.constructor(e5));
}, Ba.dividedToIntegerBy = Ba.divToInt = function(e5) {
  var t2 = this.constructor;
  return Ha(ja(this, new t2(e5), 0, 1, 1), t2.precision, t2.rounding);
}, Ba.equals = Ba.eq = function(e5) {
  return 0 === this.cmp(e5);
}, Ba.floor = function() {
  return Ha(new this.constructor(this), this.e + 1, 3);
}, Ba.greaterThan = Ba.gt = function(e5) {
  return this.cmp(e5) > 0;
}, Ba.greaterThanOrEqualTo = Ba.gte = function(e5) {
  var t2 = this.cmp(e5);
  return 1 == t2 || 0 === t2;
}, Ba.hyperbolicCosine = Ba.cosh = function() {
  var e5, t2, i2, n2, r2, a2 = this, o2 = a2.constructor, s2 = new o2(1);
  if (!a2.isFinite())
    return new o2(a2.s ? 1 / 0 : NaN);
  if (a2.isZero())
    return s2;
  i2 = o2.precision, n2 = o2.rounding, o2.precision = i2 + Math.max(a2.e, a2.sd()) + 4, o2.rounding = 1, (r2 = a2.d.length) < 32 ? t2 = "" + 1 / oo(4, e5 = Math.ceil(r2 / 3)) : (e5 = 16, t2 = "2.3283064365386962890625e-10"), a2 = ao(o2, 1, a2.times(t2), new o2(1), true);
  for (var l2, u2 = e5, c2 = new o2(8); u2--; )
    l2 = a2.times(a2), a2 = s2.minus(l2.times(c2.minus(l2.times(c2))));
  return Ha(a2, o2.precision = i2, o2.rounding = n2, true);
}, Ba.hyperbolicSine = Ba.sinh = function() {
  var e5, t2, i2, n2, r2 = this, a2 = r2.constructor;
  if (!r2.isFinite() || r2.isZero())
    return new a2(r2);
  if (t2 = a2.precision, i2 = a2.rounding, a2.precision = t2 + Math.max(r2.e, r2.sd()) + 4, a2.rounding = 1, (n2 = r2.d.length) < 3)
    r2 = ao(a2, 2, r2, r2, true);
  else {
    e5 = (e5 = 1.4 * Math.sqrt(n2)) > 16 ? 16 : 0 | e5, r2 = ao(a2, 2, r2 = r2.times(1 / oo(5, e5)), r2, true);
    for (var o2, s2 = new a2(5), l2 = new a2(16), u2 = new a2(20); e5--; )
      o2 = r2.times(r2), r2 = r2.times(s2.plus(o2.times(l2.times(o2).plus(u2))));
  }
  return a2.precision = t2, a2.rounding = i2, Ha(r2, t2, i2, true);
}, Ba.hyperbolicTangent = Ba.tanh = function() {
  var e5, t2, i2 = this, n2 = i2.constructor;
  return i2.isFinite() ? i2.isZero() ? new n2(i2) : (e5 = n2.precision, t2 = n2.rounding, n2.precision = e5 + 7, n2.rounding = 1, ja(i2.sinh(), i2.cosh(), n2.precision = e5, n2.rounding = t2)) : new n2(i2.s);
}, Ba.inverseCosine = Ba.acos = function() {
  var e5, t2 = this, i2 = t2.constructor, n2 = t2.abs().cmp(1), r2 = i2.precision, a2 = i2.rounding;
  return -1 !== n2 ? 0 === n2 ? t2.isNeg() ? Ua(i2, r2, a2) : new i2(0) : new i2(NaN) : t2.isZero() ? Ua(i2, r2 + 4, a2).times(0.5) : (i2.precision = r2 + 6, i2.rounding = 1, t2 = t2.asin(), e5 = Ua(i2, r2 + 4, a2).times(0.5), i2.precision = r2, i2.rounding = a2, e5.minus(t2));
}, Ba.inverseHyperbolicCosine = Ba.acosh = function() {
  var e5, t2, i2 = this, n2 = i2.constructor;
  return i2.lte(1) ? new n2(i2.eq(1) ? 0 : NaN) : i2.isFinite() ? (e5 = n2.precision, t2 = n2.rounding, n2.precision = e5 + Math.max(Math.abs(i2.e), i2.sd()) + 4, n2.rounding = 1, La = false, i2 = i2.times(i2).minus(1).sqrt().plus(i2), La = true, n2.precision = e5, n2.rounding = t2, i2.ln()) : new n2(i2);
}, Ba.inverseHyperbolicSine = Ba.asinh = function() {
  var e5, t2, i2 = this, n2 = i2.constructor;
  return !i2.isFinite() || i2.isZero() ? new n2(i2) : (e5 = n2.precision, t2 = n2.rounding, n2.precision = e5 + 2 * Math.max(Math.abs(i2.e), i2.sd()) + 6, n2.rounding = 1, La = false, i2 = i2.times(i2).plus(1).sqrt().plus(i2), La = true, n2.precision = e5, n2.rounding = t2, i2.ln());
}, Ba.inverseHyperbolicTangent = Ba.atanh = function() {
  var e5, t2, i2, n2, r2 = this, a2 = r2.constructor;
  return r2.isFinite() ? r2.e >= 0 ? new a2(r2.abs().eq(1) ? r2.s / 0 : r2.isZero() ? r2 : NaN) : (e5 = a2.precision, t2 = a2.rounding, n2 = r2.sd(), Math.max(n2, e5) < 2 * -r2.e - 1 ? Ha(new a2(r2), e5, t2, true) : (a2.precision = i2 = n2 - r2.e, r2 = ja(r2.plus(1), new a2(1).minus(r2), i2 + e5, 1), a2.precision = e5 + 4, a2.rounding = 1, r2 = r2.ln(), a2.precision = e5, a2.rounding = t2, r2.times(0.5))) : new a2(NaN);
}, Ba.inverseSine = Ba.asin = function() {
  var e5, t2, i2, n2, r2 = this, a2 = r2.constructor;
  return r2.isZero() ? new a2(r2) : (t2 = r2.abs().cmp(1), i2 = a2.precision, n2 = a2.rounding, -1 !== t2 ? 0 === t2 ? ((e5 = Ua(a2, i2 + 4, n2).times(0.5)).s = r2.s, e5) : new a2(NaN) : (a2.precision = i2 + 6, a2.rounding = 1, r2 = r2.div(new a2(1).minus(r2.times(r2)).sqrt().plus(1)).atan(), a2.precision = i2, a2.rounding = n2, r2.times(2)));
}, Ba.inverseTangent = Ba.atan = function() {
  var e5, t2, i2, n2, r2, a2, o2, s2, l2, u2 = this, c2 = u2.constructor, d2 = c2.precision, h2 = c2.rounding;
  if (u2.isFinite()) {
    if (u2.isZero())
      return new c2(u2);
    if (u2.abs().eq(1) && d2 + 4 <= Pa)
      return (o2 = Ua(c2, d2 + 4, h2).times(0.25)).s = u2.s, o2;
  } else {
    if (!u2.s)
      return new c2(NaN);
    if (d2 + 4 <= Pa)
      return (o2 = Ua(c2, d2 + 4, h2).times(0.5)).s = u2.s, o2;
  }
  for (c2.precision = s2 = d2 + 10, c2.rounding = 1, e5 = i2 = Math.min(28, s2 / 7 + 2 | 0); e5; --e5)
    u2 = u2.div(u2.times(u2).plus(1).sqrt().plus(1));
  for (La = false, t2 = Math.ceil(s2 / 7), n2 = 1, l2 = u2.times(u2), o2 = new c2(u2), r2 = u2; -1 !== e5; )
    if (r2 = r2.times(l2), a2 = o2.minus(r2.div(n2 += 2)), r2 = r2.times(l2), void 0 !== (o2 = a2.plus(r2.div(n2 += 2))).d[t2])
      for (e5 = t2; o2.d[e5] === a2.d[e5] && e5--; )
        ;
  return i2 && (o2 = o2.times(2 << i2 - 1)), La = true, Ha(o2, c2.precision = d2, c2.rounding = h2, true);
}, Ba.isFinite = function() {
  return !!this.d;
}, Ba.isInteger = Ba.isInt = function() {
  return !!this.d && Ea(this.e / 7) > this.d.length - 2;
}, Ba.isNaN = function() {
  return !this.s;
}, Ba.isNegative = Ba.isNeg = function() {
  return this.s < 0;
}, Ba.isPositive = Ba.isPos = function() {
  return this.s > 0;
}, Ba.isZero = function() {
  return !!this.d && 0 === this.d[0];
}, Ba.lessThan = Ba.lt = function(e5) {
  return this.cmp(e5) < 0;
}, Ba.lessThanOrEqualTo = Ba.lte = function(e5) {
  return this.cmp(e5) < 1;
}, Ba.logarithm = Ba.log = function(e5) {
  var t2, i2, n2, r2, a2, o2, s2, l2, u2 = this, c2 = u2.constructor, d2 = c2.precision, h2 = c2.rounding;
  if (null == e5)
    e5 = new c2(10), t2 = true;
  else {
    if (i2 = (e5 = new c2(e5)).d, e5.s < 0 || !i2 || !i2[0] || e5.eq(1))
      return new c2(NaN);
    t2 = e5.eq(10);
  }
  if (i2 = u2.d, u2.s < 0 || !i2 || !i2[0] || u2.eq(1))
    return new c2(i2 && !i2[0] ? -1 / 0 : 1 != u2.s ? NaN : i2 ? 0 : 1 / 0);
  if (t2)
    if (i2.length > 1)
      a2 = true;
    else {
      for (r2 = i2[0]; r2 % 10 == 0; )
        r2 /= 10;
      a2 = 1 !== r2;
    }
  if (La = false, o2 = io(u2, s2 = d2 + 5), n2 = t2 ? Ga(c2, s2 + 10) : io(e5, s2), Ka((l2 = ja(o2, n2, s2, 1)).d, r2 = d2, h2))
    do {
      if (o2 = io(u2, s2 += 10), n2 = t2 ? Ga(c2, s2 + 10) : io(e5, s2), l2 = ja(o2, n2, s2, 1), !a2) {
        +$a(l2.d).slice(r2 + 1, r2 + 15) + 1 == 1e14 && (l2 = Ha(l2, d2 + 1, 0));
        break;
      }
    } while (Ka(l2.d, r2 += 10, h2));
  return La = true, Ha(l2, d2, h2);
}, Ba.minus = Ba.sub = function(e5) {
  var t2, i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2 = this, p2 = m2.constructor;
  if (e5 = new p2(e5), !m2.d || !e5.d)
    return m2.s && e5.s ? m2.d ? e5.s = -e5.s : e5 = new p2(e5.d || m2.s !== e5.s ? m2 : NaN) : e5 = new p2(NaN), e5;
  if (m2.s != e5.s)
    return e5.s = -e5.s, m2.plus(e5);
  if (u2 = m2.d, h2 = e5.d, s2 = p2.precision, l2 = p2.rounding, !u2[0] || !h2[0]) {
    if (h2[0])
      e5.s = -e5.s;
    else {
      if (!u2[0])
        return new p2(3 === l2 ? -0 : 0);
      e5 = new p2(m2);
    }
    return La ? Ha(e5, s2, l2) : e5;
  }
  if (i2 = Ea(e5.e / 7), c2 = Ea(m2.e / 7), u2 = u2.slice(), a2 = c2 - i2) {
    for ((d2 = a2 < 0) ? (t2 = u2, a2 = -a2, o2 = h2.length) : (t2 = h2, i2 = c2, o2 = u2.length), a2 > (n2 = Math.max(Math.ceil(s2 / 7), o2) + 2) && (a2 = n2, t2.length = 1), t2.reverse(), n2 = a2; n2--; )
      t2.push(0);
    t2.reverse();
  } else {
    for ((d2 = (n2 = u2.length) < (o2 = h2.length)) && (o2 = n2), n2 = 0; n2 < o2; n2++)
      if (u2[n2] != h2[n2]) {
        d2 = u2[n2] < h2[n2];
        break;
      }
    a2 = 0;
  }
  for (d2 && (t2 = u2, u2 = h2, h2 = t2, e5.s = -e5.s), o2 = u2.length, n2 = h2.length - o2; n2 > 0; --n2)
    u2[o2++] = 0;
  for (n2 = h2.length; n2 > a2; ) {
    if (u2[--n2] < h2[n2]) {
      for (r2 = n2; r2 && 0 === u2[--r2]; )
        u2[r2] = Fa - 1;
      --u2[r2], u2[n2] += Fa;
    }
    u2[n2] -= h2[n2];
  }
  for (; 0 === u2[--o2]; )
    u2.pop();
  for (; 0 === u2[0]; u2.shift())
    --i2;
  return u2[0] ? (e5.d = u2, e5.e = Za(u2, i2), La ? Ha(e5, s2, l2) : e5) : new p2(3 === l2 ? -0 : 0);
}, Ba.modulo = Ba.mod = function(e5) {
  var t2, i2 = this, n2 = i2.constructor;
  return e5 = new n2(e5), !i2.d || !e5.s || e5.d && !e5.d[0] ? new n2(NaN) : !e5.d || i2.d && !i2.d[0] ? Ha(new n2(i2), n2.precision, n2.rounding) : (La = false, 9 == n2.modulo ? (t2 = ja(i2, e5.abs(), 0, 3, 1)).s *= e5.s : t2 = ja(i2, e5, 0, n2.modulo, 1), t2 = t2.times(e5), La = true, i2.minus(t2));
}, Ba.naturalExponential = Ba.exp = function() {
  return to(this);
}, Ba.naturalLogarithm = Ba.ln = function() {
  return io(this);
}, Ba.negated = Ba.neg = function() {
  var e5 = new this.constructor(this);
  return e5.s = -e5.s, Ha(e5);
}, Ba.plus = Ba.add = function(e5) {
  var t2, i2, n2, r2, a2, o2, s2, l2, u2, c2, d2 = this, h2 = d2.constructor;
  if (e5 = new h2(e5), !d2.d || !e5.d)
    return d2.s && e5.s ? d2.d || (e5 = new h2(e5.d || d2.s === e5.s ? d2 : NaN)) : e5 = new h2(NaN), e5;
  if (d2.s != e5.s)
    return e5.s = -e5.s, d2.minus(e5);
  if (u2 = d2.d, c2 = e5.d, s2 = h2.precision, l2 = h2.rounding, !u2[0] || !c2[0])
    return c2[0] || (e5 = new h2(d2)), La ? Ha(e5, s2, l2) : e5;
  if (a2 = Ea(d2.e / 7), n2 = Ea(e5.e / 7), u2 = u2.slice(), r2 = a2 - n2) {
    for (r2 < 0 ? (i2 = u2, r2 = -r2, o2 = c2.length) : (i2 = c2, n2 = a2, o2 = u2.length), r2 > (o2 = (a2 = Math.ceil(s2 / 7)) > o2 ? a2 + 1 : o2 + 1) && (r2 = o2, i2.length = 1), i2.reverse(); r2--; )
      i2.push(0);
    i2.reverse();
  }
  for ((o2 = u2.length) - (r2 = c2.length) < 0 && (r2 = o2, i2 = c2, c2 = u2, u2 = i2), t2 = 0; r2; )
    t2 = (u2[--r2] = u2[r2] + c2[r2] + t2) / Fa | 0, u2[r2] %= Fa;
  for (t2 && (u2.unshift(t2), ++n2), o2 = u2.length; 0 == u2[--o2]; )
    u2.pop();
  return e5.d = u2, e5.e = Za(u2, n2), La ? Ha(e5, s2, l2) : e5;
}, Ba.precision = Ba.sd = function(e5) {
  var t2, i2 = this;
  if (void 0 !== e5 && e5 !== !!e5 && 1 !== e5 && 0 !== e5)
    throw Error(Aa + e5);
  return i2.d ? (t2 = Ja(i2.d), e5 && i2.e + 1 > t2 && (t2 = i2.e + 1)) : t2 = NaN, t2;
}, Ba.round = function() {
  var e5 = this, t2 = e5.constructor;
  return Ha(new t2(e5), e5.e + 1, t2.rounding);
}, Ba.sine = Ba.sin = function() {
  var e5, t2, i2 = this, n2 = i2.constructor;
  return i2.isFinite() ? i2.isZero() ? new n2(i2) : (e5 = n2.precision, t2 = n2.rounding, n2.precision = e5 + Math.max(i2.e, i2.sd()) + 7, n2.rounding = 1, i2 = function(e6, t3) {
    var i3, n3 = t3.d.length;
    if (n3 < 3)
      return t3.isZero() ? t3 : ao(e6, 2, t3, t3);
    i3 = (i3 = 1.4 * Math.sqrt(n3)) > 16 ? 16 : 0 | i3, t3 = ao(e6, 2, t3 = t3.times(1 / oo(5, i3)), t3);
    for (var r2, a2 = new e6(5), o2 = new e6(16), s2 = new e6(20); i3--; )
      r2 = t3.times(t3), t3 = t3.times(a2.plus(r2.times(o2.times(r2).minus(s2))));
    return t3;
  }(n2, so(n2, i2)), n2.precision = e5, n2.rounding = t2, Ha(ka > 2 ? i2.neg() : i2, e5, t2, true)) : new n2(NaN);
}, Ba.squareRoot = Ba.sqrt = function() {
  var e5, t2, i2, n2, r2, a2, o2 = this, s2 = o2.d, l2 = o2.e, u2 = o2.s, c2 = o2.constructor;
  if (1 !== u2 || !s2 || !s2[0])
    return new c2(!u2 || u2 < 0 && (!s2 || s2[0]) ? NaN : s2 ? o2 : 1 / 0);
  for (La = false, 0 == (u2 = Math.sqrt(+o2)) || u2 == 1 / 0 ? (((t2 = $a(s2)).length + l2) % 2 == 0 && (t2 += "0"), u2 = Math.sqrt(t2), l2 = Ea((l2 + 1) / 2) - (l2 < 0 || l2 % 2), n2 = new c2(t2 = u2 == 1 / 0 ? "5e" + l2 : (t2 = u2.toExponential()).slice(0, t2.indexOf("e") + 1) + l2)) : n2 = new c2(u2.toString()), i2 = (l2 = c2.precision) + 3; ; )
    if (n2 = (a2 = n2).plus(ja(o2, a2, i2 + 2, 1)).times(0.5), $a(a2.d).slice(0, i2) === (t2 = $a(n2.d)).slice(0, i2)) {
      if ("9999" != (t2 = t2.slice(i2 - 3, i2 + 1)) && (r2 || "4999" != t2)) {
        +t2 && (+t2.slice(1) || "5" != t2.charAt(0)) || (Ha(n2, l2 + 1, 1), e5 = !n2.times(n2).eq(o2));
        break;
      }
      if (!r2 && (Ha(a2, l2 + 1, 0), a2.times(a2).eq(o2))) {
        n2 = a2;
        break;
      }
      i2 += 4, r2 = 1;
    }
  return La = true, Ha(n2, l2, c2.rounding, e5);
}, Ba.tangent = Ba.tan = function() {
  var e5, t2, i2 = this, n2 = i2.constructor;
  return i2.isFinite() ? i2.isZero() ? new n2(i2) : (e5 = n2.precision, t2 = n2.rounding, n2.precision = e5 + 10, n2.rounding = 1, (i2 = i2.sin()).s = 1, i2 = ja(i2, new n2(1).minus(i2.times(i2)).sqrt(), e5 + 10, 0), n2.precision = e5, n2.rounding = t2, Ha(2 == ka || 4 == ka ? i2.neg() : i2, e5, t2, true)) : new n2(NaN);
}, Ba.times = Ba.mul = function(e5) {
  var t2, i2, n2, r2, a2, o2, s2, l2, u2, c2 = this, d2 = c2.constructor, h2 = c2.d, m2 = (e5 = new d2(e5)).d;
  if (e5.s *= c2.s, !(h2 && h2[0] && m2 && m2[0]))
    return new d2(!e5.s || h2 && !h2[0] && !m2 || m2 && !m2[0] && !h2 ? NaN : h2 && m2 ? 0 * e5.s : e5.s / 0);
  for (i2 = Ea(c2.e / 7) + Ea(e5.e / 7), (l2 = h2.length) < (u2 = m2.length) && (a2 = h2, h2 = m2, m2 = a2, o2 = l2, l2 = u2, u2 = o2), a2 = [], n2 = o2 = l2 + u2; n2--; )
    a2.push(0);
  for (n2 = u2; --n2 >= 0; ) {
    for (t2 = 0, r2 = l2 + n2; r2 > n2; )
      s2 = a2[r2] + m2[n2] * h2[r2 - n2 - 1] + t2, a2[r2--] = s2 % Fa | 0, t2 = s2 / Fa | 0;
    a2[r2] = (a2[r2] + t2) % Fa | 0;
  }
  for (; !a2[--o2]; )
    a2.pop();
  return t2 ? ++i2 : a2.shift(), e5.d = a2, e5.e = Za(a2, i2), La ? Ha(e5, d2.precision, d2.rounding) : e5;
}, Ba.toBinary = function(e5, t2) {
  return lo(this, 2, e5, t2);
}, Ba.toDecimalPlaces = Ba.toDP = function(e5, t2) {
  var i2 = this, n2 = i2.constructor;
  return i2 = new n2(i2), void 0 === e5 ? i2 : (Va(e5, 0, 1e9), void 0 === t2 ? t2 = n2.rounding : Va(t2, 0, 8), Ha(i2, e5 + i2.e + 1, t2));
}, Ba.toExponential = function(e5, t2) {
  var i2, n2 = this, r2 = n2.constructor;
  return void 0 === e5 ? i2 = Wa(n2, true) : (Va(e5, 0, 1e9), void 0 === t2 ? t2 = r2.rounding : Va(t2, 0, 8), i2 = Wa(n2 = Ha(new r2(n2), e5 + 1, t2), true, e5 + 1)), n2.isNeg() && !n2.isZero() ? "-" + i2 : i2;
}, Ba.toFixed = function(e5, t2) {
  var i2, n2, r2 = this, a2 = r2.constructor;
  return void 0 === e5 ? i2 = Wa(r2) : (Va(e5, 0, 1e9), void 0 === t2 ? t2 = a2.rounding : Va(t2, 0, 8), i2 = Wa(n2 = Ha(new a2(r2), e5 + r2.e + 1, t2), false, e5 + n2.e + 1)), r2.isNeg() && !r2.isZero() ? "-" + i2 : i2;
}, Ba.toFraction = function(e5) {
  var t2, i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2 = this, p2 = m2.d, f2 = m2.constructor;
  if (!p2)
    return new f2(m2);
  if (u2 = i2 = new f2(1), n2 = l2 = new f2(0), o2 = (a2 = (t2 = new f2(n2)).e = Ja(p2) - m2.e - 1) % 7, t2.d[0] = Da(10, o2 < 0 ? 7 + o2 : o2), null == e5)
    e5 = a2 > 0 ? t2 : u2;
  else {
    if (!(s2 = new f2(e5)).isInt() || s2.lt(u2))
      throw Error(Aa + s2);
    e5 = s2.gt(t2) ? a2 > 0 ? t2 : u2 : s2;
  }
  for (La = false, s2 = new f2($a(p2)), c2 = f2.precision, f2.precision = a2 = 7 * p2.length * 2; d2 = ja(s2, t2, 0, 1, 1), 1 != (r2 = i2.plus(d2.times(n2))).cmp(e5); )
    i2 = n2, n2 = r2, r2 = u2, u2 = l2.plus(d2.times(r2)), l2 = r2, r2 = t2, t2 = s2.minus(d2.times(r2)), s2 = r2;
  return r2 = ja(e5.minus(i2), n2, 0, 1, 1), l2 = l2.plus(r2.times(u2)), i2 = i2.plus(r2.times(n2)), l2.s = u2.s = m2.s, h2 = ja(u2, n2, a2, 1).minus(m2).abs().cmp(ja(l2, i2, a2, 1).minus(m2).abs()) < 1 ? [u2, n2] : [l2, i2], f2.precision = c2, La = true, h2;
}, Ba.toHexadecimal = Ba.toHex = function(e5, t2) {
  return lo(this, 16, e5, t2);
}, Ba.toNearest = function(e5, t2) {
  var i2 = this, n2 = i2.constructor;
  if (i2 = new n2(i2), null == e5) {
    if (!i2.d)
      return i2;
    e5 = new n2(1), t2 = n2.rounding;
  } else {
    if (e5 = new n2(e5), void 0 === t2 ? t2 = n2.rounding : Va(t2, 0, 8), !i2.d)
      return e5.s ? i2 : e5;
    if (!e5.d)
      return e5.s && (e5.s = i2.s), e5;
  }
  return e5.d[0] ? (La = false, i2 = ja(i2, e5, 0, t2, 1).times(e5), La = true, Ha(i2)) : (e5.s = i2.s, i2 = e5), i2;
}, Ba.toNumber = function() {
  return +this;
}, Ba.toOctal = function(e5, t2) {
  return lo(this, 8, e5, t2);
}, Ba.toPower = Ba.pow = function(e5) {
  var t2, i2, n2, r2, a2, o2, s2 = this, l2 = s2.constructor, u2 = +(e5 = new l2(e5));
  if (!(s2.d && e5.d && s2.d[0] && e5.d[0]))
    return new l2(Da(+s2, u2));
  if ((s2 = new l2(s2)).eq(1))
    return s2;
  if (n2 = l2.precision, a2 = l2.rounding, e5.eq(1))
    return Ha(s2, n2, a2);
  if ((t2 = Ea(e5.e / 7)) >= e5.d.length - 1 && (i2 = u2 < 0 ? -u2 : u2) <= 9007199254740991)
    return r2 = Ya(l2, s2, i2, n2), e5.s < 0 ? new l2(1).div(r2) : Ha(r2, n2, a2);
  if ((o2 = s2.s) < 0) {
    if (t2 < e5.d.length - 1)
      return new l2(NaN);
    if (0 == (1 & e5.d[t2]) && (o2 = 1), 0 == s2.e && 1 == s2.d[0] && 1 == s2.d.length)
      return s2.s = o2, s2;
  }
  return (t2 = 0 != (i2 = Da(+s2, u2)) && isFinite(i2) ? new l2(i2 + "").e : Ea(u2 * (Math.log("0." + $a(s2.d)) / Math.LN10 + s2.e + 1))) > l2.maxE + 1 || t2 < l2.minE - 1 ? new l2(t2 > 0 ? o2 / 0 : 0) : (La = false, l2.rounding = s2.s = 1, i2 = Math.min(12, (t2 + "").length), (r2 = to(e5.times(io(s2, n2 + i2)), n2)).d && Ka((r2 = Ha(r2, n2 + 5, 1)).d, n2, a2) && (t2 = n2 + 10, +$a((r2 = Ha(to(e5.times(io(s2, t2 + i2)), t2), t2 + 5, 1)).d).slice(n2 + 1, n2 + 15) + 1 == 1e14 && (r2 = Ha(r2, n2 + 1, 0))), r2.s = o2, La = true, l2.rounding = a2, Ha(r2, n2, a2));
}, Ba.toPrecision = function(e5, t2) {
  var i2, n2 = this, r2 = n2.constructor;
  return void 0 === e5 ? i2 = Wa(n2, n2.e <= r2.toExpNeg || n2.e >= r2.toExpPos) : (Va(e5, 1, 1e9), void 0 === t2 ? t2 = r2.rounding : Va(t2, 0, 8), i2 = Wa(n2 = Ha(new r2(n2), e5, t2), e5 <= n2.e || n2.e <= r2.toExpNeg, e5)), n2.isNeg() && !n2.isZero() ? "-" + i2 : i2;
}, Ba.toSignificantDigits = Ba.toSD = function(e5, t2) {
  var i2 = this.constructor;
  return void 0 === e5 ? (e5 = i2.precision, t2 = i2.rounding) : (Va(e5, 1, 1e9), void 0 === t2 ? t2 = i2.rounding : Va(t2, 0, 8)), Ha(new i2(this), e5, t2);
}, Ba.toString = function() {
  var e5 = this, t2 = e5.constructor, i2 = Wa(e5, e5.e <= t2.toExpNeg || e5.e >= t2.toExpPos);
  return e5.isNeg() && !e5.isZero() ? "-" + i2 : i2;
}, Ba.truncated = Ba.trunc = function() {
  return Ha(new this.constructor(this), this.e + 1, 1);
}, Ba.valueOf = Ba.toJSON = function() {
  var e5 = this, t2 = e5.constructor, i2 = Wa(e5, e5.e <= t2.toExpNeg || e5.e >= t2.toExpPos);
  return e5.isNeg() ? "-" + i2 : i2;
};
var ja = function() {
  function e5(e6, t3, i3) {
    var n2, r2 = 0, a2 = e6.length;
    for (e6 = e6.slice(); a2--; )
      n2 = e6[a2] * t3 + r2, e6[a2] = n2 % i3 | 0, r2 = n2 / i3 | 0;
    return r2 && e6.unshift(r2), e6;
  }
  function t2(e6, t3, i3, n2) {
    var r2, a2;
    if (i3 != n2)
      a2 = i3 > n2 ? 1 : -1;
    else
      for (r2 = a2 = 0; r2 < i3; r2++)
        if (e6[r2] != t3[r2]) {
          a2 = e6[r2] > t3[r2] ? 1 : -1;
          break;
        }
    return a2;
  }
  function i2(e6, t3, i3, n2) {
    for (var r2 = 0; i3--; )
      e6[i3] -= r2, r2 = e6[i3] < t3[i3] ? 1 : 0, e6[i3] = r2 * n2 + e6[i3] - t3[i3];
    for (; !e6[0] && e6.length > 1; )
      e6.shift();
  }
  return function(n2, r2, a2, o2, s2, l2) {
    var u2, c2, d2, h2, m2, p2, f2, g2, y2, b2, v2, x2, k2, _2, w2, S2, M2, N2, L2, A2, C2 = n2.constructor, E2 = n2.s == r2.s ? 1 : -1, D2 = n2.d, T2 = r2.d;
    if (!(D2 && D2[0] && T2 && T2[0]))
      return new C2(n2.s && r2.s && (D2 ? !T2 || D2[0] != T2[0] : T2) ? D2 && 0 == D2[0] || !T2 ? 0 * E2 : E2 / 0 : NaN);
    for (l2 ? (m2 = 1, c2 = n2.e - r2.e) : (l2 = Fa, m2 = 7, c2 = Ea(n2.e / m2) - Ea(r2.e / m2)), L2 = T2.length, M2 = D2.length, b2 = (y2 = new C2(E2)).d = [], d2 = 0; T2[d2] == (D2[d2] || 0); d2++)
      ;
    if (T2[d2] > (D2[d2] || 0) && c2--, null == a2 ? (_2 = a2 = C2.precision, o2 = C2.rounding) : _2 = s2 ? a2 + (n2.e - r2.e) + 1 : a2, _2 < 0)
      b2.push(1), p2 = true;
    else {
      if (_2 = _2 / m2 + 2 | 0, d2 = 0, 1 == L2) {
        for (h2 = 0, T2 = T2[0], _2++; (d2 < M2 || h2) && _2--; d2++)
          w2 = h2 * l2 + (D2[d2] || 0), b2[d2] = w2 / T2 | 0, h2 = w2 % T2 | 0;
        p2 = h2 || d2 < M2;
      } else {
        for ((h2 = l2 / (T2[0] + 1) | 0) > 1 && (T2 = e5(T2, h2, l2), D2 = e5(D2, h2, l2), L2 = T2.length, M2 = D2.length), S2 = L2, x2 = (v2 = D2.slice(0, L2)).length; x2 < L2; )
          v2[x2++] = 0;
        (A2 = T2.slice()).unshift(0), N2 = T2[0], T2[1] >= l2 / 2 && ++N2;
        do {
          h2 = 0, (u2 = t2(T2, v2, L2, x2)) < 0 ? (k2 = v2[0], L2 != x2 && (k2 = k2 * l2 + (v2[1] || 0)), (h2 = k2 / N2 | 0) > 1 ? (h2 >= l2 && (h2 = l2 - 1), 1 == (u2 = t2(f2 = e5(T2, h2, l2), v2, g2 = f2.length, x2 = v2.length)) && (h2--, i2(f2, L2 < g2 ? A2 : T2, g2, l2))) : (0 == h2 && (u2 = h2 = 1), f2 = T2.slice()), (g2 = f2.length) < x2 && f2.unshift(0), i2(v2, f2, x2, l2), -1 == u2 && (u2 = t2(T2, v2, L2, x2 = v2.length)) < 1 && (h2++, i2(v2, L2 < x2 ? A2 : T2, x2, l2)), x2 = v2.length) : 0 === u2 && (h2++, v2 = [0]), b2[d2++] = h2, u2 && v2[0] ? v2[x2++] = D2[S2] || 0 : (v2 = [D2[S2]], x2 = 1);
        } while ((S2++ < M2 || void 0 !== v2[0]) && _2--);
        p2 = void 0 !== v2[0];
      }
      b2[0] || b2.shift();
    }
    if (1 == m2)
      y2.e = c2, xa = p2;
    else {
      for (d2 = 1, h2 = b2[0]; h2 >= 10; h2 /= 10)
        d2++;
      y2.e = d2 + c2 * m2 - 1, Ha(y2, s2 ? a2 + y2.e + 1 : a2, o2, p2);
    }
    return y2;
  };
}();
function Ha(e5, t2, i2, n2) {
  var r2, a2, o2, s2, l2, u2, c2, d2, h2, m2 = e5.constructor;
  e:
    if (null != t2) {
      if (!(d2 = e5.d))
        return e5;
      for (r2 = 1, s2 = d2[0]; s2 >= 10; s2 /= 10)
        r2++;
      if ((a2 = t2 - r2) < 0)
        a2 += 7, o2 = t2, l2 = (c2 = d2[h2 = 0]) / Da(10, r2 - o2 - 1) % 10 | 0;
      else if ((h2 = Math.ceil((a2 + 1) / 7)) >= (s2 = d2.length)) {
        if (!n2)
          break e;
        for (; s2++ <= h2; )
          d2.push(0);
        c2 = l2 = 0, r2 = 1, o2 = (a2 %= 7) - 7 + 1;
      } else {
        for (c2 = s2 = d2[h2], r2 = 1; s2 >= 10; s2 /= 10)
          r2++;
        l2 = (o2 = (a2 %= 7) - 7 + r2) < 0 ? 0 : c2 / Da(10, r2 - o2 - 1) % 10 | 0;
      }
      if (n2 = n2 || t2 < 0 || void 0 !== d2[h2 + 1] || (o2 < 0 ? c2 : c2 % Da(10, r2 - o2 - 1)), u2 = i2 < 4 ? (l2 || n2) && (0 == i2 || i2 == (e5.s < 0 ? 3 : 2)) : l2 > 5 || 5 == l2 && (4 == i2 || n2 || 6 == i2 && (a2 > 0 ? o2 > 0 ? c2 / Da(10, r2 - o2) : 0 : d2[h2 - 1]) % 10 & 1 || i2 == (e5.s < 0 ? 8 : 7)), t2 < 1 || !d2[0])
        return d2.length = 0, u2 ? (t2 -= e5.e + 1, d2[0] = Da(10, (7 - t2 % 7) % 7), e5.e = -t2 || 0) : d2[0] = e5.e = 0, e5;
      if (0 == a2 ? (d2.length = h2, s2 = 1, h2--) : (d2.length = h2 + 1, s2 = Da(10, 7 - a2), d2[h2] = o2 > 0 ? (c2 / Da(10, r2 - o2) % Da(10, o2) | 0) * s2 : 0), u2)
        for (; ; ) {
          if (0 == h2) {
            for (a2 = 1, o2 = d2[0]; o2 >= 10; o2 /= 10)
              a2++;
            for (o2 = d2[0] += s2, s2 = 1; o2 >= 10; o2 /= 10)
              s2++;
            a2 != s2 && (e5.e++, d2[0] == Fa && (d2[0] = 1));
            break;
          }
          if (d2[h2] += s2, d2[h2] != Fa)
            break;
          d2[h2--] = 0, s2 = 1;
        }
      for (a2 = d2.length; 0 === d2[--a2]; )
        d2.pop();
    }
  return La && (e5.e > m2.maxE ? (e5.d = null, e5.e = NaN) : e5.e < m2.minE && (e5.e = 0, e5.d = [0])), e5;
}
function Wa(e5, t2, i2) {
  if (!e5.isFinite())
    return no(e5);
  var n2, r2 = e5.e, a2 = $a(e5.d), o2 = a2.length;
  return t2 ? (i2 && (n2 = i2 - o2) > 0 ? a2 = a2.charAt(0) + "." + a2.slice(1) + Xa(n2) : o2 > 1 && (a2 = a2.charAt(0) + "." + a2.slice(1)), a2 = a2 + (e5.e < 0 ? "e" : "e+") + e5.e) : r2 < 0 ? (a2 = "0." + Xa(-r2 - 1) + a2, i2 && (n2 = i2 - o2) > 0 && (a2 += Xa(n2))) : r2 >= o2 ? (a2 += Xa(r2 + 1 - o2), i2 && (n2 = i2 - r2 - 1) > 0 && (a2 = a2 + "." + Xa(n2))) : ((n2 = r2 + 1) < o2 && (a2 = a2.slice(0, n2) + "." + a2.slice(n2)), i2 && (n2 = i2 - o2) > 0 && (r2 + 1 === o2 && (a2 += "."), a2 += Xa(n2))), a2;
}
function Za(e5, t2) {
  var i2 = e5[0];
  for (t2 *= 7; i2 >= 10; i2 /= 10)
    t2++;
  return t2;
}
function Ga(e5, t2, i2) {
  if (t2 > Oa)
    throw La = true, i2 && (e5.precision = i2), Error("[DecimalError] Precision limit exceeded");
  return Ha(new e5(Sa), t2, 1, true);
}
function Ua(e5, t2, i2) {
  if (t2 > Pa)
    throw Error("[DecimalError] Precision limit exceeded");
  return Ha(new e5(Ma), t2, i2, true);
}
function Ja(e5) {
  var t2 = e5.length - 1, i2 = 7 * t2 + 1;
  if (t2 = e5[t2]) {
    for (; t2 % 10 == 0; t2 /= 10)
      i2--;
    for (t2 = e5[0]; t2 >= 10; t2 /= 10)
      i2++;
  }
  return i2;
}
function Xa(e5) {
  for (var t2 = ""; e5--; )
    t2 += "0";
  return t2;
}
function Ya(e5, t2, i2, n2) {
  var r2, a2 = new e5(1), o2 = Math.ceil(n2 / 7 + 4);
  for (La = false; ; ) {
    if (i2 % 2 && uo((a2 = a2.times(t2)).d, o2) && (r2 = true), 0 === (i2 = Ea(i2 / 2))) {
      i2 = a2.d.length - 1, r2 && 0 === a2.d[i2] && ++a2.d[i2];
      break;
    }
    uo((t2 = t2.times(t2)).d, o2);
  }
  return La = true, a2;
}
function Qa(e5) {
  return 1 & e5.d[e5.d.length - 1];
}
function eo(e5, t2, i2) {
  for (var n2, r2 = new e5(t2[0]), a2 = 0; ++a2 < t2.length; ) {
    if (!(n2 = new e5(t2[a2])).s) {
      r2 = n2;
      break;
    }
    r2[i2](n2) && (r2 = n2);
  }
  return r2;
}
function to(e5, t2) {
  var i2, n2, r2, a2, o2, s2, l2, u2 = 0, c2 = 0, d2 = 0, h2 = e5.constructor, m2 = h2.rounding, p2 = h2.precision;
  if (!e5.d || !e5.d[0] || e5.e > 17)
    return new h2(e5.d ? e5.d[0] ? e5.s < 0 ? 0 : 1 / 0 : 1 : e5.s ? e5.s < 0 ? 0 : e5 : NaN);
  for (null == t2 ? (La = false, l2 = p2) : l2 = t2, s2 = new h2(0.03125); e5.e > -2; )
    e5 = e5.times(s2), d2 += 5;
  for (l2 += n2 = Math.log(Da(2, d2)) / Math.LN10 * 2 + 5 | 0, i2 = a2 = o2 = new h2(1), h2.precision = l2; ; ) {
    if (a2 = Ha(a2.times(e5), l2, 1), i2 = i2.times(++c2), $a((s2 = o2.plus(ja(a2, i2, l2, 1))).d).slice(0, l2) === $a(o2.d).slice(0, l2)) {
      for (r2 = d2; r2--; )
        o2 = Ha(o2.times(o2), l2, 1);
      if (null != t2)
        return h2.precision = p2, o2;
      if (!(u2 < 3 && Ka(o2.d, l2 - n2, m2, u2)))
        return Ha(o2, h2.precision = p2, m2, La = true);
      h2.precision = l2 += 10, i2 = a2 = s2 = new h2(1), c2 = 0, u2++;
    }
    o2 = s2;
  }
}
function io(e5, t2) {
  var i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2 = 1, p2 = e5, f2 = p2.d, g2 = p2.constructor, y2 = g2.rounding, b2 = g2.precision;
  if (p2.s < 0 || !f2 || !f2[0] || !p2.e && 1 == f2[0] && 1 == f2.length)
    return new g2(f2 && !f2[0] ? -1 / 0 : 1 != p2.s ? NaN : f2 ? 0 : p2);
  if (null == t2 ? (La = false, c2 = b2) : c2 = t2, g2.precision = c2 += 10, n2 = (i2 = $a(f2)).charAt(0), !(Math.abs(a2 = p2.e) < 15e14))
    return u2 = Ga(g2, c2 + 2, b2).times(a2 + ""), p2 = io(new g2(n2 + "." + i2.slice(1)), c2 - 10).plus(u2), g2.precision = b2, null == t2 ? Ha(p2, b2, y2, La = true) : p2;
  for (; n2 < 7 && 1 != n2 || 1 == n2 && i2.charAt(1) > 3; )
    n2 = (i2 = $a((p2 = p2.times(e5)).d)).charAt(0), m2++;
  for (a2 = p2.e, n2 > 1 ? (p2 = new g2("0." + i2), a2++) : p2 = new g2(n2 + "." + i2.slice(1)), d2 = p2, l2 = o2 = p2 = ja(p2.minus(1), p2.plus(1), c2, 1), h2 = Ha(p2.times(p2), c2, 1), r2 = 3; ; ) {
    if (o2 = Ha(o2.times(h2), c2, 1), $a((u2 = l2.plus(ja(o2, new g2(r2), c2, 1))).d).slice(0, c2) === $a(l2.d).slice(0, c2)) {
      if (l2 = l2.times(2), 0 !== a2 && (l2 = l2.plus(Ga(g2, c2 + 2, b2).times(a2 + ""))), l2 = ja(l2, new g2(m2), c2, 1), null != t2)
        return g2.precision = b2, l2;
      if (!Ka(l2.d, c2 - 10, y2, s2))
        return Ha(l2, g2.precision = b2, y2, La = true);
      g2.precision = c2 += 10, u2 = o2 = p2 = ja(d2.minus(1), d2.plus(1), c2, 1), h2 = Ha(p2.times(p2), c2, 1), r2 = s2 = 1;
    }
    l2 = u2, r2 += 2;
  }
}
function no(e5) {
  return e5.s * e5.s / 0 + "";
}
function ro(e5, t2) {
  var i2, n2, r2;
  for ((i2 = t2.indexOf(".")) > -1 && (t2 = t2.replace(".", "")), (n2 = t2.search(/e/i)) > 0 ? (i2 < 0 && (i2 = n2), i2 += +t2.slice(n2 + 1), t2 = t2.substring(0, n2)) : i2 < 0 && (i2 = t2.length), n2 = 0; 48 === t2.charCodeAt(n2); n2++)
    ;
  for (r2 = t2.length; 48 === t2.charCodeAt(r2 - 1); --r2)
    ;
  if (t2 = t2.slice(n2, r2)) {
    if (r2 -= n2, e5.e = i2 = i2 - n2 - 1, e5.d = [], n2 = (i2 + 1) % 7, i2 < 0 && (n2 += 7), n2 < r2) {
      for (n2 && e5.d.push(+t2.slice(0, n2)), r2 -= 7; n2 < r2; )
        e5.d.push(+t2.slice(n2, n2 += 7));
      n2 = 7 - (t2 = t2.slice(n2)).length;
    } else
      n2 -= r2;
    for (; n2--; )
      t2 += "0";
    e5.d.push(+t2), La && (e5.e > e5.constructor.maxE ? (e5.d = null, e5.e = NaN) : e5.e < e5.constructor.minE && (e5.e = 0, e5.d = [0]));
  } else
    e5.e = 0, e5.d = [0];
  return e5;
}
function ao(e5, t2, i2, n2, r2) {
  var a2, o2, s2, l2, u2 = e5.precision, c2 = Math.ceil(u2 / 7);
  for (La = false, l2 = i2.times(i2), s2 = new e5(n2); ; ) {
    if (o2 = ja(s2.times(l2), new e5(t2++ * t2++), u2, 1), s2 = r2 ? n2.plus(o2) : n2.minus(o2), n2 = ja(o2.times(l2), new e5(t2++ * t2++), u2, 1), void 0 !== (o2 = s2.plus(n2)).d[c2]) {
      for (a2 = c2; o2.d[a2] === s2.d[a2] && a2--; )
        ;
      if (-1 == a2)
        break;
    }
    a2 = s2, s2 = n2, n2 = o2, o2 = a2;
  }
  return La = true, o2.d.length = c2 + 1, o2;
}
function oo(e5, t2) {
  for (var i2 = e5; --t2; )
    i2 *= e5;
  return i2;
}
function so(e5, t2) {
  var i2, n2 = t2.s < 0, r2 = Ua(e5, e5.precision, 1), a2 = r2.times(0.5);
  if ((t2 = t2.abs()).lte(a2))
    return ka = n2 ? 4 : 1, t2;
  if ((i2 = t2.divToInt(r2)).isZero())
    ka = n2 ? 3 : 2;
  else {
    if ((t2 = t2.minus(i2.times(r2))).lte(a2))
      return ka = Qa(i2) ? n2 ? 2 : 3 : n2 ? 4 : 1, t2;
    ka = Qa(i2) ? n2 ? 1 : 4 : n2 ? 3 : 2;
  }
  return t2.minus(r2).abs();
}
function lo(e5, t2, i2, n2) {
  var r2, a2, o2, s2, l2, u2, c2, d2, h2, m2 = e5.constructor, p2 = void 0 !== i2;
  if (p2 ? (Va(i2, 1, 1e9), void 0 === n2 ? n2 = m2.rounding : Va(n2, 0, 8)) : (i2 = m2.precision, n2 = m2.rounding), e5.isFinite()) {
    for (p2 ? (r2 = 2, 16 == t2 ? i2 = 4 * i2 - 3 : 8 == t2 && (i2 = 3 * i2 - 2)) : r2 = t2, (o2 = (c2 = Wa(e5)).indexOf(".")) >= 0 && (c2 = c2.replace(".", ""), (h2 = new m2(1)).e = c2.length - o2, h2.d = Ra(Wa(h2), 10, r2), h2.e = h2.d.length), a2 = l2 = (d2 = Ra(c2, 10, r2)).length; 0 == d2[--l2]; )
      d2.pop();
    if (d2[0]) {
      if (o2 < 0 ? a2-- : ((e5 = new m2(e5)).d = d2, e5.e = a2, d2 = (e5 = ja(e5, h2, i2, n2, 0, r2)).d, a2 = e5.e, u2 = xa), o2 = d2[i2], s2 = r2 / 2, u2 = u2 || void 0 !== d2[i2 + 1], u2 = n2 < 4 ? (void 0 !== o2 || u2) && (0 === n2 || n2 === (e5.s < 0 ? 3 : 2)) : o2 > s2 || o2 === s2 && (4 === n2 || u2 || 6 === n2 && 1 & d2[i2 - 1] || n2 === (e5.s < 0 ? 8 : 7)), d2.length = i2, u2)
        for (; ++d2[--i2] > r2 - 1; )
          d2[i2] = 0, i2 || (++a2, d2.unshift(1));
      for (l2 = d2.length; !d2[l2 - 1]; --l2)
        ;
      for (o2 = 0, c2 = ""; o2 < l2; o2++)
        c2 += wa.charAt(d2[o2]);
      if (p2) {
        if (l2 > 1)
          if (16 == t2 || 8 == t2) {
            for (o2 = 16 == t2 ? 4 : 3, --l2; l2 % o2; l2++)
              c2 += "0";
            for (l2 = (d2 = Ra(c2, r2, t2)).length; !d2[l2 - 1]; --l2)
              ;
            for (o2 = 1, c2 = "1."; o2 < l2; o2++)
              c2 += wa.charAt(d2[o2]);
          } else
            c2 = c2.charAt(0) + "." + c2.slice(1);
        c2 = c2 + (a2 < 0 ? "p" : "p+") + a2;
      } else if (a2 < 0) {
        for (; ++a2; )
          c2 = "0" + c2;
        c2 = "0." + c2;
      } else if (++a2 > l2)
        for (a2 -= l2; a2--; )
          c2 += "0";
      else
        a2 < l2 && (c2 = c2.slice(0, a2) + "." + c2.slice(a2));
    } else
      c2 = p2 ? "0p+0" : "0";
    c2 = (16 == t2 ? "0x" : 2 == t2 ? "0b" : 8 == t2 ? "0o" : "") + c2;
  } else
    c2 = no(e5);
  return e5.s < 0 ? "-" + c2 : c2;
}
function uo(e5, t2) {
  if (e5.length > t2)
    return e5.length = t2, true;
}
function co(e5) {
  return new this(e5).abs();
}
function ho(e5) {
  return new this(e5).acos();
}
function mo(e5) {
  return new this(e5).acosh();
}
function po(e5, t2) {
  return new this(e5).plus(t2);
}
function fo(e5) {
  return new this(e5).asin();
}
function go(e5) {
  return new this(e5).asinh();
}
function yo(e5) {
  return new this(e5).atan();
}
function bo(e5) {
  return new this(e5).atanh();
}
function vo(e5, t2) {
  e5 = new this(e5), t2 = new this(t2);
  var i2, n2 = this.precision, r2 = this.rounding, a2 = n2 + 4;
  return e5.s && t2.s ? e5.d || t2.d ? !t2.d || e5.isZero() ? (i2 = t2.s < 0 ? Ua(this, n2, r2) : new this(0)).s = e5.s : !e5.d || t2.isZero() ? (i2 = Ua(this, a2, 1).times(0.5)).s = e5.s : t2.s < 0 ? (this.precision = a2, this.rounding = 1, i2 = this.atan(ja(e5, t2, a2, 1)), t2 = Ua(this, a2, 1), this.precision = n2, this.rounding = r2, i2 = e5.s < 0 ? i2.minus(t2) : i2.plus(t2)) : i2 = this.atan(ja(e5, t2, a2, 1)) : (i2 = Ua(this, a2, 1).times(t2.s > 0 ? 0.25 : 0.75)).s = e5.s : i2 = new this(NaN), i2;
}
function xo(e5) {
  return new this(e5).cbrt();
}
function ko(e5) {
  return Ha(e5 = new this(e5), e5.e + 1, 2);
}
function _o(e5, t2, i2) {
  return new this(e5).clamp(t2, i2);
}
function wo(e5) {
  if (!e5 || "object" != typeof e5)
    throw Error("[DecimalError] Object expected");
  var t2, i2, n2, r2 = true === e5.defaults, a2 = ["precision", 1, 1e9, "rounding", 0, 8, "toExpNeg", -_a, 0, "toExpPos", 0, _a, "maxE", 0, _a, "minE", -_a, 0, "modulo", 0, 9];
  for (t2 = 0; t2 < a2.length; t2 += 3)
    if (i2 = a2[t2], r2 && (this[i2] = Na[i2]), void 0 !== (n2 = e5[i2])) {
      if (!(Ea(n2) === n2 && n2 >= a2[t2 + 1] && n2 <= a2[t2 + 2]))
        throw Error(Aa + i2 + ": " + n2);
      this[i2] = n2;
    }
  if (i2 = "crypto", r2 && (this[i2] = Na[i2]), void 0 !== (n2 = e5[i2])) {
    if (true !== n2 && false !== n2 && 0 !== n2 && 1 !== n2)
      throw Error(Aa + i2 + ": " + n2);
    if (n2) {
      if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes)
        throw Error("[DecimalError] crypto unavailable");
      this[i2] = true;
    } else
      this[i2] = false;
  }
  return this;
}
function So(e5) {
  return new this(e5).cos();
}
function Mo(e5) {
  return new this(e5).cosh();
}
function No(e5, t2) {
  return new this(e5).div(t2);
}
function Lo(e5) {
  return new this(e5).exp();
}
function Ao(e5) {
  return Ha(e5 = new this(e5), e5.e + 1, 3);
}
function Co() {
  var e5, t2, i2 = new this(0);
  for (La = false, e5 = 0; e5 < arguments.length; )
    if ((t2 = new this(arguments[e5++])).d)
      i2.d && (i2 = i2.plus(t2.times(t2)));
    else {
      if (t2.s)
        return La = true, new this(1 / 0);
      i2 = t2;
    }
  return La = true, i2.sqrt();
}
function Eo(e5) {
  return e5 instanceof Xo || e5 && e5.toStringTag === Ca || false;
}
function Do(e5) {
  return new this(e5).ln();
}
function To(e5, t2) {
  return new this(e5).log(t2);
}
function zo(e5) {
  return new this(e5).log(2);
}
function qo(e5) {
  return new this(e5).log(10);
}
function Io() {
  return eo(this, arguments, "lt");
}
function Fo() {
  return eo(this, arguments, "gt");
}
function Oo(e5, t2) {
  return new this(e5).mod(t2);
}
function Po(e5, t2) {
  return new this(e5).mul(t2);
}
function Bo(e5, t2) {
  return new this(e5).pow(t2);
}
function $o(e5) {
  var t2, i2, n2, r2, a2 = 0, o2 = new this(1), s2 = [];
  if (void 0 === e5 ? e5 = this.precision : Va(e5, 1, 1e9), n2 = Math.ceil(e5 / 7), this.crypto)
    if (crypto.getRandomValues)
      for (t2 = crypto.getRandomValues(new Uint32Array(n2)); a2 < n2; )
        (r2 = t2[a2]) >= 429e7 ? t2[a2] = crypto.getRandomValues(new Uint32Array(1))[0] : s2[a2++] = r2 % 1e7;
    else {
      if (!crypto.randomBytes)
        throw Error("[DecimalError] crypto unavailable");
      for (t2 = crypto.randomBytes(n2 *= 4); a2 < n2; )
        (r2 = t2[a2] + (t2[a2 + 1] << 8) + (t2[a2 + 2] << 16) + ((127 & t2[a2 + 3]) << 24)) >= 214e7 ? crypto.randomBytes(4).copy(t2, a2) : (s2.push(r2 % 1e7), a2 += 4);
      a2 = n2 / 4;
    }
  else
    for (; a2 < n2; )
      s2[a2++] = 1e7 * Math.random() | 0;
  for (e5 %= 7, (n2 = s2[--a2]) && e5 && (r2 = Da(10, 7 - e5), s2[a2] = (n2 / r2 | 0) * r2); 0 === s2[a2]; a2--)
    s2.pop();
  if (a2 < 0)
    i2 = 0, s2 = [0];
  else {
    for (i2 = -1; 0 === s2[0]; i2 -= 7)
      s2.shift();
    for (n2 = 1, r2 = s2[0]; r2 >= 10; r2 /= 10)
      n2++;
    n2 < 7 && (i2 -= 7 - n2);
  }
  return o2.e = i2, o2.d = s2, o2;
}
function Vo(e5) {
  return Ha(e5 = new this(e5), e5.e + 1, this.rounding);
}
function Ko(e5) {
  return (e5 = new this(e5)).d ? e5.d[0] ? e5.s : 0 * e5.s : e5.s || NaN;
}
function Ro(e5) {
  return new this(e5).sin();
}
function jo(e5) {
  return new this(e5).sinh();
}
function Ho(e5) {
  return new this(e5).sqrt();
}
function Wo(e5, t2) {
  return new this(e5).sub(t2);
}
function Zo() {
  var e5 = 0, t2 = arguments, i2 = new this(t2[e5]);
  for (La = false; i2.s && ++e5 < t2.length; )
    i2 = i2.plus(t2[e5]);
  return La = true, Ha(i2, this.precision, this.rounding);
}
function Go(e5) {
  return new this(e5).tan();
}
function Uo(e5) {
  return new this(e5).tanh();
}
function Jo(e5) {
  return Ha(e5 = new this(e5), e5.e + 1, 1);
}
Ba[Symbol.for("nodejs.util.inspect.custom")] = Ba.toString, Ba[Symbol.toStringTag] = "Decimal";
var Xo = Ba.constructor = function e2(t2) {
  var i2, n2, r2;
  function a2(e5) {
    var t3, i3, n3, r3 = this;
    if (!(r3 instanceof a2))
      return new a2(e5);
    if (r3.constructor = a2, Eo(e5))
      return r3.s = e5.s, void (La ? !e5.d || e5.e > a2.maxE ? (r3.e = NaN, r3.d = null) : e5.e < a2.minE ? (r3.e = 0, r3.d = [0]) : (r3.e = e5.e, r3.d = e5.d.slice()) : (r3.e = e5.e, r3.d = e5.d ? e5.d.slice() : e5.d));
    if ("number" == (n3 = typeof e5)) {
      if (0 === e5)
        return r3.s = 1 / e5 < 0 ? -1 : 1, r3.e = 0, void (r3.d = [0]);
      if (e5 < 0 ? (e5 = -e5, r3.s = -1) : r3.s = 1, e5 === ~~e5 && e5 < 1e7) {
        for (t3 = 0, i3 = e5; i3 >= 10; i3 /= 10)
          t3++;
        return void (La ? t3 > a2.maxE ? (r3.e = NaN, r3.d = null) : t3 < a2.minE ? (r3.e = 0, r3.d = [0]) : (r3.e = t3, r3.d = [e5]) : (r3.e = t3, r3.d = [e5]));
      }
      return 0 * e5 != 0 ? (e5 || (r3.s = NaN), r3.e = NaN, void (r3.d = null)) : ro(r3, e5.toString());
    }
    if ("string" !== n3)
      throw Error(Aa + e5);
    return 45 === (i3 = e5.charCodeAt(0)) ? (e5 = e5.slice(1), r3.s = -1) : (43 === i3 && (e5 = e5.slice(1)), r3.s = 1), Ia.test(e5) ? ro(r3, e5) : function(e6, t4) {
      var i4, n4, r4, a3, o2, s2, l2, u2, c2;
      if (t4.indexOf("_") > -1) {
        if (t4 = t4.replace(/(\d)_(?=\d)/g, "$1"), Ia.test(t4))
          return ro(e6, t4);
      } else if ("Infinity" === t4 || "NaN" === t4)
        return +t4 || (e6.s = NaN), e6.e = NaN, e6.d = null, e6;
      if (za.test(t4))
        i4 = 16, t4 = t4.toLowerCase();
      else if (Ta.test(t4))
        i4 = 2;
      else {
        if (!qa.test(t4))
          throw Error(Aa + t4);
        i4 = 8;
      }
      for ((a3 = t4.search(/p/i)) > 0 ? (l2 = +t4.slice(a3 + 1), t4 = t4.substring(2, a3)) : t4 = t4.slice(2), o2 = (a3 = t4.indexOf(".")) >= 0, n4 = e6.constructor, o2 && (a3 = (s2 = (t4 = t4.replace(".", "")).length) - a3, r4 = Ya(n4, new n4(i4), a3, 2 * a3)), a3 = c2 = (u2 = Ra(t4, i4, Fa)).length - 1; 0 === u2[a3]; --a3)
        u2.pop();
      return a3 < 0 ? new n4(0 * e6.s) : (e6.e = Za(u2, c2), e6.d = u2, La = false, o2 && (e6 = ja(e6, r4, 4 * s2)), l2 && (e6 = e6.times(Math.abs(l2) < 54 ? Da(2, l2) : Xo.pow(2, l2))), La = true, e6);
    }(r3, e5);
  }
  if (a2.prototype = Ba, a2.ROUND_UP = 0, a2.ROUND_DOWN = 1, a2.ROUND_CEIL = 2, a2.ROUND_FLOOR = 3, a2.ROUND_HALF_UP = 4, a2.ROUND_HALF_DOWN = 5, a2.ROUND_HALF_EVEN = 6, a2.ROUND_HALF_CEIL = 7, a2.ROUND_HALF_FLOOR = 8, a2.EUCLID = 9, a2.config = a2.set = wo, a2.clone = e2, a2.isDecimal = Eo, a2.abs = co, a2.acos = ho, a2.acosh = mo, a2.add = po, a2.asin = fo, a2.asinh = go, a2.atan = yo, a2.atanh = bo, a2.atan2 = vo, a2.cbrt = xo, a2.ceil = ko, a2.clamp = _o, a2.cos = So, a2.cosh = Mo, a2.div = No, a2.exp = Lo, a2.floor = Ao, a2.hypot = Co, a2.ln = Do, a2.log = To, a2.log10 = qo, a2.log2 = zo, a2.max = Io, a2.min = Fo, a2.mod = Oo, a2.mul = Po, a2.pow = Bo, a2.random = $o, a2.round = Vo, a2.sign = Ko, a2.sin = Ro, a2.sinh = jo, a2.sqrt = Ho, a2.sub = Wo, a2.sum = Zo, a2.tan = Go, a2.tanh = Uo, a2.trunc = Jo, void 0 === t2 && (t2 = {}), t2 && true !== t2.defaults)
    for (r2 = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"], i2 = 0; i2 < r2.length; )
      t2.hasOwnProperty(n2 = r2[i2++]) || (t2[n2] = this[n2]);
  return a2.config(t2), a2;
}(Na);
Sa = new Xo(Sa), Ma = new Xo(Ma);
var Yo;
var Qo = { exports: {} };
function es(e5) {
  return 8205 === e5 || 65038 === e5 || 65039 === e5 || e5 >= 127995 && e5 <= 128e3 || e5 >= 129456 && e5 <= 129460 || e5 >= 917536 && e5 <= 917632;
}
function ts(e5) {
  return e5 >= 127462 && e5 <= 127487;
}
Yo = Qo, function(e5) {
  var t2 = Math.cosh || function(e6) {
    return Math.abs(e6) < 1e-9 ? 1 - e6 : 0.5 * (Math.exp(e6) + Math.exp(-e6));
  }, i2 = Math.sinh || function(e6) {
    return Math.abs(e6) < 1e-9 ? e6 : 0.5 * (Math.exp(e6) - Math.exp(-e6));
  }, n2 = function() {
    throw SyntaxError("Invalid Param");
  };
  function r2(e6, t3) {
    var i3 = Math.abs(e6), n3 = Math.abs(t3);
    return 0 === e6 ? Math.log(n3) : 0 === t3 ? Math.log(i3) : i3 < 3e3 && n3 < 3e3 ? 0.5 * Math.log(e6 * e6 + t3 * t3) : 0.5 * Math.log((e6 /= 2) * e6 + (t3 /= 2) * t3) + Math.LN2;
  }
  function a2(e6, t3) {
    if (!(this instanceof a2))
      return new a2(e6, t3);
    var i3 = function(e7, t4) {
      var i4 = { re: 0, im: 0 };
      if (null == e7)
        i4.re = i4.im = 0;
      else if (void 0 !== t4)
        i4.re = e7, i4.im = t4;
      else
        switch (typeof e7) {
          case "object":
            if ("im" in e7 && "re" in e7)
              i4.re = e7.re, i4.im = e7.im;
            else if ("abs" in e7 && "arg" in e7) {
              if (!Number.isFinite(e7.abs) && Number.isFinite(e7.arg))
                return a2.INFINITY;
              i4.re = e7.abs * Math.cos(e7.arg), i4.im = e7.abs * Math.sin(e7.arg);
            } else if ("r" in e7 && "phi" in e7) {
              if (!Number.isFinite(e7.r) && Number.isFinite(e7.phi))
                return a2.INFINITY;
              i4.re = e7.r * Math.cos(e7.phi), i4.im = e7.r * Math.sin(e7.phi);
            } else
              2 === e7.length ? (i4.re = e7[0], i4.im = e7[1]) : n2();
            break;
          case "string":
            i4.im = i4.re = 0;
            var r3 = e7.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g), o2 = 1, s2 = 0;
            null === r3 && n2();
            for (var l2 = 0; l2 < r3.length; l2++) {
              var u2 = r3[l2];
              " " === u2 || "	" === u2 || "\n" === u2 || ("+" === u2 ? o2++ : "-" === u2 ? s2++ : "i" === u2 || "I" === u2 ? (o2 + s2 === 0 && n2(), " " === r3[l2 + 1] || isNaN(r3[l2 + 1]) ? i4.im += parseFloat((s2 % 2 ? "-" : "") + "1") : (i4.im += parseFloat((s2 % 2 ? "-" : "") + r3[l2 + 1]), l2++), o2 = s2 = 0) : ((o2 + s2 === 0 || isNaN(u2)) && n2(), "i" === r3[l2 + 1] || "I" === r3[l2 + 1] ? (i4.im += parseFloat((s2 % 2 ? "-" : "") + u2), l2++) : i4.re += parseFloat((s2 % 2 ? "-" : "") + u2), o2 = s2 = 0));
            }
            o2 + s2 > 0 && n2();
            break;
          case "number":
            i4.im = 0, i4.re = e7;
            break;
          default:
            n2();
        }
      return isNaN(i4.re) || i4.im, i4;
    }(e6, t3);
    this.re = i3.re, this.im = i3.im;
  }
  a2.prototype = { re: 0, im: 0, sign: function() {
    var e6 = this.abs();
    return new a2(this.re / e6, this.im / e6);
  }, add: function(e6, t3) {
    var i3 = new a2(e6, t3);
    return this.isInfinite() && i3.isInfinite() ? a2.NAN : this.isInfinite() || i3.isInfinite() ? a2.INFINITY : new a2(this.re + i3.re, this.im + i3.im);
  }, sub: function(e6, t3) {
    var i3 = new a2(e6, t3);
    return this.isInfinite() && i3.isInfinite() ? a2.NAN : this.isInfinite() || i3.isInfinite() ? a2.INFINITY : new a2(this.re - i3.re, this.im - i3.im);
  }, mul: function(e6, t3) {
    var i3 = new a2(e6, t3);
    return this.isInfinite() && i3.isZero() || this.isZero() && i3.isInfinite() ? a2.NAN : this.isInfinite() || i3.isInfinite() ? a2.INFINITY : 0 === i3.im && 0 === this.im ? new a2(this.re * i3.re, 0) : new a2(this.re * i3.re - this.im * i3.im, this.re * i3.im + this.im * i3.re);
  }, div: function(e6, t3) {
    var i3 = new a2(e6, t3);
    if (this.isZero() && i3.isZero() || this.isInfinite() && i3.isInfinite())
      return a2.NAN;
    if (this.isInfinite() || i3.isZero())
      return a2.INFINITY;
    if (this.isZero() || i3.isInfinite())
      return a2.ZERO;
    e6 = this.re, t3 = this.im;
    var n3, r3, o2 = i3.re, s2 = i3.im;
    return 0 === s2 ? new a2(e6 / o2, t3 / o2) : Math.abs(o2) < Math.abs(s2) ? new a2((e6 * (r3 = o2 / s2) + t3) / (n3 = o2 * r3 + s2), (t3 * r3 - e6) / n3) : new a2((e6 + t3 * (r3 = s2 / o2)) / (n3 = s2 * r3 + o2), (t3 - e6 * r3) / n3);
  }, pow: function(e6, t3) {
    var i3 = new a2(e6, t3);
    if (e6 = this.re, t3 = this.im, i3.isZero())
      return a2.ONE;
    if (0 === i3.im) {
      if (0 === t3 && e6 > 0)
        return new a2(Math.pow(e6, i3.re), 0);
      if (0 === e6)
        switch ((i3.re % 4 + 4) % 4) {
          case 0:
            return new a2(Math.pow(t3, i3.re), 0);
          case 1:
            return new a2(0, Math.pow(t3, i3.re));
          case 2:
            return new a2(-Math.pow(t3, i3.re), 0);
          case 3:
            return new a2(0, -Math.pow(t3, i3.re));
        }
    }
    if (0 === e6 && 0 === t3 && i3.re > 0 && i3.im >= 0)
      return a2.ZERO;
    var n3 = Math.atan2(t3, e6), o2 = r2(e6, t3);
    return e6 = Math.exp(i3.re * o2 - i3.im * n3), t3 = i3.im * o2 + i3.re * n3, new a2(e6 * Math.cos(t3), e6 * Math.sin(t3));
  }, sqrt: function() {
    var e6, t3, i3 = this.re, n3 = this.im, r3 = this.abs();
    if (i3 >= 0) {
      if (0 === n3)
        return new a2(Math.sqrt(i3), 0);
      e6 = 0.5 * Math.sqrt(2 * (r3 + i3));
    } else
      e6 = Math.abs(n3) / Math.sqrt(2 * (r3 - i3));
    return t3 = i3 <= 0 ? 0.5 * Math.sqrt(2 * (r3 - i3)) : Math.abs(n3) / Math.sqrt(2 * (r3 + i3)), new a2(e6, n3 < 0 ? -t3 : t3);
  }, exp: function() {
    var e6 = Math.exp(this.re);
    return this.im, new a2(e6 * Math.cos(this.im), e6 * Math.sin(this.im));
  }, expm1: function() {
    var e6 = this.re, t3 = this.im;
    return new a2(Math.expm1(e6) * Math.cos(t3) + function(e7) {
      var t4 = Math.PI / 4;
      if (-t4 > e7 || e7 > t4)
        return Math.cos(e7) - 1;
      var i3 = e7 * e7;
      return i3 * (i3 * (i3 * (i3 * (i3 * (i3 * (i3 * (i3 / 20922789888e3 - 1 / 87178291200) + 1 / 479001600) - 1 / 3628800) + 1 / 40320) - 1 / 720) + 1 / 24) - 0.5);
    }(t3), Math.exp(e6) * Math.sin(t3));
  }, log: function() {
    var e6 = this.re, t3 = this.im;
    return new a2(r2(e6, t3), Math.atan2(t3, e6));
  }, abs: function() {
    return e6 = this.re, t3 = this.im, i3 = Math.abs(e6), n3 = Math.abs(t3), i3 < 3e3 && n3 < 3e3 ? Math.sqrt(i3 * i3 + n3 * n3) : (i3 < n3 ? (i3 = n3, n3 = e6 / t3) : n3 = t3 / e6, i3 * Math.sqrt(1 + n3 * n3));
    var e6, t3, i3, n3;
  }, arg: function() {
    return Math.atan2(this.im, this.re);
  }, sin: function() {
    var e6 = this.re, n3 = this.im;
    return new a2(Math.sin(e6) * t2(n3), Math.cos(e6) * i2(n3));
  }, cos: function() {
    var e6 = this.re, n3 = this.im;
    return new a2(Math.cos(e6) * t2(n3), -Math.sin(e6) * i2(n3));
  }, tan: function() {
    var e6 = 2 * this.re, n3 = 2 * this.im, r3 = Math.cos(e6) + t2(n3);
    return new a2(Math.sin(e6) / r3, i2(n3) / r3);
  }, cot: function() {
    var e6 = 2 * this.re, n3 = 2 * this.im, r3 = Math.cos(e6) - t2(n3);
    return new a2(-Math.sin(e6) / r3, i2(n3) / r3);
  }, sec: function() {
    var e6 = this.re, n3 = this.im, r3 = 0.5 * t2(2 * n3) + 0.5 * Math.cos(2 * e6);
    return new a2(Math.cos(e6) * t2(n3) / r3, Math.sin(e6) * i2(n3) / r3);
  }, csc: function() {
    var e6 = this.re, n3 = this.im, r3 = 0.5 * t2(2 * n3) - 0.5 * Math.cos(2 * e6);
    return new a2(Math.sin(e6) * t2(n3) / r3, -Math.cos(e6) * i2(n3) / r3);
  }, asin: function() {
    var e6 = this.re, t3 = this.im, i3 = new a2(t3 * t3 - e6 * e6 + 1, -2 * e6 * t3).sqrt(), n3 = new a2(i3.re - t3, i3.im + e6).log();
    return new a2(n3.im, -n3.re);
  }, acos: function() {
    var e6 = this.re, t3 = this.im, i3 = new a2(t3 * t3 - e6 * e6 + 1, -2 * e6 * t3).sqrt(), n3 = new a2(i3.re - t3, i3.im + e6).log();
    return new a2(Math.PI / 2 - n3.im, n3.re);
  }, atan: function() {
    var e6 = this.re, t3 = this.im;
    if (0 === e6) {
      if (1 === t3)
        return new a2(0, 1 / 0);
      if (-1 === t3)
        return new a2(0, -1 / 0);
    }
    var i3 = e6 * e6 + (1 - t3) * (1 - t3), n3 = new a2((1 - t3 * t3 - e6 * e6) / i3, -2 * e6 / i3).log();
    return new a2(-0.5 * n3.im, 0.5 * n3.re);
  }, acot: function() {
    var e6 = this.re, t3 = this.im;
    if (0 === t3)
      return new a2(Math.atan2(1, e6), 0);
    var i3 = e6 * e6 + t3 * t3;
    return 0 !== i3 ? new a2(e6 / i3, -t3 / i3).atan() : new a2(0 !== e6 ? e6 / 0 : 0, 0 !== t3 ? -t3 / 0 : 0).atan();
  }, asec: function() {
    var e6 = this.re, t3 = this.im;
    if (0 === e6 && 0 === t3)
      return new a2(0, 1 / 0);
    var i3 = e6 * e6 + t3 * t3;
    return 0 !== i3 ? new a2(e6 / i3, -t3 / i3).acos() : new a2(0 !== e6 ? e6 / 0 : 0, 0 !== t3 ? -t3 / 0 : 0).acos();
  }, acsc: function() {
    var e6 = this.re, t3 = this.im;
    if (0 === e6 && 0 === t3)
      return new a2(Math.PI / 2, 1 / 0);
    var i3 = e6 * e6 + t3 * t3;
    return 0 !== i3 ? new a2(e6 / i3, -t3 / i3).asin() : new a2(0 !== e6 ? e6 / 0 : 0, 0 !== t3 ? -t3 / 0 : 0).asin();
  }, sinh: function() {
    var e6 = this.re, n3 = this.im;
    return new a2(i2(e6) * Math.cos(n3), t2(e6) * Math.sin(n3));
  }, cosh: function() {
    var e6 = this.re, n3 = this.im;
    return new a2(t2(e6) * Math.cos(n3), i2(e6) * Math.sin(n3));
  }, tanh: function() {
    var e6 = 2 * this.re, n3 = 2 * this.im, r3 = t2(e6) + Math.cos(n3);
    return new a2(i2(e6) / r3, Math.sin(n3) / r3);
  }, coth: function() {
    var e6 = 2 * this.re, n3 = 2 * this.im, r3 = t2(e6) - Math.cos(n3);
    return new a2(i2(e6) / r3, -Math.sin(n3) / r3);
  }, csch: function() {
    var e6 = this.re, n3 = this.im, r3 = Math.cos(2 * n3) - t2(2 * e6);
    return new a2(-2 * i2(e6) * Math.cos(n3) / r3, 2 * t2(e6) * Math.sin(n3) / r3);
  }, sech: function() {
    var e6 = this.re, n3 = this.im, r3 = Math.cos(2 * n3) + t2(2 * e6);
    return new a2(2 * t2(e6) * Math.cos(n3) / r3, -2 * i2(e6) * Math.sin(n3) / r3);
  }, asinh: function() {
    var e6 = this.im;
    this.im = -this.re, this.re = e6;
    var t3 = this.asin();
    return this.re = -this.im, this.im = e6, e6 = t3.re, t3.re = -t3.im, t3.im = e6, t3;
  }, acosh: function() {
    var e6 = this.acos();
    if (e6.im <= 0) {
      var t3 = e6.re;
      e6.re = -e6.im, e6.im = t3;
    } else
      t3 = e6.im, e6.im = -e6.re, e6.re = t3;
    return e6;
  }, atanh: function() {
    var e6 = this.re, t3 = this.im, i3 = e6 > 1 && 0 === t3, n3 = 1 - e6, o2 = 1 + e6, s2 = n3 * n3 + t3 * t3, l2 = 0 !== s2 ? new a2((o2 * n3 - t3 * t3) / s2, (t3 * n3 + o2 * t3) / s2) : new a2(-1 !== e6 ? e6 / 0 : 0, 0 !== t3 ? t3 / 0 : 0), u2 = l2.re;
    return l2.re = r2(l2.re, l2.im) / 2, l2.im = Math.atan2(l2.im, u2) / 2, i3 && (l2.im = -l2.im), l2;
  }, acoth: function() {
    var e6 = this.re, t3 = this.im;
    if (0 === e6 && 0 === t3)
      return new a2(0, Math.PI / 2);
    var i3 = e6 * e6 + t3 * t3;
    return 0 !== i3 ? new a2(e6 / i3, -t3 / i3).atanh() : new a2(0 !== e6 ? e6 / 0 : 0, 0 !== t3 ? -t3 / 0 : 0).atanh();
  }, acsch: function() {
    var e6 = this.re, t3 = this.im;
    if (0 === t3)
      return new a2(0 !== e6 ? Math.log(e6 + Math.sqrt(e6 * e6 + 1)) : 1 / 0, 0);
    var i3 = e6 * e6 + t3 * t3;
    return 0 !== i3 ? new a2(e6 / i3, -t3 / i3).asinh() : new a2(0 !== e6 ? e6 / 0 : 0, 0 !== t3 ? -t3 / 0 : 0).asinh();
  }, asech: function() {
    var e6 = this.re, t3 = this.im;
    if (this.isZero())
      return a2.INFINITY;
    var i3 = e6 * e6 + t3 * t3;
    return 0 !== i3 ? new a2(e6 / i3, -t3 / i3).acosh() : new a2(0 !== e6 ? e6 / 0 : 0, 0 !== t3 ? -t3 / 0 : 0).acosh();
  }, inverse: function() {
    if (this.isZero())
      return a2.INFINITY;
    if (this.isInfinite())
      return a2.ZERO;
    var e6 = this.re, t3 = this.im, i3 = e6 * e6 + t3 * t3;
    return new a2(e6 / i3, -t3 / i3);
  }, conjugate: function() {
    return new a2(this.re, -this.im);
  }, neg: function() {
    return new a2(-this.re, -this.im);
  }, ceil: function(e6) {
    return e6 = Math.pow(10, e6 || 0), new a2(Math.ceil(this.re * e6) / e6, Math.ceil(this.im * e6) / e6);
  }, floor: function(e6) {
    return e6 = Math.pow(10, e6 || 0), new a2(Math.floor(this.re * e6) / e6, Math.floor(this.im * e6) / e6);
  }, round: function(e6) {
    return e6 = Math.pow(10, e6 || 0), new a2(Math.round(this.re * e6) / e6, Math.round(this.im * e6) / e6);
  }, equals: function(e6, t3) {
    var i3 = new a2(e6, t3);
    return Math.abs(i3.re - this.re) <= a2.EPSILON && Math.abs(i3.im - this.im) <= a2.EPSILON;
  }, clone: function() {
    return new a2(this.re, this.im);
  }, toString: function() {
    var e6 = this.re, t3 = this.im, i3 = "";
    return this.isNaN() ? "NaN" : this.isInfinite() ? "Infinity" : (Math.abs(e6) < a2.EPSILON && (e6 = 0), Math.abs(t3) < a2.EPSILON && (t3 = 0), 0 === t3 ? i3 + e6 : (0 !== e6 ? (i3 += e6, i3 += " ", t3 < 0 ? (t3 = -t3, i3 += "-") : i3 += "+", i3 += " ") : t3 < 0 && (t3 = -t3, i3 += "-"), 1 !== t3 && (i3 += t3), i3 + "i"));
  }, toVector: function() {
    return [this.re, this.im];
  }, valueOf: function() {
    return 0 === this.im ? this.re : null;
  }, isNaN: function() {
    return isNaN(this.re) || isNaN(this.im);
  }, isZero: function() {
    return 0 === this.im && 0 === this.re;
  }, isFinite: function() {
    return isFinite(this.re) && isFinite(this.im);
  }, isInfinite: function() {
    return !(this.isNaN() || this.isFinite());
  } }, a2.ZERO = new a2(0, 0), a2.ONE = new a2(1, 0), a2.I = new a2(0, 1), a2.PI = new a2(Math.PI, 0), a2.E = new a2(Math.E, 0), a2.INFINITY = new a2(1 / 0, 1 / 0), a2.NAN = new a2(NaN, NaN), a2.EPSILON = 1e-15, Object.defineProperty(a2, "__esModule", { value: true }), a2.default = a2, a2.Complex = a2, Yo.exports = a2;
}();
var is = class {
  constructor(e5) {
    this.obeyspaces = false, this.s = function(e6) {
      if (/^[\u0020-\u00FF]*$/.test(e6))
        return e6;
      const t2 = [], i2 = function(e7) {
        const t3 = [];
        for (let i3 = 0; i3 < e7.length; i3++) {
          let n3 = e7.charCodeAt(i3);
          if (n3 >= 55296 && n3 <= 56319) {
            const t4 = e7.charCodeAt(i3 + 1);
            t4 >= 56320 && t4 <= 57343 && (n3 = 65536 + 1024 * (n3 - 55296) + (t4 - 56320), i3++);
          }
          t3.push(n3);
        }
        return t3;
      }(e6);
      let n2 = 0;
      for (; n2 < i2.length; ) {
        const e7 = i2[n2++], r2 = i2[n2];
        if (8205 === r2) {
          const e8 = n2 - 1;
          for (n2 += 2; 8205 === i2[n2]; )
            n2 += 2;
          t2.push(String.fromCodePoint(...i2.slice(e8, 2 * n2 - e8 + 1)));
        } else if (es(r2)) {
          const e8 = n2 - 1;
          for (; es(i2[n2]); )
            n2 += 8205 === i2[n2] ? 2 : 1;
          t2.push(String.fromCodePoint(...i2.slice(e8, 2 * n2 - e8 - 1)));
        } else
          ts(e7) ? (n2 += 1, t2.push(String.fromCodePoint(...i2.slice(n2 - 2, 2)))) : t2.push(String.fromCodePoint(e7));
      }
      return t2;
    }(e5), this.pos = 0;
  }
  end() {
    return this.pos >= this.s.length;
  }
  get() {
    return this.pos < this.s.length ? this.s[this.pos++] : "";
  }
  peek() {
    return this.s[this.pos];
  }
  match(e5) {
    let t2;
    return t2 = "string" == typeof this.s ? e5.exec(this.s.slice(this.pos)) : e5.exec(this.s.slice(this.pos).join("")), (null == t2 ? void 0 : t2[0]) ? (this.pos += t2[0].length, t2[0]) : null;
  }
  next() {
    if (this.end())
      return null;
    if (!this.obeyspaces && this.match(/^[ \f\n\r\t\v\xA0\u2028\u2029]+/))
      return "<space>";
    if (this.obeyspaces && this.match(/^[ \f\n\r\t\v\xA0\u2028\u2029]/))
      return "<space>";
    const e5 = this.get();
    if ("\\" === e5) {
      if (!this.end()) {
        let e6 = this.match(/^[a-zA-Z*]+/);
        if (e6)
          this.match(/^[ \f\n\r\t\v\xA0\u2028\u2029]*/);
        else if (e6 = this.get(), " " === e6)
          return "<space>";
        return "\\" + e6;
      }
    } else {
      if ("{" === e5)
        return "<{>";
      if ("}" === e5)
        return "<}>";
      if ("^" === e5) {
        if ("^" === this.peek()) {
          this.get();
          const e6 = this.match(/^(\^(\^(\^(\^[0-9a-f])?[0-9a-f])?[0-9a-f])?[0-9a-f])?[0-9a-f][0-9a-f]/);
          if (e6)
            return String.fromCodePoint(parseInt(e6.slice(e6.lastIndexOf("^") + 1), 16));
        }
        return e5;
      }
      if ("#" === e5) {
        if (!this.end()) {
          let e6 = false;
          if (/[0-9?]/.test(this.peek()) && (e6 = true, this.pos + 1 < this.s.length)) {
            const t2 = this.s[this.pos + 1];
            e6 = /[^0-9A-Za-z]/.test(t2);
          }
          return e6 ? "#" + this.get() : "#";
        }
      } else if ("$" === e5)
        return "$" === this.peek() ? (this.get(), "<$$>") : "<$>";
    }
    return e5;
  }
};
function ns(e5, t2) {
  var i2, n2, r2, a2;
  let o2 = [], s2 = e5.next();
  if (s2)
    if ("\\relax" === s2)
      ;
    else if ("\\noexpand" === s2)
      s2 = e5.next(), s2 && o2.push(s2);
    else if ("\\obeyspaces" === s2)
      e5.obeyspaces = true;
    else if ("\\space" === s2 || "~" === s2)
      o2.push("<space>");
    else if ("\\bgroup" === s2)
      o2.push("<{>");
    else if ("\\egroup" === s2)
      o2.push("<}>");
    else if ("\\string" === s2)
      s2 = e5.next(), s2 && ("\\" === s2[0] ? Array.from(s2).forEach((e6) => o2.push("\\" === e6 ? "\\backslash" : e6)) : "<{>" === s2 ? o2.push("\\{") : "<space>" === s2 ? o2.push("~") : "<}>" === s2 && o2.push("\\}"));
    else if ("\\csname" === s2) {
      for (; "<space>" === e5.peek(); )
        e5.next();
      let r3 = "", a3 = false, l2 = [];
      do {
        0 === l2.length && (/^#[0-9?]$/.test(e5.peek()) ? (l2 = rs(null !== (n2 = null !== (i2 = null == t2 ? void 0 : t2[e5.get().slice(1)]) && void 0 !== i2 ? i2 : null == t2 ? void 0 : t2["?"]) && void 0 !== n2 ? n2 : "\\placeholder{}", t2), s2 = l2[0]) : (s2 = e5.next(), l2 = s2 ? [s2] : [])), a3 = 0 === l2.length, a3 || "\\endcsname" !== s2 || (a3 = true, l2.shift()), a3 || (a3 = "<$>" === s2 || "<$$>" === s2 || "<{>" === s2 || "<}>" === s2 || !!s2 && s2.length > 1 && "\\" === s2[0]), a3 || (r3 += l2.shift());
      } while (!a3);
      r3 && o2.push("\\" + r3), o2 = o2.concat(l2);
    } else if ("\\endcsname" === s2)
      ;
    else if (s2.length > 1 && "#" === s2[0]) {
      const e6 = s2.slice(1);
      o2 = o2.concat(rs(null !== (a2 = null !== (r2 = null == t2 ? void 0 : t2[e6]) && void 0 !== r2 ? r2 : null == t2 ? void 0 : t2["?"]) && void 0 !== a2 ? a2 : "\\placeholder{}", t2));
    } else
      o2.push(s2);
  return o2;
}
function rs(e5, t2) {
  const i2 = e5.toString().split(/\r?\n/);
  let n2 = "", r2 = "";
  for (const e6 of i2) {
    n2 += r2, r2 = " ";
    const t3 = e6.match(/((?:\\%)|[^%])*/);
    null !== t3 && (n2 += t3[0]);
  }
  const a2 = new is(n2), o2 = [];
  do {
    o2.push(...ns(a2, t2));
  } while (!a2.end());
  return o2;
}
function as(e5) {
  let t2 = "", i2 = "";
  for (const n2 of e5)
    n2 && (/[a-zA-Z*]/.test(n2[0]) && (i2 += t2), t2 = /\\[a-zA-Z]+\*?$/.test(n2) ? " " : "", i2 += n2);
  return i2;
}
function os(e5) {
  let t2 = [];
  if (Array.isArray(e5))
    for (const i2 of e5)
      Array.isArray(i2) ? t2 = [...t2, ...i2] : t2.push(i2);
  else
    t2 = [e5];
  return as(t2.map((e6) => {
    var t3;
    return null !== (t3 = { "<space>": " ", "<$$>": "$$", "<$>": "$", "<{>": "{", "<}>": "}" }[e6]) && void 0 !== t3 ? t3 : e6;
  }));
}
function ss(e5) {
  return null !== e5 && "object" == typeof e5 && "num" in e5;
}
function ls(e5) {
  return null !== e5 && "object" == typeof e5 && "sym" in e5;
}
function us(e5) {
  return null !== e5 && "object" == typeof e5 && "fn" in e5;
}
function cs(e5) {
  return !/[\u0000-\u0020\u0022\u0060\ufffe\uffff]/.test(e5) && !/^[\u0021\u0022\u0024-\u0029\u002e\u003a\u003f\u0040\u005b\u005d\u005e\u007b\u007d\u007e]/.test(e5);
}
function ds(e5) {
  return null == e5 ? null : "object" == typeof e5 && "str" in e5 ? e5.str : "string" != typeof e5 || e5.length < 2 || "'" !== e5[0] || "'" !== e5[e5.length - 1] ? null : e5.substring(1, e5.length - 1);
}
function hs(e5) {
  return null == e5 ? null : Array.isArray(e5) ? e5[0] : us(e5) ? e5.fn[0] : null;
}
function ms(e5) {
  const t2 = hs(e5);
  return "string" == typeof t2 ? t2 : "";
}
function ps(e5, t2) {
  var i2, n2;
  return null == e5 ? null : Array.isArray(e5) ? null !== (i2 = e5[t2]) && void 0 !== i2 ? i2 : null : us(e5) && null !== (n2 = e5.fn[t2]) && void 0 !== n2 ? n2 : null;
}
function fs(e5) {
  return null == e5 ? null : Array.isArray(e5) ? e5.slice(1) : us(e5) ? e5.fn.slice(1) : null;
}
function gs(e5) {
  return ps(e5, 1);
}
function ys(e5) {
  return null == e5 ? 0 : Array.isArray(e5) ? Math.max(0, e5.length - 1) : us(e5) ? Math.max(0, e5.fn.length - 1) : 0;
}
function bs(e5) {
  if (null == e5)
    return null;
  const t2 = ls(e5) ? e5.sym : e5;
  return "string" != typeof t2 || t2.length >= 2 && "'" === t2[0] && "'" === t2[t2.length - 1] ? null : t2;
}
function vs(e5) {
  var t2;
  const i2 = hs(e5);
  if ("KeyValuePair" === i2 || "Tuple" === i2 || "Pair" === i2) {
    const i3 = ds(ps(e5, 1));
    return i3 ? [i3, null !== (t2 = ps(e5, 2)) && void 0 !== t2 ? t2 : "Nothing"] : null;
  }
  return null;
}
function xs(e5) {
  if (null === e5)
    return null;
  if ("object" == typeof e5 && "dict" in e5)
    return e5.dict;
  const t2 = vs(e5);
  if (t2)
    return { [t2[0]]: t2[1] };
  if ("Dictionary" === hs(e5)) {
    const t3 = {};
    for (let i2 = 1; i2 < ys(e5); i2++) {
      const n2 = vs(ps(e5, i2));
      n2 && (t3[n2[0]] = n2[1]);
    }
    return t3;
  }
  return null;
}
function ks(e5) {
  var t2;
  if (null == e5)
    return null;
  if ("number" == typeof e5)
    return e5;
  if (ss(e5)) {
    let i3 = e5.num.toLowerCase().replace(/[nd]$/g, "").replace(/[\u0009-\u000d\u0020\u00a0]/g, "");
    if (/\([0-9]+\)$/.test(i3)) {
      const [e6, n2, r2] = null !== (t2 = i3.match(/(.+)\(([0-9]+)\)$/)) && void 0 !== t2 ? t2 : [];
      i3 = n2 + r2.repeat(Math.ceil(16 / r2.length));
    }
    return "nan" === i3 ? NaN : "+infinity" === i3 ? 1 / 0 : "-infinity" === i3 ? -1 / 0 : parseFloat(i3);
  }
  const i2 = bs(e5);
  return "NaN" === i2 ? NaN : "+Infinity" === i2 ? 1 / 0 : "-Infinity" === i2 ? -1 / 0 : null;
}
function _s(e5) {
  var t2, i2;
  if (null == e5)
    return [null, null];
  if ("Half" === bs(e5))
    return [1, 2];
  if (function(e6) {
    return null === e6 || !Array.isArray(e6) && ("object" != typeof e6 || !("fn" in e6 || "dic" in e6));
  }(e5))
    return [null, null];
  const n2 = hs(e5);
  if (!n2)
    return [null, null];
  let r2 = null, a2 = null;
  if ("Negate" === n2 && ([r2, a2] = _s(ps(e5, 1)), null !== r2 && null !== a2))
    return [-r2, a2];
  if ("Rational" === n2)
    return [null !== (t2 = ks(ps(e5, 1))) && void 0 !== t2 ? t2 : NaN, null !== (i2 = ks(ps(e5, 2))) && void 0 !== i2 ? i2 : NaN];
  if ("Power" === n2) {
    const t3 = ks(ps(e5, 2));
    1 === t3 ? (r2 = ks(ps(e5, 1)), a2 = 1) : -1 === t3 && (r2 = 1, a2 = ks(ps(e5, 1)));
  }
  return "Divide" === n2 && (r2 = ks(ps(e5, 1)), a2 = ks(ps(e5, 2))), "Multiply" === n2 && "Power" === hs(ps(e5, 2)) && -1 === ks(ps(ps(e5, 2), 2)) && (r2 = ks(ps(e5, 1)), a2 = ks(ps(ps(e5, 2), 1))), null === r2 || null === a2 ? [null, null] : Number.isInteger(r2) && Number.isInteger(a2) ? [r2, a2] : [null, null];
}
function ws(e5, t2) {
  var i2;
  const n2 = hs(e5);
  if (null !== n2)
    return [ws(n2, t2), ...(null !== (i2 = fs(e5)) && void 0 !== i2 ? i2 : []).map((e6) => ws(e6, t2))];
  const r2 = xs(e5);
  if (null !== r2) {
    const e6 = Object.keys(r2), i3 = {};
    for (const n3 of e6)
      i3[n3] = ws(r2[n3], t2);
    return { dict: i3 };
  }
  const a2 = bs(e5);
  return a2 && t2[a2] ? t2[a2] : e5;
}
function Ss(e5, t2) {
  let i2 = null;
  if (Array.isArray(e5) && (i2 = e5), us(e5) && (i2 = e5.fn), null === i2)
    return [];
  let n2 = 1;
  const r2 = [];
  for (; n2 < i2.length; )
    r2.push(t2(i2[n2])), n2 += 1;
  return r2;
}
function Ms(e5, t2, i2, n2 = "both") {
  var r2, a2, o2, s2, l2, u2;
  if ("non" === n2)
    return [e5, t2, i2];
  const c2 = hs(t2), d2 = hs(i2);
  return "left" === n2 ? c2 === e5 ? [e5, ...null !== (r2 = fs(t2)) && void 0 !== r2 ? r2 : [], i2] : [e5, t2, i2] : "right" === n2 ? d2 === e5 ? [e5, t2, ...null !== (a2 = fs(i2)) && void 0 !== a2 ? a2 : []] : [e5, t2, i2] : c2 === e5 && d2 === e5 ? [e5, ...null !== (o2 = fs(t2)) && void 0 !== o2 ? o2 : [], ...null !== (s2 = fs(i2)) && void 0 !== s2 ? s2 : []] : c2 === e5 ? [e5, ...null !== (l2 = fs(t2)) && void 0 !== l2 ? l2 : [], i2] : d2 === e5 ? [e5, t2, ...null !== (u2 = fs(i2)) && void 0 !== u2 ? u2 : []] : [e5, t2, i2];
}
function Ns(e5) {
  var t2;
  let i2 = hs(e5);
  if (null === e5)
    return null;
  if ("Delimiter" === i2) {
    if (null === (e5 = ps(e5, 1)))
      return [];
    if ("Sequence" !== hs(e5))
      return [e5];
  }
  return i2 = hs(e5), "Sequence" === i2 ? null !== (t2 = fs(e5)) && void 0 !== t2 ? t2 : [] : null;
}
function Ls(e5) {
  return null !== e5 && "Sequence" === hs(e5) && 0 === ys(e5);
}
function As(e5) {
  return null === e5 || Ls(e5) ? ["Error", "'missing'"] : e5;
}
function Cs(e5, t2) {
  return t2 > 2 ? "solidus" : "radical";
}
function Es(e5, t2) {
  return t2 > 3 ? "inline-solidus" : "quotient";
}
function Ds(e5, t2, i2, n2) {
  return null === i2 ? "\\sqrt{}" : (n2 = null != n2 ? n2 : 2, "solidus" === t2 ? e5.wrapShort(i2) + "^{1\\/" + e5.serialize(n2) + "}" : "quotient" === t2 ? e5.wrapShort(i2) + "^{\\frac{1}{" + e5.serialize(n2) + "}}" : 2 === ks(n2) ? "\\sqrt{" + e5.serialize(i2) + "}" : "\\sqrt[" + e5.serialize(n2) + "]{" + e5.serialize(i2) + "}");
}
function Ts(e5, t2) {
  if (null === t2)
    return "";
  const i2 = As(ps(t2, 1)), n2 = As(ps(t2, 2)), r2 = Es(0, e5.level);
  if ("inline-solidus" === r2 || "nice-solidus" === r2) {
    const t3 = e5.wrapShort(i2), a2 = e5.wrapShort(n2);
    return "inline-solidus" === r2 ? `${t3}\\/${a2}` : `^{${t3}}\\!\\!/\\!_{${a2}}`;
  }
  return "reciprocal" === r2 ? e5.wrap(i2) + e5.wrap(n2) + "^{-1}" : "factor" === r2 ? "\\frac{1}{" + e5.serialize(n2) + "}" + e5.wrap(i2) : `\\frac{${e5.serialize(i2)}}{${e5.serialize(n2)}}`;
}
function zs(e5, t2) {
  var i2;
  const n2 = hs(t2), r2 = As(ps(t2, 1)), a2 = As(ps(t2, 2));
  if ("Sqrt" === n2)
    return Ds(e5, Cs(0, e5.level), r2, 2);
  if ("Root" === n2)
    return Ds(e5, Cs(0, e5.level), r2, a2);
  const o2 = null !== (i2 = ks(a2)) && void 0 !== i2 ? i2 : 1;
  if (-1 === o2)
    return e5.serialize(["Divide", "1", r2]);
  if (o2 < 0)
    return e5.serialize(["Divide", "1", ["Power", r2, -o2]]);
  if ("Divide" === hs(a2) || "Rational" === hs(a2)) {
    if (1 === ks(ps(a2, 1)))
      return Ds(e5, Cs(0, e5.level), r2, ps(a2, 2));
  } else if ("Power" === hs(a2) && -1 === ks(ps(a2, 2)))
    return Ds(e5, Cs(0, e5.level), r2, ps(a2, 1));
  return e5.wrapShort(r2) + "^{" + e5.serialize(a2) + "}";
}
var qs = [{ name: "CatalanConstant", serialize: "G" }, { name: "GoldenRatio", serialize: "\\varphi" }, { name: "EulerGamma", serialize: "\\gamma" }, { name: "Degrees", serialize: "\\frac{\\pi}{180}" }, { trigger: ["\\infty"], parse: { num: "+Infinity" } }, { name: "ComplexInfinity", trigger: ["\\tilde", "\\infty"], serialize: "\\tilde\\infty" }, { trigger: ["\\tilde", "<{>", "\\infty", "<}>"], parse: "ComplexInfinity" }, { name: "Pi", trigger: ["\\pi"] }, { trigger: ["\u03C0"], parse: "Pi" }, { name: "ExponentialE", trigger: ["e"], serialize: "\\exponentialE" }, { trigger: ["\\mathrm", "<{>", "e", "<}>"], parse: "ExponentialE" }, { trigger: ["\\exponentialE"], parse: "ExponentialE" }, { name: "ImaginaryUnit", trigger: ["\\imaginaryI"] }, { trigger: ["i"], parse: "ImaginaryUnit" }, { trigger: ["\\mathrm", "<{>", "i", "<}>"], parse: "ImaginaryUnit" }, { name: "Abs", kind: "matchfix", openDelimiter: "|", closeDelimiter: "|", parse: (e5, t2) => Ls(t2) ? null : ["Abs", t2] }, { name: "Add", trigger: ["+"], kind: "infix", associativity: "both", precedence: 275, parse: (e5, t2, i2) => {
  if (275 < t2.minPrec)
    return null;
  const n2 = e5.matchExpression({ ...t2, minPrec: 275 });
  return null === n2 ? null : Ms("Add", i2, n2);
}, serialize: function(e5, t2) {
  var i2, n2;
  e5.level -= 1;
  const r2 = hs(t2);
  let a2 = "", o2 = ps(t2, 1);
  if ("Negate" === r2)
    a2 = "-" + e5.wrap(o2, 276);
  else if ("Add" === r2) {
    let r3 = null !== (i2 = ks(o2)) && void 0 !== i2 ? i2 : NaN, s2 = !Number.isNaN(r3) && Number.isInteger(r3) && Math.abs(r3) <= 1e3;
    a2 = e5.serialize(o2);
    const l2 = ys(t2) + 1;
    for (let i3 = 2; i3 < l2; i3++) {
      o2 = ps(t2, i3), r3 = null !== (n2 = ks(o2)) && void 0 !== n2 ? n2 : NaN;
      const l3 = !Number.isNaN(r3) && Number.isInteger(r3) && Math.abs(r3) <= 1e3;
      let u2 = false;
      if (null !== o2 && s2) {
        const [t3, i4] = _s(o2);
        null !== t3 && null !== i4 && isFinite(t3) && isFinite(i4) && i4 > 1 && i4 <= 100 && t3 > 0 && t3 <= 100 && (a2 = as([a2, e5.options.invisiblePlus, e5.serialize(o2)]), u2 = true);
      }
      if (!u2)
        if (r3 < 0)
          a2 += e5.serialize(o2);
        else if ("Negate" === hs(o2))
          a2 += e5.wrap(o2, 275);
        else {
          const t3 = e5.wrap(o2, 275);
          "-" === t3[0] || "+" === t3[0] ? a2 += t3 : a2 = a2 + "+" + t3;
        }
      s2 = l3;
    }
  } else if ("Subtract" === r2) {
    a2 = e5.wrap(o2, 275);
    const i3 = ps(t2, 2);
    if (null !== i3) {
      const t3 = e5.wrap(i3, 275);
      "-" === t3[0] ? a2 += "+" + t3.slice(1) : "+" === t3[0] ? a2 += "-" + t3.slice(1) : a2 = a2 + "-" + t3;
    }
  }
  return e5.level += 1, a2;
} }, { kind: "prefix", trigger: ["+"], precedence: 275, parse: (e5, t2) => 275 < t2.minPrec ? null : e5.matchExpression({ ...t2, minPrec: 400 }) }, { name: "Ceil", kind: "matchfix", openDelimiter: "\\lceil", closeDelimiter: "\\rceil" }, { name: "Complex", precedence: 274, serialize: (e5, t2) => {
  const i2 = ks(ps(t2, 1)), n2 = ks(ps(t2, 2));
  if (0 === n2)
    return e5.serialize(ps(t2, 1));
  const r2 = 1 === n2 ? "\\imaginaryI" : -1 === n2 ? "-\\imaginaryI" : as([e5.serialize(ps(t2, 2)), "\\imaginaryI"]);
  return 0 === i2 ? r2 : as(null !== n2 && n2 < 0 ? [e5.serialize(ps(t2, 1)), r2] : [e5.serialize(ps(t2, 1)), "+", r2]);
} }, { name: "Divide", trigger: "\\frac", precedence: 660, parse: function(e5) {
  var t2, i2;
  const n2 = As(e5.matchRequiredLatexArgument()), r2 = As(e5.matchRequiredLatexArgument());
  if ("PartialDerivative" === hs(n2) && ("PartialDerivative" === hs(r2) || "Multiply" === hs(r2) && "PartialDerivative" === hs(ps(r2, 1)))) {
    const a2 = null !== (t2 = ps(n2, 3)) && void 0 !== t2 ? t2 : null;
    let o2 = ps(n2, 1);
    null === o2 && (o2 = As(e5.matchExpression()));
    let s2 = [];
    if ("Multiply" === hs(r2)) {
      for (const e6 of null !== (i2 = fs(r2)) && void 0 !== i2 ? i2 : [])
        if ("PartialDerivative" === hs(e6)) {
          const t3 = ps(e6, 2);
          t3 && s2.push(t3);
        }
    } else {
      const e6 = ps(r2, 2);
      e6 && s2.push(e6);
    }
    return s2.length > 1 && (s2 = ["List", ...s2]), ["PartialDerivative", o2, ...s2, null === a2 ? 1 : a2];
  }
  return ["Divide", n2, r2];
}, serialize: Ts }, { kind: "infix", trigger: "\\over", precedence: 660, parse: "Divide" }, { trigger: ["\\/"], kind: "infix", associativity: "non", precedence: 660, parse: "Divide" }, { trigger: ["/"], kind: "infix", associativity: "non", precedence: 660, parse: "Divide" }, { trigger: ["\\div"], kind: "infix", associativity: "non", precedence: 660, parse: "Divide" }, { name: "Exp", serialize: (e5, t2) => as(["\\exponentialE^{", e5.serialize(As(ps(t2, 1))), "}"]) }, { name: "Factorial", trigger: ["!"], kind: "postfix", precedence: 810 }, { name: "Factorial2", trigger: ["!", "!"], kind: "postfix", precedence: 810 }, { name: "Floor", kind: "matchfix", openDelimiter: "\\lfloor", closeDelimiter: "\\rfloor" }, { trigger: "floor", kind: "function", parse: (e5) => {
  const t2 = e5.matchArguments("enclosure");
  return null === t2 ? "Floor" : ["Floor", ...t2];
} }, { name: "Gcd", trigger: "gcd", kind: "function" }, { name: "Half", serialize: "\\frac12" }, { name: "Lg", serialize: (e5, t2) => "\\ln_{10}" + e5.wrapArguments(t2) }, { name: "Lb", trigger: "\\lb", parse: (e5) => {
  const t2 = e5.matchArguments("implicit");
  return null === t2 ? null : ["Log", ...t2, 2];
} }, { name: "Ln", serialize: (e5, t2) => "\\ln" + e5.wrapArguments(t2) }, { name: "Log", trigger: "\\ln", parse: (e5) => {
  var t2;
  let i2 = null, n2 = null;
  e5.match("_") && (i2 = null !== (t2 = e5.matchStringArgument()) && void 0 !== t2 ? t2 : e5.next(), n2 = Number.parseFloat(null != i2 ? i2 : "10"));
  const r2 = e5.matchArguments("implicit");
  return null === r2 ? null : 10 === n2 ? ["Lg", ...r2] : 2 === n2 ? ["Lb", ...r2] : null === i2 ? ["Ln", ...r2] : ["Log", ...r2, i2];
}, serialize: (e5, t2) => {
  const i2 = function(e6) {
    return ps(e6, 2);
  }(t2);
  return i2 ? as(["\\ln_{", i2.toString(), "}", e5.wrap(gs(t2))]) : "\\ln" + e5.wrapArguments(t2);
} }, { name: "Lcm", trigger: "lcm", kind: "function" }, { name: "MinusPlus", trigger: ["\\mp"], kind: "infix", associativity: "both", precedence: 270 }, { name: "Multiply", trigger: ["\\times"], kind: "infix", associativity: "both", precedence: 390, serialize: function e3(t2, i2) {
  var n2;
  if (null === i2)
    return "";
  t2.level -= 1;
  let r2 = "";
  const [a2, o2] = function(e5) {
    var t3, i3;
    if ("Multiply" !== hs(e5))
      return [[], []];
    const n3 = [], r3 = [], a3 = null !== (t3 = fs(e5)) && void 0 !== t3 ? t3 : [];
    for (const e6 of a3)
      if ("Power" === hs(e6)) {
        const t4 = ps(e6, 1), a4 = ps(e6, 2);
        if ("Negate" === hs(a4)) {
          const e7 = ps(a4, 1);
          t4 && e7 && r3.push(["Power", t4, e7]);
        } else {
          const o3 = null !== (i3 = ks(a4)) && void 0 !== i3 ? i3 : NaN;
          -1 === o3 ? t4 && r3.push(t4) : o3 < 0 ? t4 && r3.push(["Power", t4, -o3]) : n3.push(e6);
        }
      } else
        n3.push(e6);
    return [n3, r3];
  }(i2);
  if (o2.length > 0 && (r2 = 1 === o2.length && 1 === o2[0] ? 0 === a2.length ? "1" : 1 === a2.length ? t2.serialize(a2[0]) : e3(t2, ["Multiply", ...a2]) : t2.serialize(["Divide", 1 === a2.length ? a2[0] : ["Multiply", ...a2], 1 === o2.length ? o2[0] : ["Multiply", ...o2]])), r2)
    return t2.level += 1, r2;
  let s2 = false, l2 = null;
  const u2 = ys(i2) + 1;
  let c2 = false;
  for (let e5 = 1; e5 < u2; e5++) {
    if (l2 = ps(i2, e5), null === l2)
      continue;
    let a3;
    if ("number" == typeof l2 || ss(l2))
      a3 = t2.serialize(l2), "-1" !== a3 || r2 ? ("-" === a3[0] && (a3 = a3.slice(1), s2 = !s2), r2 = r2 ? as([r2, t2.options.multiply, a3]) : a3) : (r2 = "", s2 = !s2), c2 = true;
    else {
      if ("Power" === hs(l2)) {
        const [e6, i3] = _s(ps(l2, 2));
        if (1 === e6 && null !== i3) {
          r2 += Ds(t2, Cs(0, t2.level), ps(l2, 1), i3), c2 = false;
          continue;
        }
      }
      if ("Power" !== hs(l2) || isNaN(null !== (n2 = ks(ps(l2, 1))) && void 0 !== n2 ? n2 : NaN)) {
        if ("Negate" === hs(l2) && (l2 = ps(l2, 1), s2 = !s2), a3 = t2.wrap(l2, 390), r2) {
          const e6 = hs(l2);
          r2 = !c2 || "Divide" !== e6 && "Rational" !== e6 ? t2.options.invisibleMultiply ? as([r2, t2.options.invisibleMultiply, a3]) : as([r2, a3]) : as([r2, t2.options.multiply, a3]);
        } else
          r2 = a3;
        c2 = false;
      } else
        a3 = t2.serialize(l2), r2 = r2 ? as([r2, t2.options.multiply, a3]) : a3, c2 = true;
    }
  }
  return t2.level += 1, s2 ? "-" + r2 : r2;
} }, { trigger: ["\\cdot"], kind: "infix", associativity: "both", precedence: 390, parse: (e5, t2, i2) => {
  if (391 < t2.minPrec)
    return null;
  const n2 = e5.matchExpression({ ...t2, minPrec: 392 });
  return null === n2 ? null : Ms("Multiply", i2, n2);
} }, { trigger: ["*"], kind: "infix", associativity: "both", precedence: 390, parse: (e5, t2, i2) => {
  if (391 < t2.minPrec)
    return null;
  const n2 = e5.matchExpression({ ...t2, minPrec: 392 });
  return null === n2 ? null : ["Multiply", i2, n2];
} }, { name: "Negate", trigger: ["-"], kind: "prefix", parse: (e5, t2) => {
  if (276 < t2.minPrec)
    return null;
  const i2 = e5.matchExpression({ ...t2, minPrec: 400 });
  return null === i2 ? null : ["Negate", i2];
}, precedence: 275 }, { kind: "matchfix", openDelimiter: "||", closeDelimiter: "||", parse: (e5, t2) => Ls(t2) ? null : ["Norm", t2] }, { name: "Norm", kind: "matchfix", openDelimiter: ["\\left", "\\Vert"], closeDelimiter: ["\\right", "\\Vert"] }, { name: "PlusMinus", trigger: ["\\pm"], kind: "infix", associativity: "both", precedence: 270 }, { name: "Power", trigger: ["^"], kind: "infix", serialize: zs }, { trigger: "\\prod", precedence: 265, name: "Product", parse: Is("Product"), serialize: Fs("\\prod") }, { name: "Rational", precedence: 660, serialize: Ts }, { name: "Root", serialize: zs }, { name: "Round", trigger: "round", kind: "function" }, { name: "Square", precedence: 720, serialize: (e5, t2) => e5.wrapShort(ps(t2, 1)) + "^2" }, { trigger: "\\sum", precedence: 265, name: "Sum", parse: Is("Sum"), serialize: Fs("\\sum") }, { name: "Sign", trigger: "sgn", kind: "function" }, { name: "Sqrt", trigger: ["\\sqrt"], parse: function(e5) {
  const t2 = e5.matchOptionalLatexArgument(), i2 = e5.matchRequiredLatexArgument();
  return null === i2 || Ls(i2) ? null !== t2 ? ["Root", ["Error", "'missing'"], As(t2)] : ["Sqrt", ["Error", "'missing'"]] : null !== t2 ? ["Root", i2, t2] : ["Sqrt", i2];
}, serialize: zs }, { name: "Subtract", trigger: ["-"], kind: "infix", associativity: "both", precedence: 275, parse: (e5, t2, i2) => {
  if (276 < t2.minPrec)
    return null;
  const n2 = e5.matchExpression({ ...t2, minPrec: 277 });
  return null === n2 ? null : ["Subtract", i2, n2];
} }];
function Is(e5) {
  return (t2) => {
    var i2, n2;
    t2.skipSpace();
    let r2 = null, a2 = null;
    for (; !(a2 && r2 || "_" !== t2.peek && "^" !== t2.peek); )
      t2.match("_") ? a2 = t2.matchRequiredLatexArgument() : t2.match("^") && (r2 = t2.matchRequiredLatexArgument()), t2.skipSpace();
    ("Nothing" === a2 || Ls(a2)) && (a2 = null), ("Nothing" === r2 || Ls(r2)) && (r2 = null);
    let o2 = null, s2 = null;
    "Equal" === hs(a2) ? (o2 = ps(a2, 1), s2 = ps(a2, 2)) : o2 = a2;
    const l2 = bs(o2);
    l2 && (null === (i2 = t2.computeEngine) || void 0 === i2 || i2.pushScope({ symbolTable: { symbols: [{ name: l2, domain: "Integer" }] } }));
    let u2 = t2.matchExpression({ minPrec: 266 });
    return u2 && l2 && (u2 = ["Lambda", ws(u2, { [l2]: "_" })]), l2 && (null === (n2 = t2.computeEngine) || void 0 === n2 || n2.popScope()), u2 ? r2 ? [e5, u2, ["Tuple", null != o2 ? o2 : "Nothing", null != s2 ? s2 : 1, r2]] : s2 ? [e5, u2, ["Tuple", null != o2 ? o2 : "Nothing", s2]] : o2 ? [e5, u2, ["Tuple", o2]] : [e5, u2] : [e5];
  };
}
function Fs(e5) {
  return (t2, i2) => {
    var n2;
    if (!ps(i2, 1))
      return e5;
    let r2 = ps(i2, 2);
    const a2 = hs(r2);
    "Tuple" !== a2 && "Triple" !== a2 && "Pair" !== a2 && "Single" !== a2 && (r2 = null);
    const o2 = null !== (n2 = ps(r2, 1)) && void 0 !== n2 ? n2 : "n";
    let s2 = ps(i2, 1);
    if ("Lambda" === hs(s2) && ps(s2, 1) && (s2 = ws(ps(s2, 1), { _: o2, _1: o2 })), !r2)
      return ps(i2, 2) ? as([e5, "_{", t2.serialize(ps(i2, 2)), "}", t2.serialize(s2)]) : as([e5, "_n", t2.serialize(s2)]);
    const l2 = ps(r2, 2);
    let u2 = [];
    "Nothing" !== bs(o2) && l2 ? u2 = [t2.serialize(o2), "=", t2.serialize(l2)] : "Nothing" !== bs(o2) ? u2 = [t2.serialize(o2)] : l2 && (u2 = [t2.serialize(l2)]), u2.length > 0 && (u2 = ["_{", ...u2, "}"]);
    let c2 = [];
    return ps(r2, 3) && (c2 = ["^{", t2.serialize(ps(r2, 3)), "}"]), as([e5, ...c2, ...u2, t2.serialize(s2)]);
  };
}
function Os(e5 = "") {
  return (t2, i2) => {
    var n2;
    return (null !== (n2 = fs(i2)) && void 0 !== n2 ? n2 : []).map((e6) => t2.serialize(e6)).join(e5);
  };
}
var Ps = [{ trigger: ["\\placeholder"], parse: (e5) => {
  if (e5.skipSpaceTokens(), e5.match("["))
    for (; !e5.match("]") && !e5.atBoundary; )
      e5.next();
  if (e5.skipSpaceTokens(), e5.match("<{>"))
    for (; !e5.match("<}>") && !e5.atBoundary; )
      e5.next();
  return "Nothing";
} }, { name: "BaseForm", kind: "function", serialize: (e5, t2) => {
  var i2, n2;
  const r2 = null !== (i2 = ks(ps(t2, 2))) && void 0 !== i2 ? i2 : NaN;
  if (isFinite(r2) && r2 >= 2 && r2 <= 36) {
    const e6 = null !== (n2 = ks(ps(t2, 1))) && void 0 !== n2 ? n2 : NaN;
    if (isFinite(e6) && Number.isInteger(e6)) {
      let t3 = Number(e6).toString(r2), i3 = 0;
      if (2 === r2 || 10 === r2 ? i3 = 4 : 16 === r2 ? i3 = 2 : r2 > 16 && (i3 = 4), i3 > 0) {
        const e7 = t3;
        t3 = "";
        for (let n3 = 0; n3 < e7.length; n3++)
          n3 > 0 && n3 % i3 == 0 && (t3 = "\\, " + t3), t3 = e7[e7.length - n3 - 1] + t3;
      }
      return `(\\text{${t3}}_{${r2}}`;
    }
  }
  return "\\operatorname{BaseForm}(" + e5.serialize(ps(t2, 1)) + ", " + e5.serialize(ps(t2, 2)) + ")";
} }, { name: "Delimiter", serialize: (e5, t2) => {
  var i2, n2, r2, a2, o2;
  const s2 = ys(t2);
  if (0 === s2)
    return "";
  const l2 = e5.options.groupStyle(t2, e5.level + 1), u2 = ps(t2, 1);
  if (1 === s2)
    return e5.wrapString(e5.serialize(u2), l2);
  let c2 = "", d2 = "", h2 = "";
  if (s2 > 1) {
    const e6 = null !== (i2 = ds(ps(t2, 2))) && void 0 !== i2 ? i2 : "";
    d2 = null !== (n2 = e6[0]) && void 0 !== n2 ? n2 : "", h2 = null !== (r2 = e6[1]) && void 0 !== r2 ? r2 : "", c2 = null !== (a2 = e6[2]) && void 0 !== a2 ? a2 : "";
  }
  const m2 = "List" === hs(u2) ? Os(c2)(e5, u2) : e5.serialize(u2);
  return e5.wrapString(m2, l2, null !== (o2 = ds(ps(t2, 2))) && void 0 !== o2 ? o2 : void 0), d2 && h2 ? `${d2} ${m2} ${h2}` : e5.wrapString(m2, l2);
} }, { name: "Domain", serialize: (e5, t2) => "Error" === hs(t2) ? e5.serialize(t2) : e5.serialize(ps(t2, 1)) }, { name: "Error", serialize: (e5, t2) => {
  var i2;
  if ("missing" === ds(ps(t2, 1)))
    return `\\textcolor{red}{${null !== (i2 = e5.options.missingSymbol) && void 0 !== i2 ? i2 : "\\placeholder{}"}}`;
  const n2 = function(e6, t3) {
    var i3;
    const n3 = ps(t3, 2);
    return n3 ? "Latex" === hs(n3) ? $s(null !== (i3 = ds(ps(n3, 1))) && void 0 !== i3 ? i3 : "") : "Hold" === hs(n3) ? e6.serialize(ps(n3, 1)) : e6.serialize(n3) : "";
  }(e5, t2);
  return "string" == typeof ds(ps(t2, 1)) ? `\\texttt{\\textcolor{red}{${n2 || "\\blacksquare"}}}` : `\\texttt{\\textcolor{red}{${e5.serialize(ps(t2, 1)) || n2 || "\\blacksquare"}}}`;
} }, { name: "ErrorCode", serialize: (e5, t2) => {
  var i2;
  const n2 = ds(ps(t2, 1));
  return "missing" === n2 ? null !== (i2 = e5.options.missingSymbol) && void 0 !== i2 ? i2 : "\\placeholder{}" : "unexpected-command" === n2 || "unexpected-operator" === n2 || "unexpected-token" === n2 || "invalid-symbol-name" === n2 || "unknown-environment" === n2 || "unknown-environment" === n2 || "unexpected-base" === n2 || "incompatible-domain" === n2 || "invalid-domain-expression" === n2 ? "" : "\\texttt{\\textcolor{red}{\\blacksquare}}";
} }, { name: "FromLatex", serialize: (e5, t2) => `\\texttt{${$s(ds(ps(t2, 1)))}}` }, { name: "Latex", serialize: (e5, t2) => null === t2 ? "" : as(Ss(t2, (t3) => {
  var i2;
  return null !== (i2 = ds(t3)) && void 0 !== i2 ? i2 : e5.serialize(t3);
})) }, { name: "LatexString", serialize: (e5, t2) => null === t2 ? "" : as(Ss(t2, (t3) => e5.serialize(t3))) }, { name: "LatexTokens", serialize: function(e5, t2) {
  return null === t2 ? "" : as(Ss(t2, (t3) => {
    const i2 = ds(t3);
    return null === i2 ? e5.serialize(t3) : "<{>" === i2 ? "{" : "<}>" === i2 ? "}" : "<$>" === i2 ? "$" : "<$$>" === i2 ? "$$" : "<space>" === i2 ? " " : i2;
  }));
} }, { name: "List", kind: "matchfix", openDelimiter: "[", closeDelimiter: "]", parse: (e5, t2) => {
  var i2;
  return null === t2 ? ["List"] : "Sequence" !== hs(t2) && "List" !== hs(t2) ? ["List", t2] : ["List", ...null !== (i2 = fs(t2)) && void 0 !== i2 ? i2 : []];
}, serialize: (e5, t2) => as(["\\lbrack", Os(", ")(e5, t2), "\\rbrack"]) }, { kind: "matchfix", openDelimiter: "(", closeDelimiter: ")", parse: (e5, t2) => {
  var i2;
  return null === t2 ? null : "Sequence" === hs(t2) || "List" === hs(t2) ? 0 === ys(t2) ? ["Delimiter"] : ["Delimiter", ["List", ...null !== (i2 = fs(t2)) && void 0 !== i2 ? i2 : []]] : ["Delimiter", t2];
} }, { name: "Sequence", trigger: [","], kind: "infix", precedence: 20, parse: (e5, t2, i2) => {
  if (t2.minPrec >= 20)
    return null;
  const n2 = ["List", i2];
  let r2 = false;
  for (; !r2; ) {
    for (r2 = true, e5.skipSpace(); e5.match(","); )
      n2.push("Nothing"), e5.skipSpace();
    if (e5.atTerminator(t2))
      n2.push("Nothing");
    else {
      const i3 = e5.matchExpression({ ...t2, minPrec: 20 });
      n2.push(null != i3 ? i3 : "Nothing"), r2 = null === i3;
    }
    r2 || (e5.skipSpace(), r2 = !e5.match(","));
  }
  return n2;
}, serialize: Os(", ") }, { trigger: [";"], kind: "infix", precedence: 19, parse: (e5, t2, i2) => {
  var n2, r2;
  if (t2.minPrec >= 19)
    return null;
  const a2 = ["Sequence", ...null !== (n2 = Ns(i2)) && void 0 !== n2 ? n2 : ["List", i2]];
  for (; ; ) {
    for (e5.skipSpace(); e5.match(","); )
      a2.push("Nothing"), e5.skipSpace();
    if (e5.atEnd) {
      a2.push("Nothing");
      break;
    }
    const i3 = e5.matchExpression({ ...t2, minPrec: 19 });
    if (null === i3) {
      a2.push("Nothing");
      break;
    }
    if (a2.push(...null !== (r2 = Ns(i3)) && void 0 !== r2 ? r2 : ["List", i3]), e5.skipSpace(), !e5.match(","))
      break;
  }
  return a2;
} }, { name: "String", trigger: ["\\text"], parse: (e5) => Bs(e5), serialize: (e5, t2) => {
  const i2 = fs(t2);
  return null === i2 || 0 === i2.length ? "\\text{}" : as(["\\text{", i2.map((t3) => e5.serialize(t3)).join(""), "}"]);
} }, { name: "Subscript", trigger: ["_"], kind: "infix", serialize: (e5, t2) => 2 === ys(t2) ? e5.serialize(ps(t2, 1)) + "_{" + e5.serialize(ps(t2, 2)) + "}" : "_{" + e5.serialize(ps(t2, 1)) + "}" }, { name: "Superplus", trigger: ["^", "+"], kind: "postfix" }, { name: "Subplus", trigger: ["_", "+"], kind: "postfix" }, { name: "Superminus", trigger: ["^", "-"], kind: "postfix" }, { name: "Subminus", trigger: ["_", "-"], kind: "postfix" }, { trigger: ["^", "*"], kind: "postfix", parse: (e5, t2) => ["Superstar", t2] }, { name: "Superstar", trigger: ["^", "\\star"], kind: "postfix" }, { trigger: ["_", "*"], kind: "postfix", parse: (e5, t2) => ["Substar", t2] }, { name: "Substar", trigger: ["_", "\\star"], kind: "postfix" }, { name: "Superdagger", trigger: ["^", "\\dagger"], kind: "postfix" }, { trigger: ["^", "\\dag"], kind: "postfix", parse: (e5, t2) => ["Superdagger", t2] }, { name: "Prime", trigger: ["^", "\\prime"], kind: "postfix" }, { trigger: ["^", "\\doubleprime"], kind: "postfix", parse: (e5, t2) => ["Prime", As(t2), 2] }, { name: "InverseFunction", serialize: (e5, t2) => e5.serialize(ps(t2, 1)) + "^{-1}" }, { name: "Derivative", serialize: (e5, t2) => {
  var i2;
  const n2 = null !== (i2 = ks(ps(t2, 1))) && void 0 !== i2 ? i2 : NaN;
  if (!isFinite(n2))
    return "";
  const r2 = e5.serialize(ps(t2, 2));
  return 1 === n2 ? r2 + "^{\\prime}" : 2 === n2 ? r2 + "^{\\doubleprime}" : r2 + "^{(" + Number(n2).toString() + ")}";
} }, { name: "Piecewise", trigger: "cases", kind: "environment", parse: (e5) => {
  const t2 = e5.matchTabular("cases");
  return t2 ? ["Piecewise", ["List", ...t2.map((e6) => {
    var t3, i2;
    return ["Tuple", null !== (t3 = e6[1]) && void 0 !== t3 ? t3 : "Nothing", null !== (i2 = e6[0]) && void 0 !== i2 ? i2 : ["Sequence"]];
  })]] : ["Sequence"];
}, serialize: (e5, t2) => {
  var i2;
  if ("List" !== hs(ps(t2, 1)))
    return "";
  const n2 = null !== (i2 = fs(ps(t2, 1))) && void 0 !== i2 ? i2 : [], r2 = [];
  let a2 = "";
  for (const t3 of n2) {
    if (("Tuple" === hs(t3) || "Pair" === hs(t3)) && (r2.push(a2), ps(t3, 2))) {
      r2.push(e5.serialize(ps(t3, 2)));
      const i3 = ps(t3, 1);
      null !== i3 && r2.push("&", e5.serialize(i3));
    }
    a2 = "\\\\";
  }
  return as(["\\begin{cases}", ...r2, "\\end{cases}"]);
} }];
function Bs(e5, t2) {
  var i2, n2, r2;
  if (!e5.match("<{>"))
    return "''";
  const a2 = [];
  let o2, s2 = "", l2 = null;
  for (; !e5.atEnd && !e5.match("<}>"); )
    if ("<{>" === e5.peek)
      a2.push(Bs(e5));
    else if (e5.match("\\textbf") && e5.match("<{>"))
      a2.push(Bs(e5, { "font-weight": "bold" }));
    else if (e5.match("\\color") && e5.match("<{>")) {
      const t3 = e5.matchColor();
      t3 && e5.match("<}>") && (null !== l2 && s2 ? a2.push(["Style", s2, { dict: l2 }]) : s2 && a2.push(["String", s2]), s2 = "", l2 = { color: t3 });
    } else if (e5.match("<space>"))
      s2 += " ";
    else if (e5.match("<$>")) {
      const t3 = e5.index, n3 = null !== (i2 = e5.matchExpression()) && void 0 !== i2 ? i2 : ["Sequence"];
      e5.skipSpace(), e5.match("<$>") ? a2.push(n3) : (s2 += "$", e5.index = t3);
    } else if (e5.match("<$$>")) {
      const t3 = e5.index, i3 = null !== (n2 = e5.matchExpression()) && void 0 !== n2 ? n2 : ["Sequence"];
      e5.skipSpace(), e5.match("<$$>") ? a2.push(i3) : (s2 += "$$", e5.index = t3);
    } else
      s2 += null !== (r2 = e5.matchChar()) && void 0 !== r2 ? r2 : "";
  return null !== l2 && s2 ? a2.push(["Style", `'${s2}'`, { dict: l2 }]) : s2 && a2.push(`'${s2}'`), o2 = 1 === a2.length ? a2[0] : a2.every((e6) => null !== ds(e6)) ? "'" + a2.map((e6) => ds(e6)).join() + "'" : ["String", ...a2], t2 ? ["Style", o2, { dict: t2 }] : o2;
}
function $s(e5) {
  return null === e5 ? "" : e5.replace(/[{}\[\]\\:\-\$%]/g, (e6) => {
    var t2;
    return null !== (t2 = { "{": "\\lbrace ", "}": "\\rbrace ", "[": "\\lbrack ", "]": "\\rbrack ", ":": "\\colon ", "\\": "\\backslash " }[e6]) && void 0 !== t2 ? t2 : "\\" + e6;
  });
}
function Vs(e5) {
  return (t2) => {
    const i2 = t2.matchRequiredLatexArgument();
    return null === i2 ? [e5] : [e5, i2];
  };
}
var Ks = [{ name: "Overscript", trigger: ["\\overset"], kind: "infix", precedence: 700 }, { name: "Underscript", trigger: ["\\underset"], kind: "infix", precedence: 700 }, { name: "Increment", trigger: ["+", "+"], kind: "postfix", precedence: 880 }, { name: "Decrement", trigger: ["-", "-"], kind: "postfix", precedence: 880 }, { name: "PreIncrement", trigger: ["+", "+"], kind: "prefix", precedence: 880 }, { name: "PreDecrement", trigger: ["-", "-"], kind: "prefix", precedence: 880 }, { name: "Ring", trigger: ["\\circ"], kind: "infix", precedence: 265 }, { name: "Transpose", trigger: ["^", "T"], kind: "infix" }, { name: "ConjugateTranspose", trigger: ["^", "H"], kind: "infix" }, { name: "StringJoin", trigger: ["\\lt", "\\gt"], kind: "infix", precedence: 780 }, { name: "Starstar", trigger: ["\\star", "\\star"], kind: "infix", precedence: 780 }, { name: "PartialDerivative", trigger: ["\\partial"], kind: "prefix", parse: (e5) => {
  var t2, i2;
  let n2 = false, r2 = "Nothing", a2 = "Nothing";
  for (; !n2; )
    e5.skipSpace(), e5.match("_") ? a2 = e5.matchRequiredLatexArgument() : e5.match("^") ? r2 = e5.matchRequiredLatexArgument() : n2 = true;
  const o2 = Ns(a2);
  if (o2 && (a2 = ["List", ...o2]), null === a2 || null === r2)
    return null;
  let s2 = null !== (t2 = e5.matchRequiredLatexArgument()) && void 0 !== t2 ? t2 : "Nothing";
  return "Nothing" === s2 || Ls(s2) || (s2 = [s2, ...null !== (i2 = e5.matchArguments("enclosure")) && void 0 !== i2 ? i2 : ["Nothing"]]), ["PartialDerivative", s2, a2, r2];
}, serialize: (e5, t2) => {
  var i2;
  let n2 = "\\partial";
  const r2 = ps(t2, 1), a2 = ps(t2, 2), o2 = ps(t2, 3);
  return null !== a2 && "Nothing" !== a2 && ("List" === hs(a2) ? n2 += "_{" + e5.serialize(["Sequence", ...null !== (i2 = fs(a2)) && void 0 !== i2 ? i2 : []]) + "}" : n2 += "_{" + e5.serialize(a2) + "}"), null !== o2 && "Nothing" !== o2 && (n2 += "^{" + e5.serialize(o2) + "}"), null !== r2 && "Nothing" !== r2 && (n2 += e5.serialize(r2)), n2;
}, precedence: 740 }, { name: "OverBar", trigger: ["\\overline"], parse: Vs("OverBar") }, { name: "UnderBar", trigger: ["\\underline"], parse: Vs("UnderBar") }, { name: "OverVector", trigger: ["\\vec"], parse: Vs("OverVector") }, { name: "OverTilde", trigger: ["\\tilde"], parse: Vs("OverTilde") }, { name: "OverHat", trigger: ["\\hat"], parse: Vs("OverHat") }, { name: "OverRightArrow", trigger: ["\\overrightarrow"], parse: Vs("OverRightArrow") }, { name: "OverLeftArrow", trigger: ["\\overleftarrow"], parse: Vs("OverLeftArrow") }, { name: "OverRightDoubleArrow", trigger: ["\\Overrightarrow"], parse: Vs("OverRightDoubleArrow") }, { name: "OverLeftHarpoon", trigger: ["\\overleftharpoon"], parse: Vs("OverLeftHarpoon") }, { name: "OverRightHarpoon", trigger: ["\\overrightharpoon"], parse: Vs("OverRightHarpoon") }, { name: "OverLeftRightArrow", trigger: ["\\overleftrightarrow"], parse: Vs("OverLeftRightArrow") }, { name: "OverBrace", trigger: ["\\overbrace"], parse: Vs("OverBrace") }, { name: "OverLineSegment", trigger: ["\\overlinesegment"], parse: Vs("OverLineSegment") }, { name: "OverGroup", trigger: ["\\overgroup"], parse: Vs("OverGroup") }, { trigger: ["\\displaystyle"], parse: () => ["Sequence"] }, { trigger: ["\\textstyle"], parse: () => ["Sequence"] }, { trigger: ["\\scriptstyle"], parse: () => ["Sequence"] }, { trigger: ["\\scriptscriptstyle"], parse: () => ["Sequence"] }, { trigger: ["\\tiny"], parse: () => ["Sequence"] }, { trigger: ["\\scriptsize"], parse: () => ["Sequence"] }, { trigger: ["\\footnotesize"], parse: () => ["Sequence"] }, { trigger: ["\\small"], parse: () => ["Sequence"] }, { trigger: ["\\normalsize"], parse: () => ["Sequence"] }, { trigger: ["\\large"], parse: () => ["Sequence"] }, { trigger: ["\\Large"], parse: () => ["Sequence"] }, { trigger: ["\\LARGE"], parse: () => ["Sequence"] }, { trigger: ["\\huge"], parse: () => ["Sequence"] }, { trigger: ["\\Huge"], parse: () => ["Sequence"] }, { name: "Style", serialize: (e5, t2) => {
  let i2 = e5.serialize(ps(t2, 1));
  const n2 = xs(ps(t2, 2));
  if (null === n2)
    return i2;
  "block" === ds(n2.display) ? i2 = as(["{\\displaystyle", i2, "}"]) : "inline" === ds(n2.display) ? i2 = as(["{\\textstyle", i2, "}"]) : "script" === ds(n2.display) ? i2 = as(["{\\scriptstyle", i2, "}"]) : "scriptscript" === ds(n2.display) && (i2 = as(["{\\scriptscriptstyle", i2, "}"]));
  const r2 = ks(n2.size);
  return null !== r2 && r2 >= 1 && r2 <= 10 && (i2 = as(["{", { 1: "\\tiny", 2: "\\scriptsize", 3: "\\footnotesize", 4: "\\small", 5: "\\normalsize", 6: "\\large", 7: "\\Large", 8: "\\LARGE", 9: "\\huge", 10: "\\Huge" }[r2], i2, "}"])), i2;
} }, { trigger: ["\\!"], parse: () => ["HorizontalSpacing", -3] }, { trigger: ["\\ "], parse: () => ["HorizontalSpacing", 6] }, { trigger: ["\\:"], parse: () => ["HorizontalSpacing", 4] }, { trigger: ["\\enskip"], parse: () => ["HorizontalSpacing", 9] }, { trigger: ["\\quad"], parse: () => ["HorizontalSpacing", 18] }, { trigger: ["\\qquad"], parse: () => ["HorizontalSpacing", 36] }, { trigger: ["\\,"], parse: () => ["HorizontalSpacing", 3] }, { trigger: ["\\;"], parse: () => ["HorizontalSpacing", 5] }, { trigger: ["\\enspace"], parse: () => ["HorizontalSpacing", 9] }, { name: "HorizontalSpacing", serialize: (e5, t2) => {
  var i2;
  if (ps(t2, 2))
    return e5.serialize(ps(t2, 1));
  const n2 = ks(ps(t2, 1));
  return null === n2 ? "" : null !== (i2 = { "-3": "\\!", 6: "\\ ", 3: "\\,", 4: "\\:", 5: "\\;", 9: "\\enspace", 18: "\\quad", 36: "\\qquad" }[n2]) && void 0 !== i2 ? i2 : "";
} }];
function Rs(e5) {
  return (t2) => {
    var i2, n2;
    let r2 = false, a2 = 0;
    if (t2.skipSpace(), t2.match("^")) {
      if (t2.skipSpace(), t2.match("<{>")) {
        t2.skipSpace(), t2.match("-") && t2.match("1") && (r2 = true);
        do {
          t2.match("\\doubleprime") && (a2 += 2), t2.match("\\prime") && (a2 += 1), t2.match("'") && (a2 += 1);
        } while (!t2.match("<}>") && !t2.atEnd);
      }
      let e6 = false;
      for (; !e6; )
        t2.skipSpace(), t2.match("\\doubleprime") ? a2 += 2 : t2.match("\\prime") || t2.match("'") ? a2 += 1 : e6 = true;
    }
    let o2 = null !== (n2 = null !== (i2 = { "\\arcsin": "Arcsin", "\\arccos": "Arccos", "\\arctan": "Arctan", "\\arctg": "Arctan", "\\arcctg": "Arctan", "\\arcsec": "Arcsec", "\\arccsc": " Arccsc", "\\arsinh": "Arsinh", "\\arcosh": "Arcosh", "\\artanh": "Artanh", "\\arcsech": "Arcsech", "\\arccsch": "Arcsch", "\\ch": "Cosh", "\\cos": "Cos", "\\cosec": "Csc", "\\cosh": "Csch", "\\cot": "Cot", "\\cotg": "Cot", "\\coth": "Coth", "\\csc": "Csc", "\\ctg": "Cot", "\\cth": "Coth", "\\sec": "Sec", "\\sin": "Sin", "\\sinh": "Sinh", "\\sh": "Sinh", "\\tan": "Tan", "\\tanh": "Tanh", "\\tg": "Tan", "\\th": "Tanh" }[null != e5 ? e5 : ""]) && void 0 !== i2 ? i2 : e5) && void 0 !== n2 ? n2 : "";
    r2 && (o2 = ["InverseFunction", o2]), a2 >= 1 && (o2 = ["Derivative", a2, o2]);
    const s2 = t2.matchArguments("implicit");
    return null === s2 ? o2 : [o2, ...s2];
  };
}
var js = [{ name: "Arcsin", trigger: ["\\arcsin"], parse: Rs("Arcsin") }, { name: "Arccos", trigger: ["\\arccos"], parse: Rs("Arccos") }, { name: "Arctan", trigger: ["\\arctan"], parse: Rs("Arctan") }, { trigger: ["\\arctg"], parse: Rs("Arctan") }, { name: "Arccot", trigger: ["\\arcctg"], parse: Rs("Arccot") }, { name: "Arcsec", trigger: ["\\arcsec"], parse: Rs("Arcsec") }, { name: "Arccsc", trigger: ["\\arccsc"], parse: Rs("Arccsc") }, { name: "Arsinh", trigger: ["\\arsinh"], parse: Rs("Arsinh") }, { name: "Arcosh", trigger: ["\\arcosh"], parse: Rs("Arcosh") }, { name: "Artanh", trigger: ["\\artanh"], parse: Rs("Artanh") }, { name: "Arsech", trigger: ["\\arsech"], parse: Rs("Arsech") }, { name: "Arcsch", trigger: ["\\arcsch"], parse: Rs("Arcsch") }, { trigger: ["\\ch"], parse: Rs("Cosh") }, { name: "Cosec", trigger: ["\\cosec"], parse: Rs("Cosec") }, { name: "Cosh", trigger: ["\\cosh"], parse: Rs("Cosh") }, { name: "Cot", trigger: ["\\cot"], parse: Rs("Cot") }, { trigger: ["\\cotg"], parse: Rs("Cot") }, { name: "Coth", trigger: ["\\coth"], parse: Rs("Coth") }, { name: "Csc", trigger: ["\\csc"], parse: Rs("Csc") }, { trigger: ["\\ctg"], parse: Rs("Cot") }, { trigger: ["\\cth"], parse: Rs("Cotanh") }, { name: "Sec", trigger: ["\\sec"], parse: Rs("Sec") }, { name: "Sinh", trigger: ["\\sinh"], parse: Rs("Sinh") }, { trigger: ["\\sh"], parse: Rs("Sinh") }, { name: "Tan", trigger: ["\\tan"], parse: Rs("Tan") }, { trigger: ["\\tg"], parse: Rs("Tan") }, { name: "Tanh", trigger: ["\\tanh"], parse: Rs("Tanh") }, { trigger: ["\\th"], parse: Rs("Tanh") }, { name: "Cos", trigger: ["\\cos"], parse: Rs("Cos") }, { name: "Sin", trigger: ["\\sin"], parse: Rs("Sin") }];
var Hs = [{ name: "AlgebraicNumber", trigger: "\\bar\\Q" }, { name: "ComplexNumber", trigger: ["\\C"] }, { trigger: "\\mathbb{C}", parse: "ComplexNumber" }, { name: "ImaginaryNumber", trigger: ["\\imaginaryI\\R"] }, { name: "ExtendedComplexNumber", trigger: ["\\bar\\C"] }, { name: "EmptySet", trigger: ["\\emptyset"] }, { trigger: ["\\varnothing"], parse: "EmptySet" }, { name: "Integer", trigger: ["\\Z"] }, { trigger: "\\mathbb{Z}", parse: "Integer" }, { name: "RationalNumber", trigger: ["\\Q"] }, { name: "RealNumber", trigger: ["\\R"] }, { name: "ExtendedRealNumber", trigger: ["\\bar\\R"] }, { name: "TranscendentalNumber", trigger: "\\R-\\bar\\Q" }, { trigger: "\\R\\backslash\\bar\\Q", parse: "TranscendentalNumber" }, { name: "NegativeNumber", trigger: "\\R^-" }, { trigger: "\\R^{-}", parse: "NegativeNumber" }, { trigger: "\\R_-", parse: "NegativeNumber" }, { trigger: "\\R_{-}", parse: "NegativeNumber" }, { trigger: "\\R^{\\lt}", parse: "NegativeNumber" }, { name: "PositiveNumber", trigger: "\\R^+" }, { trigger: "\\R^{+}", parse: "PositiveNumber" }, { trigger: "\\R_+", parse: "PositiveNumber" }, { trigger: "\\R_{+}", parse: "PositiveNumber" }, { trigger: "\\R^{\\gt}", parse: "PositiveNumber" }, { name: "NonPositiveNumber", trigger: "\\R^{0-}" }, { trigger: "\\R^{-0}", parse: "NonPositiveNumber" }, { trigger: "\\R^{\\leq}", parse: "NonPositiveNumber" }, { name: "NegativeInteger", trigger: "\\Z^-" }, { trigger: "\\Z^-", parse: "NegativeInteger" }, { trigger: "\\Z^{-}", parse: "NegativeInteger" }, { trigger: "\\Z_-", parse: "NegativeInteger" }, { trigger: "\\Z_{-}", parse: "NegativeInteger" }, { trigger: "\\Z^{\\lt}", parse: "NegativeInteger" }, { name: "PositiveInteger", trigger: "\\Z^+" }, { trigger: "\\Z^{+}", parse: "PositiveInteger" }, { trigger: "\\Z_+", parse: "PositiveInteger" }, { trigger: "\\Z_{+}", parse: "PositiveInteger" }, { trigger: "\\Z^{\\gt}", parse: "PositiveInteger" }, { trigger: "\\Z^{\\gt0}", parse: "PositiveInteger" }, { trigger: "\\N^+", parse: "PositiveInteger" }, { trigger: "\\N^{+}", parse: "PositiveInteger" }, { trigger: "\\N^*", parse: "PositiveInteger" }, { trigger: "\\N^{*}", parse: "PositiveInteger" }, { trigger: "\\N^\\star", parse: "PositiveInteger" }, { trigger: "\\N^{\\star}", parse: "PositiveInteger" }, { trigger: "\\N_1", parse: "PositiveInteger" }, { trigger: "\\N_{1}", parse: "PositiveInteger" }, { name: "NonNegativeInteger", trigger: ["\\N"] }, { trigger: "\\Z^{+0}", parse: "NonNegativeInteger" }, { trigger: "\\Z^{\\geq}", parse: "NonNegativeInteger" }, { trigger: "\\Z^{\\geq0}", parse: "NonNegativeInteger" }, { trigger: "\\Z^{0+}", parse: "NonNegativeInteger" }, { trigger: "\\mathbb{N}", parse: "NonNegativeInteger" }, { trigger: "\\N_0", parse: "NonNegativeInteger" }, { trigger: "\\N_{0}", parse: "NonNegativeInteger" }, { name: "CartesianProduct", trigger: ["\\times"], kind: "infix", associativity: "right", precedence: 390, parse: (e5, t2, i2) => {
  if (390 < t2.minPrec)
    return null;
  const n2 = e5.computeEngine;
  if (!n2 || !n2.box(i2).domain.isCompatible("Set"))
    return null;
  const r2 = e5.index, a2 = e5.matchExpression({ ...t2, minPrec: 390 });
  return null === a2 || true !== n2.box(i2).domain.isCompatible("Set") ? (e5.index = r2, null) : ["CartesianProduct", i2, a2];
} }, { name: "Complement", trigger: ["^", "\\complement"], kind: "infix" }, { name: "Intersection", trigger: ["\\cap"], kind: "infix", precedence: 350 }, { name: "Interval", serialize: Ws }, { name: "Multiple", serialize: Ws }, { name: "Union", trigger: ["\\cup"], kind: "infix", precedence: 350 }, { name: "Range", serialize: Ws }, { name: "SetMinus", trigger: ["\\setminus"], kind: "infix", precedence: 650 }, { name: "SymmetricDifference", trigger: ["\\triangle"], kind: "infix", precedence: 260 }, { trigger: ["\\ni"], kind: "infix", associativity: "right", precedence: 160, parse: (e5, t2, i2) => {
  const n2 = e5.matchExpression(t2);
  return null === n2 ? null : ["Element", n2, i2];
} }, { name: "Element", trigger: ["\\in"], kind: "infix", precedence: 240 }, { name: "NotElement", trigger: ["\\notin"], kind: "infix", precedence: 240 }, { name: "NotSubset", trigger: ["\\nsubset"], kind: "infix", associativity: "right", precedence: 240 }, { name: "NotSuperset", trigger: ["\\nsupset"], kind: "infix", associativity: "right", precedence: 240 }, { name: "NotSubsetNotEqual", trigger: ["\\nsubseteq"], kind: "infix", associativity: "right", precedence: 240 }, { name: "NotSupersetNotEqual", trigger: ["\\nsupseteq"], kind: "infix", associativity: "right", precedence: 240 }, { name: "SquareSubset", trigger: ["\\sqsubset"], kind: "infix", associativity: "right", precedence: 265 }, { name: "SquareSubsetEqual", trigger: ["\\sqsubseteq"], kind: "infix", associativity: "right", precedence: 265 }, { name: "SquareSuperset", trigger: ["\\sqsupset"], kind: "infix", associativity: "right", precedence: 265 }, { name: "SquareSupersetEqual", trigger: ["\\sqsupseteq"], kind: "infix", associativity: "right", precedence: 265 }, { name: "Subset", trigger: ["\\subset"], kind: "infix", associativity: "right", precedence: 240 }, { trigger: ["\\subsetneq"], kind: "infix", associativity: "right", precedence: 240, parse: "Subset" }, { trigger: ["\\varsubsetneqq"], kind: "infix", associativity: "right", precedence: 240, parse: "Subset" }, { name: "SubsetEqual", trigger: ["\\subseteq"], kind: "infix", precedence: 240 }, { name: "Superset", trigger: ["\\supset"], kind: "infix", associativity: "right", precedence: 240 }, { trigger: ["\\supsetneq"], kind: "infix", associativity: "right", precedence: 240, parse: "Superset" }, { trigger: ["\\varsupsetneq"], kind: "infix", associativity: "right", precedence: 240, parse: "Superset" }, { name: "SupersetEqual", trigger: ["\\supseteq"], kind: "infix", associativity: "right", precedence: 240 }];
function Ws(e5, t2) {
  var i2;
  if (null === t2)
    return "";
  const n2 = hs(t2);
  if (null === n2)
    return "";
  if ("Set" === n2)
    return 0 === ys(t2) ? "\\emptyset" : 2 === ys(t2) && "Condition" === hs(ps(t2, 2)) ? as(["\\left\\lbrace", e5.serialize(ps(t2, 1)), "\\middle\\mid", e5.serialize(ps(t2, 2)), "\\right\\rbrace"]) : as(["\\left\\lbrace", ...(null !== (i2 = fs(t2)) && void 0 !== i2 ? i2 : []).map((t3) => e5.serialize(t3) + " ,"), "\\right\\rbrace"]);
  if ("Range" === n2)
    return as(["\\mathopen\\lbrack", e5.serialize(ps(t2, 1)), ", ", e5.serialize(ps(t2, 2)), "\\mathclose\\rbrack"]);
  if ("Interval" === n2) {
    let i3 = ps(t2, 1), n3 = ps(t2, 2), r2 = false, a2 = false;
    return "Open" === hs(i3) && (i3 = ps(i3, 1), r2 = true), "Open" === hs(n3) && (n3 = ps(n3, 1), a2 = true), as(["\\mathopen" + (r2 ? "\\rbrack" : "\\lbrack"), e5.serialize(i3), ", ", e5.serialize(n3), "\\mathclose" + (a2 ? "\\lbrack" : "\\rbrack")]);
  }
  return e5.numericSetStyle(t2, e5.level), "";
}
function Zs(e5) {
  return (t2) => {
    var i2;
    t2.skipSpace();
    let n2 = null, r2 = null;
    for (; !(r2 && n2 || "_" !== t2.peek && "^" !== t2.peek); )
      t2.match("_") ? r2 = t2.matchRequiredLatexArgument() : t2.match("^") && (n2 = t2.matchRequiredLatexArgument()), t2.skipSpace();
    ("Nothing" === r2 || Ls(r2)) && (r2 = null), ("Nothing" === n2 || Ls(n2)) && (n2 = null);
    let [a2, o2] = function(e6) {
      const t3 = e6.index;
      let i3 = false, n3 = e6.matchExpression({ minPrec: 266, condition: () => (e6.matchAll(["\\mathrm", "<{>", "d", "<}>"]) && (i3 = true), i3) });
      return i3 || (e6.index = t3, n3 = e6.matchExpression({ minPrec: 266, condition: () => (e6.match("d") && (i3 = true), i3) })), n3 && !i3 ? Us(n3) : [n3, i3 ? bs(e6.matchSymbol()) : null];
    }(t2);
    if (a2 && !o2 && "Add" === hs(a2)) {
      const t3 = [], s2 = [];
      for (const e6 of null !== (i2 = fs(a2)) && void 0 !== i2 ? i2 : [])
        if (o2)
          s2.push(e6);
        else {
          let i3;
          [i3, o2] = Us(e6), t3.push(null != i3 ? i3 : e6);
        }
      if (null !== o2 && s2.length > 0)
        return ["Add", Gs(e5, ["Add", ...t3], o2, r2, n2), ...s2];
    }
    return Gs(e5, a2, o2, r2, n2);
  };
}
function Gs(e5, t2, i2, n2, r2) {
  return t2 && i2 && (t2 = ["Lambda", ws(t2, { [i2]: "_" })]), !t2 || r2 || n2 || i2 ? (null != t2 || (t2 = "Nothing"), r2 ? [e5, t2, ["Tuple", null != i2 ? i2 : "Nothing", null != n2 ? n2 : "Nothing", r2]] : n2 ? [e5, t2, ["Tuple", null != i2 ? i2 : "Nothing", n2]] : i2 ? [e5, t2, i2] : [e5]) : [e5, t2];
}
function Us(e5) {
  const t2 = hs(e5), i2 = ps(e5, 1);
  if (!i2)
    return [e5, null];
  if ("Multiply" === t2) {
    const t3 = fs(e5);
    if (t3 && t3.length > 1 && "d" === bs(t3[t3.length - 2]))
      return 2 === t3.length ? [null, bs(t3[1])] : 3 === t3.length ? [t3[0], bs(t3[2])] : [["Multiply", ...t3.slice(0, -2)], bs(t3[t3.length - 1])];
  } else if ("Delimiter" === t2) {
    const [t3, n2] = Us(i2);
    if (n2)
      return t3 ? [["Delimiter", t3, ...fs(e5).slice(1)], n2] : [null, n2];
  } else if ("Add" === t2) {
    const t3 = fs(e5);
    if (t3 && t3.length > 0) {
      const [e6, i3] = Us(t3[t3.length - 1]);
      if (i3) {
        if (e6)
          return [["Add", ...t3.slice(0, -1), e6], i3];
        if (t3.length > 2)
          return [["Add", ...t3.slice(0, -1)], i3];
        if (t3.length > 2)
          return [t3[0], i3];
      }
    }
  } else if ("Negate" === t2) {
    const [e6, t3] = Us(i2);
    if (t3)
      return [e6 ? ["Negate", e6] : null, t3];
  } else if ("Divide" === t2) {
    const [t3, n2] = Us(i2);
    if (n2)
      return [["Divide", null != t3 ? t3 : 1, ps(e5, 2)], n2];
  } else {
    const t3 = fs(e5);
    if (1 === (null == t3 ? void 0 : t3.length)) {
      const [i3, n2] = Us(t3[0]);
      if (n2)
        return [[hs(e5), i3], n2];
    }
  }
  return [e5, null];
}
function Js(e5) {
  return (t2, i2) => {
    var n2;
    if (!ps(i2, 1))
      return e5;
    let r2 = ps(i2, 2);
    const a2 = hs(r2);
    let o2 = null;
    "Tuple" !== a2 && "Triple" !== a2 && "Pair" !== a2 && "Single" !== a2 ? (o2 = bs(r2), r2 = null) : o2 = null !== (n2 = bs(ps(r2, 1))) && void 0 !== n2 ? n2 : "x";
    let s2 = ps(i2, 1);
    if ("Lambda" === hs(s2) && ps(s2, 1) && (s2 = ws(ps(s2, 1), { _: null != o2 ? o2 : "x", _1: null != o2 ? o2 : "x" })), !r2)
      return as(o2 ? [e5, t2.serialize(s2), "\\mathrm{d}", o2] : [e5, t2.serialize(s2)]);
    let l2 = r2 ? [t2.serialize(ps(r2, 2))] : [];
    l2.length > 0 && (l2 = ["_{", ...l2, "}"]);
    let u2 = [];
    return ps(r2, 3) && (u2 = ["^{", t2.serialize(ps(r2, 3)), "}"]), as([e5, ...u2, ...l2, t2.serialize(s2), ...o2 && "Nothing" !== bs(o2) ? ["\\,\\mathrm{d}", t2.serialize(o2)] : []]);
  };
}
var Xs = [{ name: "Integrate", trigger: ["\\int"], parse: Zs("Integrate"), serialize: Js("\\int") }, { trigger: ["\\iint"], parse: Zs("Integrate") }, { name: "CircularIntegrate", trigger: ["\\oint"], parse: Zs("CircularIntegrate"), serialize: Js("\\oint") }];
var Ys = [["Alpha", "\\alpha", 945], ["Beta", "\\beta", 946], ["Delta", "\\delta", 948], ["Epsilon", "\\epsilon", 949], ["EpsilonSymbol", "\\varepsilon", 1013], ["Zeta", "\\zeta", 950], ["Eta", "\\eta", 951], ["Theta", "\\theta", 952], ["ThetaSymbol", "\\vartheta", 977], ["Iota", "\\iota", 953], ["Kappa", "\\kappa", 954], ["KappaSymbol", "\\varkappa", 1008], ["Lambda", "\\lambda", 955], ["Mu", "\\mu", 956], ["Nu", "\\nu", 957], ["Xi", "\\xi", 958], ["Omicron", "\\omicron", 959], ["PiSymbol", "\\varpi", 982], ["Rho", "\\rho", 961], ["RhoSymbol", "\\varrho", 1009], ["Sigma", "\\sigma", 963], ["FinalSigma", "\\varsigma", 962], ["Tau", "\\tau", 964], ["Phi", "\\phi", 981], ["PhiLetter", "\\varphi", 966], ["Upsilon", "\\upsilon", 965], ["Chi", "\\chi", 967], ["Psi", "\\psi", 968], ["Omega", "\\omega", 969], ["CapitalAlpha", "\\Alpha", 913], ["CapitalBeta", "\\Beta", 914], ["CapitalGamma", "\\Gamma", 915], ["CapitalDelta", "\\Delta", 916], ["CapitalEpsilon", "\\Epsilon", 917], ["CapitalZeta", "\\Zeta", 918], ["CapitalEta", "\\Eta", 919], ["CapitalTheta", "\\Theta", 920], ["CapitaIota", "\\Iota", 921], ["CapitalKappa", "\\Kappa", 922], ["CapitalLambda", "\\Lambda", 923], ["CapitalMu", "\\Mu", 924], ["CapitalNu", "\\Nu", 925], ["CapitalXi", "\\Xi", 926], ["CapitalOmicron", "\\Omicron", 927], ["CapitalPi", "\\Pi", 928], ["CapitalRho", "\\Rho", 929], ["CapitalSigma", "\\Sigma", 931], ["CapitalTau", "\\Tau", 932], ["CapitalPhi", "\\Phi", 934], ["CapitalUpsilon", "\\Upsilon", 933], ["CapitalChi", "\\Chi", 935], ["CapitalPsi", "\\Psi", 936], ["CapitalOmega", "\\Omega", 937], ["Digamma", "\\digamma", 989], ["Alef", "\\aleph", 8501], ["Bet", "\\beth", 8502], ["Gimel", "\\gimel", 8503], ["Dalet", "\\daleth", 8504], ["TurnedCapitalF", "\\Finv", 8498], ["TurnedCapitalG", "\\Game", 8513], ["Weierstrass", "\\wp", 8472], ["Eth", "\\eth", 240], ["InvertedOhm", "\\mho", 8487], ["BlackClubSuit", "\\clubsuit", 9827], ["WhiteHeartSuit", "\\heartsuit", 9825], ["BlackSpadeSuit", "\\spadesuit", 9824], ["WhiteDiamondSuit", "\\diamondsuit", 9826], ["Sharp", "\\sharp", 9839], ["Flat", "\\flat", 9837], ["Natural", "\\natural", 9838]];
var Qs = [...Ys.map(([e5, t2, i2]) => ({ name: e5, trigger: [t2], parse: e5 })), ...Ys.map(([e5, t2, i2]) => ({ trigger: [String.fromCodePoint(i2)], parse: e5 }))];
var el = { "(": "(", ")": ")", "[": "\\lbrack", "]": "\\rbrack", "{": "\\lbrace", "}": "\\rbrace", "<": "\\langle", ">": "\\rangle", "|": "\\vert", "||": "\\Vert", "\\lceil": "\\lceil", "\\lfloor": "\\lfloor", "\\rceil": "\\rceil", "\\rfloor": "\\rfloor" };
function tl(e5) {
  return Array.isArray(e5) ? e5.length : 1;
}
function il(e5, t2) {
  var i2, n2, r2, a2, o2, s2, l2, u2;
  if (!function(e6, t3) {
    var i3, n3;
    const r3 = null !== (n3 = null !== (i3 = e6.name) && void 0 !== i3 ? i3 : e6.trigger) && void 0 !== n3 ? n3 : e6.openDelimiter;
    if (void 0 !== e6.serialize && !e6.name)
      return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, "Unexpected serialize property without a name property"] }), false;
    if (fa(e6)) {
      if (e6.trigger)
        return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, `Unexpected 'trigger' "${e6.trigger}". 'matchfix' operators use a 'openDelimiter' and 'closeDelimiter' instead of a trigger. `] }), false;
      if (!e6.openDelimiter || !e6.closeDelimiter)
        return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, "Expected `openDelimiter` and a `closeDelimiter` for matchfix operator"] }), false;
      if (typeof e6.openDelimiter != typeof e6.closeDelimiter)
        return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, "Expected `openDelimiter` and `closeDelimiter` to both be strings or array of LatexToken"] }), false;
    }
    if (ga(e6) || ba(e6) || ya(e6)) {
      if (Array.isArray(e6.trigger) && ("_" === e6.trigger[0] || "^" === e6.trigger[0]) || "string" == typeof e6.trigger && (e6.trigger.startsWith("^") || e6.trigger.startsWith("_"))) {
        if (void 0 !== e6.precedence || void 0 !== e6.associativity)
          return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, 'Unexpected "precedence" or "associativity" for superscript/subscript operator'] }), false;
      } else if (void 0 === e6.precedence)
        return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, `Expected a "precedence" for ${e6.kind} operator`] }), false;
    } else if (void 0 !== e6.associativity)
      return t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, 'Unexpected "associativity" operator'] }), false;
    return fa(e6) || e6.trigger || e6.name ? void 0 !== e6.parse || void 0 !== e6.name || (t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, "Expected a 'parse' or 'name'"] }), false) : (t3({ severity: "warning", message: ["invalid-dictionary-entry", r3, "Expected at least a 'trigger' or a 'name'"] }), false);
  }(e5, t2))
    return [null, null];
  const c2 = { name: e5.name, kind: "kind" in e5 ? e5.kind : "symbol" };
  if ("matchfix" === c2.kind && fa(e5)) {
    if (c2.openDelimiter = e5.openDelimiter, c2.closeDelimiter = e5.closeDelimiter, "function" == typeof e5.serialize)
      c2.serialize = e5.serialize;
    else {
      const e6 = "string" == typeof c2.openDelimiter ? el[c2.openDelimiter] : os(c2.openDelimiter), t3 = "string" == typeof c2.closeDelimiter ? el[c2.closeDelimiter] : os(c2.closeDelimiter);
      c2.serialize = (i3, n3) => as([e6, i3.serialize(ps(n3, 1)), t3]);
    }
    if ("function" == typeof e5.parse)
      c2.parse = e5.parse;
    else {
      const t3 = null !== (i2 = e5.parse) && void 0 !== i2 ? i2 : e5.name;
      c2.parse = (e6, i3) => [t3, i3];
    }
    return [null, c2];
  }
  if ("environment" === c2.kind && va(e5)) {
    const t3 = e5.trigger;
    return c2.serialize = null !== (n2 = e5.serialize) && void 0 !== n2 ? n2 : (e6, i3) => `\\begin{${t3}}${e6.serialize(ps(i3, 1))}\\end{${t3}}`, c2.parse = null !== (r2 = e5.parse) && void 0 !== r2 ? r2 : () => null, [t3, c2];
  }
  const d2 = "string" == typeof e5.trigger ? rs(e5.trigger, []) : e5.trigger, h2 = d2 ? os(d2) : "";
  if ("function" === c2.kind && pa(e5))
    return c2.serialize = e5.serialize, h2 && !e5.serialize && (c2.serialize = (e6, t3) => `\\mathrm{${h2}}${e6.wrapArguments(t3)}`), c2.parse = e5.parse, !c2.parse && e5.name && (c2.parse = (t3) => {
      const i3 = t3.matchArguments("enclosure");
      return null === i3 ? e5.name : [e5.name, ...i3];
    }), [h2, c2];
  if (e5.trigger, "symbol" === c2.kind && ma(e5) && (c2.precedence = null !== (a2 = e5.precedence) && void 0 !== a2 ? a2 : 1e4), "infix" !== c2.kind && "prefix" !== c2.kind && "postfix" !== c2.kind || !(ga(e5) || ya(e5) || ba(e5)) || (!d2 || "^" !== d2[0] && "_" !== d2[0] ? c2.precedence = null !== (o2 = e5.precedence) && void 0 !== o2 ? o2 : 1e4 : c2.precedence = 720), "infix" === c2.kind && ga(e5))
    if (c2.associativity = null !== (s2 = e5.associativity) && void 0 !== s2 ? s2 : "non", "function" == typeof e5.parse)
      c2.parse = e5.parse;
    else if (!d2 || "^" !== d2[0] && "_" !== d2[0]) {
      const t3 = null !== (l2 = e5.parse) && void 0 !== l2 ? l2 : e5.name, i3 = c2.precedence, n3 = c2.associativity;
      c2.parse = (e6, r3, a3) => {
        if (i3 < r3.minPrec)
          return null;
        const o3 = As(e6.matchExpression({ ...r3, minPrec: i3 }));
        return "string" == typeof t3 ? Ms(t3, a3, o3, n3) : [t3, a3, o3];
      };
    } else {
      const t3 = null !== (u2 = e5.parse) && void 0 !== u2 ? u2 : e5.name;
      c2.parse = (e6, i3, n3) => [t3, As(ps(n3, 1)), As(ps(n3, 2))];
    }
  else if ("function" == typeof e5.parse)
    c2.parse = e5.parse;
  else if (void 0 !== e5.parse)
    c2.parse = () => e5.parse;
  else if (void 0 === e5.parse && void 0 !== e5.name) {
    if ("postfix" === c2.kind)
      c2.parse = (t3, i3) => i3 ? [e5.name, i3] : null;
    else if ("prefix" === c2.kind) {
      const t3 = c2.precedence, i3 = e5.name;
      c2.parse = (e6, n3) => {
        if (t3 < n3.minPrec)
          return null;
        const r3 = e6.matchExpression({ ...n3, minPrec: t3 });
        return null === r3 ? null : [i3, r3];
      };
    }
  }
  return "function" == typeof e5.serialize || "string" == typeof e5.serialize ? c2.serialize = e5.serialize : d2 && ("postfix" === c2.kind ? c2.serialize = "#1" + h2 : "prefix" === c2.kind ? c2.serialize = h2 + "#1" : "infix" === c2.kind ? c2.serialize = "#1" + h2 + "#2" : "symbol" === c2.kind ? c2.serialize = h2 : c2.serialize = ""), [null != d2 ? d2 : null, c2];
}
var nl = { algebra: [{ name: "To", trigger: ["\\to"], kind: "infix", precedence: 270 }], arithmetic: qs, calculus: Xs, core: Ps, logic: [{ name: "True", trigger: ["\\mathrm", "<{>", "T", "r", "u", "e", "<}>"], serialize: "\\mathrm{True}" }, { name: "False", trigger: ["\\mathrm", "<{>", "F", "a", "l", "s", "e", "<}>"], serialize: "\\mathrm{False}" }, { name: "Maybe", trigger: ["\\mathrm", "<{>", "M", "a", "y", "b", "e", "<}>"], serialize: "\\mathrm{Maybe}" }], relop: [{ trigger: ["!", "<"], kind: "infix", associativity: "right", precedence: 246, parse: "NotLess" }, { name: "NotLess", trigger: ["\\nless"], kind: "infix", associativity: "right", precedence: 246 }, { trigger: ["<"], kind: "infix", associativity: "right", precedence: 245, parse: "Less" }, { name: "Less", trigger: ["\\lt"], kind: "infix", associativity: "right", precedence: 245 }, { trigger: ["<", "="], kind: "infix", associativity: "right", precedence: 241, parse: "LessEqual" }, { name: "LessEqual", trigger: ["\\le"], kind: "infix", associativity: "right", precedence: 241 }, { trigger: ["\\leq"], kind: "infix", associativity: "right", precedence: 241, parse: "Equal" }, { trigger: ["\\leqslant"], kind: "infix", associativity: "right", precedence: 265, parse: "LessEqual" }, { name: "LessNotEqual", trigger: ["\\lneqq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "NotLessNotEqual", trigger: ["\\nleqq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "LessOverEqual", trigger: ["\\leqq"], kind: "infix", associativity: "right", precedence: 265 }, { name: "GreaterOverEqual", trigger: ["\\geqq"], kind: "infix", associativity: "right", precedence: 265, parse: "GreaterEqual" }, { name: "Equal", trigger: ["="], kind: "infix", associativity: "right", precedence: 260 }, { trigger: ["*", "="], kind: "infix", associativity: "right", precedence: 260, parse: "StarEqual" }, { name: "StarEqual", trigger: ["\\star", "="], kind: "infix", associativity: "right", precedence: 260 }, { name: "PlusEqual", trigger: ["+", "="], kind: "infix", associativity: "right", precedence: 260 }, { name: "MinusEqual", trigger: ["-", "="], kind: "infix", associativity: "right", precedence: 260 }, { name: "SlashEqual", trigger: ["/", "="], kind: "infix", associativity: "right", precedence: 260 }, { name: "EqualEqual", trigger: ["=", "="], kind: "infix", associativity: "right", precedence: 260 }, { name: "EqualEqualEqual", trigger: ["=", "=", "="], kind: "infix", associativity: "right", precedence: 265 }, { name: "TildeFullEqual", trigger: ["\\cong"], kind: "infix", associativity: "right", precedence: 260 }, { name: "NotTildeFullEqual", trigger: ["\\ncong"], kind: "infix", associativity: "right", precedence: 260 }, { trigger: [":", "="], kind: "infix", associativity: "right", precedence: 260, parse: "Assign" }, { name: "Assign", trigger: ["\\coloneq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "Approx", trigger: ["\\approx"], kind: "infix", associativity: "right", precedence: 247 }, { name: "NotApprox", trigger: ["\\approx"], kind: "infix", associativity: "right", precedence: 247 }, { name: "ApproxEqual", trigger: ["\\approxeq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "NotApproxEqual", trigger: ["!", "\\approxeq"], kind: "infix", associativity: "right", precedence: 250 }, { name: "NotEqual", trigger: ["\\ne"], kind: "infix", associativity: "right", precedence: 255 }, { name: "Unequal", trigger: ["!", "="], kind: "infix", associativity: "right", precedence: 260 }, { name: "GreaterEqual", trigger: ["\\ge"], kind: "infix", associativity: "right", precedence: 242 }, { trigger: ["\\geq"], kind: "infix", associativity: "right", precedence: 242, parse: "GreaterEqual" }, { trigger: [">", "="], kind: "infix", associativity: "right", precedence: 243, parse: "GreaterEqual" }, { trigger: ["\\geqslant"], kind: "infix", associativity: "right", precedence: 265, parse: "GreaterEqual" }, { name: "GreaterNotEqual", trigger: ["\\gneqq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "NotGreaterNotEqual", trigger: ["\\ngeqq"], kind: "infix", associativity: "right", precedence: 260 }, { trigger: [">"], kind: "infix", associativity: "right", precedence: 245, parse: "Greater" }, { name: "Greater", trigger: ["\\gt"], kind: "infix", associativity: "right", precedence: 245 }, { name: "NotGreater", trigger: ["\\ngtr"], kind: "infix", associativity: "right", precedence: 244 }, { trigger: ["!", ">"], kind: "infix", associativity: "right", precedence: 244, parse: "NotGreater" }, { name: "RingEqual", trigger: ["\\circeq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "TriangleEqual", trigger: ["\\triangleq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "DotEqual", trigger: ["\\doteq"], kind: "infix", associativity: "right", precedence: 265 }, { name: "DotEqualDot", trigger: ["\\doteqdot"], kind: "infix", associativity: "right", precedence: 265 }, { name: "FallingDotEqual", trigger: ["\\fallingdotseq"], kind: "infix", associativity: "right", precedence: 265 }, { name: "RisingDotEqual", trigger: ["\\fallingdotseq"], kind: "infix", associativity: "right", precedence: 265 }, { name: "QuestionEqual", trigger: ["\\questeq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "Equivalent", trigger: ["\\equiv"], kind: "infix", associativity: "right", precedence: 260 }, { trigger: ["\\iff"], kind: "infix", parse: "Equivalent", associativity: "right", precedence: 260 }, { name: "MuchLess", trigger: ["\\ll"], kind: "infix", associativity: "right", precedence: 260 }, { name: "MuchGreater", trigger: ["\\gg"], kind: "infix", associativity: "right", precedence: 260 }, { name: "Precedes", trigger: ["\\prec"], kind: "infix", associativity: "right", precedence: 260 }, { name: "Succeeds", trigger: ["\\succ"], kind: "infix", associativity: "right", precedence: 260 }, { name: "PrecedesEqual", trigger: ["\\preccurlyeq"], kind: "infix", associativity: "right", precedence: 260 }, { name: "SucceedsEqual", trigger: ["\\curlyeqprec"], kind: "infix", associativity: "right", precedence: 260 }, { name: "NotPrecedes", trigger: ["\\nprec"], kind: "infix", associativity: "right", precedence: 260 }, { name: "NotSucceeds", trigger: ["\\nsucc"], kind: "infix", associativity: "right", precedence: 260 }, { name: "Between", trigger: ["\\between"], kind: "infix", associativity: "right", precedence: 265 }], other: Ks, physics: [{ name: "mu-0", trigger: "\\mu_0" }], sets: Hs, symbols: Qs, trigonometry: js };
var rl = { "(": ["\\lparen", "("], ")": ["\\rparen", ")"], "[": ["\\lbrack"], "]": ["\\rbrack"], "<": ["<", "\\langle"], ">": [">", "\\rangle"], "{": ["\\{", "\\lbrace"], "}": ["\\}", "\\rbrace"], ":": [":", "\\colon"], "|": ["|", "\\|", "\\lvert", "\\rvert"], "||": ["||", "\\Vert", "\\lVert", "\\rVert"], "\\lfloor": ["\\lfloor"], "\\rfloor": ["\\rfloor"], "\\lceil": ["\\lceil"], "\\rceil": ["\\rceil"], "\\ulcorner": ["\\ulcorner"], "\\urcorner": ["\\urcorner"], "\\llcorner": ["\\llcorner"], "\\lrcorner": ["\\lrcorner"], "\\lgroup": ["\\lgroup"], "\\rgroup": ["\\rgroup"], "\\lmoustache": ["\\lmoustache"], "\\rmoustache": ["\\rmoustache"] };
var al = { ":": [":", "\\colon"], "|": ["|", "\\|", "\\mid", "\\mvert"] };
var ol = { "\\left": "\\right", "\\bigl": "\\bigr", "\\Bigl": "\\Bigr", "\\biggl": "\\biggr", "\\Biggl": "\\Biggr", "\\big": "\\big", "\\Big": "\\Big", "\\bigg": "\\bigg", "\\Bigg": "\\Bigg" };
var sl = ["\\middle", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"];
var ll = { "(": ")", "[": "]", "\\{": "\\}", "\\lbrace": "\\rbrace", "\\lparen": "\\rparen", "\\langle": "\\rangle", "\\lfloor": "\\rfloor", "\\lceil": "\\rceil", "\\vert": "\\vert", "\\lvert": "\\rvert", "\\Vert": "\\Vert", "\\lVert": "\\rVert", "\\lbrack": "\\rbrack", "\\ulcorner": "\\urcorner", "\\llcorner": "\\lrcorner", "\\lgroup": "\\rgroup", "\\lmoustache": "\\rmoustache" };
var ul = { precision: 6, positiveInfinity: "\\infty", negativeInfinity: "-\\infty", notANumber: "\\operatorname{NaN}", decimalMarker: ".", groupSeparator: "\\,", exponentProduct: "\\cdot", beginExponentMarker: "10^{", endExponentMarker: "}", notation: "auto", truncationMarker: "\\ldots", beginRepeatingDigits: "\\overline{", endRepeatingDigits: "}", imaginaryNumber: "\\imaginaryI", avoidExponentsInRange: [-7, 20] };
var cl = { applyInvisibleOperator: "auto", skipSpace: true, parseArgumentsOfUnknownLatexCommands: true, parseNumbers: true, parseUnknownSymbol: (e5, t2) => {
  var i2;
  return void 0 !== (null === (i2 = t2.computeEngine) || void 0 === i2 ? void 0 : i2.lookupFunction(e5)) ? "function" : /^[a-zA-Z]+$/.test(e5) ? "symbol" : "unknown";
}, preserveLatex: false };
var dl = class {
  constructor(e5, t2, i2, n2) {
    this.index = 0, this._boundaries = [], this._lastPeek = "", this._peekCounter = 0, this._tokens = e5, this.options = { ...ul, ...cl, ...t2 }, this._dictionary = i2, this.computeEngine = n2, this._positiveInfinityTokens = rs(this.options.positiveInfinity, []), this._negativeInfinityTokens = rs(this.options.negativeInfinity, []), this._notANumberTokens = rs(this.options.notANumber, []), this._decimalMarkerTokens = rs(this.options.decimalMarker, []), this._groupSeparatorTokens = rs(this.options.groupSeparator, []), this._exponentProductTokens = rs(this.options.exponentProduct, []), this._beginExponentMarkerTokens = rs(this.options.beginExponentMarker, []), this._endExponentMarkerTokens = rs(this.options.endExponentMarker, []), this._truncationMarkerTokens = rs(this.options.truncationMarker, []), this._beginRepeatingDigitsTokens = rs(this.options.beginRepeatingDigits, []), this._endRepeatingDigitsTokens = rs(this.options.endRepeatingDigits, []), this._imaginaryNumberTokens = rs(this.options.imaginaryNumber, []);
  }
  updateOptions(e5) {
    for (const [t2, i2] of Object.entries(e5)) {
      if (!(t2 in this.options))
        throw Error(`Unexpected option "${t2}"`);
      this.options[t2] = i2, "string" == typeof i2 && ("positiveInfinity" === t2 && (this._positiveInfinityTokens = rs(i2, [])), "negativeInfinity" === t2 && (this._negativeInfinityTokens = rs(i2, [])), "notANumber" === t2 && (this._notANumberTokens = rs(i2, [])), "decimalMarker" === t2 && (this._decimalMarkerTokens = rs(i2, [])), "groupSeparator" === t2 && (this._groupSeparatorTokens = rs(i2, [])), "exponentProduct" === t2 && (this._exponentProductTokens = rs(i2, [])), "beginExponentMarker" === t2 && (this._beginExponentMarkerTokens = rs(i2, [])), "endExponentMarker" === t2 && (this._endExponentMarkerTokens = rs(i2, [])), "truncationMarker" === t2 && (this._truncationMarkerTokens = rs(i2, [])), "beginRepeatingDigits" === t2 && (this._beginRepeatingDigitsTokens = rs(i2, [])), "endRepeatingDigits" === t2 && (this._endRepeatingDigitsTokens = rs(i2, [])), "imaginaryNumber" === t2 && (this._imaginaryNumberTokens = rs(i2, [])));
    }
  }
  get atEnd() {
    return this.index >= this._tokens.length;
  }
  get peek() {
    const e5 = this._tokens[this.index];
    if (e5 === this._lastPeek ? this._peekCounter += 1 : this._peekCounter = 0, this._peekCounter >= 1024)
      throw Error(`Infinite loop detected while parsing "${this.latex(0)}" at ${this._lastPeek} (index ${this.index})`);
    return this._lastPeek = e5, e5;
  }
  next() {
    return this._tokens[this.index++];
  }
  atTerminator(e5) {
    return !!this.atBoundary || !(!(null == e5 ? void 0 : e5.condition) || !e5.condition(this));
  }
  get atBoundary() {
    if (this.atEnd)
      return true;
    const e5 = this.index;
    for (const t2 of this._boundaries)
      if (this.matchAll(t2.tokens))
        return this.index = e5, true;
    return false;
  }
  addBoundary(e5) {
    this._boundaries.push({ index: this.index, tokens: e5 });
  }
  removeBoundary() {
    this._boundaries.pop();
  }
  matchBoundary() {
    const e5 = this._boundaries[this._boundaries.length - 1], t2 = e5 && this.matchAll(e5.tokens);
    return t2 && this._boundaries.pop(), t2;
  }
  boundaryError(e5) {
    const t2 = this._boundaries[this._boundaries.length - 1];
    return this._boundaries.pop(), this.error(e5, t2.index);
  }
  latex(e5, t2) {
    return os(this._tokens.slice(e5, t2));
  }
  latexAhead(e5) {
    return this.latex(this.index, this.index + e5);
  }
  latexBefore() {
    return this.latex(0, this.index);
  }
  latexAfter() {
    return this.latex(this.index);
  }
  lookAhead() {
    let e5 = Math.min(this._dictionary.lookahead, this._tokens.length - this.index);
    const t2 = Array(e5 + 1);
    for (; e5 > 0; )
      t2[e5] = this.latexAhead(e5--);
    return t2;
  }
  peekDefinitions(e5) {
    let t2;
    if ("function" === e5) {
      const e6 = this.index;
      if (this.match("\\operatorname") || this.match("\\mathrm") || this.match("\\mathit")) {
        const t3 = this.matchStringArgument(), i3 = this.index - e6;
        return this.index = e6, null !== t3 && this._dictionary.function.has(t3) ? this._dictionary.function.get(t3).map((e7) => [e7, i3]) : null;
      }
      return null;
    }
    t2 = "operator" === e5 ? this.lookAhead().map((e6, t3) => {
      var i3, n2, r2, a2, o2;
      return null !== (a2 = null !== (n2 = null === (i3 = this._dictionary.infix[t3]) || void 0 === i3 ? void 0 : i3.get(e6)) && void 0 !== n2 ? n2 : null === (r2 = this._dictionary.postfix[t3]) || void 0 === r2 ? void 0 : r2.get(e6)) && void 0 !== a2 ? a2 : null === (o2 = this._dictionary.prefix[t3]) || void 0 === o2 ? void 0 : o2.get(e6);
    }) : this.lookAhead().map((t3, i3) => {
      var n2;
      return null === (n2 = this._dictionary[e5][i3]) || void 0 === n2 ? void 0 : n2.get(t3);
    });
    const i2 = [];
    for (let e6 = t2.length; e6 > 0; e6--)
      if (void 0 !== t2[e6])
        for (const n2 of t2[e6])
          i2.push([n2, e6]);
    return 0 === i2.length ? null : i2;
  }
  skipSpaceTokens() {
    for (; this.match("<space>"); )
      ;
  }
  skipSpace() {
    if (!this.atEnd && "<{>" === this.peek) {
      const e6 = this.index;
      for (this.next(); this.match("<space>"); )
        ;
      if ("<}>" === this.next())
        return this.skipSpace(), true;
      this.index = e6;
    }
    if (!this.options.skipSpace)
      return false;
    let e5 = false;
    for (; this.match("<space>"); )
      e5 = true;
    return e5 && this.skipSpace(), e5;
  }
  matchChar() {
    var e5;
    const t2 = this.index;
    let i2 = 0;
    for (; this.match("^"); )
      i2 += 1;
    if (i2 >= 2) {
      let e6 = "", t3 = 0;
      for (; t3 != i2; ) {
        const i3 = this.matchAny(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"]);
        if (!i3)
          break;
        e6 += i3, t3 += 1;
      }
      if (e6.length === i2)
        return String.fromCodePoint(Number.parseInt(e6, 16));
    } else {
      if (this.match("\\char")) {
        let t3 = Math.floor(null !== (e5 = this.matchLatexNumber()) && void 0 !== e5 ? e5 : NaN);
        return (!Number.isFinite(t3) || t3 < 0 || t3 > 1114111) && (t3 = 10067), String.fromCodePoint(t3);
      }
      if (this.match("\\unicode"))
        if (this.skipSpaceTokens(), "<{>" === this.peek) {
          this.next();
          const e6 = this.matchLatexNumber();
          if (this.match("<}>") && null !== e6 && e6 >= 0 && e6 <= 1114111)
            return String.fromCodePoint(e6);
        } else {
          const e6 = this.matchLatexNumber();
          if (null !== e6 && e6 >= 0 && e6 <= 1114111)
            return String.fromCodePoint(e6);
        }
    }
    return this.index = t2, this.next();
  }
  matchColor(e5 = false) {
    let t2 = "";
    for (; !this.atEnd && "}" !== this.peek; )
      t2 += this.next();
    return t2;
  }
  matchLatexDimension() {
    return null;
  }
  match(e5) {
    return this._tokens[this.index] === e5 && (this.index++, true);
  }
  matchAll(e5) {
    if ("string" == typeof e5 && (e5 = [e5]), 0 === e5.length)
      return false;
    let t2 = true, i2 = 0;
    do {
      t2 = this._tokens[this.index + i2] === e5[i2++];
    } while (t2 && i2 < e5.length);
    return t2 && (this.index += i2), t2;
  }
  matchAny(e5) {
    return e5.includes(this._tokens[this.index]) ? this._tokens[this.index++] : "";
  }
  matchSequence(e5) {
    const t2 = [];
    for (; e5.includes(this._tokens[this.index]); )
      t2.push(this._tokens[this.index++]);
    return t2;
  }
  matchOptionalSign() {
    let e5 = !!this.matchAny(["-", "\u2212"]);
    for (; this.matchAny(["+", "\uFE62"]) || this.skipSpace(); )
      this.matchAny(["-", "\u2212"]) && (e5 = !e5);
    return e5 ? "-" : "+";
  }
  matchDecimalDigits(e5) {
    var t2;
    null != e5 || (e5 = {}), null !== (t2 = e5.withGrouping) && void 0 !== t2 || (e5.withGrouping = false);
    let i2 = "", n2 = false;
    for (; !n2; )
      if (i2 += this.matchSequence(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]).join(""), n2 = true, e5.withGrouping && this.options.groupSeparator) {
        const e6 = this.index;
        this.skipSpace(), this.matchAll(this._groupSeparatorTokens) && (this.skipSpace(), /[0-9]/.test(this.peek) ? n2 = false : this.index = e6);
      }
    return i2;
  }
  matchSignedInteger(e5) {
    var t2;
    null != e5 || (e5 = {}), null !== (t2 = e5.withGrouping) && void 0 !== t2 || (e5.withGrouping = false);
    const i2 = this.index, n2 = this.matchOptionalSign(), r2 = this.matchDecimalDigits(e5);
    return r2 ? "-" === n2 ? "-" + r2 : r2 : (this.index = i2, "");
  }
  matchExponent() {
    const e5 = this.index;
    if (this.matchAny(["e", "E"])) {
      const e6 = this.matchSignedInteger({ withGrouping: false });
      if (e6)
        return "e" + e6;
    }
    if (this.index = e5, this.match("\\times") && (this.skipSpaceTokens(), this.match("1") && this.match("0") && this.match("^"))) {
      if (/[0-9]/.test(this.peek))
        return "e" + this.next();
      if (this.match("<{>")) {
        this.skipSpaceTokens();
        const e6 = this.matchSignedInteger();
        if (this.skipSpaceTokens(), this.match("<}>") && e6)
          return "e" + e6;
      }
    }
    if (this.index = e5, this.skipSpaceTokens(), this.match("\\%"))
      return "e-2";
    if (this.index = e5, this.matchAll(this._exponentProductTokens) && (this.skipSpaceTokens(), this.matchAll(this._beginExponentMarkerTokens))) {
      this.skipSpaceTokens();
      const e6 = this.matchSignedInteger();
      if (this.skipSpaceTokens(), this.matchAll(this._endExponentMarkerTokens) && e6)
        return "e" + e6;
    }
    return this.index = e5, "";
  }
  matchRepeatingDecimal() {
    const e5 = this.index;
    let t2 = "";
    return this.match("(") ? (t2 = this.matchDecimalDigits(), t2 && this.match(")") ? "(" + t2 + ")" : "") : (this.index = e5, this.matchAll(["\\left", "("]) ? (t2 = this.matchDecimalDigits(), t2 && this.matchAll(["\\right", ")"]) ? "(" + t2 + ")" : "") : (this.index = e5, this.matchAll(["\\overline", "<{>"]) ? (t2 = this.matchDecimalDigits(), t2 && this.match("<}>") ? "(" + t2 + ")" : "") : (this.index = e5, this.matchAll(this._beginRepeatingDigitsTokens) ? (t2 = this.matchDecimalDigits(), t2 && this.matchAll(this._endRepeatingDigitsTokens) ? "(" + t2 + ")" : "") : (this.index = e5, ""))));
  }
  matchNumber() {
    if (!this.options.parseNumbers)
      return "";
    const e5 = this.index;
    this.skipSpace(), this.match("+");
    let t2 = "", i2 = false;
    if (this.match(".") || this.matchAll(this._decimalMarkerTokens)) {
      const t3 = this.peek;
      if ("\\overline" === t3 && t3 === this._beginRepeatingDigitsTokens[0] && !/[0-9]\(/.test(t3))
        return this.index = e5, "";
      i2 = true;
    } else if (t2 = this.matchDecimalDigits({ withGrouping: true }), !t2)
      return this.index = e5, "";
    let n2 = false;
    if (i2 || !this.match(".") && !this.matchAll(this._decimalMarkerTokens) ? i2 && (t2 = "0." + this.matchDecimalDigits({ withGrouping: true }), n2 = true) : (t2 += "." + this.matchDecimalDigits({ withGrouping: true }), n2 = true), n2) {
      const e6 = this.matchRepeatingDecimal();
      e6 ? t2 += e6 : this.match("\\ldots") || this.matchAll(this._truncationMarkerTokens);
    }
    return t2 + this.matchExponent();
  }
  matchLatexNumber(e5 = true) {
    var t2, i2;
    let n2 = false, r2 = this.peek;
    for (; "<space>" === r2 || "+" === r2 || "-" === r2; )
      "-" === r2 && (n2 = !n2), this.next(), r2 = this.peek;
    let a2 = 10, o2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
    if (this.match("'"))
      a2 = 8, o2 = ["0", "1", "2", "3", "4", "5", "6", "7"], e5 = true;
    else if (this.match('"') || this.match("x"))
      a2 = 16, o2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"], e5 = true;
    else if (this.match("`"))
      return r2 = this.next(), r2 ? r2.startsWith("\\") && 2 === r2.length ? (n2 ? -1 : 1) * (null !== (t2 = r2.codePointAt(1)) && void 0 !== t2 ? t2 : 0) : (n2 ? -1 : 1) * (null !== (i2 = r2.codePointAt(0)) && void 0 !== i2 ? i2 : 0) : null;
    let s2 = "";
    for (; o2.includes(this.peek); )
      s2 += this.next();
    if (!e5 && this.match("."))
      for (s2 += "."; o2.includes(this.peek); )
        s2 += this.next();
    const l2 = e5 ? Number.parseInt(s2, a2) : Number.parseFloat(s2);
    return Number.isNaN(l2) ? null : n2 ? -l2 : l2;
  }
  matchPrefixOperator(e5) {
    e5 || (e5 = { minPrec: 0 }), e5.minPrec || (e5 = { ...e5, minPrec: 0 });
    const t2 = this.peekDefinitions("prefix");
    if (null === t2)
      return null;
    const i2 = this.index;
    for (const [n2, r2] of t2) {
      this.index = i2 + r2;
      const t3 = n2.parse(this, e5);
      if (t3)
        return t3;
    }
    return this.index = i2, null;
  }
  matchInfixOperator(e5, t2) {
    t2 || (t2 = { minPrec: 0 }), t2.minPrec || (t2 = { ...t2, minPrec: 0 });
    const i2 = this.peekDefinitions("infix");
    if (null === i2)
      return null;
    const n2 = this.index;
    for (const [r2, a2] of i2)
      if (r2.precedence >= t2.minPrec) {
        this.index = n2 + a2;
        const i3 = r2.parse(this, t2, e5);
        if (i3)
          return i3;
      }
    return this.index = n2, null;
  }
  matchArguments(e5) {
    var t2, i2, n2, r2;
    if (!e5)
      return null;
    const a2 = this.index, o2 = this.matchEnclosure();
    if ("enclosure" === e5 && "Delimiter" === hs(o2))
      return "Sequence" === ps(o2, 1) ? null !== (t2 = fs(ps(o2, 1))) && void 0 !== t2 ? t2 : [] : [null !== (i2 = ps(o2, 1)) && void 0 !== i2 ? i2 : ["Sequence"]];
    if ("implicit" === e5) {
      if ("Delimiter" === hs(o2))
        return "Sequence" === ps(o2, 1) ? null !== (n2 = Ns(o2)) && void 0 !== n2 ? n2 : [] : [null !== (r2 = ps(o2, 1)) && void 0 !== r2 ? r2 : ["Sequence"]];
      if (null !== o2)
        return [o2];
      const e6 = this.matchExpression({ minPrec: 390 });
      return null !== e6 ? [e6] : null;
    }
    return this.index = a2, null;
  }
  matchOpenDelimiter(e5, t2) {
    var i2;
    const n2 = this.index, r2 = ol[this.peek];
    r2 && this.next();
    const a2 = null !== (i2 = rl[e5]) && void 0 !== i2 ? i2 : [e5], o2 = r2 ? [r2] : [];
    return a2.includes("||") && this.matchAll(["|", "|"]) ? (o2.push("|"), o2.push("|"), o2) : a2.includes(this.peek) ? (ll[e5] === t2 ? o2.push(ll[this.peek]) : o2.push(t2), this.next(), o2) : (this.index = n2, null);
  }
  matchMiddleDelimiter(e5) {
    var t2;
    const i2 = null !== (t2 = al[e5]) && void 0 !== t2 ? t2 : [e5];
    if (sl.includes(this.peek)) {
      const e6 = this.index;
      return this.next(), i2.includes(this.peek) ? (this.next(), true) : (this.index = e6, false);
    }
    return !!i2.include(this.peek) && (this.next(), true);
  }
  matchEnclosure() {
    const e5 = this._dictionary.matchfix;
    if (0 === e5.length)
      return null;
    const t2 = this.index;
    for (const i2 of e5) {
      if (this.index = t2, Array.isArray(i2.openDelimiter)) {
        if (!this.matchAll(i2.openDelimiter))
          continue;
        this.addBoundary(i2.closeDelimiter);
        const e7 = this.matchExpression();
        if (this.skipSpace(), !this.matchBoundary()) {
          this.removeBoundary();
          continue;
        }
        const t3 = i2.parse(this, null != e7 ? e7 : ["Sequence"]);
        if (null === t3)
          continue;
        return t3;
      }
      const e6 = this.matchOpenDelimiter(i2.openDelimiter, i2.closeDelimiter);
      if (null === e6)
        continue;
      if (this.matchAll(e6)) {
        const e7 = i2.parse(this, ["Sequence"]);
        if (null === e7)
          continue;
        return e7;
      }
      this.addBoundary(e6);
      const n2 = this.index;
      let r2 = this.matchExpression();
      if (this.skipSpace(), !this.matchBoundary() && (this.removeBoundary(), this.index = n2, r2 = this.matchExpression(), !this.matchAll(e6))) {
        if (!this.atEnd)
          continue;
        return this.index = n2, null;
      }
      const a2 = i2.parse(this, null != r2 ? r2 : ["Sequence"]);
      if (null !== a2)
        return a2;
    }
    return this.index = t2, null;
  }
  matchIdentifier() {
    let e5 = null;
    return this.match("\\operatorname") || this.match("\\mathit") || this.match("\\mathrm") ? (e5 = this.matchStringArgument(), null === e5 || cs(e5), e5) : (e5 = this.peek, /[a-zA-Z]/.test(e5) ? this.next() : null);
  }
  matchFunction() {
    var e5, t2;
    const i2 = this.index, n2 = this.peekDefinitions("function");
    if (n2)
      for (const [e6, t3] of n2) {
        if (this.index = i2 + t3, "function" != typeof e6.parse) {
          const t4 = Ns(this.matchEnclosure());
          return t4 ? [e6.name, ...t4] : e6.name;
        }
        {
          const t4 = e6.parse(this);
          if (t4)
            return t4;
        }
      }
    this.index = i2;
    let r2 = null;
    if (this.match("\\operatorname") || this.match("\\mathit") || this.match("\\mathrm")) {
      if (r2 = this.matchStringArgument(), null === r2)
        return this.error("expected-string-argument", i2);
      if (!cs(r2))
        return this.error("invalid-symbol-name", i2);
    }
    if (r2 || (r2 = this.next(), cs(r2) || (r2 = null)), r2 && "function" === (null === (t2 = (e5 = this.options).parseUnknownSymbol) || void 0 === t2 ? void 0 : t2.call(e5, r2, this))) {
      const e6 = Ns(this.matchEnclosure());
      return e6 ? [r2, ...e6] : r2;
    }
    return this.index = i2, null;
  }
  matchSymbol() {
    var e5, t2;
    const i2 = this.index;
    let n2 = null;
    const r2 = this.peekDefinitions("symbol");
    if (r2)
      for (const [e6, t3] of r2) {
        if (this.index = i2 + t3, "function" != typeof e6.parse)
          return e6.name;
        {
          const t4 = e6.parse(this);
          if (t4)
            return t4;
        }
      }
    if (this.index = i2, this.match("\\operatorname") || this.match("\\mathit") || this.match("\\mathrm")) {
      if (n2 = this.matchStringArgument(), null === n2)
        return this.error("expected-string-argument", i2);
      if (!cs(n2))
        return this.error("invalid-symbol-name", i2);
    }
    return n2 || (n2 = this.next()), n2 && cs(n2) && "symbol" === (null === (t2 = (e5 = this.options).parseUnknownSymbol) || void 0 === t2 ? void 0 : t2.call(e5, n2, this)) ? n2 : (this.index = i2, null);
  }
  matchOptionalLatexArgument() {
    const e5 = this.index;
    if (this.skipSpaceTokens(), this.match("[")) {
      this.addBoundary(["]"]);
      const e6 = this.matchExpression();
      return this.skipSpace(), this.matchBoundary() ? e6 : this.boundaryError("expected-closing-delimiter");
    }
    return this.index = e5, null;
  }
  matchRequiredLatexArgument() {
    const e5 = this.index;
    if (this.skipSpaceTokens(), this.match("<{>")) {
      this.addBoundary(["<}>"]);
      const e6 = this.matchExpression();
      return this.skipSpace(), this.matchBoundary() ? null != e6 ? e6 : ["Sequence"] : this.boundaryError("expected-closing-delimiter");
    }
    return /^[0-9]$/.test(this.peek) ? parseInt(this.next()) : /^[^\\#]$/.test(this.peek) ? this.next() : this.matchSymbol() || (this.index = e5, null);
  }
  matchSupsub(e5) {
    var t2, i2, n2;
    if (null === e5)
      return null;
    const r2 = this.index;
    this.skipSpace();
    const a2 = [], o2 = [];
    let s2 = r2;
    for (; "_" === this.peek || "^" === this.peek; ) {
      if (this.match("_"))
        if (s2 = this.index, this.match("_") || this.match("^"))
          o2.push(this.error("syntax-error", s2));
        else {
          const e6 = null !== (t2 = this.matchRequiredLatexArgument()) && void 0 !== t2 ? t2 : this.matchStringArgument();
          if (null === e6)
            return this.error("missing", r2);
          o2.push(e6);
        }
      else if (this.match("^"))
        if (s2 = this.index, this.match("_") || this.match("^"))
          a2.push(this.error("syntax-error", s2));
        else {
          const e6 = this.matchRequiredLatexArgument();
          if (null === e6)
            return this.error("missing", r2);
          a2.push(e6);
        }
      s2 = this.index, this.skipSpace();
    }
    if (0 === a2.length && 0 === o2.length)
      return this.index = r2, e5;
    let l2 = e5;
    if (o2.length > 0) {
      const e6 = null === (i2 = this._dictionary.infix[1]) || void 0 === i2 ? void 0 : i2.get("_");
      if (e6) {
        const t3 = ["Subscript", l2, 1 === o2.length ? o2[0] : ["List", ...o2]];
        for (const i3 of e6)
          if (l2 = "function" == typeof i3.parse ? i3.parse(this, { minPrec: 0 }, t3) : t3, l2)
            break;
      }
    }
    if (a2.length > 0) {
      const e6 = null === (n2 = this._dictionary.infix[1]) || void 0 === n2 ? void 0 : n2.get("^");
      if (e6) {
        const t3 = ["Superscript", l2, 1 === a2.length ? a2[0] : ["List", ...a2]];
        for (const i3 of e6)
          if (l2 = "function" == typeof i3.parse ? i3.parse(this, { minPrec: 0 }, t3) : t3, l2)
            break;
      }
    }
    return null === l2 && (this.index = r2), l2;
  }
  matchPostfix(e5) {
    if (null === e5)
      return null;
    const t2 = this.peekDefinitions("postfix");
    if (null === t2)
      return null;
    const i2 = this.index;
    for (const [n2, r2] of t2) {
      this.index = i2 + r2;
      const t3 = n2.parse(this, e5);
      if (null !== t3)
        return t3;
    }
    return this.index = i2, null;
  }
  matchString() {
    let e5 = "";
    for (; !this.atBoundary; ) {
      const t2 = this.peek;
      if ("<$>" === t2 || "<$$>" === t2)
        return "";
      "<space>" === t2 ? (this.next(), e5 += " ") : (t2[0], e5 += this.next());
    }
    return e5;
  }
  matchStringArgument() {
    const e5 = this.index;
    if (this.skipSpaceTokens(), this.match("<{>")) {
      for (this.addBoundary(["<}>"]); this.match("<space>"); )
        ;
      const e6 = this.matchString();
      if (this.matchBoundary())
        return e6.trimEnd();
      this.removeBoundary();
    }
    return this.index = e5, null;
  }
  matchTabular() {
    var e5;
    const t2 = [];
    let i2 = [], n2 = null;
    for (; !this.atBoundary; )
      if (this.skipSpace(), this.match("&"))
        i2.push(null != n2 ? n2 : "Nothing"), n2 = null;
      else if (this.match("\\\\") || this.match("\\cr"))
        this.skipSpace(), this.matchOptionalLatexArgument(), null !== n2 && i2.push(n2), t2.push(i2), i2 = [], n2 = null;
      else {
        const t3 = [];
        let i3 = this.peek;
        for (; "&" !== i3 && "\\\\" !== i3 && "\\cr" !== i3 && !this.atBoundary; )
          n2 = this.matchExpression({ condition: (e6) => {
            const t4 = e6.peek;
            return "&" === t4 || "\\\\" === t4 || "\\cr" === t4;
          } }), n2 ? t3.push(n2) : (t3.push(["Error", ["'unexpected-token'", i3]]), this.next()), this.skipSpace(), i3 = this.peek;
        n2 = t3.length > 1 ? ["Sequence", ...t3] : null !== (e5 = t3[0]) && void 0 !== e5 ? e5 : "Nothing";
      }
    return null !== n2 && i2.push(n2), i2.length > 0 && t2.push(i2), t2;
  }
  matchEnvironment() {
    const e5 = this.index;
    if (!this.match("\\begin"))
      return null;
    const t2 = this.matchStringArgument();
    if (null === t2)
      return this.error("expected-environment-name", e5);
    this.addBoundary(["\\end", "<{>", ...t2.split(""), "<}>"]);
    const i2 = this._dictionary.environment.get(t2);
    if (!i2)
      return this.matchTabular(), this.skipSpace(), this.matchBoundary() ? this.error(["unknown-environment", { str: t2 }], e5) : this.boundaryError("unbalanced-environment");
    const n2 = i2.parse(this, [], []);
    return this.skipSpace(), this.matchBoundary() ? null !== n2 ? this.decorate(n2, e5) : (this.index = e5, null) : this.boundaryError("unbalanced-environment");
  }
  applyInvisibleOperator(e5, t2) {
    var i2;
    if (null === t2 || "Error" === hs(t2) || "Nothing" === bs(t2) || Ls(t2) || this.atTerminator(e5) || null === this.options.applyInvisibleOperator)
      return null;
    if (null !== this.peekDefinitions("operator"))
      return null;
    const n2 = this.index, r2 = this.matchExpression({ ...e5, minPrec: 390 });
    if (null === r2 || "Nothing" === bs(r2) || Ls(r2))
      return this.index = n2, null;
    if ("Error" === hs(r2))
      return Ms("Sequence", t2, r2);
    if ("function" == typeof this.options.applyInvisibleOperator)
      return this.options.applyInvisibleOperator(this, t2, r2);
    const a2 = bs(t2);
    if (a2 && "function" === this.options.parseUnknownSymbol(a2, this)) {
      const e6 = Ns(r2);
      return e6 ? [t2, ...e6] : a2;
    }
    const o2 = ks(t2);
    if (null !== o2 && Number.isInteger(o2)) {
      const e6 = hs(r2);
      if ("Divide" === e6 || "Rational" === e6) {
        const [e7, i3] = [ks(ps(r2, 1)), ks(ps(r2, 2))];
        if (null !== e7 && null !== i3 && e7 > 0 && e7 <= 1e3 && i3 > 1 && i3 <= 1e3 && Number.isInteger(e7) && Number.isInteger(i3))
          return ["Add", t2, r2];
      }
    }
    if ("Delimiter" === hs(r2)) {
      if ("Sequence" === hs(ps(r2, 1)))
        return [null != a2 ? a2 : t2, ...null !== (i2 = fs(ps(r2, 1))) && void 0 !== i2 ? i2 : []];
      if (!ps(r2, 1) || "Nothing" === bs(ps(r2, 1)))
        return Ms("Sequence", t2, this.error("expected-expression", n2));
    }
    return "Sequence" === hs(r2) || "Sequence" === hs(t2) || null !== ds(t2) || null !== ds(r2) || null !== xs(t2) || null !== xs(r2) ? Ms("Sequence", t2, r2) : Ms("Multiply", t2, r2);
  }
  matchUnexpectedLatexCommand() {
    var e5, t2;
    const i2 = this.index;
    let n2 = this.peekDefinitions("operator");
    if (n2) {
      if (n2 = this.peekDefinitions("postfix"), n2) {
        const [e6, t3] = n2[0];
        if (this.index += t3, "function" == typeof e6.parse) {
          const t4 = e6.parse(this, this.error("missing", i2));
          if (t4)
            return t4;
        }
        return e6.name ? [e6.name, this.error("missing", i2)] : this.error("unexpected-operator", i2);
      }
      if (n2 = this.peekDefinitions("prefix"), n2) {
        const [t3, r3] = n2[0];
        if (this.index += r3, "function" == typeof t3.parse) {
          const e6 = t3.parse(this, { minPrec: 0 });
          if (e6)
            return e6;
        }
        return t3.name ? [t3.name, null !== (e5 = this.matchExpression()) && void 0 !== e5 ? e5 : this.error("missing", i2)] : this.error("unexpected-operator", i2);
      }
      if (n2 = this.peekDefinitions("infix"), n2) {
        const [e6, r3] = n2[0];
        if (this.index += r3, "function" == typeof e6.parse) {
          const t3 = e6.parse(this, { minPrec: 0 }, this.error("missing", i2));
          if (t3)
            return t3;
        }
        return e6.name ? [e6.name, this.error("missing", i2), null !== (t2 = this.matchExpression()) && void 0 !== t2 ? t2 : this.error("missing", i2)] : this.error("unexpected-operator", i2);
      }
    }
    const r2 = this.peek;
    if (!r2 || "\\" !== r2[0])
      return null;
    if (this.next(), this.skipSpaceTokens(), "\\end" === r2) {
      const e6 = this.matchStringArgument();
      return null === e6 ? this.error("expected-environment-name", i2) : this.error(["unbalanced-environment", { str: e6 }], i2);
    }
    for (; this.match("["); ) {
      let e6 = 0;
      for (; !this.atEnd && 0 === e6 && "]" !== this.peek; )
        "[" === this.peek && (e6 += 1), "]" === this.peek && (e6 -= 1), this.next();
      this.match("]");
    }
    for (; this.match("<{>"); ) {
      let e6 = 0;
      for (; !this.atEnd && 0 === e6 && "<}>" !== this.peek; )
        "<{>" === this.peek && (e6 += 1), "<}>" === this.peek && (e6 -= 1), this.next();
      this.match("<}>");
    }
    return this.error(["unexpected-command", { str: r2 }], i2);
  }
  matchPrimary() {
    var e5;
    if (this.atBoundary)
      return null;
    let t2 = null;
    const i2 = this.index;
    if (this.match("<}>"))
      return this.error("unexpected-closing-delimiter", i2);
    if (this.match("<{>")) {
      if (this.addBoundary(["<}>"]), t2 = this.matchExpression(), null === t2)
        return this.boundaryError("expected-expression");
      if (!this.matchBoundary())
        return this.decorate(["Sequence", t2, this.boundaryError("expected-closing-delimiter")], i2);
    }
    if (null === t2) {
      const e6 = this.matchNumber();
      e6 && (t2 = { num: e6 });
    }
    if (null === t2 && (t2 = this.matchEnclosure()), null === t2 && (t2 = this.matchEnvironment()), null === t2 && this.matchAll(this._positiveInfinityTokens) && (t2 = { num: "+Infinity" }), null === t2 && this.matchAll(this._negativeInfinityTokens) && (t2 = { num: "-Infinity" }), null === t2 && this.matchAll(this._notANumberTokens) && (t2 = { num: "NaN" }), null === t2 && (t2 = null !== (e5 = this.matchFunction()) && void 0 !== e5 ? e5 : this.matchSymbol()), null !== t2) {
      t2 = this.decorate(t2, i2);
      let e6 = null, n2 = this.index;
      do {
        if (e6 = this.matchPostfix(t2), t2 = null != e6 ? e6 : t2, this.index === n2 && null !== e6)
          break;
        n2 = this.index;
      } while (null !== e6);
    }
    return null === t2 && (t2 = this.matchUnexpectedLatexCommand()), null !== t2 && (t2 = this.matchSupsub(t2)), this.decorate(t2, i2);
  }
  matchExpression(e5) {
    const t2 = this.index;
    if (this.skipSpace(), this.atBoundary)
      return this.index = t2, null;
    e5 || (e5 = { minPrec: 0 }), void 0 === e5.minPrec && (e5.minPrec = 0);
    let i2 = this.matchPrefixOperator({ ...e5, minPrec: 0 });
    if (null === i2 && (i2 = this.matchPrimary(), "Sequence" === hs(i2) && 0 === ys(i2) && (i2 = null)), i2) {
      let t3 = false;
      for (; !t3 && !this.atTerminator(e5); ) {
        this.skipSpace();
        let n2 = this.matchInfixOperator(i2, e5);
        null === n2 && (n2 = this.applyInvisibleOperator(e5, i2)), null !== n2 ? i2 = n2 : t3 = true;
      }
    }
    return this.decorate(i2, t2);
  }
  decorate(e5, t2) {
    if (null === e5)
      return null;
    if (!this.options.preserveLatex)
      return e5;
    const i2 = this.latex(t2, this.index);
    return Array.isArray(e5) ? e5 = { latex: i2, fn: e5 } : "number" == typeof e5 ? e5 = { latex: i2, num: Number(e5).toString() } : "string" == typeof e5 ? e5 = { latex: i2, sym: e5 } : "object" == typeof e5 && null !== e5 && (e5.latex = i2), e5;
  }
  error(e5, t2) {
    return "string" == typeof e5 ? ["Error", { str: e5 }, ["Latex", { str: this.latex(t2, this.index) }]] : ["Error", ["ErrorCode", { str: e5[0] }, ...e5.slice(1)], ["Latex", { str: this.latex(t2, this.index) }]];
  }
};
function hl(e5, t2) {
  const i2 = e5.length, n2 = e5;
  e5 = e5.slice(0, -1);
  for (let i3 = 0; i3 < e5.length - 16; i3++) {
    const n3 = e5.substring(0, i3);
    for (let r3 = 0; r3 < 17; r3++) {
      const a2 = e5.substring(i3, i3 + r3 + 1), o2 = Math.floor((e5.length - n3.length) / a2.length);
      if (o2 > 1 && (n3 + a2.repeat(o2 + 1)).startsWith(e5))
        return "0" === a2 ? n3.replace(/(\d{3})/g, "$1" + t2.groupSeparator) : n3.replace(/(\d{3})/g, "$1" + t2.groupSeparator) + t2.beginRepeatingDigits + a2 + t2.endRepeatingDigits;
    }
  }
  const r2 = i2 > t2.precision - 1;
  return e5 = n2, r2 && (e5 = e5.substring(0, t2.precision - 1)), t2.groupSeparator && (e5 = e5.replace(/(\d{3})/g, "$1" + t2.groupSeparator)).endsWith(t2.groupSeparator) && (e5 = e5.slice(0, -t2.groupSeparator.length)), r2 ? e5 + t2.truncationMarker : e5;
}
function ml(e5, t2) {
  var i2;
  return e5 ? t2.beginExponentMarker ? t2.beginExponentMarker + e5 + (null !== (i2 = t2.endExponentMarker) && void 0 !== i2 ? i2 : "") : "10^{" + e5 + "}" : "";
}
var pl = class {
  constructor(e5, t2, i2) {
    this.level = -1, this.options = e5, e5.invisibleMultiply && (/#1/.test(e5.invisibleMultiply) && /#2/.test(e5.invisibleMultiply) || i2([{ severity: "warning", message: ["expected-argument", "invisibleMultiply"] }])), this.onError = i2, this.dictionary = t2;
  }
  updateOptions(e5) {
    for (const t2 of Object.keys(this.options))
      t2 in e5 && (this.options[t2] = e5[t2]);
  }
  wrap(e5, t2) {
    if (null === e5)
      return "";
    if (void 0 === t2)
      return this.wrapString(this.serialize(e5), this.options.groupStyle(e5, this.level + 1));
    if ("number" == typeof e5 || ss(e5) || "string" == typeof e5 || ls(e5))
      return this.serialize(e5);
    const i2 = hs(e5);
    if ("string" == typeof i2 && "Delimiter" !== i2 && "Subscript" !== i2) {
      const n2 = this.dictionary.name.get(i2);
      if (n2 && ("symbol" === n2.kind || "prefix" === n2.kind || "infix" === n2.kind || "postfix" === n2.kind) && n2.precedence < t2)
        return this.wrapString(this.serialize(e5), this.options.applyFunctionStyle(e5, this.level));
    }
    return this.serialize(e5);
  }
  wrapShort(e5) {
    if (null === e5)
      return "";
    const t2 = this.serialize(e5);
    return "Delimiter" === hs(e5) && 1 === ys(e5) || "number" == typeof e5 || ss(e5) || /(^(.|\\[a-zA-Z*]+))$/.test(t2) ? t2 : this.wrapString(t2, this.options.groupStyle(e5, this.level + 1));
  }
  wrapString(e5, t2, i2) {
    var n2, r2;
    if ("none" === t2)
      return e5;
    const a2 = null !== (n2 = null == i2 ? void 0 : i2[0]) && void 0 !== n2 ? n2 : "(", o2 = null !== (r2 = null == i2 ? void 0 : i2[1]) && void 0 !== r2 ? r2 : ")";
    return "." !== a2 && "." !== o2 || "paren" !== t2 || (t2 = "leftright"), "leftright" === t2 ? `${"." === a2 ? "" : "\\left(" + a2}${e5}${"." === o2 ? "" : "\\right(" + o2})` : "big" === t2 ? `${"." === a2 ? "" : "\\Bigl(" + a2}${e5}${"." === o2 ? "" : "\\Bigr(" + o2})` : a2 + e5 + o2;
  }
  wrapArguments(e5) {
    var t2;
    return this.wrapString((null !== (t2 = fs(e5)) && void 0 !== t2 ? t2 : []).map((e6) => this.serialize(e6)).join(", "), this.options.applyFunctionStyle(e5, this.level));
  }
  serializeSymbol(e5, t2) {
    var i2;
    return hs(e5) ? this.serializeFunction(e5, t2) : "string" == typeof (null == t2 ? void 0 : t2.serialize) ? t2.serialize : "function" == typeof (null == t2 ? void 0 : t2.serialize) ? t2.serialize(this, e5) : null !== (i2 = yl(bs(e5), "upright.")) && void 0 !== i2 ? i2 : "";
  }
  serializeFunction(e5, t2) {
    var i2, n2;
    const r2 = hs(e5);
    if (!r2)
      return this.serializeSymbol(e5, t2);
    const a2 = null !== (i2 = fs(e5)) && void 0 !== i2 ? i2 : [];
    if (t2)
      return "function" == typeof t2.serialize ? t2.serialize(this, e5) : as([null !== (n2 = t2.serialize) && void 0 !== n2 ? n2 : r2, this.wrapArguments(e5)]);
    if ("string" == typeof r2 && r2.length > 0 && "\\" === r2[0])
      return as([r2, ...a2.map((e6) => `{${this.serialize(e6)}}`)]);
    if ("string" == typeof r2)
      return yl(r2, "upright.") + this.wrapArguments(e5);
    const o2 = this.options.applyFunctionStyle(e5, this.level);
    return "\\mathrm{Apply}" + this.wrapString(this.serialize(r2) + ", " + this.serialize(["List", ...a2]), o2);
  }
  serializeDictionary(e5) {
    return `\\left\\lbrack\\begin{array}{lll}${Object.keys(e5).map((t2) => `\\textbf{${t2}} & \\rightarrow & ${this.serialize(e5[t2])}`).join("\\\\")}\\end{array}\\right\\rbrack`;
  }
  serialize(e5) {
    if (null == e5)
      return "";
    this.level += 1;
    try {
      const t2 = (() => {
        var t3;
        const i2 = function(e6, t4) {
          var i3, n3, r3;
          if (null === e6)
            return "";
          let a3;
          if ("number" == typeof e6)
            a3 = e6;
          else {
            if ("object" != typeof e6 || !("num" in e6))
              return "";
            a3 = e6.num;
          }
          if (a3 === 1 / 0 || "Infinity" === a3 || "+Infinity" === a3)
            return t4.positiveInfinity;
          if (a3 === -1 / 0 || "-Infinity" === a3)
            return t4.negativeInfinity;
          if ("NaN" === a3 || "number" == typeof a3 && Number.isNaN(a3))
            return t4.notANumber;
          if ("number" == typeof a3)
            return "engineering" === t4.notation ? function(e7, t5) {
              if (0 === e7)
                return "0";
              const i4 = Math.abs(e7);
              let n4 = Math.round(Math.log10(i4));
              n4 -= n4 % 3, i4 > Math.pow(10, t5.avoidExponentsInRange[0]) && i4 < Math.pow(10, t5.avoidExponentsInRange[1]) && (n4 = 0);
              const r4 = i4 / Math.pow(10, n4);
              let a4 = "";
              const o4 = r4.toString().match(/^(.*)\.(.*)$/);
              (null == o4 ? void 0 : o4[1]) && o4[2] && (a4 = o4[1] + t5.decimalMarker + o4[2]), t5.groupSeparator && (a4 = hl(r4.toExponential(), t5));
              let s3 = "";
              return 0 !== n4 && (s3 = ml(n4.toString(), t5)), (e7 < 0 ? "-" : "") + a4 + s3;
            }(a3, t4) : function(e7, t5) {
              var i4;
              let n4, r4 = e7.match(/^(.*)[e|E]([-+]?[0-9]+)$/i);
              (null == r4 ? void 0 : r4[1]) && r4[2] && (n4 = ml(r4[2], t5));
              let a4 = null !== (i4 = null == r4 ? void 0 : r4[1]) && void 0 !== i4 ? i4 : e7, o4 = "";
              return r4 = (n4 ? r4[1] : e7).match(/^(.*)\.(.*)$/), (null == r4 ? void 0 : r4[1]) && r4[2] && (a4 = r4[1], o4 = r4[2]), t5.groupSeparator && (a4 = a4.replace(/\B(?=(\d{3})+(?!\d))/g, t5.groupSeparator), o4 = hl(o4, t5)), o4 && (o4 = t5.decimalMarker + o4), n4 ? "1" !== a4 || o4 ? a4 + o4 + t5.exponentProduct + n4 : n4 : a4 + o4;
            }(a3.toString(), t4);
          if (/[0-9][nd]$/.test(a3) && (a3 = a3.slice(0, -1)), a3 = a3.replace(/[\u0009-\u000d\u0020\u00a0]/g, ""), /\([0-9]+\)$/.test(a3)) {
            const [e7, n4, r4] = null !== (i3 = a3.match(/(.+)\(([0-9]+)\)$/)) && void 0 !== i3 ? i3 : [];
            a3 = n4 + r4.repeat(Math.ceil(t4.precision / r4.length));
          }
          let o3 = "";
          for ("-" === a3[0] ? (o3 = "-", a3 = a3.substring(1)) : "+" === a3[0] && (a3 = a3.substring(1)); "0" === a3[0]; )
            a3 = a3.substring(1);
          if (0 === a3.length)
            return o3 + "0";
          "." === a3[0] && (a3 = "0" + a3);
          let s2 = "";
          if (a3.indexOf(".") >= 0) {
            const e7 = a3.match(/(\d*)\.(\d*)([e|E]([-+]?[0-9]*))?/);
            if (!e7)
              return "";
            const i4 = e7[1], r4 = e7[2];
            if (s2 = null !== (n3 = e7[4]) && void 0 !== n3 ? n3 : "", "0" === i4) {
              let e8 = 0;
              for (; "0" === r4[e8] && e8 < r4.length; )
                e8 += 1;
              let i5 = "";
              if (e8 <= 4)
                i5 = "0" + t4.decimalMarker, i5 += r4.substring(0, e8), i5 += hl(a3.substring(i5.length), t4);
              else if (e8 + 1 >= t4.precision)
                i5 = "0", o3 = "";
              else {
                i5 = a3[e8];
                const n4 = hl(a3.substring(e8 + 1), t4);
                n4 && (i5 += t4.decimalMarker + n4);
              }
              "0" !== i5 && (!(a3.length - 1 > t4.precision) || t4.endRepeatingDigits && i5.endsWith(t4.endRepeatingDigits) || !t4.truncationMarker || i5.endsWith(t4.truncationMarker) || (i5 += t4.truncationMarker), e8 > 4 && (i5 += t4.exponentProduct + ml("" + (1 - e8), t4))), a3 = i5;
            } else {
              a3 = i4.replace(/\B(?=(\d{3})+(?!\d))/g, t4.groupSeparator);
              const e8 = hl(r4, t4);
              e8 && (a3 += t4.decimalMarker + e8);
            }
          } else if (a3.length > t4.precision) {
            const e7 = a3.length;
            if (e7 > t4.avoidExponentsInRange[1]) {
              let i4 = a3[0];
              const n4 = hl(a3.substring(1), t4);
              n4 && (i4 += t4.decimalMarker + n4, t4.truncationMarker && !i4.endsWith(t4.truncationMarker) && t4.endRepeatingDigits && !i4.endsWith(t4.endRepeatingDigits) && (i4 += t4.truncationMarker)), "1" !== i4 ? i4 += t4.exponentProduct : i4 = "", a3 = i4 + ml("" + (e7 - 1), t4);
            }
          } else {
            const e7 = a3.match(/([0-9]*)\.?([0-9]*)([e|E]([-+]?[0-9]+))?/);
            e7 && (a3 = e7[1], e7[2] && (a3 += t4.decimalMarker + e7[2]), s2 = null !== (r3 = e7[4]) && void 0 !== r3 ? r3 : ""), a3 = a3.replace(/\B(?=(\d{3})+(?!\d))/g, t4.groupSeparator);
          }
          const l2 = ml(s2, t4);
          return "1" === a3 && l2 ? o3 + l2 : (l2 && (a3 = a3 + t4.exponentProduct + l2), o3 + a3);
        }(e5, this.options);
        if (i2)
          return i2;
        const n2 = ds(e5);
        if (null !== n2)
          return `\\text{${n2}}`;
        const r2 = bs(e5);
        if (null !== r2) {
          const t4 = this.dictionary.name.get(r2);
          if ("symbol" === (null == t4 ? void 0 : t4.kind))
            return this.serializeSymbol(e5, t4);
          if ("function" === (null == t4 ? void 0 : t4.kind))
            return this.serializeFunction(e5, t4);
        }
        const a2 = xs(e5);
        if (null !== a2)
          return this.serializeDictionary(a2);
        const o2 = ms(e5);
        if (o2) {
          if ("\\" === o2[0]) {
            const i4 = null !== (t3 = fs(e5)) && void 0 !== t3 ? t3 : [];
            return 0 === i4.length ? o2 : o2 + "{" + i4.map((e6) => this.serialize(e6)).filter((e6) => !!e6).join("}{") + "}";
          }
          const i3 = this.dictionary.name.get(o2);
          if (i3)
            return "function" == typeof i3.serialize ? i3.serialize(this, e5) : "infix" === i3.kind || "postfix" === i3.kind || "prefix" === i3.kind ? function(e6, t4, i4) {
              let n3 = "";
              const r3 = ys(t4), a3 = ms(t4);
              if ("postfix" === i4.kind)
                return 1 !== r3 && e6.onError([{ severity: "warning", message: ["postfix-operator-requires-one-operand", e6.serializeSymbol(a3)] }]), fl(i4.serialize, [e6.wrap(ps(t4, 1), i4.precedence)]);
              if ("prefix" === i4.kind)
                return 1 !== r3 && e6.onError([{ severity: "warning", message: ["prefix-operator-requires-one-operand", e6.serializeSymbol(a3)] }]), fl(i4.serialize, [e6.wrap(ps(t4, 1), i4.precedence + 1)]);
              if ("infix" === i4.kind) {
                n3 = e6.wrap(ps(t4, 1), i4.precedence);
                for (let a4 = 2; a4 < r3 + 1; a4++) {
                  const r4 = ps(t4, a4);
                  null !== r4 && (n3 = fl(i4.serialize, [n3, e6.wrap(r4, i4.precedence)]));
                }
              }
              return n3;
            }(this, e5, i3) : "symbol" === i3.kind ? this.serializeSymbol(e5, i3) : "function" === i3.kind ? this.serializeFunction(e5, i3) : "";
        }
        if (Array.isArray(e5) || us(e5) || null !== bs(e5))
          return this.serializeSymbol(e5);
        this.onError([{ severity: "warning", message: ["syntax-error", e5 ? JSON.stringify(e5) : "undefined"] }]);
      })();
      return this.level -= 1, null != t2 ? t2 : "";
    } catch (e6) {
    }
    return this.level -= 1, "";
  }
  applyFunctionStyle(e5, t2) {
    return this.options.applyFunctionStyle(e5, t2);
  }
  groupStyle(e5, t2) {
    return this.options.groupStyle(e5, t2);
  }
  rootStyle(e5, t2) {
    return this.options.rootStyle(e5, t2);
  }
  fractionStyle(e5, t2) {
    return this.options.fractionStyle(e5, t2);
  }
  logicStyle(e5, t2) {
    return this.options.logicStyle(e5, t2);
  }
  powerStyle(e5, t2) {
    return this.options.powerStyle(e5, t2);
  }
  numericSetStyle(e5, t2) {
    return this.options.numericSetStyle(e5, t2);
  }
};
function fl(e5, t2) {
  var i2;
  let n2 = e5;
  for (let e6 = 0; e6 < t2.length; e6++) {
    let r2 = null !== (i2 = t2[e6]) && void 0 !== i2 ? i2 : "";
    if (/[a-zA-Z*]/.test(r2[0])) {
      const t3 = n2.match(RegExp("(.*)#" + Number(e6 + 1).toString()));
      t3 && /\\[a-zA-Z*]+/.test(t3[1]) && (r2 = " " + r2);
    }
    n2 = n2.replace("#" + Number(e6 + 1).toString(), r2);
  }
  return n2;
}
var gl = ["alpha", "beta", "gamma", "Gamma", "delta", "Delta", "epsilon", "zeta", "eta", "theta", "Theta", "iota", "kappa", "lambda", "Lambda", "mu", "nu", "xi", "Xi", "pi", "Pi", "rho", "sigma", "Sigma", "tau", "upsilon", "phi", "Phi", "varphi", "chi", "psi", "Psi", "omega", "Omega", "aleph", "ast", "blacksquare", "bot", "bullet", "circ", "diamond", "times", "top", "square", "star"];
function yl(e5, t2 = "italic.") {
  var i2;
  if (null === e5)
    return null;
  const n2 = e5.match(/^(_+)(.*)/);
  if (n2)
    return `\\text{${"\\_".repeat(n2[1].length) + bl(n2[2])}}`;
  let r2;
  [r2, e5] = function(e6) {
    const t3 = e6.match(/^([a-zA-Z-]+\.)(.*)/);
    return t3 ? [t3[1], t3[2]] : ["", e6];
  }(e5);
  const a2 = bl(e5);
  return 1 !== a2.length || r2 ? (r2 || (r2 = t2), (null !== (i2 = { "upright.": "\\mathrm{_}", "italic.": "\\mathit{_}", "bold-italic.": "\\mathbf{\\mathit{_}}", "script.": "\\mathscr{_}", "calligraphic.": "\\mathcal{_}", "bold-script.": "\\mathbf{\\mathscr{_}}", "bold-calligraphic.": "\\mathbf{\\mathcal{_}}", "fraktur.": "\\mathfrak{_}", "gothic.": "\\mathfrak{_}", "bold-gothic.": "\\mathbf{\\mathfrak{_}}", "bold-fraktur.": "\\mathbf{\\mathfrak{_}}", "sans-serif.": "\\mathsf{_}", "bold-sans-serif.": "\\mathbf{\\mathsf{_}}", "italic-sans-serif.": "\\mathit{\\mathsf{_}}", "monospace.": "\\mathtt{_}", "blackboard.": "\\mathbb{_}", "double-struck.": "\\mathbb{_}" }[r2]) && void 0 !== i2 ? i2 : "\\mathit{_}").replace("_", a2)) : a2;
}
function bl(e5) {
  const t2 = e5.indexOf("_");
  if (t2 > 0) {
    const i3 = e5.substring(0, t2), n2 = e5.substring(t2 + 1);
    return n2 ? n2.startsWith('"') && n2.endsWith('"') ? `${bl(i3)}_\\mathrm{${bl(n2.substring(1, -1))}}` : `${bl(i3)}_{${bl(n2)}}` : yl(i3) + "\\_";
  }
  const i2 = e5.match(/([^0-9]+?)([0-9]+)$/);
  return i2 ? 0 === i2[1].length ? e5 : `${bl(i2[1])}_{${i2[2]}}` : gl.includes(e5) ? "\\" + e5 : e5 = e5.replace(/[{}\[\]\\:\-\$%]/g, (e6) => {
    var t3;
    return null !== (t3 = { "{": "\\lbrace ", "}": "\\rbrace ", "[": "\\lbrack ", "]": "\\rbrack ", ":": "\\colon ", "\\": "\\backslash ", "-": '\\unicode{"2013}' }[e6]) && void 0 !== t3 ? t3 : "\\" + e6;
  });
}
var vl = { invisibleMultiply: "", invisiblePlus: "", multiply: "\\times", missingSymbol: "\\blacksquare", applyFunctionStyle: function(e5, t2) {
  return "paren";
}, groupStyle: function(e5, t2) {
  return "paren";
}, rootStyle: Cs, fractionStyle: Es, logicStyle: function(e5, t2) {
  return "boolean";
}, powerStyle: function(e5, t2) {
  return "solidus";
}, numericSetStyle: function(e5, t2) {
  return "compact";
} };
var xl = class {
  constructor(e5) {
    var t2, i2;
    this.onError = null !== (t2 = e5.onError) && void 0 !== t2 ? t2 : (e6) => {
      if ("undefined" != typeof window)
        for (const t3 of e6)
          ;
    }, this.computeEngine = e5.computeEngine;
    const n2 = { ...e5 };
    delete n2.dictionary, delete n2.onError, this.options = { ...ul, ...cl, ...vl, ...n2 }, this.dictionary = function(e6, t3) {
      var i3, n3;
      const r2 = { lookahead: 1, name: /* @__PURE__ */ new Map(), function: /* @__PURE__ */ new Map(), symbol: [], infix: [], prefix: [], postfix: [], environment: /* @__PURE__ */ new Map(), matchfix: [] };
      for (const a2 of e6) {
        const [e7, o2] = il(a2, t3);
        if (null !== o2) {
          if (void 0 !== o2.name && (r2.name.has(o2.name) && t3({ severity: "warning", message: ["invalid-dictionary-entry", o2.name, "Duplicate definition"] }), r2.name.set(o2.name, o2)), "matchfix" === o2.kind)
            r2.matchfix.push(o2);
          else if ("environment" === o2.kind) {
            const e8 = os(null !== (i3 = a2.trigger) && void 0 !== i3 ? i3 : "");
            r2.environment.has(e8) && t3({ severity: "warning", message: ["invalid-dictionary-entry", e8, "Duplicate environment definition"] }), r2.environment.set(e8, o2);
          } else if (e7) {
            const t4 = os(null !== (n3 = a2.trigger) && void 0 !== n3 ? n3 : ""), i4 = tl(e7);
            if (r2.lookahead = Math.max(r2.lookahead, i4), "function" === o2.kind)
              r2.function.has(t4) ? r2.function.set(t4, [...r2.function.get(t4), o2]) : r2.function.set(t4, [o2]);
            else if ("symbol" === o2.kind) {
              void 0 === r2.symbol[i4] && (r2.symbol[i4] = /* @__PURE__ */ new Map());
              const e8 = r2.symbol[i4];
              e8.has(t4) ? e8.get(t4).push(o2) : e8.set(t4, [o2]);
            } else if ("prefix" === o2.kind) {
              void 0 === r2.prefix[i4] && (r2.prefix[i4] = /* @__PURE__ */ new Map());
              const e8 = r2.prefix[i4];
              e8.has(t4) ? e8.get(t4).push(o2) : e8.set(t4, [o2]);
            } else if ("infix" === o2.kind) {
              void 0 === r2.infix[i4] && (r2.infix[i4] = /* @__PURE__ */ new Map());
              const e8 = r2.infix[i4];
              e8.has(t4) ? e8.get(t4).push(o2) : e8.set(t4, [o2]);
            } else if ("postfix" === o2.kind) {
              void 0 === r2.postfix[i4] && (r2.postfix[i4] = /* @__PURE__ */ new Map());
              const e8 = r2.postfix[i4];
              e8.has(t4) ? e8.get(t4).push(o2) : e8.set(t4, [o2]);
            }
          }
        }
      }
      return r2;
    }(null !== (i2 = e5.dictionary) && void 0 !== i2 ? i2 : xl.getDictionary(), (e6) => this.onError([e6]));
  }
  updateOptions(e5) {
    for (const t2 of Object.keys(this.options))
      t2 in e5 && (this.options[t2] = e5[t2]);
    this.serializer.updateOptions(e5);
  }
  static getDictionary(e5 = "all") {
    if ("all" === e5) {
      const e6 = [];
      for (const t2 of Object.keys(nl))
        nl[t2] && e6.push(...nl[t2]);
      return e6;
    }
    return nl[e5] ? [...nl[e5]] : [];
  }
  parse(e5) {
    const t2 = new dl(rs(e5, []), this.options, this.dictionary, this.computeEngine);
    let i2 = t2.matchExpression();
    if (!t2.atEnd) {
      const e6 = t2.peekDefinitions("infix");
      if (e6) {
        const n3 = t2.index, [r3, a3] = e6[0];
        t2.index += a3;
        const o2 = r3.parse(t2, { minPrec: 0 }, null != i2 ? i2 : t2.error("missing", n3));
        if (o2)
          return o2;
        if (r3.name)
          return [r3.name, null != i2 ? i2 : t2.error("missing", n3), t2.error("missing", n3)];
        t2.index = n3;
      }
      const n2 = t2.index, r2 = t2.next();
      for (; !t2.atEnd; )
        t2.next();
      const a2 = t2.error([r2.length > 1 && r2.startsWith("\\") ? "unexpected-command" : "unexpected-token", { str: os([r2]) }], n2);
      i2 = i2 ? ["Sequence", i2, a2] : a2;
    }
    return null != i2 || (i2 = ["Sequence"]), this.options.preserveLatex && (Array.isArray(i2) ? i2 = { latex: e5, fn: i2 } : "number" == typeof i2 ? i2 = { latex: e5, num: Number(i2).toString() } : "string" == typeof i2 ? i2 = { latex: e5, sym: i2 } : "object" == typeof i2 && null !== i2 && (i2.latex = e5)), null != i2 ? i2 : ["Sequence"];
  }
  serialize(e5) {
    return this.serializer.serialize(e5);
  }
  get serializer() {
    return this._serializer || (this._serializer = new pl(this.options, this.dictionary, this.onError)), this._serializer;
  }
};
var kl = ["Error", "Dictionary", "Function", "List", "Tuple", "Intersection", "Union", "Maybe", "Sequence", "Interval", "Range", "Head", "Symbol", "Value"];
var _l = { NumericFunction: ["Function", ["Sequence", "Number"], "Number"], RealFunction: ["Function", ["Sequence", "ExtendedRealNumber"], "ExtendedRealNumber"], TrigonometricFunction: ["Function", "Number", "Number"], LogicOperator: ["Function", "MaybeBoolean", ["Maybe", "MaybeBoolean"], "MaybeBoolean"], Predicate: ["Function", ["Sequence", "Anything"], "MaybeBoolean"], RelationalOperator: ["Function", "Anything", "Anything", "MaybeBoolean"] };
var wl = { Anything: [], Value: "Anything", Domain: "Anything", DomainExpression: "Domain", Void: "Nothing", Nothing: ["DomainExpression", "Boolean", "String", "Symbol", "Tuple", "List", "Dictionary", "InfiniteSet", "FiniteSet", "ImaginaryNumber", "TranscendentalNumber", "PositiveInteger", "NegativeInteger", "NonPositiveInteger", "NonNegativeInteger", "PositiveNumber", "NegativeNumber", "NonPositiveNumber", "NonNegativeNumber", "Scalar", "TrigonometricFunction", "LogicOperator", "RelationalOperator"], MaybeBoolean: "Value", Boolean: "MaybeBoolean", String: "Boolean", Symbol: "Boolean", Collection: "Value", List: "Collection", Dictionary: "Collection", Sequence: "Collection", Tuple: "Sequence", Set: "Collection", InfiniteSet: "Set", FiniteSet: "Set", Function: "Anything", Predicate: "Function", LogicOperator: "Predicate", RelationalOperator: "Predicate", NumericFunction: "Function", RealFunction: "NumericFunction", TrigonometricFunction: "RealFunction", Number: "Value", ExtendedComplexNumber: "Number", ComplexNumber: "ExtendedComplexNumber", ImaginaryNumber: "ComplexNumber", ExtendedRealNumber: "ExtendedComplexNumber", RealNumber: ["ComplexNumber", "ExtendedRealNumber"], PositiveNumber: "NonNegativeNumber", NonNegativeNumber: "RealNumber", NonPositiveNumber: "NegativeNumber", NegativeNumber: "RealNumber", TranscendentalNumber: "RealNumber", AlgebraicNumber: "RealNumber", RationalNumber: "AlgebraicNumber", Integer: "RationalNumber", PositiveInteger: "NonNegativeInteger", NonNegativeInteger: "Integer", NonPositiveInteger: "NegativeInteger", NegativeInteger: "Integer", Tensor: "Value", Matrix: "Tensor", Scalar: ["Row", "Column"], Row: "Vector", Column: "Vector", Vector: "Matrix" };
var Sl;
function Ml(e5) {
  return !!e5 && void 0 !== wl[e5];
}
function Nl(e5) {
  if (Sl || (Sl = {}, Nl("Void")), Sl[e5])
    return Array.from(Sl[e5]);
  let t2 = [];
  if ("string" != typeof e5 || !wl[e5]) {
    if (!Array.isArray(e5))
      throw Error("Unknown domain literal " + e5);
    if (!kl.includes(e5[0]))
      throw Error("Unknown domain constructor " + e5[0]);
    return "Function" === e5[0] || "Head" === e5[0] ? Nl("Function") : "Symbol" === e5[0] ? Nl("Symbol") : "Tuple" === e5[0] ? Nl("Tuple") : "List" === e5[0] ? Nl("List") : "Dictionary" === e5[0] ? Nl("Dictionary") : "Range" === e5[0] ? Nl("Integer") : "Interval" === e5[0] ? Nl("RealNumberExtended") : "Maybe" === e5[0] || "Sequence" === e5[0] ? Nl(e5[1]) : ("Literal" === e5[0] || "Union" === e5[0] || e5[0], ["Anything"]);
  }
  if ("string" == typeof wl[e5])
    t2 = [wl[e5], ...Nl(wl[e5])];
  else if (Array.isArray(wl[e5]))
    for (const i2 of wl[e5])
      t2.push(i2), t2.push(...Nl(i2));
  return Sl[e5] = new Set(t2), t2;
}
var Ll = Math.log10(Math.pow(2, 53));
var Al = /* @__PURE__ */ new Set([2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209, 3217, 3221, 3229, 3251, 3253, 3257, 3259, 3271, 3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331, 3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391, 3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467, 3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533, 3539, 3541, 3547, 3557, 3559, 3571, 3581, 3583, 3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643, 3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709, 3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779, 3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851, 3853, 3863, 3877, 3881, 3889, 3907, 3911, 3917, 3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989, 4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049, 4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111, 4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177, 4201, 4211, 4217, 4219, 4229, 4231, 4241, 4243, 4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297, 4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391, 4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457, 4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519, 4523, 4547, 4549, 4561, 4567, 4583, 4591, 4597, 4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657, 4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729, 4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799, 4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889, 4903, 4909, 4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987, 4993, 4999, 5003, 5009, 5011, 5021, 5023, 5039, 5051, 5059, 5077, 5081, 5087, 5099, 5101, 5107, 5113, 5119, 5147, 5153, 5167, 5171, 5179, 5189, 5197, 5209, 5227, 5231, 5233, 5237, 5261, 5273, 5279, 5281, 5297, 5303, 5309, 5323, 5333, 5347, 5351, 5381, 5387, 5393, 5399, 5407, 5413, 5417, 5419, 5431, 5437, 5441, 5443, 5449, 5471, 5477, 5479, 5483, 5501, 5503, 5507, 5519, 5521, 5527, 5531, 5557, 5563, 5569, 5573, 5581, 5591, 5623, 5639, 5641, 5647, 5651, 5653, 5657, 5659, 5669, 5683, 5689, 5693, 5701, 5711, 5717, 5737, 5741, 5743, 5749, 5779, 5783, 5791, 5801, 5807, 5813, 5821, 5827, 5839, 5843, 5849, 5851, 5857, 5861, 5867, 5869, 5879, 5881, 5897, 5903, 5923, 5927, 5939, 5953, 5981, 5987, 6007, 6011, 6029, 6037, 6043, 6047, 6053, 6067, 6073, 6079, 6089, 6091, 6101, 6113, 6121, 6131, 6133, 6143, 6151, 6163, 6173, 6197, 6199, 6203, 6211, 6217, 6221, 6229, 6247, 6257, 6263, 6269, 6271, 6277, 6287, 6299, 6301, 6311, 6317, 6323, 6329, 6337, 6343, 6353, 6359, 6361, 6367, 6373, 6379, 6389, 6397, 6421, 6427, 6449, 6451, 6469, 6473, 6481, 6491, 6521, 6529, 6547, 6551, 6553, 6563, 6569, 6571, 6577, 6581, 6599, 6607, 6619, 6637, 6653, 6659, 6661, 6673, 6679, 6689, 6691, 6701, 6703, 6709, 6719, 6733, 6737, 6761, 6763, 6779, 6781, 6791, 6793, 6803, 6823, 6827, 6829, 6833, 6841, 6857, 6863, 6869, 6871, 6883, 6899, 6907, 6911, 6917, 6947, 6949, 6959, 6961, 6967, 6971, 6977, 6983, 6991, 6997, 7001, 7013, 7019, 7027, 7039, 7043, 7057, 7069, 7079, 7103, 7109, 7121, 7127, 7129, 7151, 7159, 7177, 7187, 7193, 7207, 7211, 7213, 7219, 7229, 7237, 7243, 7247, 7253, 7283, 7297, 7307, 7309, 7321, 7331, 7333, 7349, 7351, 7369, 7393, 7411, 7417, 7433, 7451, 7457, 7459, 7477, 7481, 7487, 7489, 7499, 7507, 7517, 7523, 7529, 7537, 7541, 7547, 7549, 7559, 7561, 7573, 7577, 7583, 7589, 7591, 7603, 7607, 7621, 7639, 7643, 7649, 7669, 7673, 7681, 7687, 7691, 7699, 7703, 7717, 7723, 7727, 7741, 7753, 7757, 7759, 7789, 7793, 7817, 7823, 7829, 7841, 7853, 7867, 7873, 7877, 7879, 7883, 7901, 7907, 7919]);
function Cl(e5, t2) {
  const i2 = function(e6) {
    if (e6 <= 3)
      return { [e6]: 1 };
    const t3 = {};
    let i3 = false;
    for (; !i3; ) {
      if (e6 % 2 == 0) {
        t3[2] ? t3[2] += 1 : t3[2] = 1, e6 /= 2;
        continue;
      }
      if (e6 % 3 == 0) {
        t3[3] ? t3[3] += 1 : t3[3] = 1, e6 /= 3;
        continue;
      }
      if (1 === e6)
        return t3;
      const n3 = Math.sqrt(e6);
      i3 = true;
      for (let r3 = 6; r3 <= n3 + 6; r3 += 6) {
        if (e6 % (r3 - 1) == 0) {
          t3[r3 - 1] ? t3[r3 - 1] += 1 : t3[r3 - 1] = 1, e6 /= r3 - 1, i3 = false;
          break;
        }
        if (e6 % (r3 + 1) == 0) {
          t3[r3 + 1] ? t3[r3 + 1] += 1 : t3[r3 + 1] = 1, e6 /= r3 + 1, i3 = false;
          break;
        }
      }
    }
    return t3[e6] = 1, t3;
  }(e5);
  let n2 = 1, r2 = 1;
  for (const e6 of Object.keys(i2)) {
    const a2 = parseFloat(e6);
    n2 *= Math.pow(a2, Math.floor(i2[e6] / t2)), r2 *= Math.pow(a2, i2[e6] % t2);
  }
  return [n2, r2];
}
function El(e5, t2) {
  if (0 === e5)
    return t2;
  if (0 === t2)
    return e5;
  if (e5 === t2)
    return e5;
  if (!Number.isInteger(e5) || !Number.isInteger(t2))
    return NaN;
  for (; 0 !== t2; )
    [e5, t2] = [t2, e5 % t2];
  return e5 < 0 ? -e5 : e5;
}
function Dl([e5, t2]) {
  if (1 === e5 || 1 === t2)
    return [e5, t2];
  t2 < 0 && ([e5, t2] = [-e5, -t2]);
  const i2 = El(e5, t2);
  return i2 <= 1 ? [e5, t2] : [e5 / i2, t2 / i2];
}
var Tl = [0.9999999999998099, 676.5203681218851, -1259.1392167224028, 771.3234287776531, -176.6150291621406, 12.507343278686905, -0.13857109526572012, 9984369578019572e-21, 15056327351493116e-23];
var zl = [0.999999999999997, 57.15623566586292, -59.59796035547549, 14.13609797474174, -0.4919138160976202, 3399464998481188e-20, 4652362892704857e-20, -9837447530487956e-20, 1580887032249125e-19, -21026444172410488e-20, 2174396181152126e-19, -1643181065367639e-19, 8441822398385274e-20, -261908384015814e-19, 3689918265953162e-21];
function ql(e5) {
  if (e5 < 0)
    return NaN;
  let t2 = zl[0];
  for (let i3 = 14; i3 > 0; --i3)
    t2 += zl[i3] / (e5 + i3);
  const i2 = e5 + 4.7421875 + 0.5;
  return 0.9189385332046727 + (e5 + 0.5) * Math.log(i2) - i2 + Math.log(t2) - Math.log(e5);
}
function Il(e5) {
  if (e5 < 0.5)
    return Math.PI / (Math.sin(Math.PI * e5) * Il(1 - e5));
  if (e5 > 100)
    return Math.exp(ql(e5));
  e5 -= 1;
  let t2 = Tl[0];
  for (let i3 = 1; i3 < 9; i3++)
    t2 += Tl[i3] / (e5 + i3);
  const i2 = e5 + 7 + 0.5;
  return 2.5066282746310002 * Math.pow(i2, e5 + 0.5) * Math.exp(-i2) * t2;
}
function Fl(e5, t2 = 10) {
  let i2 = 0;
  for (let n2 = 0; n2 < e5.length; n2++) {
    const r2 = { " ": -1, "\xA0": -1, "\u2000": -1, "\u2001": -1, "\u2002": -1, "\u2003": -1, "\u2004": -1, "\u2005": -1, "\u2006": -1, "\u2007": -1, "\u2008": -1, "\u2009": -1, "\u200A": -1, "\u200B": -1, "\u202F": -1, "\u205F": -1, _: -1, ",": -1, 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15, g: 16, h: 17, i: 18, j: 19, k: 20, l: 21, m: 22, n: 23, o: 24, p: 25, q: 26, r: 27, s: 28, t: 29, u: 30, v: 31, w: 32, x: 33, y: 34, z: 35 }[e5[n2]];
    if (-1 !== r2) {
      if (void 0 === r2)
        return [i2, e5.substring(n2)];
      if (r2 >= t2)
        return [i2, e5.substring(n2)];
      i2 = i2 * t2 + r2;
    }
  }
  return [i2, ""];
}
function Ol(e5) {
  return "string" == typeof e5 && e5.startsWith("$") && e5.endsWith("$");
}
function Pl(e5) {
  return "string" == typeof e5 && e5.startsWith("$") && e5.endsWith("$") ? e5.slice(1, -1) : null;
}
function Bl(e5) {
  if ("ImaginaryUnit" === e5.symbol)
    return 1;
  if (e5.isLiteral) {
    const t3 = e5.complexValue;
    if (t3 && 0 === t3.re)
      return t3.im;
  }
  if ("Negate" === e5.head) {
    const t3 = Bl(e5.op1);
    return null === t3 ? null : -t3;
  }
  let t2 = 0;
  if ("Multiply" === e5.head && 2 === e5.nops) {
    let i2;
    "ImaginaryUnit" === e5.op1.symbol ? i2 = e5.op2 : "ImaginaryUnit" === e5.op2.symbol && (i2 = e5.op1), i2 && i2.isLiteral && (t2 = i2.asFloat);
  }
  return t2;
}
function $l(e5) {
  var t2;
  if (e5.symbol)
    return (null === (t2 = e5.symbolDefinition) || void 0 === t2 ? void 0 : t2.constant) ? [] : [e5.symbol];
  if (!e5.ops && !e5.keys)
    return [];
  const i2 = [];
  if (e5.ops)
    for (const t3 of e5.ops)
      i2.push(...$l(t3));
  if (e5.keys)
    for (const t3 of e5.keys)
      i2.push(...$l(e5.getKey(t3)));
  return i2;
}
function Vl(e5, t2) {
  if (e5.symbol)
    return t2.add(e5.symbol), t2;
  if (!e5.ops && !e5.keys)
    return t2;
  if (e5.ops)
    for (const i2 of e5.ops)
      Vl(i2, t2);
  if (e5.keys)
    for (const i2 of e5.keys)
      Vl(e5.getKey(i2), t2);
  return t2;
}
function Kl(e5, t2) {
  if (e5.ops) {
    const i2 = t2 && e5.head !== t2 ? [] : [e5];
    for (const n2 of e5.ops)
      i2.push(...Kl(n2, t2));
  } else if (e5.keys) {
    const i2 = t2 && e5.head !== t2 ? [] : [e5];
    for (const n2 of e5.keys)
      i2.push(...Kl(e5.getKey(n2), t2));
    return i2;
  }
  return t2 && e5.head !== t2 ? [] : [e5];
}
function Rl(e5) {
  return "decimal" === e5.numericMode || "auto" === e5.numericMode && e5.precision > Math.floor(Ll);
}
function jl(e5) {
  return "auto" === e5.numericMode || "complex" === e5.numericMode;
}
function Hl(e5) {
  let t2 = 0;
  for (let i2 = 0; i2 < e5.length; i2++)
    t2 = Math.imul(31, t2) + e5.charCodeAt(i2) | 0;
  return Math.abs(t2);
}
function Wl(e5, t2) {
  var i2;
  if (null == t2)
    return null;
  if ("number" == typeof t2)
    return e5.decimal(t2);
  if (ss(t2)) {
    let n2 = t2.num.toLowerCase().replace(/[nd]$/g, "").replace(/[\u0009-\u000d\u0020\u00a0]/g, "");
    if (/\([0-9]+\)$/.test(n2)) {
      const [t3, r2, a2] = null !== (i2 = n2.match(/(.+)\(([0-9]+)\)$/)) && void 0 !== i2 ? i2 : [];
      n2 = r2 + a2.repeat(Math.ceil(e5.precision / a2.length));
    }
    return "nan" === n2 ? e5.decimal("NaN") : "infinity" === n2 || "+infinity" === n2 ? e5.decimal("+Infinity") : "-infinity" === n2 ? e5.decimal("-Infinity") : e5.decimal(n2);
  }
  return null;
}
var Zl = class {
  constructor(e5, t2) {
    this.engine = e5, void 0 !== (null == t2 ? void 0 : t2.latex) && (this._latex = t2.latex), void 0 !== (null == t2 ? void 0 : t2.wikidata) && (this._wikidata = t2.wikidata);
  }
  toJSON() {
    return JSON.stringify(this.json);
  }
  toString() {
    return this.latex;
  }
  valueOf() {
    var e5, t2, i2;
    const [n2, r2] = this.rationalValue;
    return null !== n2 && null !== r2 ? [n2, r2] : null !== (i2 = null !== (t2 = null !== (e5 = this.asFloat) && void 0 !== e5 ? e5 : this.string) && void 0 !== t2 ? t2 : this.symbol) && void 0 !== i2 ? i2 : this.toString();
  }
  is(e5) {
    return null != e5 && this.isSame(this.engine.box(e5));
  }
  isCompatible(e5, t2) {
    return false;
  }
  has(e5) {
    return false;
  }
  get description() {
    return [];
  }
  get url() {
    return "";
  }
  get isPure() {
    return false;
  }
  get isFree() {
    return false;
  }
  get isConstant() {
    return false;
  }
  get isLiteral() {
    return false;
  }
  get latex() {
    var e5;
    return null !== (e5 = this._latex) && void 0 !== e5 ? e5 : this.engine.serialize(this);
  }
  set latex(e5) {
    this._latex = e5;
  }
  get wikidata() {
    var e5;
    return null !== (e5 = this._wikidata) && void 0 !== e5 ? e5 : "";
  }
  set wikidata(e5) {
    this._wikidata = e5;
  }
  get complexity() {
    return 1;
  }
  get symbols() {
    return [...Vl(this, /* @__PURE__ */ new Set())].map((e5) => this.engine.symbol(e5));
  }
  getSubexpressions(e5) {
    return Kl(this, e5);
  }
  get subexpressions() {
    return this.getSubexpressions("");
  }
  get errors() {
    return this.getSubexpressions("Error");
  }
  get ops() {
    return null;
  }
  get nops() {
    return 0;
  }
  get op1() {
    return this.engine.symbol("Nothing");
  }
  get op2() {
    return this.engine.symbol("Nothing");
  }
  get op3() {
    return this.engine.symbol("Nothing");
  }
  get basedDefinition() {
  }
  get symbolDefinition() {
  }
  get functionDefinition() {
  }
  bind(e5) {
  }
  unbind() {
  }
  get keys() {
    return null;
  }
  get keysCount() {
    return 0;
  }
  getKey(e5) {
  }
  hasKey(e5) {
    return false;
  }
  get machineValue() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.machineValue) && void 0 !== t2 ? t2 : null;
  }
  get rationalValue() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.rationalValue) && void 0 !== t2 ? t2 : [null, null];
  }
  get decimalValue() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.decimalValue) && void 0 !== t2 ? t2 : null;
  }
  get complexValue() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.complexValue) && void 0 !== t2 ? t2 : null;
  }
  get asFloat() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.asFloat) && void 0 !== t2 ? t2 : null;
  }
  get asSmallInteger() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.asSmallInteger) && void 0 !== t2 ? t2 : null;
  }
  get asRational() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.asRational) && void 0 !== t2 ? t2 : [null, null];
  }
  get sgn() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.numericValue) || void 0 === e5 ? void 0 : e5.sgn) && void 0 !== t2 ? t2 : null;
  }
  get symbol() {
    return null;
  }
  get isNothing() {
    return false;
  }
  get isValid() {
    return true;
  }
  get value() {
    return this;
  }
  set value(e5) {
    throw Error(`Can't change the value of \\(${this.latex}\\)`);
  }
  get numericValue() {
  }
  isSubdomainOf(e5) {
  }
  get domain() {
    return this.engine.domain("Void");
  }
  set domain(e5) {
    throw Error(`Can't change the domain of \\(${this.latex}\\)`);
  }
  get explicitDomain() {
    return this.domain;
  }
  get string() {
    return null;
  }
  isLess(e5) {
  }
  isLessEqual(e5) {
  }
  isGreater(e5) {
  }
  isGreaterEqual(e5) {
  }
  get isZero() {
  }
  get isNotZero() {
  }
  get isPositive() {
  }
  get isNonNegative() {
  }
  get isNegative() {
  }
  get isNonPositive() {
  }
  get isInfinity() {
  }
  get isNaN() {
  }
  get isFinite() {
  }
  get isNumber() {
  }
  get isInteger() {
  }
  get isRational() {
  }
  get isAlgebraic() {
    return false;
  }
  get isReal() {
  }
  get isExtendedReal() {
  }
  get isComplex() {
  }
  get isImaginary() {
  }
  get isExtendedComplex() {
  }
  get isOne() {
  }
  get isNegativeOne() {
  }
  get isEven() {
  }
  get isOdd() {
  }
  get isPrime() {
  }
  get isComposite() {
  }
  get canonical() {
    return this;
  }
  apply(e5, t2) {
    return this;
  }
  evaluate(e5) {
    return this.simplify(e5);
  }
  simplify(e5) {
    return this;
  }
  N(e5) {
    return this;
  }
  replace(e5) {
    return null;
  }
  subs(e5) {
    return this;
  }
  solve(e5) {
    return null;
  }
};
function Gl([e5, t2]) {
  if (e5.equals(1) || t2.equals(1))
    return [e5, t2];
  t2.lessThan(0) && ([e5, t2] = [e5.neg(), t2.neg()]);
  const i2 = function(e6, t3) {
    for (; !t3.isZero(); )
      [e6, t3] = [t3, e6.modulo(t3)];
    return e6.abs();
  }(e5, t2);
  return i2.lessThanOrEqualTo(1) ? [e5, t2] : [e5.div(i2), t2.div(i2)];
}
function Ul(e5, t2) {
  if (!t2.isInteger() || t2.isNegative())
    return e5._DECIMAL_NAN;
  if (t2.lessThan(10))
    return e5.decimal([1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800][t2.toNumber()]);
  if (t2.gt(Number.MAX_SAFE_INTEGER)) {
    let i3 = e5._DECIMAL_ONE, n3 = e5._DECIMAL_TWO;
    for (; n3.lessThan(t2); )
      i3 = i3.mul(n3), n3 = n3.add(1);
    return i3;
  }
  if (t2.modulo(2).eq(1))
    return t2.times(Ul(e5, t2.minus(1)));
  let i2 = t2.toNumber(), n2 = t2, r2 = t2;
  for (; i2 > 2; )
    i2 -= 2, n2 = n2.add(i2), r2 = r2.mul(n2);
  return r2;
}
function Jl(e5, t2) {
  if (t2.isNegative())
    return e5._DECIMAL_NAN;
  const i2 = e5.cache("gamma-p-ln", () => ["0.99999999999999709182", "57.156235665862923517", "-59.597960355475491248", "14.136097974741747174", "-0.49191381609762019978", "0.33994649984811888699e-4", "0.46523628927048575665e-4", "-0.98374475304879564677e-4", "0.15808870322491248884e-3", "-0.21026444172410488319e-3", "0.2174396181152126432e-3", "-0.16431810653676389022e-3", "0.84418223983852743293e-4", "-0.2619083840158140867e-4", "0.36899182659531622704e-5"].map((t3) => e5.decimal(t3)));
  let n2 = i2[0];
  for (let e6 = i2.length - 1; e6 > 0; --e6)
    n2 = n2.add(i2[e6].div(t2.add(e6)));
  const r2 = e5.cache("gamma-g-ln", () => e5.decimal(607).div(128)), a2 = t2.add(r2).add(e5._DECIMAL_HALF);
  return e5._DECIMAL_NEGATIVE_ONE.acos().mul(e5._DECIMAL_TWO).log().mul(e5._DECIMAL_HALF).add(a2.log().mul(t2.add(e5._DECIMAL_HALF)).minus(a2).add(n2.log()).minus(t2.log()));
}
function Xl(e5, t2) {
  if (t2.lessThan(e5._DECIMAL_HALF)) {
    const i3 = e5._DECIMAL_NEGATIVE_ONE.acos();
    return i3.div(i3.mul(t2).sin().mul(Xl(e5, e5._DECIMAL_ONE.sub(t2))));
  }
  if (t2.greaterThan(100))
    return Jl(e5, t2).exp();
  t2 = t2.sub(1);
  const i2 = e5.cache("lanczos-7-c", () => ["0.99999999999980993227684700473478", "676.520368121885098567009190444019", "-1259.13921672240287047156078755283", "771.3234287776530788486528258894", "-176.61502916214059906584551354", "12.507343278686904814458936853", "-0.13857109526572011689554707", "9.984369578019570859563e-6", "1.50563273514931155834e-7"].map(e5.decimal));
  let n2 = i2[0];
  for (let e6 = 1; e6 < 9; e6++)
    n2 = n2.add(i2[e6].div(t2.add(e6)));
  const r2 = t2.add(7).add(e5._DECIMAL_HALF);
  return e5._DECIMAL_NEGATIVE_ONE.acos().times(e5._DECIMAL_TWO).sqrt().mul(n2.mul(r2.neg().exp()).mul(r2.pow(t2.add(e5._DECIMAL_HALF))));
}
function Yl(e5) {
  return !(e5.d.length > 3 || 3 === e5.d.length && e5.d[0] >= 90) && e5.e < 308 && e5.e > -306;
}
function Ql(e5, t2) {
  var i2;
  const n2 = [];
  for (const r2 of e5)
    r2.ops && r2.head === t2 ? n2.push(...null !== (i2 = Ql(r2.ops, t2)) && void 0 !== i2 ? i2 : r2.ops) : n2.push(r2);
  return n2.length === e5.length ? null : n2;
}
function eu(e5) {
  if ("Power" === e5.head && e5.op2.isLiteral) {
    const t2 = e5.op2.asSmallInteger;
    return null !== t2 && t2 > 0 ? t2 : 1;
  }
  if ("Multiply" === e5.head) {
    let t2 = 1;
    for (const i2 of e5.ops) {
      const e6 = eu(i2);
      e6 > 1 && (t2 += e6);
    }
    return t2;
  }
  return 1;
}
function tu(e5) {
  if ("Power" === e5.head && e5.op2.isLiteral) {
    const t2 = e5.op2.asSmallInteger;
    return null !== t2 && t2 > 0 ? t2 : 1;
  }
  if ("Multiply" === e5.head) {
    let t2 = 1;
    for (const i2 of e5.ops)
      t2 = Math.max(t2, eu(i2));
    return t2;
  }
  return 1;
}
function iu(e5) {
  return e5.symbol ? e5.symbol : e5.ops ? e5.ops.map((e6) => iu(e6)).filter((e6) => e6.length > 0).join('"') : "";
}
function nu(e5, t2) {
  var i2, n2, r2, a2;
  if (e5.isLiteral && null !== e5.asFloat)
    return t2.isLiteral && null !== t2.asFloat ? e5.asFloat - t2.asFloat : -1;
  if (e5.isLiteral && e5.complexValue)
    return t2.isLiteral && t2.complexValue ? e5.complexValue.re === t2.complexValue.re ? Math.abs(e5.complexValue.im) === Math.abs(t2.complexValue.im) ? e5.complexValue.im - t2.complexValue.im : Math.abs(e5.complexValue.im) - Math.abs(t2.complexValue.im) : e5.complexValue.re - t2.complexValue.re : t2.isLiteral && t2.isNumber ? 1 : -1;
  if (e5.symbol)
    return t2.symbol ? e5.symbol === t2.symbol ? 0 : e5.symbol > t2.symbol ? 1 : -1 : t2.isLiteral && t2.isNumber ? 1 : -1;
  if (e5.ops) {
    if (t2.ops) {
      const o2 = null !== (n2 = null === (i2 = e5.functionDefinition) || void 0 === i2 ? void 0 : i2.complexity) && void 0 !== n2 ? n2 : 1e5, s2 = null !== (a2 = null === (r2 = t2.functionDefinition) || void 0 === r2 ? void 0 : r2.complexity) && void 0 !== a2 ? a2 : 1e5;
      return o2 === s2 ? "string" == typeof e5.head && "string" == typeof t2.head ? e5.head === t2.head ? ru(e5) - ru(t2) : e5.head < t2.head ? 1 : -1 : ru(e5) - ru(t2) : o2 - s2;
    }
    return t2.isLiteral && t2.isNumber || t2.symbol ? 1 : -1;
  }
  if (e5.string)
    return t2.string ? e5.string.length !== t2.string.length ? t2.string.length - e5.string.length : t2.string < e5.string ? -1 : e5.string > t2.string ? 1 : 0 : t2.keys ? -1 : 1;
  if (e5.keys && t2.keys) {
    if (e5.keysCount !== t2.keysCount)
      return t2.keysCount - e5.keysCount;
    let i3 = 0, n3 = 0;
    for (const e6 of t2.keys)
      i3 += t2.getKey(e6).complexity;
    for (const t3 of e5.keys)
      n3 += e5.getKey(t3).complexity;
    return n3 - i3;
  }
  return e5.complexity - t2.complexity;
}
function ru(e5) {
  return null !== e5.keys ? 1 + e5.keysCount : e5.ops ? ("string" == typeof e5.head ? 1 : ru(e5.head)) + [...e5.ops].reduce((e6, t2) => e6 + ru(t2), 0) : 1;
}
function au(e5) {
  var t2;
  const i2 = e5.engine;
  let n2 = 1, r2 = 1;
  if ("Multiply" === e5.head) {
    const t3 = [];
    for (const i3 of e5.ops)
      if (i3.isLiteral) {
        const [e6, a2] = i3.asRational;
        null !== e6 && null !== a2 ? (n2 *= e6, r2 *= a2) : t3.push(i3);
      } else
        t3.push(i3);
    return [n2, r2] = Dl([n2, r2]), n2 === r2 ? [[1, 1], e5] : 0 === t3.length ? [[n2, r2], i2._ONE] : 1 === t3.length ? [[n2, r2], t3[0]] : [[n2, r2], i2.mul(t3)];
  }
  if ("Divide" === e5.head) {
    let [[t3, n3], r3] = au(e5.op1);
    const [[a2, o2], s2] = au(e5.op2), [l2, u2] = Dl([t3 * o2, a2 * n3]);
    return r3.isOne && s2.isOne ? [[l2, u2], i2._ONE] : s2.isOne ? [[l2, u2], r3] : [[l2, u2], i2.fn("Divide", [r3, s2]).canonical];
  }
  if ("Power" === e5.head) {
    if (!e5.op2.isLiteral)
      return [[1, 1], e5];
    let [[t3, n3], r3] = au(e5.op1);
    if (1 === t3 && 1 === n3)
      return [[1, 1], e5];
    const a2 = e5.op2, o2 = a2.asSmallInteger;
    if (null !== o2) {
      if (-1 === o2)
        return [[n3, t3], i2.inverse(r3)];
      if (Math.log10(Math.abs(t3)) * Math.abs(o2) < 15 && Math.log10(Math.abs(n3)) * Math.abs(o2) < 15)
        return o2 > 0 ? [[Math.pow(t3, o2), Math.pow(n3, o2)], i2.power(r3, a2)] : [[Math.pow(n3, -o2), Math.pow(t3, -o2)], i2.power(r3, a2)];
    }
    const [s2, l2] = a2.rationalValue;
    if (null !== s2 && null !== l2 && t3 > 0 && 1 === Math.abs(s2)) {
      const [o3, u2] = Cl(t3, l2), [c2, d2] = Cl(n3, l2);
      return 1 === o3 && 1 === c2 ? [[1, 1], e5] : [1 === s2 ? [o3, c2] : [c2, o3], i2.power(i2.mul([i2.number([u2, d2]), r3]), a2)];
    }
    return [[1, 1], e5];
  }
  if ("Negate" === e5.head) {
    const [t3, i3] = au(e5.op1);
    return [[-t3[0], t3[1]], i3];
  }
  if (e5.isLiteral) {
    if (e5.decimalValue) {
      if (e5.decimalValue.isInteger() && Yl(e5.decimalValue))
        return [[e5.decimalValue.toNumber(), 1], i2._ONE];
      if (null === (t2 = e5.decimalValue) || void 0 === t2 ? void 0 : t2.isNegative())
        return [[-1, 1], i2.number(e5.decimalValue.neg())];
    }
    if (null !== e5.machineValue) {
      if (Number.isInteger(e5.machineValue))
        return [[e5.machineValue, 1], i2._ONE];
      if (e5.machineValue < 0)
        return [[-1, 1], i2.number(-e5.machineValue)];
    }
    const [n3, r3] = e5.rationalValue;
    if (null !== n3 && null !== r3)
      return [[n3, r3], i2._ONE];
    if (null !== e5.complexValue) {
      const t3 = e5.complexValue;
      if (t3.re < 0)
        return [[-1, 1], i2.number(i2.complex(-t3.re, -t3.im))];
    }
  }
  return [[1, 1], e5];
}
function ou(e5) {
  var t2;
  if ("Negate" === e5.head)
    return [-1, e5.op1];
  if (!e5.isLiteral)
    return [1, e5];
  const i2 = e5.engine;
  if (null !== e5.machineValue && e5.machineValue < 0)
    return [-1, i2.number(-e5.machineValue)];
  if (null === (t2 = e5.decimalValue) || void 0 === t2 ? void 0 : t2.isNegative())
    return [-1, i2.number(e5.decimalValue.neg())];
  if (null !== e5.complexValue) {
    const t3 = e5.complexValue;
    if (t3.re < 0)
      return [-1, i2.number(i2.complex(-t3.re, -t3.im))];
  }
  const [n2, r2] = e5.rationalValue;
  return null !== n2 && null !== r2 && n2 < 0 ? [-1, i2.number([-n2, r2])] : [1, e5];
}
var su = class {
  constructor(e5, t2) {
    if (this._terms = [], this._literal = [1, 1], this._hasInfinity = false, this._hasZero = false, this.engine = e5, t2)
      for (const e6 of t2)
        this.addTerm(e6);
  }
  get isEmpty() {
    return false === this._hasInfinity && false === this._hasZero && this._literal[0] === this._literal[1] && 0 === this._terms.length;
  }
  addTerm(e5) {
    if (e5.isNothing)
      return;
    if (e5.isLiteral) {
      if (e5.isOne)
        return;
      if (e5.isZero)
        return void (this._hasZero = true);
      if (e5.isNegativeOne)
        return void (this._literal[0] *= -1);
      if (e5.isInfinity)
        return this._hasInfinity = true, void (e5.isNegative && (this._literal[0] *= -1));
    }
    let [t2, i2] = au(e5);
    if (this._literal = [this._literal[0] * t2[0], this._literal[1] * t2[1]], i2.isLiteral && i2.isOne)
      return;
    let n2 = [1, 1];
    if ("Power" === i2.head && i2.op2.isLiteral) {
      const [e6, t3] = i2.op2.asRational;
      null !== e6 && null !== t3 && (n2 = [e6, t3], i2 = i2.op1);
    }
    let r2 = false;
    if (1 === n2[1] || i2.isNonNegative) {
      for (const e6 of this._terms)
        if (e6.term.isSame(i2)) {
          const [t3, i3] = e6.exponent, [a2, o2] = n2;
          e6.exponent = [t3 * o2 + i3 * a2, i3 * o2], r2 = true;
          break;
        }
    }
    r2 || this._terms.push({ exponent: n2, term: i2 });
  }
  groupedByDegrees(e5) {
    const t2 = this.engine, i2 = [], n2 = [];
    this._hasInfinity && n2.push(t2._POSITIVE_INFINITY), this._literal = Dl(this._literal), 1 === this._literal[0] && 1 === this._literal[1] || ((null == e5 ? void 0 : e5.splitRational) ? (1 !== this._literal[0] && n2.push(t2.number(this._literal[0]).canonical), 1 !== this._literal[1] && i2.push({ exponent: [-1, 1], terms: [t2.number(this._literal[1]).canonical] })) : n2.push(t2.number(this._literal).canonical)), n2.length > 0 && i2.push({ exponent: [1, 1], terms: n2 });
    for (const e6 of this._terms) {
      if (0 === e6.exponent[0])
        continue;
      let t3 = false;
      for (const n3 of i2)
        if (e6.exponent[0] === n3.exponent[0] && e6.exponent[1] === n3.exponent[1]) {
          n3.terms.push(e6.term), t3 = true;
          break;
        }
      t3 || i2.push({ exponent: Dl(e6.exponent), terms: [e6.term] });
    }
    return i2;
  }
  terms() {
    return cu(this.engine, this.groupedByDegrees());
  }
  asNumeratorDenominator() {
    var e5, t2;
    const i2 = this.groupedByDegrees(), n2 = [], r2 = [];
    for (const e6 of i2)
      e6.exponent[0] >= 0 ? n2.push(e6) : r2.push({ exponent: [-e6.exponent[0], e6.exponent[1]], terms: e6.terms });
    const a2 = this.engine;
    let o2 = cu(a2, n2);
    o2 = null !== (e5 = Ql(o2, "Multiply")) && void 0 !== e5 ? e5 : o2;
    let s2 = a2._ONE;
    1 === o2.length ? s2 = o2[0] : o2.length > 0 && (s2 = a2._fn("Multiply", o2));
    let l2 = cu(a2, r2);
    l2 = null !== (t2 = Ql(l2, "Multiply")) && void 0 !== t2 ? t2 : l2;
    let u2 = a2._ONE;
    return 1 === l2.length ? u2 = l2[0] : l2.length > 0 && (u2 = a2._fn("Multiply", l2)), [s2, u2];
  }
  asExpression() {
    var e5;
    const t2 = this.engine;
    if (this._hasInfinity) {
      if (this._hasZero)
        return t2._NAN;
      if (0 === this._terms.length)
        return this._literal[0] > 0 ? t2._POSITIVE_INFINITY : t2._NEGATIVE_INFINITY;
    }
    if (this._hasZero)
      return t2._ZERO;
    if (0 === this._terms.length)
      return t2.number(this._literal).canonical;
    let i2 = cu(t2, this.groupedByDegrees({ splitRational: false }));
    return this._hasInfinity && i2.push(t2._POSITIVE_INFINITY), i2 = null !== (e5 = Ql(i2, "Multiply")) && void 0 !== e5 ? e5 : i2, 0 === i2.length ? t2._ONE : 1 === i2.length ? i2[0] : this.engine._fn("Multiply", i2);
  }
  asRationalExpression() {
    const [e5, t2] = this.asNumeratorDenominator();
    return t2.isOne ? e5 : t2.isNegativeOne ? this.engine.negate(e5) : this.engine._fn("Divide", [e5, t2]);
  }
};
function lu(e5) {
  const [t2, i2] = e5;
  return t2 === i2 ? 0 : t2 > 0 && Number.isInteger(t2 / i2) ? 1 : t2 > 0 ? 2 : Number.isInteger(t2 / i2) ? 3 : 4;
}
function uu(e5, t2) {
  const i2 = lu(e5.exponent), n2 = lu(t2.exponent);
  return i2 !== n2 ? i2 - n2 : e5.exponent[0] / e5.exponent[1] - t2.exponent[0] / t2.exponent[1];
}
function cu(e5, t2) {
  var i2;
  const n2 = (t2 = t2.sort(uu)).map((t3) => {
    var i3;
    const n3 = null !== (i3 = Ql(t3.terms, "Multiply")) && void 0 !== i3 ? i3 : t3.terms, r2 = n3.length <= 1 ? n3[0] : e5._fn("Multiply", n3.sort(nu));
    return t3.exponent[0] === t3.exponent[1] ? r2 : e5.power(r2, t3.exponent);
  });
  return null !== (i2 = Ql(n2, "Multiply")) && void 0 !== i2 ? i2 : n2;
}
function du(e5, t2, i2, n2) {
  var r2, a2;
  const o2 = e5.jsonSerializationOptions.exclude;
  if (("Rational" === t2 || "Divide" === t2) && 2 === i2.length && i2[0].isLiteral && i2[1].isLiteral && 1 === i2[0].asSmallInteger && 2 === i2[1].asSmallInteger && !o2.includes("Half"))
    return hu(e5, "Half", { ...n2, wikidata: "Q39373172" });
  if ("Negate" === t2 && (null === (r2 = i2[0]) || void 0 === r2 ? void 0 : r2.isLiteral) && 1 === i2.length) {
    if (null !== i2[0].machineValue)
      return mu(e5, -i2[0].machineValue);
    if (null !== i2[0].decimalValue)
      return mu(e5, i2[0].decimalValue.neg());
    if (null !== i2[0].complexValue)
      return mu(e5, i2[0].complexValue.neg());
    const [t3, n3] = i2[0].rationalValue;
    if (null !== t3 && null !== n3)
      return mu(e5, [-t3, n3]);
  }
  if ("string" == typeof t2 && o2.includes(t2)) {
    if ("Rational" === t2 && 2 === i2.length)
      return du(e5, "Divide", i2, n2);
    if ("Complex" === t2 && 2 === i2.length)
      return du(e5, "Add", [i2[0], e5._fn("Multiply", [i2[1], e5.symbol("ImaginaryUnit")])], n2);
    if ("Sqrt" === t2 && 1 === i2.length)
      return du(e5, "Power", [i2[0], o2.includes("Half") ? e5.number([1, 2]) : e5._HALF], n2);
    if ("Root" === t2 && 2 === i2.length && i2[1].isLiteral) {
      const t3 = i2[1].asSmallInteger;
      if (2 === t3)
        return du(e5, "Sqrt", [i2[0]]);
      if (null !== t3)
        return t3 < 0 ? du(e5, "Divide", [e5._ONE, e5._fn("Power", [i2[0], e5.number([1, -t3])])], n2) : du(e5, "Power", [i2[0], e5.number([1, -t3])], n2);
    }
    if ("Square" === t2 && 1 === i2.length)
      return du(e5, "Power", [i2[0], e5._TWO], n2);
    if ("Exp" === t2 && 1 === i2.length)
      return du(e5, "Power", [e5.symbol("ExponentialE"), i2[0]], n2);
    if ("Subtract" === t2 && 2 === i2.length)
      return du(e5, "Add", [i2[0], e5._fn("Negate", [i2[1]])], n2);
    if ("Subtract" === t2 && 1 === i2.length)
      return du(e5, "Negate", i2, n2);
  }
  if ("Add" === t2 && 2 === i2.length && !o2.includes("Subtract")) {
    if (i2[1].isLiteral) {
      const t3 = i2[1].asSmallInteger;
      if (null !== t3 && t3 < 0)
        return du(e5, "Subtract", [i2[0], e5.number(-t3)], n2);
    }
    if ("Negate" === i2[1].head)
      return du(e5, "Subtract", [i2[0], i2[1].op1], n2);
  }
  if ("Tuple" === t2) {
    if (1 === i2.length && !o2.includes("Single"))
      return du(e5, "Single", i2, n2);
    if (2 === i2.length && !o2.includes("Pair"))
      return du(e5, "Pair", i2, n2);
    if (3 === i2.length && !o2.includes("Triple"))
      return du(e5, "Triple", i2, n2);
  }
  const s2 = ["string" == typeof t2 ? t2 : t2.json, ...i2.map((e6) => e6.json)], l2 = { ...null != n2 ? n2 : {} };
  return e5.jsonSerializationOptions.metadata.includes("latex") ? l2.latex = null !== (a2 = l2.latex) && void 0 !== a2 ? a2 : e5.serialize({ fn: s2 }) : l2.latex = "", e5.jsonSerializationOptions.metadata.includes("wikidata") || (l2.wikidata = ""), l2.latex || l2.wikidata || !e5.jsonSerializationOptions.shorthands.includes("function") ? l2.latex && l2.wikidata ? { fn: s2, latex: l2.latex, wikidata: l2.wikidata } : l2.latex ? { fn: s2, latex: l2.latex } : l2.wikidata ? { fn: s2, wikidata: l2.wikidata } : { fn: s2 } : s2;
}
function hu(e5, t2, i2) {
  var n2, r2;
  if ("Half" === t2 && e5.jsonSerializationOptions.exclude.includes("Half"))
    return mu(e5, [1, 2], i2);
  if (i2 = { ...i2 }, e5.jsonSerializationOptions.metadata.includes("latex") ? (i2.latex = null !== (n2 = i2.latex) && void 0 !== n2 ? n2 : e5.serialize({ sym: t2 }), void 0 !== i2.latex && (i2.latex = i2.latex)) : i2.latex = void 0, e5.jsonSerializationOptions.metadata.includes("wikidata")) {
    if (void 0 === i2.wikidata) {
      const n3 = null === (r2 = e5.lookupSymbol(t2)) || void 0 === r2 ? void 0 : r2.wikidata;
      void 0 !== n3 && (i2.wikidata = n3);
    }
  } else
    i2.wikidata = void 0;
  return void 0 === i2.latex && void 0 === i2.wikidata && e5.jsonSerializationOptions.shorthands.includes("symbol") ? t2 : void 0 !== i2.latex && void 0 !== i2.wikidata ? { sym: t2, latex: i2.latex, wikidata: i2.wikidata } : void 0 !== i2.latex ? { sym: t2, latex: i2.latex } : void 0 !== i2.wikidata ? { sym: t2, wikidata: i2.wikidata } : { sym: t2 };
}
function mu(e5, t2, i2) {
  var n2, r2, a2;
  i2 = { ...i2 }, e5.jsonSerializationOptions.metadata.includes("latex") || (i2.latex = void 0);
  const o2 = void 0 === i2.latex && !e5.jsonSerializationOptions.metadata.includes("latex") && e5.jsonSerializationOptions.shorthands.includes("number");
  let s2 = "";
  if (t2 instanceof Xo) {
    if (t2.isNaN() ? s2 = "NaN" : t2.isFinite() || (s2 = t2.isPositive() ? "+Infinity" : "-Infinity"), !s2) {
      if (o2 && Yl(t2) && t2.precision() < 15)
        return t2.toNumber();
      s2 = t2.isInteger() && t2.e < t2.precision() + 4 ? t2.toFixed(0) : pu(e5, t2.toJSON());
    }
    return e5.jsonSerializationOptions.metadata.includes("latex") && (i2.latex = null !== (n2 = i2.latex) && void 0 !== n2 ? n2 : e5.serialize({ num: s2 })), void 0 !== i2.latex ? { num: s2, latex: i2.latex } : { num: s2 };
  }
  if (t2 instanceof Qo.exports.Complex)
    return t2.isInfinite() ? hu(e5, "ComplexInfinity", i2) : t2.isNaN() ? (s2 = "NaN", e5.jsonSerializationOptions.metadata.includes("latex") && (i2.latex = null !== (r2 = i2.latex) && void 0 !== r2 ? r2 : e5.serialize({ num: s2 })), void 0 !== i2.latex ? { num: s2, latex: i2.latex } : { num: s2 }) : du(e5, "Complex", [e5.number(t2.re), e5.number(t2.im)], { ...i2, wikidata: "Q11567" });
  if (Array.isArray(t2))
    return void 0 === i2.latex && void 0 === i2.wikidata && !e5.jsonSerializationOptions.metadata.includes("latex") && e5.jsonSerializationOptions.shorthands.includes("function") && e5.jsonSerializationOptions.shorthands.includes("number") ? ["Rational", t2[0], t2[1]] : du(e5, "Rational", [e5.number(t2[0]), e5.number(t2[1])], i2);
  if (Number.isNaN(t2) && (s2 = "NaN"), !Number.isFinite(t2) && t2 > 0 && (s2 = "+Infinity"), !Number.isFinite(t2) && t2 < 0 && (s2 = "-Infinity"), !s2) {
    if (o2)
      return t2;
    s2 = pu(e5, t2.toString());
  }
  return e5.jsonSerializationOptions.metadata.includes("latex") && (i2.latex = null !== (a2 = i2.latex) && void 0 !== a2 ? a2 : e5.serialize({ num: s2 })), void 0 !== i2.latex ? { num: s2, latex: i2.latex } : { num: s2 };
}
function pu(e5, t2) {
  var i2;
  if (!e5.jsonSerializationOptions.repeatingDecimal)
    return t2;
  let [n2, r2, a2, o2] = null !== (i2 = t2.match(/^(.*)\.([0-9]+)([e|E][-+]?[0-9]+)?$/)) && void 0 !== i2 ? i2 : [];
  if (!a2)
    return t2;
  const s2 = a2[a2.length - 1];
  a2 = a2.slice(0, -1);
  let l2 = "";
  for (let e6 = 0; e6 < a2.length - 16; e6++) {
    l2 = a2.substring(0, e6);
    for (let i3 = 0; i3 <= 16; i3++) {
      const n3 = a2.substring(e6, e6 + i3 + 1), u2 = Math.floor((a2.length - l2.length) / n3.length);
      if (u2 > 1 && (l2 + n3.repeat(u2 + 1)).startsWith(a2))
        return "0" === n3 ? "0" === s2 ? r2 + "." + l2 + (null != o2 ? o2 : "") : t2 : r2 + "." + l2 + "(" + n3 + ")" + (null != o2 ? o2 : "");
    }
  }
  return t2;
}
var fu = class extends Zl {
  constructor(e5, t2, i2) {
    super(e5, i2), this._value = yu(e5, t2);
  }
  get isCanonical() {
    return true;
  }
  get canonical() {
    return this;
  }
  get isValid() {
    return "Error" !== this.ctor;
  }
  get json() {
    const e5 = Mu(this.engine, this._value);
    return "Error" === hs(e5) ? e5 : ["Domain", e5];
  }
  get literal() {
    return "string" == typeof this._value ? this._value : null;
  }
  get ctor() {
    return "string" == typeof this._value ? null : this._value[0];
  }
  get domainArgs() {
    return "string" == typeof this._value ? null : this._value.slice(1);
  }
  get domainArg1() {
    return "string" == typeof this._value ? null : this._value[1];
  }
  get codomain() {
    return "string" == typeof this._value ? null : this.engine.domain(this._value[this._value.length - 1]);
  }
  get hash() {
    return void 0 === this._hash && (this._hash = Hl(Nu(this._value))), this._hash;
  }
  isEqual(e5) {
    return Lu(this._value, e5);
  }
  isSame(e5) {
    return Lu(this._value, e5);
  }
  is(e5) {
    return Lu(this._value, e5);
  }
  isCompatible(e5, t2 = "covariant") {
    const i2 = this._value, n2 = e5 instanceof fu ? e5._value : e5, r2 = Array.isArray(n2) ? n2[0] : null;
    if (r2) {
      const e6 = n2[1];
      if ("Invariant" === r2)
        return !ku(e6, i2) && !ku(i2, e6);
      if ("Covariant" === r2)
        return ku(i2, e6);
      if ("Contravariant" === r2)
        return ku(e6, i2);
      if ("Bivariant" === r2)
        return ku(i2, e6) && ku(e6, i2);
    }
    return "covariant" === t2 ? ku(i2, n2) : "contravariant" === t2 ? ku(n2, i2) : "bivariant" === t2 ? ku(n2, i2) && ku(i2, n2) : !ku(n2, i2) && !ku(i2, n2);
  }
  match(e5, t2) {
    return e5 instanceof fu && this.isSame(e5) ? {} : null;
  }
  get head() {
    return "Domain";
  }
  get domain() {
    return this.engine.domain("Domain");
  }
  get isNothing() {
    return "Nothing" === this._value;
  }
  get isFunction() {
    return "Function" === this.ctor || "Function" === this._value;
  }
  get isNumeric() {
    return this.isCompatible(this.engine.domain("Number"));
  }
  get isRelationalOperator() {
    return "RelationalOperator" === this._value || "Function" === this.ctor && 2 === this.domainArgs.length && !!this.codomain.isCompatible("MaybeBoolean");
  }
};
function gu(e5, t2, i2) {
  if (t2 instanceof fu)
    return t2;
  if ("string" == typeof t2) {
    const n3 = _l[t2];
    if (n3)
      return gu(e5, n3);
    if (!Ml(t2))
      throw Error("Expected a domain literal, got " + t2);
    return new fu(e5, t2, i2);
  }
  if (!Array.isArray(t2) || 0 === t2.length)
    throw Error("Expected a valid domain");
  const n2 = t2[0];
  if (!kl.includes(n2))
    throw Error("Expected domain constructor, got " + n2);
  return new fu(e5, t2, i2);
}
function yu(e5, t2) {
  if ("string" == typeof t2) {
    if (!Ml(t2))
      throw Error("Unknown domain literal");
    return t2;
  }
  if (t2 instanceof fu)
    return t2._value;
  const i2 = t2[0];
  if ("Range" === i2) {
    if (1 === t2.length)
      return "Integer";
    let i3 = e5._ONE, n2 = e5._POSITIVE_INFINITY;
    2 === t2.length ? n2 = e5.box(t2[1]).evaluate() : 3 === t2.length && (i3 = e5.box(t2[1]).evaluate(), n2 = e5.box(t2[2]).evaluate());
    const r2 = bu(i3), a2 = bu(n2);
    if (null === r2 || null === a2)
      throw Error(`Invalid range [${r2}, ${a2}] `);
    return a2 < r2 && ([i3, n2] = [n2, i3]), r2 === -1 / 0 && a2 === 1 / 0 ? "Integer" : 1 === r2 && a2 === 1 / 0 ? "PositiveInteger" : 0 === r2 && a2 === 1 / 0 ? "NonNegativeInteger" : r2 === -1 / 0 && -1 === a2 ? "NegativeInteger" : r2 === -1 / 0 && 0 === a2 ? "NonPositiveInteger" : ["Range", e5.number(r2), e5.number(a2)];
  }
  if ("Interval" === i2) {
    if (3 !== t2.length)
      throw Error("Invalid range " + t2);
    let [i3, n2] = vu(e5, t2[1]), [r2, a2] = vu(e5, t2[2]);
    if (null === n2 || null === a2)
      throw Error("Invalid range " + t2);
    return a2 < n2 && ([n2, a2] = [a2, n2], [i3, r2] = [r2, i3]), 0 === n2 && a2 === 1 / 0 ? i3 ? "PositiveNumber" : "NonNegativeNumber" : n2 === -1 / 0 && 0 === a2 ? r2 ? "NegativeNumber" : "NonPositiveNumber" : ["Interval", i3 ? ["Open", e5.number(n2)] : e5.number(n2), r2 ? ["Open", e5.number(a2)] : e5.number(a2)];
  }
  if ("Function" === i2)
    return ["Function", ...t2.slice(1).map((t3) => yu(e5, t3))];
  if ("Dictionary" === i2)
    return ["Dictionary", yu(e5, t2[1])];
  if ("List" === i2)
    return ["List", yu(e5, t2[1])];
  if ("Tuple" === i2)
    return ["Tuple", ...t2.slice(1).map((t3) => yu(e5, t3))];
  if ("Union" === i2)
    return ["Union", ...t2.slice(1).map((t3) => yu(e5, t3))];
  if ("Intersection" === i2)
    return ["Intersection", ...t2.slice(1).map((t3) => yu(e5, t3))];
  if ("Covariant" === i2 || "Contravariant" === i2 || "Invariant" === i2)
    return [i2, yu(e5, t2[1])];
  if ("Maybe" === i2)
    return ["Maybe", yu(e5, t2[1])];
  if ("Sequence" === i2)
    return ["Sequence", yu(e5, t2[1])];
  if ("Head" === i2)
    return ["Head", t2[1]];
  if ("Symbol" === i2)
    return ["Symbol", t2[1]];
  if ("Value" === i2)
    return ["Value", e5.box(t2[1])];
  if ("Error" === i2)
    return ["Error", ...t2.slice(1).map((t3) => e5.box(t3))];
  throw Error("Unexpected domain constructor " + i2);
}
function bu(e5) {
  return e5.isInfinity ? e5.isPositive ? 1 / 0 : -1 / 0 : e5.asSmallInteger;
}
function vu(e5, t2) {
  return Array.isArray(t2) && "Open" === t2[0] ? [true, bu(e5.box(t2[1]).evaluate())] : [false, bu(e5.box(t2).evaluate())];
}
function xu(e5) {
  if (e5 instanceof fu)
    return true;
  if ("string" == typeof e5)
    return Ml(e5);
  if (Array.isArray(e5)) {
    if (e5.length <= 1)
      return false;
    const t2 = e5[0];
    return !("string" != typeof t2 || !kl.includes(t2)) && e5.every((e6) => null !== e6);
  }
  return false;
}
function ku(e5, t2) {
  const i2 = "string" == typeof t2 ? t2 : null;
  if ("Anything" === i2)
    return true;
  const n2 = "string" == typeof e5 ? e5 : null;
  if (n2 && i2)
    return n2 === i2 || Su(Nl(n2), i2);
  if (i2) {
    const t3 = e5[0];
    return "Function" === t3 ? "Function" === i2 : "Dictionary" === t3 ? "Dictionary" === i2 : "List" === t3 ? "List" === i2 : "Tuple" === t3 ? "Tuple" === i2 : "Interval" === t3 ? ku("ExtendedRealNumber", i2) : "Range" !== t3 || ku("Integer", i2);
  }
  const r2 = t2[0];
  if ("Function" === r2) {
    if ("Function" === n2)
      return true;
    if (n2)
      return false;
    if ("Function" !== e5[0])
      return false;
    if (!ku(e5[e5.length - 1], t2[t2.length - 1]))
      return false;
    const i3 = e5.slice(1, -1), r3 = t2.slice(1, -1);
    for (let e6 = 0; e6 <= i3.length - 1; e6++) {
      const t3 = Array.isArray(i3[e6]) ? i3[e6][0] : null;
      if (void 0 === r3[e6])
        return "Maybe" === t3;
      if ("Sequence" === t3) {
        const t4 = i3[e6][1];
        for (let i4 = e6; i4 < r3.length - 1; i4++)
          if (!ku(r3[i4], t4))
            return false;
        return true;
      }
      if (!ku(r3[e6], i3[e6]))
        return false;
    }
    return !(r3.length > i3.length);
  }
  return "Intersection" === r2 ? t2.slice(1, -1).every((t3) => ku(e5, t3)) : "Union" === r2 ? t2.slice(1, -1).some((t3) => ku(e5, t3)) : "Maybe" === r2 && ("Nothing" === n2 || ku(e5, t2[1]));
}
function _u(e5, t2) {
  const i2 = wu(e5), n2 = wu(t2), r2 = [i2, ...Nl(i2)], a2 = [n2, ...Nl(n2)];
  for (; !Su(a2, r2[0]); )
    r2.shift();
  return e5.engine.domain(r2[0]);
}
function wu(e5) {
  let t2 = e5.literal;
  return t2 || (t2 = e5.ctor, "Maybe" === t2 ? "Anything" : "Interval" === t2 ? "RealNumber" : "Range" === t2 ? "Integer" : "Head" === t2 ? "Function" : "Union" === t2 || "Intersection" === t2 ? "Anything" : t2);
}
function Su(e5, t2) {
  for (const i2 of e5)
    if (i2 === t2)
      return true;
  return false;
}
function Mu(e5, t2) {
  if ("string" == typeof t2)
    return hu(e5, t2);
  if ("Error" === t2[0])
    return t2[2] ? ["Error", t2[1], t2[2]] : ["Error", t2[1]];
  const i2 = [hu(e5, t2[0])];
  for (let n2 = 1; n2 <= t2.length - 1; n2++)
    t2[n2] instanceof Zl ? i2.push(t2[n2].json) : i2.push(Mu(e5, t2[n2]));
  return i2;
}
function Nu(e5) {
  if ("string" == typeof e5)
    return "domain:" + e5;
  let t2 = "domain:" + this.ctor;
  for (const e6 of this.domainArgs)
    t2 += ":" + Nu(e6);
  return t2;
}
function Lu(e5, t2) {
  if ("string" == typeof t2)
    return this._value === t2;
  if (t2 instanceof fu)
    return Lu(e5, t2._value);
  if ("string" == typeof e5)
    return e5 === t2;
  if (!Array.isArray(t2))
    return false;
  if (e5[0] !== t2[0])
    return false;
  if (t2.length !== e5.length)
    return false;
  for (let i2 = 1; i2 <= e5.length - 1; i2++)
    if (e5[i2] instanceof Zl) {
      if (!(t2[i2] instanceof Zl))
        return false;
      if (!t2[i2].isEqual(t2[i2]))
        return false;
    } else if ("string" == typeof e5[i2]) {
      if ("string" != typeof t2[i2])
        return false;
      if (e5[i2] !== t2[i2])
        return false;
    } else if (!Lu(e5[i2], t2[i2]))
      return false;
  return true;
}
function Au(e5) {
  const t2 = e5.engine, i2 = e5.head;
  if (i2 && e5.op1.symbol) {
    const n2 = e5.op1.symbol;
    let r2 = t2.lookupSymbol(n2);
    if (r2 || (r2 = t2.defineSymbol({ name: n2 })), "Equal" === i2)
      return e5.op1.value = e5.op2.evaluate(), "ok";
    if ("Element" === i2) {
      let i3 = e5.op2;
      if ("Domain" !== i3.head && (i3 = t2.domain(i3.json)), xu(i3))
        return e5.op1.domain = t2.domain(i3), "ok";
    } else if ("Greater" === i2) {
      const t3 = e5.op2.evaluate();
      if (r2.value)
        return r2.value.isGreater(t3) ? "tautology" : "contradiction";
      if (t3.isZero)
        return r2.positive = true, "ok";
    }
  }
  return "not-a-predicate";
}
var Cu = class extends Zl {
  constructor(e5, t2, i2) {
    super(e5, i2), this._value = /* @__PURE__ */ new Map(), this._isCanonical = false;
    for (const i3 of Object.keys(t2))
      this._value.set(i3, e5.box(t2[i3]));
    e5._register(this);
  }
  unbind() {
    for (const [e5, t2] of this._value)
      t2.unbind();
  }
  get hash() {
    let e5 = Hl("Dictionary");
    for (const [t2, i2] of this._value)
      e5 ^= Hl(t2) ^ i2.hash;
    return e5;
  }
  get complexity() {
    return 97;
  }
  get head() {
    return "Dictionary";
  }
  get isPure() {
    return false;
  }
  getKey(e5) {
    return this._value.get(e5);
  }
  hasKey(e5) {
    return this._value.has(e5);
  }
  get keys() {
    return this._value.keys();
  }
  get keysCount() {
    return this._value.size;
  }
  has(e5) {
    for (const [t2, i2] of this._value)
      if (i2.has(e5))
        return true;
    return false;
  }
  get domain() {
    const e5 = ["Dictionary"];
    for (const [t2, i2] of this._value)
      e5.push(["Tuple", t2, i2.domain]);
    return this.engine.domain(e5);
  }
  get json() {
    if (this.engine.jsonSerializationOptions.shorthands.includes("dictionary")) {
      const e6 = {};
      for (const t2 of this._value.keys())
        e6[t2] = this._value.get(t2).json;
      return { dict: e6 };
    }
    const e5 = [];
    for (const t2 of this._value.keys())
      e5.push(this.engine._fn("KeyValuePair", [this.engine.string(t2), this._value.get(t2)]));
    return du(this.engine, "Dictionary", e5, { latex: this._latex });
  }
  isSame(e5) {
    if (this === e5)
      return true;
    if (!(e5 instanceof Cu))
      return false;
    if (this._value.size !== e5._value.size)
      return false;
    for (const [t2, i2] of this._value) {
      const n2 = e5.getKey(t2);
      if (!n2 || !i2.isSame(n2))
        return false;
    }
    return true;
  }
  match(e5, t2) {
    if (!(e5 instanceof Cu))
      return null;
    if (this._value.size !== e5._value.size)
      return null;
    let i2 = {};
    for (const [t3, n2] of this._value) {
      const r2 = e5.getKey(t3);
      if (!r2)
        return null;
      const a2 = n2.match(r2);
      if (null === a2)
        return null;
      i2 = { ...i2, ...a2 };
    }
    return i2;
  }
  isEqual(e5) {
    if (this === e5)
      return true;
    if (!(e5 instanceof Cu))
      return false;
    if (!e5.keys || this._value.size !== e5._value.size)
      return false;
    for (const [t2, i2] of this._value) {
      const n2 = e5.getKey(t2);
      if (!n2 || !i2.isEqual(n2))
        return false;
    }
    return true;
  }
  apply(e5, t2) {
    const i2 = {};
    for (const t3 of this.keys)
      i2[t3] = this.engine.box(e5(this.getKey(t3)));
    return t2 ? this.engine.fn(t2, [{ dict: i2 }]) : new Cu(this.engine, i2);
  }
  evaluate(e5) {
    return this.apply((t2) => {
      var i2;
      return null !== (i2 = t2.evaluate(e5)) && void 0 !== i2 ? i2 : t2;
    });
  }
  get isCanonical() {
    return this._isCanonical;
  }
  set isCanonical(e5) {
    this._isCanonical = e5;
  }
  get canonical() {
    if (this.isCanonical)
      return this;
    const e5 = this.apply((e6) => e6.canonical);
    return e5.isCanonical = true, e5;
  }
  simplify(e5) {
    var t2;
    return null === (t2 = null == e5 ? void 0 : e5.recursive) || void 0 === t2 || t2 ? this.apply((t3) => {
      var i2;
      return null !== (i2 = t3.simplify(e5)) && void 0 !== i2 ? i2 : t3;
    }) : this;
  }
  N(e5) {
    return this.apply((t2) => t2.N(e5));
  }
  replace(e5, t2) {
    let i2 = 0;
    const n2 = {};
    for (const r2 of this.keys) {
      const a2 = this.getKey(r2), o2 = a2.replace(e5, t2);
      null !== o2 && (i2 += 1), n2[r2] = null != o2 ? o2 : a2;
    }
    return 0 === i2 ? null : new Cu(this.engine, n2);
  }
  subs(e5) {
    const t2 = {};
    for (const i2 of this.keys)
      t2[i2] = this.getKey(i2).subs(e5);
    return new Cu(this.engine, t2);
  }
};
function Eu(e5, t2) {
  var i2;
  const n2 = /* @__PURE__ */ new Set();
  for (const [r2, a2, o2] of t2) {
    let t3 = e5.pattern(r2);
    const s2 = {};
    for (const i3 of $l(t3))
      s2[i3] = e5.symbol("_" + i3);
    let l2;
    t3 = t3.subs(s2);
    const u2 = Pl(null == o2 ? void 0 : o2.condition);
    if (u2) {
      const t4 = e5.parse(u2).subs(s2);
      l2 = (e6) => {
        var i3;
        return "True" === (null === (i3 = t4.subs(e6).value) || void 0 === i3 ? void 0 : i3.symbol);
      };
    } else
      l2 = null == o2 ? void 0 : o2.condition;
    const c2 = Ol(a2) ? e5.parse(a2) : e5.box(a2);
    c2 && n2.add([t3, c2.subs(s2), null !== (i2 = null == o2 ? void 0 : o2.priority) && void 0 !== i2 ? i2 : 0, l2]);
  }
  return n2;
}
function Du([e5, t2, i2, n2], r2, a2) {
  const o2 = e5.match(r2, a2);
  return null === o2 ? null : "function" != typeof n2 || n2(o2) ? t2.subs(o2) : null;
}
function Tu(e5, t2, i2) {
  var n2, r2;
  const a2 = null !== (n2 = null == i2 ? void 0 : i2.iterationLimit) && void 0 !== n2 ? n2 : 1;
  let o2 = 0;
  const s2 = null !== (r2 = null == i2 ? void 0 : i2.once) && void 0 !== r2 && r2;
  let l2 = false, u2 = false;
  try {
    for (; !l2 && o2 < a2; ) {
      l2 = true;
      for (const n3 of t2) {
        const t3 = Du(n3, e5, i2);
        if (null !== t3 && t3 !== e5) {
          if (s2)
            return t3;
          l2 = false, u2 = true, e5 = t3;
        }
      }
      o2 += 1;
    }
  } catch (e6) {
  }
  return u2 ? e5 : null;
}
var zu = [];
function qu(e5, t2) {
  if (null == t2)
    return e5;
  if (e5 === t2)
    return e5;
  const i2 = e5.engine, n2 = i2.box(t2);
  return i2.costFunction(n2) <= 1.7 * i2.costFunction(e5) ? n2 : e5;
}
var Iu = class extends Zl {
  constructor(e5, t2, i2, n2) {
    var r2;
    super(e5, n2), this._scope = e5.context, this._head = "string" == typeof t2 ? t2 : null !== (r2 = t2.symbol) && void 0 !== r2 ? r2 : t2, this._ops = i2, this._def = null, this._codomain = null, this._isCanonical = false, e5._register(this);
  }
  get hash() {
    if (void 0 !== this._hash)
      return this._hash;
    let e5 = 0;
    for (const t2 of this._ops)
      e5 = e5 << 1 ^ t2.hash | 0;
    return e5 = "string" == typeof this._head ? e5 ^ Hl(this._head) | 0 : e5 ^ this._head.hash | 0, this._hash = e5, e5;
  }
  unbind() {
    "string" != typeof this._head && this._head.unbind();
    for (const e5 of this._ops)
      e5.unbind();
    this._value && this._value.unbind(), this._numericValue && this._numericValue.unbind();
  }
  get wikidata() {
    var e5, t2, i2;
    return null !== (i2 = null !== (e5 = this._wikidata) && void 0 !== e5 ? e5 : null === (t2 = this.functionDefinition) || void 0 === t2 ? void 0 : t2.wikidata) && void 0 !== i2 ? i2 : "";
  }
  get description() {
    const e5 = this.functionDefinition;
    return e5 && e5.description ? "string" == typeof e5.description ? [e5.description] : e5.description : [];
  }
  get url() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.functionDefinition) || void 0 === e5 ? void 0 : e5.url) && void 0 !== t2 ? t2 : "";
  }
  get complexity() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.functionDefinition) || void 0 === e5 ? void 0 : e5.complexity) && void 0 !== t2 ? t2 : 1e5;
  }
  get head() {
    return this._head;
  }
  get value() {
    if (this.isPure)
      return this._value || (this._value = this.evaluate()), this._value;
  }
  get numericValue() {
    if (!this.isPure)
      return;
    if (this._numericValue)
      return this._numericValue;
    const e5 = this.N();
    return this._numericValue = e5.isLiteral ? e5 : void 0, this._numericValue;
  }
  get isPure() {
    var e5;
    if (void 0 !== this._isPure)
      return this._isPure;
    let t2;
    return void 0 !== (null === (e5 = this.functionDefinition) || void 0 === e5 ? void 0 : e5.pure) && (t2 = this.functionDefinition.pure), false !== t2 && (t2 = this._ops.every((e6) => e6.isPure)), this._isPure = t2, t2;
  }
  get isLiteral() {
    return false;
  }
  get isValid() {
    if ("string" != typeof this._head) {
      if (false === this._head.isValid)
        return false;
    } else {
      if ("Error" === this._head)
        return false;
      if (void 0 === this.functionDefinition)
        return false;
      if (!this._ops.every((e5) => e5.isValid))
        return false;
    }
    return this._ops.every((e5) => e5.isValid);
  }
  get ops() {
    return this._ops;
  }
  get nops() {
    return this._ops.length;
  }
  get op1() {
    var e5;
    return null !== (e5 = this._ops[0]) && void 0 !== e5 ? e5 : this.engine.symbol("Nothing");
  }
  get op2() {
    var e5;
    return null !== (e5 = this._ops[1]) && void 0 !== e5 ? e5 : this.engine.symbol("Nothing");
  }
  get op3() {
    var e5;
    return null !== (e5 = this._ops[2]) && void 0 !== e5 ? e5 : this.engine.symbol("Nothing");
  }
  get functionDefinition() {
    return null !== this._def || this.bind(this._scope), this._def;
  }
  bind(e5) {
    var t2, i2, n2, r2, a2, o2, s2;
    this._def = void 0;
    const l2 = this.engine;
    if (this._ops = function(e6) {
      const t3 = [];
      for (const i3 of e6)
        "Sequence" === i3.head ? i3.ops && t3.push(...i3.ops) : t3.push(i3);
      return t3;
    }(this._ops.map((e6) => e6.canonical)), "string" != typeof this._head) {
      const e6 = null !== (t2 = this._head.evaluate().symbol) && void 0 !== t2 ? t2 : this._head;
      if (this._head = e6, "string" != typeof this._head)
        return void (this._codomain = null !== (i2 = this._head.domain.codomain) && void 0 !== i2 ? i2 : l2.domain("Void"));
    }
    if (null !== (e5 = null != e5 ? e5 : this._scope))
      if (this._def = l2.lookupFunction(this._head, e5), this._def) {
        if (this._def.scoped && l2.pushScope(), this._head = this._def.name, this._ops = function(e7, t3) {
          var i3;
          const n3 = [];
          for (let r3 = 0; r3 < e7.length; r3++)
            if (Pu(t3, e7.length - 1, r3)) {
              const t4 = e7[r3];
              "Sequence" === t4.head ? n3.push(...null !== (i3 = t4.ops) && void 0 !== i3 ? i3 : []) : "Symbol" === t4.head ? n3.push(t4.evaluate()) : n3.push(t4);
            } else
              n3.push(e7[r3]);
          return n3;
        }(this._ops, this._def.hold), this._ops = null !== (n2 = function(e7, t3, i3, n3) {
          var r3;
          const a3 = i3.map((e8) => e8.domain), o3 = e7.domain(["Function", ...a3, "Anything"]);
          if (t3.domain.isCompatible(o3))
            return null;
          const s3 = t3.domain.domainArgs.slice(0, -1), l3 = [], u2 = Math.max(s3.length, a3.length);
          for (let t4 = 0; t4 <= u2 - 1; t4++)
            if (void 0 === s3[t4])
              l3.push(e7.error("unexpected-argument", i3[t4]));
            else {
              const n4 = Array.isArray(s3[t4]) ? s3[t4][0] : null;
              if (void 0 === a3[t4]) {
                "Maybe" === n4 ? l3.push(e7.symbol("Nothing")) : l3.push(e7.error(["missing", s3[t4]]));
                break;
              }
              if ("Sequence" === n4) {
                const n5 = e7.domain(s3[t4][1]);
                for (let r4 = t4; r4 <= a3.length - 1; r4++)
                  a3[r4].isCompatible(n5) ? l3.push(i3[r4]) : l3.push(e7.error(["incompatible-domain", n5, e7.domain(a3[r4])], i3[r4]));
                break;
              }
              (null === (r3 = i3[t4].symbol) || void 0 === r3 ? void 0 : r3.startsWith("_")) || a3[t4].isCompatible(e7.domain(s3[t4])) ? l3.push(i3[t4]) : l3.push(e7.error(["incompatible-domain", e7.domain(s3[t4], a3[t4])], i3[t4]));
            }
          return l3;
        }(l2, this._def.signature, this._ops)) && void 0 !== n2 ? n2 : this._ops, !this._ops.every((e7) => e7.isValid))
          return this._codomain = null !== (r2 = l2.defaultDomain) && void 0 !== r2 ? r2 : l2.domain("Void"), void (this._def.scoped && l2.popScope());
        const e6 = this._def.signature;
        if ("function" == typeof e6.codomain) {
          const t3 = this._ops.map((e7) => e7.domain);
          this._codomain = e6.codomain(l2, t3);
        } else
          this._codomain = null !== (o2 = null !== (a2 = e6.codomain) && void 0 !== a2 ? a2 : l2.defaultDomain) && void 0 !== o2 ? o2 : l2.domain("Void");
        this._def.scoped && l2.popScope();
      } else
        this._codomain = null !== (s2 = l2.defaultDomain) && void 0 !== s2 ? s2 : l2.domain("Void");
  }
  get domain() {
    return null === this._codomain && this.bind(this._scope), this._codomain;
  }
  isLess(e5) {
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 < 0;
    }
  }
  isLessEqual(e5) {
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 <= 0;
    }
  }
  isGreater(e5) {
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 > 0;
    }
  }
  isGreaterEqual(e5) {
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 >= 0;
    }
  }
  get isZero() {
    const e5 = this.sgn;
    return null !== e5 && ("number" == typeof e5 ? 0 === e5 : void 0);
  }
  get isNotZero() {
    const e5 = this.sgn;
    return null !== e5 && ("number" == typeof e5 ? 0 !== e5 : void 0);
  }
  get isOne() {
  }
  get isNegativeOne() {
  }
  get isPositive() {
    const e5 = this.sgn;
    return null !== e5 && ("number" == typeof e5 ? 0 !== e5 : void 0);
  }
  get isNonPositive() {
    const e5 = this.sgn;
    return null !== e5 && ("number" == typeof e5 ? e5 <= 0 : void 0);
  }
  get isNegative() {
    const e5 = this.sgn;
    return null !== e5 && ("number" == typeof e5 ? e5 < 0 : void 0);
  }
  get isNonNegative() {
    const e5 = this.sgn;
    return null !== e5 && ("number" == typeof e5 ? e5 >= 0 : void 0);
  }
  get isNumber() {
    return this.domain.isCompatible("Number");
  }
  get isInteger() {
    return this.domain.isCompatible("Integer");
  }
  get isRational() {
    return this.domain.isCompatible("RationalNumber");
  }
  get isAlgebraic() {
    return this.domain.isCompatible("AlgebraicNumber");
  }
  get isReal() {
    return this.domain.isCompatible("RealNumber");
  }
  get isExtendedReal() {
    return this.domain.isCompatible("ExtendedRealNumber");
  }
  get isComplex() {
    return this.domain.isCompatible("ComplexNumber");
  }
  get isImaginary() {
    return this.domain.isCompatible("ImaginaryNumber");
  }
  get json() {
    return this._isCanonical ? function(e5, t2, i2, n2) {
      var r2, a2;
      const o2 = e5.jsonSerializationOptions.exclude;
      if ("Add" === t2 && 2 === i2.length && !o2.includes("Subtract")) {
        if (i2[0].isLiteral) {
          const t3 = i2[0].asSmallInteger;
          if (null !== t3 && t3 < 0)
            return du(e5, "Subtract", [i2[1], e5.number(-t3)], n2);
        }
        if ("Negate" === i2[0].head)
          return du(e5, "Subtract", [i2[1], i2[0].op1], n2);
      }
      if ("Divide" === t2 && e5.jsonSerializationOptions.exclude.includes("Divide"))
        return du(e5, "Multiply", [i2[0], e5._fn("Power", [i2[1], e5._NEGATIVE_ONE])], n2);
      if ("Multiply" === t2 && !e5.jsonSerializationOptions.exclude.includes("Divide")) {
        const t3 = new su(e5, i2).asRationalExpression();
        if ("Divide" === t3.head)
          return du(e5, t3.head, t3.ops, n2);
      }
      if ("Power" === t2) {
        if (!o2.includes("Exp") && "ExponentialE" === (null === (r2 = i2[0]) || void 0 === r2 ? void 0 : r2.symbol))
          return du(e5, "Exp", [i2[1]], n2);
        if (null === (a2 = i2[1]) || void 0 === a2 ? void 0 : a2.isLiteral) {
          const t3 = i2[1].asSmallInteger;
          if (!o2.includes("Square") && 2 === t3)
            return du(e5, "Square", [i2[0]], n2);
          if (!e5.jsonSerializationOptions.exclude.includes("Divide")) {
            if (-1 === t3)
              return du(e5, "Divide", [e5._ONE, i2[0]], n2);
            if (null !== t3 && t3 < 0)
              return du(e5, "Divide", [e5._ONE, e5.power(i2[0], -t3)], n2);
          }
          const [r3, a3] = i2[1].rationalValue;
          if (1 === r3) {
            if (!o2.includes("Sqrt") && 2 === a3)
              return du(e5, "Sqrt", [i2[0]], n2);
            if (!o2.includes("Root"))
              return du(e5, "Root", [i2[0], e5.number(a3)], n2);
          }
          if (-1 === r3) {
            if (!o2.includes("Sqrt") && 2 === a3)
              return du(e5, "Divide", [e5._ONE, e5._fn("Sqrt", [i2[0]])], n2);
            if (!o2.includes("Root"))
              return du(e5, "Divide", [e5._ONE, e5._fn("Root", [i2[0], e5.number(a3)])], n2);
          }
        }
      }
      return du(e5, t2, i2, n2);
    }(this.engine, this._head, this._ops, { latex: this._latex, wikidata: this._wikidata }) : du(this.engine, this._head, this._ops, { latex: this._latex, wikidata: this._wikidata });
  }
  has(e5) {
    if ("string" == typeof this._head) {
      if ("string" == typeof e5) {
        if (this._head === e5)
          return true;
      } else if (e5.includes(this._head))
        return true;
    }
    for (const t2 of this._ops)
      if (t2.has(e5))
        return true;
    return false;
  }
  isSame(e5) {
    if (this === e5)
      return true;
    if (!(e5 instanceof Iu))
      return false;
    if (this.nops !== e5.nops)
      return false;
    if ("string" == typeof this.head) {
      if (this.head !== e5.head)
        return false;
    } else {
      if ("string" == typeof e5.head)
        return false;
      if (!e5.head || !this.head.isSame(e5.head))
        return false;
    }
    const t2 = this._ops, i2 = e5._ops;
    for (let e6 = 0; e6 < t2.length; e6++)
      if (!t2[e6].isSame(i2[e6]))
        return false;
    return true;
  }
  match(e5, t2) {
    if (!(e5 instanceof Iu))
      return null;
    let i2 = {};
    if ("string" == typeof this.head) {
      if (this.head !== e5.head)
        return null;
    } else {
      if ("string" == typeof e5.head)
        return null;
      {
        if (!e5.head)
          return null;
        const n3 = this.head.match(e5.head, t2);
        if (null === n3)
          return null;
        i2 = { ...i2, ...n3 };
      }
    }
    const n2 = this._ops, r2 = e5._ops;
    for (let e6 = 0; e6 < n2.length; e6++) {
      const a2 = n2[e6].match(r2[e6], t2);
      if (null === a2)
        return null;
      i2 = { ...i2, ...a2 };
    }
    return i2;
  }
  isEqual(e5) {
    if (!this.isCanonical)
      return this.canonical.isEqual(e5);
    if ((e5 = e5.canonical).isNumber && this.isNumber) {
      const t2 = this.engine, i2 = t2.add([this, t2.negate(e5)]).N();
      return !!i2.isZero || null !== i2.asFloat && 0 === t2.chop(i2.asFloat) || this.evaluate().isSame(e5.evaluate());
    }
    return this.domain.isRelationalOperator && e5.domain.isRelationalOperator ? this.evaluate().isSame(e5.evaluate()) : this.isSame(e5);
  }
  get sgn() {
    var e5, t2, i2, n2, r2, a2, o2, s2;
    const l2 = this.head;
    if ("Negate" === l2) {
      const t3 = null === (e5 = this._ops[0]) || void 0 === e5 ? void 0 : e5.sgn;
      if (void 0 === t3)
        return;
      return null === t3 ? null : 0 === t3 ? 0 : t3 > 0 ? -1 : 1;
    }
    if ("Multiply" === l2) {
      const e6 = this._ops.reduce((e7, t3) => {
        var i3;
        return e7 * (null !== (i3 = t3.sgn) && void 0 !== i3 ? i3 : NaN);
      }, 1);
      return isNaN(e6) ? null : e6 > 0 ? 1 : e6 < 0 ? -1 : 0;
    }
    if ("Add" === l2) {
      let e6 = 0, t3 = 0, i3 = 0;
      const n3 = this._ops.length;
      for (const n4 of this._ops) {
        const r3 = n4.sgn;
        if (null == r3)
          break;
        0 === r3 && (i3 += 1), r3 > 0 && (e6 += 1), r3 < 0 && (t3 += 1);
      }
      return i3 === n3 ? 0 : e6 === n3 ? 1 : t3 === n3 ? -1 : null;
    }
    if ("Divide" === l2) {
      const e6 = null === (t2 = this._ops[0]) || void 0 === t2 ? void 0 : t2.sgn, n3 = null === (i2 = this._ops[1]) || void 0 === i2 ? void 0 : i2.sgn;
      return null === e6 || null === n3 || void 0 === e6 || void 0 === n3 ? null : 0 === e6 ? 0 : e6 > 0 && n3 > 0 || e6 < 0 && n3 < 0 ? 1 : -1;
    }
    return "Square" === l2 ? (null === (n2 = this._ops[0]) || void 0 === n2 ? void 0 : n2.isImaginary) ? -1 : (null === (r2 = this._ops[0]) || void 0 === r2 ? void 0 : r2.isZero) ? 0 : 1 : "Abs" === l2 ? (null === (a2 = this._ops[0]) || void 0 === a2 ? void 0 : a2.isZero) ? 0 : 1 : "Sqrt" === l2 ? (null === (o2 = this._ops[0]) || void 0 === o2 ? void 0 : o2.isZero) ? 0 : (null === (s2 = this._ops[0]) || void 0 === s2 ? void 0 : s2.isImaginary) ? null : 1 : null;
  }
  *map(e5) {
    let t2 = 0;
    for (; t2 < this._ops.length; )
      yield e5(this._ops[t2++]);
  }
  get isCanonical() {
    return this._isCanonical;
  }
  set isCanonical(e5) {
    this._isCanonical = e5;
  }
  apply(e5, t2) {
    const i2 = null != t2 ? t2 : this.head;
    let n2 = false;
    const r2 = [];
    for (const t3 of this._ops) {
      const i3 = e5(t3);
      t3 !== i3 && (n2 = true), r2.push(this.engine.box(i3));
    }
    return n2 || this.head !== i2 ? this.engine.fn(i2, r2) : this;
  }
  get canonical() {
    if (this.isCanonical || !this.isValid)
      return this;
    const e5 = this.functionDefinition;
    if (!e5) {
      const e6 = this._ops.map((e7) => e7.canonical);
      return e6.length === this._ops.length && e6.every((e7, t3) => this._ops[t3] === e7) ? (this._isCanonical = true, this) : this.engine._fn(this._head, e6);
    }
    let t2 = function(e6, t3, i3, n2) {
      var r2, a2;
      if (0 === t3.length)
        return [];
      n2 && (t3 = null !== (r2 = Ql(t3, e6)) && void 0 !== r2 ? r2 : t3);
      const o2 = [];
      for (let e7 = 0; e7 < t3.length; e7++) {
        const n3 = t3[e7];
        "Hold" !== n3.head && "ReleaseHold" !== n3.head && Pu(i3, t3.length - 1, e7) ? "Sequence" === n3.head ? n3.ops && o2.push(...n3.ops.map((e8) => e8.canonical)) : "Symbol" === n3.head || "Symbol" === n3.domain.literal ? o2.push(n3.evaluate()) : o2.push(n3.canonical) : o2.push(n3);
      }
      return n2 && null !== (a2 = Ql(o2, e6)) && void 0 !== a2 ? a2 : o2;
    }(e5.name, this._ops, e5.hold, e5.associative);
    const i2 = e5.signature;
    if (null == i2 ? void 0 : i2.canonical)
      return i2.canonical(this.engine, t2);
    if (1 === t2.length && t2[0].head === this._head) {
      if (e5.involution)
        return t2[0].op1;
      e5.idempotent && (t2 = t2[0].ops);
    }
    return t2.length > 1 && true === e5.commutative && (t2 = t2.sort(nu)), t2.length === this._ops.length && t2.every((e6, t3) => this._ops[t3] === e6) ? (this._isCanonical = true, this) : this.engine._fn(this._head, t2);
  }
  simplify(e5) {
    var t2, i2, n2;
    if (!this.isValid)
      return this;
    if (!this.isCanonical)
      return this.canonical.simplify(e5);
    const r2 = this.functionDefinition;
    let a2, o2 = this._ops;
    if (o2 = r2 ? Ou(r2.name, o2, r2.hold, r2.associative, (t3) => t3.simplify(e5)) : Ou("", o2, "none", false, (t3) => t3.simplify(e5)), "string" != typeof this._head)
      return Fu(this.engine, this._head, o2).simplify(e5);
    if (r2)
      if (r2.inert)
        a2 = null !== (i2 = null === (t2 = o2[0]) || void 0 === t2 ? void 0 : t2.canonical) && void 0 !== i2 ? i2 : this;
      else {
        const e6 = r2.signature;
        (null == e6 ? void 0 : e6.simplify) && (a2 = e6.simplify(this.engine, o2));
      }
    a2 || (a2 = this.engine.fn(this._head, o2).canonical);
    const s2 = null !== (n2 = null == e5 ? void 0 : e5.rules) && void 0 !== n2 ? n2 : this.engine.cache("standard-simplification-rules", () => Eu(this.engine, zu), (e6) => {
      for (const [t3, i3, n3, r3] of e6)
        t3.unbind(), i3.unbind();
      return e6;
    });
    let l2 = 0, u2 = false;
    do {
      const e6 = a2.replace(s2);
      null !== e6 ? (a2 = qu(e6, a2), a2 === e6 && (u2 = true)) : u2 = true, l2 += 1;
    } while (!u2 && l2 < this.engine.iterationLimit);
    return a2;
  }
  evaluate(e5) {
    var t2, i2;
    if (!this.isValid)
      return this;
    if (!this.isCanonical)
      return this.canonical.evaluate(e5);
    const n2 = this.functionDefinition;
    let r2 = this._ops;
    if (r2 = n2 ? Ou(n2.name, r2, n2.hold, n2.associative, (t3) => t3.evaluate(e5)) : Ou("", r2, "none", false, (t3) => t3.evaluate(e5)), "string" != typeof this._head)
      return Fu(this.engine, this._head, r2).evaluate(e5);
    if (!n2)
      return this.engine.fn(this._head, r2).canonical;
    if (n2.inert)
      return null !== (t2 = r2[0]) && void 0 !== t2 ? t2 : this;
    const a2 = n2.signature;
    return a2 && (null == a2 ? void 0 : a2.evaluate) ? "function" != typeof a2.evaluate ? Fu(this.engine, a2.evaluate, r2).evaluate(e5) : null !== (i2 = a2.evaluate(this.engine, r2)) && void 0 !== i2 ? i2 : this.engine.fn(this._head, r2).canonical : this.engine.fn(this._head, r2).canonical;
  }
  N(e5) {
    var t2, i2, n2, r2;
    if (!this.isValid)
      return this;
    if (!this.isCanonical)
      return this.canonical.N(e5);
    const a2 = this.functionDefinition;
    let o2 = this._ops;
    if (o2 = a2 ? Ou(a2.name, o2, a2.hold, a2.associative, (t3) => t3.N(e5)) : Ou("", o2, "none", false, (t3) => t3.N(e5)), "string" != typeof this._head)
      return Fu(this.engine, this._head, o2).N(e5);
    if (!a2)
      return this.engine.fn(this._head, o2).canonical;
    if (a2.inert)
      return null !== (t2 = o2[0]) && void 0 !== t2 ? t2 : this;
    const s2 = null !== (r2 = null === (n2 = null === (i2 = a2.signature) || void 0 === i2 ? void 0 : i2.N) || void 0 === n2 ? void 0 : n2.call(i2, this.engine, o2)) && void 0 !== r2 ? r2 : this.engine.fn(this._head, o2).evaluate();
    if (s2.isLiteral) {
      if (!jl(this.engine) && s2.complexValue)
        return this.engine._NAN;
      if (!Rl(this.engine) && s2.decimalValue)
        return this.engine.number(s2.decimalValue.toNumber());
    }
    return s2;
  }
  solve(e5) {
    return null;
  }
  replace(e5, t2) {
    return Tu(this, e5, t2);
  }
  subs(e5) {
    return this.engine.fn(this._head, this._ops.map((t2) => t2.subs(e5))).canonical;
  }
};
function Fu(e5, t2, i2) {
  const n2 = { __: t2.engine.tuple(i2), "_#": t2.engine.number(i2.length) };
  let r2 = 1;
  for (const e6 of i2)
    n2["_" + r2++] = e6;
  n2._ = n2._1;
  const a2 = t2.subs(n2);
  return a2.bind(e5.context), a2;
}
function Ou(e5, t2, i2, n2, r2) {
  var a2, o2;
  if (0 === t2.length)
    return [];
  n2 && (t2 = null !== (a2 = Ql(t2, e5)) && void 0 !== a2 ? a2 : t2);
  const s2 = [];
  for (let e6 = 0; e6 < t2.length; e6++)
    if ("Hold" === t2[e6].head)
      s2.push(t2[e6].op1);
    else {
      let n3;
      if ("ReleaseHold" === t2[e6].head ? n3 = t2[e6].op1 : Pu(i2, t2.length - 1, e6) ? n3 = t2[e6] : s2.push(t2[e6]), n3)
        if ("Sequence" === n3.head)
          n3.ops && s2.push(...n3.ops.map((e7) => r2(e7)).filter((e7) => null !== e7));
        else if ("Symbol" === n3.domain.literal) {
          const e7 = r2(n3.evaluate());
          null !== e7 && s2.push(e7);
        } else {
          const e7 = r2(n3);
          null !== e7 && s2.push(e7);
        }
    }
  return n2 && null !== (o2 = Ql(s2, e5)) && void 0 !== o2 ? o2 : s2;
}
function Pu(e5, t2, i2) {
  return "all" !== e5 && ("none" === e5 || ("first" === e5 ? 0 !== i2 : "rest" === e5 ? 0 === i2 : "last" === e5 ? i2 !== t2 : "most" === e5 && i2 === t2));
}
function Bu(e5) {
  if ("number" == typeof e5 && !isNaN(e5))
    return isFinite(e5) ? 0 === e5 ? "NonNegativeInteger" : Number.isInteger(e5) ? e5 > 0 ? "PositiveInteger" : e5 < 0 ? "NegativeInteger" : "Integer" : e5 > 0 ? "PositiveNumber" : e5 < 0 ? "NegativeNumber" : "RealNumber" : "ExtendedRealNumber";
  if (e5 instanceof Xo)
    return e5.isNaN() ? "Number" : e5.isFinite() ? e5.isZero() ? "NonNegativeInteger" : e5.isInteger() ? e5.gt(0) ? "PositiveInteger" : e5.lt(0) ? "NegativeInteger" : "Integer" : e5.gt(0) ? "PositiveNumber" : e5.lt(0) ? "NegativeNumber" : "RealNumber" : "ExtendedRealNumber";
  if (e5 instanceof Qo.exports.Complex) {
    const t2 = e5;
    return 0 === t2.im ? Bu(t2.re) : 0 === t2.re && 0 !== t2.im ? "ImaginaryNumber" : "ComplexNumber";
  }
  if (Array.isArray(e5)) {
    const [t2, i2] = Dl(e5);
    if (!Number.isNaN(t2) && !Number.isNaN(i2))
      return 1 !== i2 ? "RationalNumber" : Bu(t2);
  }
  return "Number";
}
function $u(e5) {
  if (!Number.isInteger(e5) || !Number.isFinite(e5) || Number.isNaN(e5) || e5 <= 1)
    return false;
  if (e5 <= 7919)
    return Al.has(e5);
  for (const t2 of Al)
    if (e5 % t2 == 0)
      return false;
  return e5 >= 1125899906842597 ? !!function(e6, t2) {
    let i2 = 0, n2 = e6 - 1;
    for (; n2 % 2 == 0; )
      n2 /= 2, ++i2;
    e:
      do {
        let t3 = Math.pow(2 + Math.floor(Math.random() * (e6 - 3)), n2) % e6;
        if (1 !== t3 && t3 !== e6 - 1) {
          for (let n3 = i2 - 1; n3--; ) {
            if (t3 = t3 * t3 % e6, 1 === t3)
              return false;
            if (t3 === e6 - 1)
              continue e;
          }
          return false;
        }
      } while (--t2);
    return true;
  }(e5, 30) && void 0 : e5 === function(e6) {
    if (1 === e6)
      return 1;
    if (e6 % 2 == 0)
      return 2;
    if (e6 % 3 == 0)
      return 3;
    if (e6 % 5 == 0)
      return 5;
    const t2 = Math.floor(Math.sqrt(e6));
    let i2 = 7;
    for (; i2 <= t2; ) {
      if (e6 % i2 == 0)
        return i2;
      if (e6 % (i2 + 4) == 0)
        return i2 + 4;
      if (e6 % (i2 + 6) == 0)
        return i2 + 6;
      if (e6 % (i2 + 10) == 0)
        return i2 + 10;
      if (e6 % (i2 + 12) == 0)
        return i2 + 12;
      if (e6 % (i2 + 16) == 0)
        return i2 + 16;
      if (e6 % (i2 + 22) == 0)
        return i2 + 22;
      if (e6 % (i2 + 24) == 0)
        return i2 + 24;
      i2 += 30;
    }
    return e6;
  }(e5);
}
var Vu = class extends Zl {
  constructor(e5, t2, i2) {
    if (super(e5, i2), this._isCanonical = true, t2 instanceof Qo.exports.Complex)
      Number.isNaN(t2.re) || Number.isNaN(t2.im) ? this._value = NaN : 0 === e5.chop(t2.im) ? this._value = t2.re : this._value = jl(e5) ? t2 : NaN;
    else if (Array.isArray(t2)) {
      let [e6, i3] = t2;
      i3 < 0 && ([e6, i3] = [-e6, -i3]), 1 === i3 ? this._value = e6 : 0 === e6 ? this._value = 0 === i3 ? NaN : e6 : (this._value = [e6, i3], this._isCanonical = 1 === El(e6, i3));
    } else
      t2 instanceof Xo ? this._value = Rl(e5) ? t2 : t2.toNumber() : "number" == typeof t2 ? this._value = t2 : Rl(e5) ? this._value = e5.decimal(t2) : "string" == typeof t2 && (this._value = Number.parseFloat(t2));
    "number" == typeof this._value ? Number.isInteger(this._value) ? this._head = "Integer" : this._head = "Number" : this._value instanceof Qo.exports.Complex ? this._head = "ComplexNumber" : Array.isArray(this._value) ? this._head = "RationalNumber" : this._value instanceof Xo ? this._value.isInteger() ? this._head = "Integer" : this._head = "RealNumber" : this._head = "Number", e5._register(this);
  }
  get hash() {
    if (void 0 !== this._hash)
      return this._hash;
    let e5 = 0;
    return e5 = "number" == typeof this._value ? Hl(this._value.toString()) : this._value instanceof Qo.exports.Complex ? Hl(this._value.re.toString() + " +i " + this._value.im.toString()) : this._value instanceof Xo ? Hl(this._value.toString()) : Hl(this._value[0].toString() + " / " + this._value[1].toString()), this._hash = e5, e5;
  }
  get head() {
    return this._head;
  }
  get isPure() {
    return true;
  }
  get isLiteral() {
    return true;
  }
  get isCanonical() {
    return this._isCanonical;
  }
  set isCanonical(e5) {
    this._isCanonical = e5;
  }
  get numericValue() {
    if (!Array.isArray(this._value))
      return this;
    const [e5, t2] = this._value, i2 = this.engine;
    return Rl(i2) ? new Vu(i2, i2.decimal(e5).div(t2)) : new Vu(i2, e5 / t2);
  }
  get machineValue() {
    return "number" == typeof this._value ? this._value : null;
  }
  get decimalValue() {
    return this._value instanceof Xo ? this._value : null;
  }
  get complexValue() {
    return this._value instanceof Qo.exports.Complex ? this._value : null;
  }
  get rationalValue() {
    return Array.isArray(this._value) ? this._value : [null, null];
  }
  get asFloat() {
    if ("number" == typeof this._value)
      return this._value;
    if (this._value instanceof Xo) {
      if (this._value.isNaN())
        return NaN;
      if (!this._value.isFinite())
        return this._value.isPositive() ? 1 / 0 : -1 / 0;
      if (Yl(this._value))
        return this._value.toNumber();
    }
    return Array.isArray(this._value) ? this._value[0] / this._value[1] : null;
  }
  get asSmallInteger() {
    if ("number" == typeof this._value)
      return Number.isInteger(this._value) && this._value >= -1e6 && this._value <= 1e6 ? this._value : null;
    if (this._value instanceof Xo)
      return this._value.isInteger() && this._value.gte(-1e6) && this._value.lte(1e6) ? this._value.toNumber() : null;
    if (Array.isArray(this._value)) {
      const e5 = this._value[0] / this._value[1];
      return Number.isInteger(e5) && e5 >= -1e6 && e5 <= 1e6 ? e5 : null;
    }
    return 0 === this.engine.chop(this._value.im) && Number.isInteger(this._value.re) && this._value.re >= -1e6 && this._value.re <= 1e6 ? this._value.re : null;
  }
  get asRational() {
    const [e5, t2] = this.rationalValue;
    if (null !== e5 && null !== t2)
      return [e5, t2];
    const i2 = this.asSmallInteger;
    return null !== i2 ? [i2, 1] : [null, null];
  }
  get domain() {
    return void 0 === this._domain && (this._domain = this.engine.domain(Bu(this._value))), this._domain;
  }
  get json() {
    return mu(this.engine, this._value, { latex: this._latex });
  }
  get sgn() {
    if (this.isZero)
      return 0;
    if (this._value instanceof Qo.exports.Complex)
      return null;
    if ("number" == typeof this._value)
      return this._value < 0 ? -1 : this._value > 0 ? 1 : null;
    if (this._value instanceof Xo)
      return this._value.isNegative() ? -1 : this._value.isPositive() ? 1 : null;
    if (Array.isArray(this._value)) {
      const [e5, t2] = this._value;
      return 0 === e5 && 0 !== t2 ? 0 : e5 < 0 ? -1 : e5 > 0 ? 1 : null;
    }
    return null;
  }
  isSame(e5) {
    if (this === e5)
      return true;
    if (!(e5 instanceof Vu))
      return false;
    if (Array.isArray(this._value)) {
      if (!Array.isArray(e5._value))
        return false;
      const [t2, i2] = e5._value;
      return this._value[0] === t2 && this._value[1] === i2;
    }
    return this._value instanceof Xo ? e5._value instanceof Xo && this._value.eq(e5._value) : this._value instanceof Qo.exports.Complex ? e5._value instanceof Qo.exports.Complex && this._value.equals(e5._value) : "number" == typeof this._value && "number" == typeof e5._value && this._value === e5._value;
  }
  isEqual(e5) {
    var t2, i2;
    if (this === e5)
      return true;
    const n2 = e5.numericValue;
    if (void 0 === n2)
      return false;
    if (!(n2 instanceof Vu))
      return false;
    if (Array.isArray(this._value)) {
      const e6 = n2.asFloat;
      return null !== e6 && 0 === this.engine.chop(this._value[0] / this._value[1] - e6);
    }
    if (this._value instanceof Xo)
      return 0 === this.engine.chop(this._value.sub(null !== (i2 = null !== (t2 = n2.decimalValue) && void 0 !== t2 ? t2 : n2.asFloat) && void 0 !== i2 ? i2 : NaN));
    if (this._value instanceof Qo.exports.Complex) {
      if (n2 instanceof Qo.exports.Complex)
        return 0 === this.engine.chop(n2.re - this._value.re) && 0 === this.engine.chop(n2.im - this._value.im);
      if (0 !== this._value.im)
        return false;
    }
    const r2 = this.asFloat, a2 = n2.asFloat;
    return null !== r2 && null !== a2 && 0 === this.engine.chop(a2 - r2);
  }
  match(e5, t2) {
    var i2;
    return this.isEqualWithTolerance(e5, null !== (i2 = null == t2 ? void 0 : t2.numericTolerance) && void 0 !== i2 ? i2 : 0) ? {} : null;
  }
  isEqualWithTolerance(e5, t2) {
    var i2, n2;
    if (this === e5)
      return true;
    if (!(e5 instanceof Vu))
      return false;
    if (Array.isArray(this._value)) {
      const i3 = e5.asFloat;
      return null !== i3 && Math.abs(this._value[0] / this._value[1] - i3) <= t2;
    }
    if (this._value instanceof Xo)
      return this._value.sub(null !== (n2 = null !== (i2 = e5.decimalValue) && void 0 !== i2 ? i2 : e5.asFloat) && void 0 !== n2 ? n2 : NaN).abs().lte(t2);
    if (this._value instanceof Qo.exports.Complex) {
      if (e5._value instanceof Qo.exports.Complex)
        return Math.abs(e5._value.re - this._value.re) <= t2 && Math.abs(e5._value.im - this._value.im) <= t2;
      if (0 !== this._value.im)
        return false;
    }
    const r2 = this.asFloat, a2 = e5.asFloat;
    return null !== r2 && null !== a2 && Math.abs(a2 - r2) <= t2;
  }
  isLess(e5) {
    if (e5 = e5.N(), !this.isImaginary && !e5.isImaginary) {
      if ("number" == typeof this._value) {
        const t2 = e5.machineValue;
        if (null !== t2)
          return this._value < t2;
        const i2 = e5.decimalValue;
        if (null !== i2)
          return i2.greaterThanOrEqualTo(this._value);
        const [n2, r2] = e5.rationalValue;
        return null !== n2 && null !== r2 && this._value * r2 < n2;
      }
      if (this._value instanceof Xo) {
        const t2 = e5.machineValue;
        if (null !== t2)
          return this._value.lt(t2);
        const i2 = e5.decimalValue;
        if (null !== i2)
          return this._value.lt(i2);
        const [n2, r2] = e5.rationalValue;
        return null !== n2 && null !== r2 && this._value.mul(r2).lt(n2);
      }
      if (Array.isArray(this._value)) {
        const [t2, i2] = this._value;
        if ("number" == typeof e5)
          return t2 < e5 * i2;
        const [n2, r2] = e5.rationalValue;
        if (null !== n2 && null !== r2)
          return t2 * r2 < n2 * i2;
        const a2 = e5.decimalValue;
        return null !== a2 && a2.mul(t2).lt(i2);
      }
      this._value, Qo.exports.Complex;
    }
  }
  isLessEqual(e5) {
    e5 = e5.N();
    const t2 = this.isLess(e5);
    if (void 0 === t2)
      return;
    const i2 = this.isEqual(e5);
    return void 0 !== i2 ? t2 || i2 : void 0;
  }
  isGreater(e5) {
    const t2 = this.isLess(e5);
    if (void 0 !== t2)
      return !t2;
  }
  isGreaterEqual(e5) {
    e5 = e5.N();
    const t2 = this.isLess(e5);
    if (void 0 === t2)
      return;
    const i2 = this.isEqual(e5);
    return void 0 !== i2 ? !t2 || i2 : void 0;
  }
  get isPositive() {
    const e5 = this.sgn;
    if (null != e5)
      return e5 > 0;
  }
  get isNonNegative() {
    const e5 = this.sgn;
    if (null != e5)
      return e5 >= 0;
  }
  get isNegative() {
    const e5 = this.sgn;
    if (null != e5)
      return e5 < 0;
  }
  get isNonPositive() {
    const e5 = this.sgn;
    if (null != e5)
      return e5 <= 0;
  }
  get isZero() {
    return !Array.isArray(this._value) && (0 === this._value || 0 === this.engine.chop(this._value));
  }
  get isNotZero() {
    return !!Array.isArray(this._value) || 0 !== this._value && 0 !== this.engine.chop(this._value);
  }
  get isOne() {
    if ("number" == typeof this._value)
      return 1 === this._value;
    if (this._value instanceof Xo)
      return this._value.equals(this.engine._DECIMAL_ONE);
    if (Array.isArray(this._value)) {
      const [e5, t2] = this._value;
      return 0 !== t2 && e5 === t2;
    }
    return this._value.equals(1);
  }
  get isNegativeOne() {
    if ("number" == typeof this._value)
      return -1 === this._value;
    if (this._value instanceof Xo)
      return this._value.equals(this.engine._DECIMAL_NEGATIVE_ONE);
    if (Array.isArray(this._value)) {
      const [e5, t2] = this._value;
      return e5 < 0 && 0 !== t2 && -e5 === t2;
    }
    return this._value.equals(-1);
  }
  get isOdd() {
    return !(!this.isOne && !this.isNegativeOne) || !this.isZero && !!this.isInteger && ("number" == typeof this._value ? this._value % 2 != 0 : this._value instanceof Xo ? !this._value.mod(2).isZero() : void 0);
  }
  get isEven() {
    return !this.isOne && !this.isNegativeOne && (!!this.isZero || !!this.isInteger && ("number" == typeof this._value ? this._value % 2 == 0 : this._value instanceof Xo ? this._value.mod(2).isZero() : void 0));
  }
  get isPrime() {
    return !(!this.isInteger || !this.isFinite || this.isNonPositive || this.isOne || this.isZero) && ("number" == typeof this._value ? $u(this._value) : this._value instanceof Xo ? $u(this._value.toNumber()) : void 0);
  }
  get isComposite() {
    return !(!this.isInteger || !this.isFinite || this.isNonPositive || this.isOne || this.isZero) && ("number" == typeof this._value ? !$u(this._value) : this._value instanceof Xo ? !$u(this._value.toNumber()) : void 0);
  }
  get isInfinity() {
    return "number" == typeof this._value ? !Number.isFinite(this._value) && !Number.isNaN(this._value) : (this._value instanceof Xo || this._value instanceof Qo.exports.Complex) && !this._value.isFinite() && !this._value.isNaN();
  }
  get isNaN() {
    return "number" == typeof this._value ? Number.isNaN(this._value) : (this._value instanceof Xo && this._value.isNaN(), this._value instanceof Qo.exports.Complex && this._value.isNaN(), false);
  }
  get isFinite() {
    return !this.isInfinity && !isNaN;
  }
  get isNumber() {
    return true;
  }
  get isInteger() {
    return "number" == typeof this._value ? Number.isInteger(this._value) : this._value instanceof Xo && this._value.isInteger();
  }
  get isRational() {
    return !!Array.isArray(this._value) || this.isInteger;
  }
  get isAlgebraic() {
    if (this.isRational)
      return true;
  }
  get isReal() {
    return !(!this.isFinite || this._value instanceof Qo.exports.Complex && 0 !== this.engine.chop(this._value.im));
  }
  get isExtendedReal() {
    return this.isInfinity || this.isReal;
  }
  get isComplex() {
    return !this.isNaN;
  }
  get isImaginary() {
    return this._value instanceof Qo.exports.Complex && 0 !== this._value.im;
  }
  get isExtendedComplex() {
    return this.isInfinity || !this.isNaN;
  }
  get canonical() {
    if (this._isCanonical)
      return this;
    if (Array.isArray(this._value)) {
      const [e5, t2] = Dl(this._value);
      return Number.isNaN(e5) || Number.isNaN(t2) ? this.engine._NAN : 1 === t2 ? this.engine.number(e5) : 0 === t2 ? 0 !== e5 && Number.isFinite(e5) ? e5 < 0 ? this.engine._NEGATIVE_INFINITY : this.engine._POSITIVE_INFINITY : this.engine._NAN : 0 === e5 ? this.engine._ZERO : this.engine.number([e5, t2]);
    }
    return this;
  }
  simplify(e5) {
    return this.canonical;
  }
  N(e5) {
    if (Array.isArray(this._value)) {
      const e6 = this.engine, [t2, i2] = this._value;
      return Rl(e6) ? e6.number(e6.decimal(t2).div(i2)) : e6.number(t2 / i2);
    }
    return this;
  }
};
var Ku = class extends Zl {
  constructor(e5, t2, i2) {
    super(e5, i2), this._string = t2.normalize(), e5._register(this);
  }
  get hash() {
    return Hl("String" + this._string);
  }
  get json() {
    return e5 = this.engine, t2 = this._string, e5.jsonSerializationOptions.shorthands.includes("string") ? `'${t2}'` : { str: t2 };
    var e5, t2;
  }
  get head() {
    return "String";
  }
  get isPure() {
    return true;
  }
  get isLiteral() {
    return true;
  }
  get isCanonical() {
    return true;
  }
  set isCanonical(e5) {
  }
  get domain() {
    return this.engine.domain("String");
  }
  get complexity() {
    return 19;
  }
  get string() {
    return this._string;
  }
  isEqual(e5) {
    return e5.string === this._string;
  }
  isSame(e5) {
    return e5.string === this._string;
  }
  match(e5, t2) {
    return e5 instanceof Ku && this._string === e5._string ? {} : null;
  }
};
function Ru(e5, t2) {
  if (null == t2)
    return e5._fn("Sequence", []);
  if (t2 instanceof Zl)
    return t2;
  if (Array.isArray(t2)) {
    if ("number" == typeof t2[0]) {
      const [i2, n2] = t2;
      return "number" == typeof n2 && Number.isInteger(i2) && Number.isInteger(n2) ? e5.number(t2) : Wu(e5, "Divide", t2);
    }
    return "string" == typeof t2[0] ? Wu(e5, t2[0], t2.slice(1)) : new Iu(e5, Ru(e5, t2[0]), t2.slice(1).map((t3) => Ru(e5, t3)));
  }
  if ("number" == typeof t2 || t2 instanceof Qo.exports.Complex || t2 instanceof Xo)
    return e5.number(t2);
  if ("string" == typeof t2)
    return t2.startsWith("'") && t2.endsWith("'") ? new Ku(e5, t2.slice(1, -1)) : e5.symbol(t2);
  if ("object" == typeof t2) {
    const i2 = { latex: t2.latex, wikidata: t2.wikidata };
    if ("dict" in t2)
      return new Cu(e5, t2.dict, i2);
    if ("fn" in t2)
      return "string" == typeof t2.fn[0] ? Wu(e5, t2.fn[0], t2.fn.slice(1), i2) : new Iu(e5, Ru(e5, t2.fn[0]), t2.fn.slice(1).map((t3) => Ru(e5, t3)), i2);
    if ("str" in t2)
      return new Ku(e5, t2.str, i2);
    if ("sym" in t2)
      return e5.symbol(t2.sym, i2);
    if ("num" in t2)
      return e5.number(t2, i2);
  }
  return e5.symbol("Undefined");
}
function ju(e5, t2, i2) {
  var n2;
  if (t2 instanceof Vu)
    return t2;
  if (Array.isArray(t2)) {
    if (2 !== t2.length)
      throw Error("Array argument to boxNumber() should be two integers");
    const [n3, r2] = t2;
    if ("number" != typeof n3 || "number" != typeof r2)
      throw Error("Array argument to boxNumber() should be two integers");
    if (!Number.isInteger(n3) || !Number.isInteger(r2))
      throw Error("Array argument to boxNumber() should be two integers");
    if (r2 === n3)
      return 0 === r2 ? e5._NAN : e5._ONE;
    if (1 === r2)
      t2 = n3;
    else {
      if (-1 !== r2)
        return 1 === n3 && 2 === r2 ? e5._HALF : new Vu(e5, [n3, r2], i2);
      t2 = -n3;
    }
  }
  if (t2 instanceof Qo.exports.Complex) {
    if (t2.isNaN())
      return e5._NAN;
    if (t2.isZero())
      return e5._ZERO;
    if (t2.isInfinite())
      return e5._COMPLEX_INFINITY;
    if (0 !== t2.im)
      return jl(e5) ? new Vu(e5, t2, i2) : e5._NAN;
    t2 = t2.re;
  }
  if (t2 instanceof Xo) {
    const n3 = t2.toNumber();
    return isNaN(n3) ? e5._NAN : -1 === n3 ? e5._NEGATIVE_ONE : 0 === n3 ? e5._ZERO : 1 === n3 ? e5._ONE : 2 === n3 ? e5._TWO : Number.isFinite(n3) ? new Vu(e5, Rl(e5) ? t2 : n3, i2) : n3 < 0 ? e5._NEGATIVE_INFINITY : e5._POSITIVE_INFINITY;
  }
  if ("object" == typeof t2 && "num" in t2) {
    if ("number" == typeof t2.num)
      t2 = t2.num;
    else if ("string" == typeof t2.num) {
      let r2 = t2.num.toLowerCase();
      if (/[0-9][nd]$/.test(r2) && (r2 = r2.slice(0, -1)), r2 = r2.replace(/[\u0009-\u000d\u0020\u00a0]/g, ""), /\([0-9]+\)$/.test(r2)) {
        const [t3, i3, a2] = null !== (n2 = r2.match(/(.+)\(([0-9]+)\)$/)) && void 0 !== n2 ? n2 : [];
        r2 = i3 + a2.repeat(Math.ceil(e5.precision / a2.length));
      }
      return "nan" === r2 ? e5._NAN : "infinity" === r2 || "+infinity" === r2 ? e5._POSITIVE_INFINITY : "-infinity" === r2 ? e5._NEGATIVE_INFINITY : "0" === r2 ? e5._ZERO : "1" === r2 ? e5._ONE : "-1" === r2 ? e5._NEGATIVE_ONE : "2" === r2 ? e5._TWO : new Vu(e5, r2, i2);
    }
  }
  if ("number" == typeof t2) {
    if (Number.isNaN(t2))
      return e5._NAN;
    if (!Number.isFinite(t2) && t2 > 0 && e5._POSITIVE_INFINITY, !Number.isFinite(t2) && t2 < 0 && e5._NEGATIVE_INFINITY, -1 === t2)
      return e5._NEGATIVE_ONE;
    if (0 === t2)
      return e5._ZERO;
    if (1 === t2)
      return e5._ONE;
    if (2 === t2)
      return e5._TWO;
  }
  return "number" == typeof t2 ? new Vu(e5, t2, i2) : null;
}
function Hu(e5, t2) {
  if (null === t2)
    return e5.error("missing");
  if ("object" == typeof t2 && t2 instanceof Zl)
    return t2;
  if ("string" == typeof (t2 = As(t2)))
    return Ru(e5, t2);
  if (Array.isArray(t2)) {
    const i2 = t2.map((t3) => Hu(e5, t3));
    return new Iu(e5, i2[0], i2.slice(1));
  }
  if ("object" == typeof t2) {
    if ("dict" in t2)
      return new Cu(e5, t2.dict);
    if ("fn" in t2)
      return Hu(e5, t2.fn);
    if ("str" in t2)
      return new Ku(e5, t2.str);
    if ("sym" in t2)
      return Ru(e5, t2.sym);
    if ("num" in t2)
      return Ru(e5, t2.num);
  }
  return Ru(e5, t2);
}
function Wu(e5, t2, i2, n2) {
  var r2, a2, o2, s2;
  if ("Hold" === t2) {
    const t3 = new Iu(e5, "Hold", [Hu(e5, i2[0])], n2);
    return t3.isCanonical = true, t3;
  }
  if ("Domain" === t2)
    return gu(e5, i2[0], n2);
  if ("String" === t2)
    return 0 === i2.length ? new Ku(e5, "", n2) : new Ku(e5, i2.map((e6) => {
      var t3;
      return null !== (t3 = Zu(e6)) && void 0 !== t3 ? t3 : "";
    }).join(""), n2);
  if ("Symbol" === t2 && i2.length > 0)
    return e5.symbol(i2.map((e6) => {
      var t3;
      return null !== (t3 = Zu(e6)) && void 0 !== t3 ? t3 : "";
    }).join(""), n2);
  if (("Divide" === t2 || "Rational" === t2) && 2 === i2.length) {
    if (i2[0] instanceof Zl && i2[1] instanceof Zl) {
      if (i2[0].isLiteral && i2[1].isLiteral && i2[0].isInteger && i2[1].isInteger) {
        const [t3, o3] = [null !== (r2 = i2[0].machineValue) && void 0 !== r2 ? r2 : i2[0].asSmallInteger, null !== (a2 = i2[1].machineValue) && void 0 !== a2 ? a2 : i2[1].asSmallInteger];
        return null !== t3 && null !== o3 ? e5.number([t3, o3], n2) : new Iu(e5, "Rational", [i2[0], i2[1]], n2);
      }
    } else {
      const t3 = i2[0], r3 = i2[1], [a3, o3] = [Wl(e5, t3), Wl(e5, r3)];
      if ((null == a3 ? void 0 : a3.isInteger()) && (null == o3 ? void 0 : o3.isInteger()))
        return Yl(a3) && Yl(o3) ? e5.number([a3.toNumber(), o3.toNumber()], n2) : new Iu(e5, "Rational", [e5.box(t3), e5.box(r3)], n2);
    }
    t2 = "Divide";
  }
  if ("Number" === t2 && 1 === i2.length)
    return Ru(e5, i2[0]);
  if ("Complex" === t2) {
    if (1 === i2.length) {
      const t3 = Ru(e5, i2[0]), r3 = t3.asFloat;
      return null !== r3 && 0 !== r3 ? new Vu(e5, e5.complex(0, r3), n2) : e5.mul([t3, e5._I]);
    }
    if (2 === i2.length) {
      const t3 = Ru(e5, i2[0]), r3 = Ru(e5, i2[1]), a3 = t3.asFloat, o3 = r3.asFloat;
      return null !== o3 && null !== a3 ? 0 === o3 && 0 === a3 ? e5._ZERO : null !== o3 && 0 !== o3 ? new Vu(e5, e5.complex(a3, o3), n2) : t3 : e5.add([t3, e5.mul([r3, e5._I])], n2);
    }
  }
  if ("Negate" === t2 && 1 === i2.length) {
    if ("number" == typeof i2[0])
      return e5.number(-i2[0], n2);
    if (i2[0] instanceof Zl && i2[0].machineValue)
      return e5.number(-i2[0].machineValue, n2);
  }
  if ("Single" === t2)
    return i2.length < 1 ? e5.error("expected-argument", "'Single") : i2.length > 1 ? e5.error("unexpected-argument", "'Single") : new Iu(e5, "Tuple", [e5.box(i2[0])], n2);
  if ("Pair" === t2)
    return i2.length < 2 ? e5.error("expected-argument", "'Pair") : i2.length > 2 ? e5.error("unexpected-argument", "'Pair") : new Iu(e5, "Tuple", [e5.box(i2[0]), e5.box(i2[1])], n2);
  if ("KeyValuePair" === t2)
    return i2.length < 2 ? e5.error("expected-argument", "'KeyValuePair") : i2.length > 2 ? e5.error("unexpected-argument", "'KeyValuePair") : new Iu(e5, "KeyValuePair", [e5.box(i2[0]), e5.box(i2[1])], n2);
  if ("Triple" === t2)
    return i2.length < 3 ? e5.error("expected-argument", "'Triple") : i2.length > 3 ? e5.error("unexpected-argument", "'Triple") : new Iu(e5, "Tuple", i2.map((t3) => e5.box(t3)), n2);
  if ("Dictionary" === t2) {
    const t3 = {};
    for (const n3 of i2) {
      const i3 = e5.box(n3), r3 = i3.head;
      if ("KeyValuePair" === r3 || "Pair" === r3 || "Tuple" === r3 && 2 === i3.nops) {
        const e6 = i3.op1;
        if (e6.isValid && !e6.isNothing) {
          const n4 = i3.op2;
          let r4 = null !== (o2 = e6.symbol) && void 0 !== o2 ? o2 : e6.string;
          if (!r4 && e6.isLiteral) {
            const t4 = null !== (s2 = e6.machineValue) && void 0 !== s2 ? s2 : e6.asSmallInteger;
            t4 && Number.isFinite(t4) && Number.isInteger(t4) && (r4 = t4.toString());
          }
          r4 && (t3[r4] = n4);
        }
      }
    }
    return new Cu(e5, t3, n2);
  }
  return new Iu(e5, t2, i2.map((t3) => Ru(e5, t3)), n2);
}
function Zu(e5) {
  var t2, i2;
  if ("string" == typeof e5)
    return e5;
  if (e5 instanceof Zl)
    return null !== (i2 = null !== (t2 = e5.string) && void 0 !== t2 ? t2 : e5.symbol) && void 0 !== i2 ? i2 : e5.toString();
  if ("object" == typeof e5) {
    if ("str" in e5)
      return e5.str;
    if ("fn" in e5 && "String" === e5.fn[0] && "string" == typeof e5.fn[1])
      return e5.fn[1];
  }
  return Array.isArray(e5) && "String" === e5[0] && "string" == typeof e5[1] ? e5[1] : null;
}
function Gu(e5, t2) {
  if (!e5.isLiteral)
    return null;
  let i2;
  null !== e5.machineValue && (i2 = -e5.machineValue), e5.decimalValue && (i2 = e5.decimalValue.neg()), e5.complexValue && (i2 = e5.complexValue.neg());
  const [n2, r2] = e5.rationalValue;
  return null !== n2 && null !== r2 && (i2 = [-n2, r2]), void 0 !== i2 ? e5.engine.number(i2, t2) : null;
}
function Uu(e5, t2) {
  var i2;
  if ("Negate" === e5.head)
    return e5.op1;
  if (e5.isLiteral)
    return Gu(e5, t2);
  if ("Add" === e5.head) {
    let n2 = e5.ops.map((e6) => Uu(e6));
    return n2 = null !== (i2 = Ql(n2, "Add")) && void 0 !== i2 ? i2 : n2, e5.engine.add(n2, t2);
  }
  return e5.engine._fn("Negate", [e5], t2);
}
function Ju(e5) {
  var t2;
  if ("Negate" === e5.head)
    return e5.op1;
  if (e5.isLiteral)
    return Gu(e5);
  const i2 = e5.engine;
  if ("Add" === e5.head) {
    let n2 = e5.ops.map((e6) => Ju(e6));
    return n2 = null !== (t2 = Ql(n2, "Add")) && void 0 !== t2 ? t2 : n2, i2.add(n2);
  }
  return "Multiply" === e5.head ? function(e6, t3) {
    let i3 = [], n2 = false;
    for (const e7 of t3)
      n2 || "Negate" !== e7.head ? i3.push(e7) : (n2 = true, i3.push(e7.op1));
    if (n2)
      return e6.mul(i3);
    i3 = [];
    for (const e7 of t3)
      !n2 && e7.isLiteral && e7.isInteger ? (n2 = true, i3.push(Ju(e7))) : i3.push(e7);
    if (n2)
      return e6.mul(i3);
    i3 = [];
    for (const e7 of t3)
      !n2 && e7.isLiteral && e7.isNumber ? (n2 = true, i3.push(Ju(e7))) : i3.push(e7);
    return n2 ? e6.mul(i3) : e6._fn("Negate", [e6._fn("Multiply", t3)]);
  }(i2, e5.ops) : "Divide" === e5.head ? i2.divide(Ju(e5.op1), e5.op2) : i2._fn("Negate", [e5]);
}
function Xu(e5, t2, i2 = "simplify") {
  return Ju(t2);
}
var Yu = class {
  constructor(e5, t2) {
    if (this._literal = [0, 1], this._imaginary = 0, this._posInfinityCount = 0, this._negInfinityCount = 0, this._terms = [], this.engine = e5, t2)
      for (const e6 of t2)
        this.addTerm(e6);
  }
  get isEmpty() {
    return 0 === this._terms.length && 0 === this._literal[0] && 0 === this._imaginary && 0 === this._negInfinityCount && 0 === this._posInfinityCount;
  }
  addTerm(e5, t2) {
    if (e5.isNothing)
      return;
    if (void 0 === t2 && (t2 = [1, 1]), e5.isLiteral) {
      if (e5.isInfinity)
        return void (e5.isPositive ? this._posInfinityCount += 1 : this._negInfinityCount += 1);
      const [i3, n3] = e5.asRational;
      if (null !== i3 && null !== n3)
        return void (this._literal = [t2[0] * (this._literal[0] * n3 + i3 * this._literal[1]), t2[1] * n3 * this._literal[1]]);
      if (e5.complexValue) {
        let i4 = e5.complexValue.re, n4 = e5.complexValue.im;
        if (Number.isInteger(i4) && Math.abs(i4) <= 1e6 && (this._literal[0] += this._literal[1] * i4 * t2[0] / t2[1], i4 = 0), Number.isInteger(n4) && Math.abs(n4) <= 1e6 && (this._imaginary += n4 * t2[0] / t2[1], n4 = 0), 0 === i4 && 0 === n4)
          return;
        e5 = this.engine.number(this.engine.complex(i4, n4)).canonical;
      }
    }
    let i2;
    if ([i2, e5] = au(e5), 0 === i2[0])
      return;
    if (i2 = [i2[0] * t2[0], i2[1] * t2[1]], "Add" === e5.head) {
      for (const t3 of e5.ops)
        this.addTerm(t3, i2);
      return;
    }
    let n2 = false;
    if (!e5.isLiteral) {
      if (this._terms.length > 500) {
        const t3 = e5.hash;
        for (let r2 = 0; r2 < this._terms.length; r2++)
          if (!this._terms[r2].term.isLiteral && t3 === this._terms[r2].term.hash && e5.isSame(this._terms[r2].term)) {
            const [e6, t4] = this._terms[r2].coef, [a2, o2] = i2;
            this._terms[r2].coef = [e6 * o2 + t4 * a2, t4 * o2], n2 = true;
            break;
          }
      } else
        for (let t3 = 0; t3 < this._terms.length; t3++)
          if (!this._terms[t3].term.isLiteral && e5.isSame(this._terms[t3].term)) {
            const [e6, r2] = this._terms[t3].coef, [a2, o2] = i2;
            this._terms[t3].coef = [e6 * o2 + r2 * a2, r2 * o2], n2 = true;
            break;
          }
    }
    n2 || this._terms.push({ term: e5, coef: i2 });
  }
  terms() {
    var e5;
    const t2 = this.engine;
    if (this._posInfinityCount > 0 && this._negInfinityCount > 0)
      return [t2._NAN];
    if (this._posInfinityCount > 0)
      return [t2._POSITIVE_INFINITY];
    if (this._negInfinityCount > 0)
      return [t2._NEGATIVE_INFINITY];
    if (0 === this._terms.length)
      return 0 === this._literal[0] && 0 === this._imaginary ? [] : 0 === this._imaginary ? [t2.number(this._literal).canonical] : 0 === this._literal[0] ? [t2.number(t2.complex(0, this._imaginary)).canonical] : [t2.number(this._literal).canonical, t2.number(t2.complex(0, this._imaginary)).canonical];
    const i2 = [];
    for (const { coef: [e6, n2], term: r2 } of this._terms)
      0 !== e6 && (e6 === n2 ? i2.push(r2) : e6 === -n2 ? i2.push(t2.negate(r2)) : 1 === n2 ? i2.push(t2.mul([t2.number(e6).canonical, r2])) : 1 === e6 ? i2.push(t2.divide(r2, t2.number(n2).canonical)) : 0 !== e6 && i2.push(t2.mul([t2.number([e6, n2]).canonical, r2])));
    return 0 !== this._literal[0] && i2.push(t2.number(this._literal).canonical), 0 !== this._imaginary && i2.push(t2.number(t2.complex(0, this._imaginary)).canonical), null !== (e5 = Ql(i2, "Add")) && void 0 !== e5 ? e5 : i2;
  }
  asExpression() {
    const e5 = this.engine, t2 = this.terms();
    return 0 === t2.length ? e5._ZERO : 1 === t2.length ? t2[0] : e5._fn("Add", function(e6, t3) {
      return t3.sort((e7, t4) => {
        const i2 = iu(e7), n2 = iu(t4);
        if (i2 < n2)
          return -1;
        if (i2 > n2)
          return 1;
        const r2 = eu(e7), a2 = eu(t4);
        if (r2 !== a2)
          return a2 - r2;
        const o2 = tu(e7), s2 = tu(t4);
        return o2 !== s2 ? o2 - s2 : nu(e7, t4);
      });
    }(0, t2));
  }
};
function Qu(e5, t2) {
  var i2;
  if (0 === (t2 = (t2 = null !== (i2 = Ql(t2, "Add")) && void 0 !== i2 ? i2 : t2).filter((e6) => !(e6.isLiteral && e6.isZero))).length)
    return e5.number(0);
  if (1 === t2.length)
    return t2[0];
  if (2 === t2.length) {
    let i3 = 0, n2 = 0;
    if (t2[0].isLiteral && (n2 = t2[0].machineValue, null === n2 && t2[0].decimalValue && (n2 = t2[0].asFloat)), null !== n2 && 0 !== n2 ? i3 = Bl(t2[1]) : (i3 = Bl(t2[0]), 0 !== i3 && (n2 = t2[1].machineValue, null === n2 && t2[1].decimalValue && (n2 = t2[1].asFloat))), null !== n2 && null !== i3 && 0 !== i3)
      return e5.number(e5.complex(n2, i3));
  }
  return e5._fn("Add", t2);
}
function ec(e5, t2, i2 = "eval") {
  var n2, r2;
  for (const i3 of t2) {
    if (i3.isImaginary && i3.isInfinity)
      return e5.symbol("ComplexInfinity");
    if (i3.isNaN || "Undefined" === i3.symbol)
      return e5._NAN;
  }
  const a2 = new Yu(e5);
  let [o2, s2] = [0, 1], [l2, u2] = [e5._DECIMAL_ZERO, e5._DECIMAL_ONE], c2 = 0, d2 = 0, h2 = e5._DECIMAL_ZERO, m2 = Qo.exports.Complex.ZERO;
  for (const i3 of t2)
    if (!i3.isNothing && !i3.isZero)
      if (i3.isLiteral) {
        const [t3, n3] = i3.rationalValue;
        null !== t3 && null !== n3 ? [o2, s2] = Dl([o2 * n3 + s2 * t3, s2 * n3]) : null !== i3.decimalValue ? i3.decimalValue.isInteger() ? l2 = l2.add(u2.mul(i3.decimalValue)) : h2 = h2.add(i3.decimalValue) : null !== i3.machineValue ? Rl(e5) ? Number.isInteger(i3.machineValue) ? l2 = l2.add(u2.mul(i3.machineValue)) : h2 = h2.add(i3.machineValue) : Number.isInteger(i3.machineValue) ? d2 += i3.machineValue : c2 += i3.machineValue : null !== i3.complexValue ? m2 = m2.add(i3.complexValue) : a2.addTerm(i3);
      } else if ("Rational" === i3.head && 2 === i3.nops) {
        const [e6, t3] = [null !== (n2 = i3.op1.decimalValue) && void 0 !== n2 ? n2 : i3.op1.machineValue, null !== (r2 = i3.op2.decimalValue) && void 0 !== r2 ? r2 : i3.op1.machineValue];
        null !== e6 && null !== t3 ? (l2 = l2.mul(t3).add(u2.mul(e6)), u2 = u2.mul(t3)) : a2.addTerm(i3);
      } else
        a2.addTerm(i3);
  if (!jl(e5) && 0 !== m2.im)
    return e5._NAN;
  if (Rl(e5) || 0 !== e5.chop(h2) || !l2.isZero()) {
    let t3 = h2;
    if (0 !== c2 && (t3 = t3.add(c2)), 0 !== m2.re && (t3 = t3.add(m2.re)), l2 = l2.add(u2.mul(d2)), l2 = l2.mul(s2).add(u2.mul(o2)), u2 = u2.mul(s2), [l2, u2] = Gl([l2, u2]), u2.eq(1) ? t3 = t3.add(l2) : "N" === i2 ? t3 = t3.add(l2.div(u2)) : a2.addTerm(e5.box(["Rational", e5.number(l2), e5.number(u2)]).canonical), 0 !== m2.im)
      if (Yl(t3)) {
        const i3 = e5.number(e5.complex(t3.toNumber(), m2.im));
        if (a2.isEmpty)
          return i3;
        a2.addTerm(i3);
      } else
        a2.addTerm(e5.number(e5.complex(0, m2.im))), a2.addTerm(e5.number(t3));
    else {
      if (a2.isEmpty)
        return e5.number(t3);
      a2.addTerm(e5.number(t3));
    }
    return a2.asExpression();
  }
  if ("N" === i2 || 1 === s2) {
    const t3 = c2 + d2 + m2.re + o2 / s2, i3 = e5.number(0 === m2.im ? t3 : e5.complex(t3, m2.im));
    if (a2.isEmpty)
      return i3;
    a2.addTerm(i3);
  } else {
    0 !== o2 ? 1 === s2 ? c2 += d2 + o2 : ([o2, s2] = Dl([o2 + s2 * d2, s2]), a2.addTerm(e5.number([o2, s2]))) : c2 += d2;
    const t3 = c2 + m2.re, i3 = e5.number(0 === m2.im ? t3 : e5.complex(t3, m2.im));
    if (a2.isEmpty)
      return i3;
    a2.addTerm(i3);
  }
  return a2.asExpression();
}
function tc(e5, t2, i2, n2) {
  var r2, a2, o2;
  if ("Lambda" !== t2.head)
    return;
  const s2 = t2.op1;
  let l2 = 1, u2 = 1e6;
  if ("Tuple" !== i2.head && "Triple" !== i2.head && "Pair" !== i2.head && "Single" !== i2.head || (l2 = null !== (r2 = i2.op2.asSmallInteger) && void 0 !== r2 ? r2 : 1, u2 = null !== (a2 = i2.op3.asSmallInteger) && void 0 !== a2 ? a2 : 1e6), l2 >= u2 || u2 - l2 >= 200)
    return;
  if ("evaluate" === n2 || "simplify" === n2) {
    const t3 = [];
    for (let i3 = l2; i3 <= u2; i3++) {
      const n3 = e5.number(i3);
      t3.push(s2.subs({ _1: n3, _: n3 }));
    }
    return "simplify" === n2 ? e5.add(t3).simplify() : e5.add(t3).evaluate();
  }
  if (Rl(e5)) {
    let t3 = e5.decimal(0);
    for (let i3 = l2; i3 <= u2; i3++) {
      const n3 = e5.number(i3), r3 = s2.subs({ _1: n3, _: n3 }).evaluate(), a3 = null !== (o2 = r3.decimalValue) && void 0 !== o2 ? o2 : r3.asFloat;
      if (!a3)
        return;
      t3 = t3.add(a3);
    }
  }
  let c2 = 0;
  for (let t3 = l2; t3 <= u2; t3++) {
    const i3 = e5.number(t3), n3 = s2.subs({ _1: i3, _: i3 }).evaluate();
    if (!n3.asFloat)
      return;
    c2 += n3.asFloat;
  }
  return e5.number(c2);
}
function ic(e5, t2, i2, n2) {
  var r2, a2;
  if ("ComplexInfinity" === i2.symbol)
    return e5._NAN;
  if (i2.isLiteral) {
    if (i2.isZero)
      return e5._ONE;
    if (t2.isLiteral) {
      const o2 = null !== (r2 = t2.machineValue) && void 0 !== r2 ? r2 : t2.asFloat;
      if (1 === o2)
        return e5._ONE;
      if (0 === o2) {
        if (i2.isPositive)
          return e5._ZERO;
        if (i2.isNegative)
          return e5._COMPLEX_INFINITY;
      }
      if (i2.isOne)
        return t2;
      if (i2.isNegativeOne) {
        if (1 === o2)
          return e5._ONE;
        if (-1 === o2)
          return e5._NEGATIVE_ONE;
        if (t2.isInfinity)
          return e5._ZERO;
        const [i3, r3] = t2.rationalValue;
        if (null !== i3 && null !== r3)
          return e5.number([r3, i3], n2);
        const s3 = t2.asFloat;
        if (null !== s3 && Number.isInteger(s3))
          return e5.number([1, s3], n2);
        if (null === (a2 = t2.decimalValue) || void 0 === a2 ? void 0 : a2.isInteger())
          Yl(t2.decimalValue) ? e5.number([1, t2.decimalValue.toNumber()], n2) : e5._fn("Rational", [e5._ONE, t2], n2);
        else if (null !== o2 && Number.isInteger(o2) && !t2.decimalValue)
          return e5.number([1, o2], n2);
        return e5._fn("Power", [t2, e5._NEGATIVE_ONE], n2);
      }
      const s2 = i2.asFloat;
      if (0.5 === s2 || -0.5 === s2) {
        const i3 = t2.asSmallInteger;
        if (null !== i3 && i3 > 0) {
          const [t3, n3] = Cl(i3, 2);
          if (1 === n3 && 1 === t3)
            return e5._ONE;
          if (1 !== t3)
            return 1 === n3 ? e5.number(s2 >= 0 ? t3 : [1, t3]) : e5.mul([e5.number(t3), e5.power(e5.number(n3), e5._HALF)]);
        }
        return s2 > 0 ? e5._fn("Power", [t2, e5._HALF], n2) : e5._fn("Power", [t2, e5.number([-1, 2])], n2);
      }
      if (t2.isInfinity) {
        if (i2.complexValue) {
          const t3 = i2.complexValue.re;
          if (0 === t3)
            return e5._NAN;
          if (t3 < 0)
            return e5._ZERO;
          if (t3 > 0)
            return e5._COMPLEX_INFINITY;
        }
        if (t2.isNegative) {
          if (i2.isInfinity)
            return e5._NAN;
        } else if (t2.isPositive) {
          if (i2.isNegativeOne)
            return e5._ZERO;
          if (i2.isInfinity)
            return i2.isNegative ? e5._ZERO : e5._POSITIVE_INFINITY;
        }
      }
      if (i2.isInfinity && (t2.isOne || t2.isNegativeOne))
        return e5._NAN;
      const [l2, u2] = t2.asRational;
      if (null !== l2 && null !== u2) {
        const t3 = i2.asSmallInteger;
        if (null !== t3)
          return -1 === t3 ? e5.number([u2, l2]) : t3 > 0 ? e5.number([Math.pow(l2, t3), Math.pow(u2, t3)]) : e5.number([Math.pow(u2, -t3), Math.pow(l2, -t3)]);
      }
    }
  }
  if ("Power" === t2.head && t2.op1.isReal) {
    const n3 = i2.asSmallInteger;
    if (null !== n3) {
      const i3 = t2.op2.asSmallInteger;
      if (null !== i3)
        return e5._fn("Power", [t2.op1, e5.number(n3 * i3)]);
    }
    if (t2.op1.isNonNegative) {
      const [n4, r3] = i2.asRational;
      if (null !== n4 && null !== r3) {
        const [i3, a3] = t2.op2.asRational;
        if (null !== i3 && null !== a3)
          return e5._fn("Power", [t2.op1, e5.number([n4 * i3, r3 * a3])]);
      }
    }
  }
  return "Multiply" === t2.head && null !== i2.asSmallInteger ? e5._fn("Multiply", t2.ops.map((t3) => e5.power(t3, i2))) : null;
}
function nc(e5, t2) {
  if (t2.machineValue)
    return e5.number(Math.pow(t2.machineValue, 2));
  if (t2.decimalValue)
    return e5.number(t2.decimalValue.pow(2));
  if (t2.complexValue)
    return e5.number(t2.complexValue.pow(2));
  const [i2, n2] = t2.rationalValue;
  if (null !== i2 && null !== n2)
    return e5.number([Math.pow(n2, 2), Math.pow(i2, 2)]);
  if ("Multiply" === t2.head)
    return e5._fn("Multiply", t2.ops.map((t3) => nc(e5, t3)));
  if ("Power" === t2.head) {
    const i3 = t2.op2.asSmallInteger;
    return null !== i3 ? e5._fn("Power", [t2.op1, e5.number(2 * i3)]) : e5._fn("Power", [t2.op1, e5.mul([e5._TWO, t2.op2])]);
  }
  return e5._fn("Power", [t2, e5._TWO]);
}
function rc(e5, t2, i2, n2) {
  var r2, a2, o2, s2, l2, u2;
  if ("simplify" !== n2 && t2.isLiteral && i2.isLiteral && ("N" === n2 || !t2.isInteger))
    return t2.complexValue ? e5.number(t2.complexValue.pow(null !== (a2 = null !== (r2 = i2.complexValue) && void 0 !== r2 ? r2 : i2.asFloat) && void 0 !== a2 ? a2 : NaN)) : i2.complexValue && null !== t2.asFloat ? e5.number(e5.complex(t2.asFloat).pow(i2.complexValue)) : t2.decimalValue ? e5.number(t2.decimalValue.pow(null !== (o2 = i2.decimalValue) && void 0 !== o2 ? o2 : i2.asFloat)) : null !== t2.asFloat && (i2.decimalValue || Rl(e5)) ? e5.number(e5.decimal(t2.asFloat).pow(null !== (s2 = i2.decimalValue) && void 0 !== s2 ? s2 : i2.asFloat)) : e5.number(Math.pow(null !== (l2 = t2.asFloat) && void 0 !== l2 ? l2 : NaN, null !== (u2 = i2.asFloat) && void 0 !== u2 ? u2 : NaN));
  if (t2.isLiteral && null !== t2.asSmallInteger) {
    const [n3, r3] = i2.rationalValue;
    if (!(1 !== n3 && -1 !== n3 || 2 !== r3 && 3 !== r3)) {
      const [a3, o3] = Cl(t2.asSmallInteger, r3);
      if (1 === o3 && 1 === a3)
        return e5._ONE;
      if (1 === a3)
        return;
      return 1 === o3 ? e5.number(n3 >= 0 ? a3 : [1, a3]) : e5.mul([e5.number(a3), e5.power(e5.number(o3), i2)]);
    }
  }
  return "Power" === t2.head && -1 === t2.op2.asSmallInteger && -1 === i2.asSmallInteger ? t2.op1 : void 0;
}
function ac(e5, t2) {
  var i2;
  return 0 === (t2 = null !== (i2 = Ql(t2, "Multiply")) && void 0 !== i2 ? i2 : t2).length ? e5.number(1) : 1 === t2.length ? t2[0] : 2 === t2.length ? sc(t2[0], t2[1]) : new su(e5, t2).asExpression();
}
function oc(e5, t2, i2 = "evaluate") {
  for (const i3 of t2)
    if (i3.isNaN || "Undefined" === i3.symbol)
      return e5._NAN;
  let [n2, r2] = [1, 1], [a2, o2] = [e5._DECIMAL_ONE, e5._DECIMAL_ONE], s2 = 1, l2 = e5._DECIMAL_ONE, u2 = Qo.exports.Complex.ONE;
  const c2 = new su(e5);
  for (const i3 of t2)
    if (!i3.isNothing && !i3.isOne)
      if (i3.isLiteral) {
        const [t3, d2] = i3.rationalValue;
        null !== t3 && null !== d2 ? Rl(e5) ? [a2, o2] = Gl([a2.mul(t3), o2.mul(d2)]) : [n2, r2] = Dl([n2 * t3, r2 * d2]) : null !== i3.decimalValue ? i3.decimalValue.isInteger() ? a2 = a2.mul(i3.decimalValue) : l2 = l2.mul(i3.decimalValue) : null !== i3.machineValue ? Rl(e5) ? Number.isInteger(i3.machineValue) ? a2 = a2.mul(i3.machineValue) : l2 = l2.mul(i3.machineValue) : s2 *= i3.machineValue : null !== i3.complexValue ? u2 = u2.mul(i3.complexValue) : c2.addTerm(i3);
      } else
        c2.addTerm(i3);
  if (!jl(e5) && 0 !== u2.im)
    return e5._NAN;
  if (o2.eq(e5._DECIMAL_ONE) && Yl(a2) && (n2 = r2 * a2.toNumber(), a2 = e5._DECIMAL_ONE), !Rl(e5) && l2.eq(e5._DECIMAL_ONE) && a2.eq(e5._DECIMAL_ONE) && o2.eq(e5._DECIMAL_ONE)) {
    let t3, a3 = s2;
    if ("N" === i2 ? a3 = a3 * n2 / r2 : c2.addTerm(e5.number([n2, r2])), t3 = 1 !== u2.re || 0 !== u2.im ? e5.number(u2.mul(a3)) : e5.number(a3), c2.isEmpty)
      return t3;
    c2.addTerm(t3);
  } else {
    let t3 = l2.mul(s2);
    if ("N" === i2 ? (t3 = t3.mul(n2).div(r2), t3 = t3.mul(a2).div(o2)) : 1 === r2 ? o2.eq(1) ? t3 = t3.mul(a2).mul(n2) : c2.addTerm(e5.box(["Rational", e5.number(a2.mul(n2)), e5.number(o2)])) : (c2.addTerm(e5.number([n2, r2])), c2.addTerm(e5.box(["Rational", e5.number(a2), e5.number(o2)]).canonical)), 1 !== u2.re || 0 !== u2.im)
      if (Yl(t3)) {
        const i3 = e5.number(e5.complex(u2.mul(t3.toNumber())));
        if (c2.isEmpty)
          return i3;
        c2.addTerm(i3);
      } else {
        if (c2.isEmpty)
          return e5._fn("Multiply", [e5.number(u2), e5.number(t3)]);
        c2.addTerm(e5.number(u2)), c2.addTerm(e5.number(t3));
      }
    else {
      if (c2.isEmpty)
        return e5.number(t3);
      c2.addTerm(e5.number(t3));
    }
  }
  return c2.asExpression();
}
function sc(e5, t2, i2) {
  const n2 = e5.engine;
  if (e5.isLiteral && t2.isLiteral && e5.isInteger && t2.isInteger) {
    if (e5.decimalValue && t2.decimalValue)
      return n2.number(e5.decimalValue.mul(t2.decimalValue));
    if (e5.machineValue && t2.machineValue)
      return n2.number(e5.machineValue * t2.machineValue);
  }
  if (e5.isNothing)
    return t2;
  if (t2.isNothing)
    return e5;
  if (e5.isLiteral && e5.isOne)
    return t2;
  if (t2.isLiteral && t2.isOne)
    return e5;
  if (e5.isLiteral && e5.isNegativeOne)
    return Uu(t2);
  if (t2.isLiteral && t2.isNegativeOne)
    return Uu(e5);
  let r2 = 1, a2 = e5, o2 = t2;
  if (a2.isLiteral && null !== a2.asRational || (o2 = t2, a2 = e5), "Negate" === o2.head && (o2 = o2.op1, r2 = -r2), a2.isLiteral) {
    const [e6, t3] = a2.asRational;
    if (null !== e6 && null !== t3) {
      if (e6 === t3)
        return o2;
      if (0 === e6)
        return n2._ZERO;
      if ("Add" === o2.head)
        return r2 < 0 && (a2 = Uu(a2)), n2.add(o2.ops.map((e7) => sc(a2, e7)), i2);
      if (o2.isLiteral) {
        const [a3, s3] = o2.asRational;
        if (null !== a3 && null !== s3)
          return n2.number(Dl([r2 * e6 * a3, s3 * t3]), i2);
      }
      return r2 < 0 ? n2._fn("Multiply", [Uu(a2), o2], i2) : n2._fn("Multiply", [a2, o2], i2);
    }
  }
  if (a2.hash === o2.hash && a2.isSame(o2))
    return nc(n2, a2);
  const s2 = new su(n2, [a2, o2]);
  return r2 > 0 ? s2.asExpression() : Uu(s2.asExpression(), i2);
}
function lc(e5, t2, i2, n2) {
  var r2, a2, o2;
  if ("Lambda" !== t2.head)
    return;
  const s2 = t2.op1;
  let l2 = 1, u2 = 1e6;
  if ("Tuple" !== i2.head && "Triple" !== i2.head && "Pair" !== i2.head && "Single" !== i2.head || (l2 = null !== (r2 = i2.op2.asSmallInteger) && void 0 !== r2 ? r2 : 1, u2 = null !== (a2 = i2.op3.asSmallInteger) && void 0 !== a2 ? a2 : 1e6), l2 >= u2 || u2 - l2 >= 200)
    return;
  if ("evaluate" === n2 || "simplify" === n2) {
    const t3 = [];
    for (let i3 = l2; i3 <= u2; i3++) {
      const n3 = e5.number(i3);
      t3.push(s2.subs({ _1: n3, _: n3 }));
    }
    return "simplify" === n2 ? e5.mul(t3).simplify() : e5.mul(t3).evaluate();
  }
  if (Rl(e5)) {
    let t3 = e5.decimal(1);
    for (let i3 = l2; i3 <= u2; i3++) {
      const n3 = e5.number(i3), r3 = s2.subs({ _1: n3, _: n3 }).evaluate(), a3 = null !== (o2 = r3.decimalValue) && void 0 !== o2 ? o2 : r3.asFloat;
      if (!a3)
        return;
      t3 = t3.mul(a3);
    }
  }
  let c2 = 1;
  for (let t3 = l2; t3 <= u2; t3++) {
    const i3 = e5.number(t3), n3 = s2.subs({ _1: i3, _: i3 }).evaluate();
    if (!n3.asFloat)
      return;
    c2 *= n3.asFloat;
  }
  return e5.number(c2);
}
function uc(e5, t2, i2) {
  if (t2.isLiteral && i2.isLiteral) {
    if (t2.isOne)
      return e5.inverse(i2);
    if (t2.isNegativeOne)
      return Uu(e5.inverse(i2));
    if (i2.isOne)
      return t2;
    if (i2.isNegativeOne)
      return Uu(t2);
    const [n3, r3] = [t2.asSmallInteger, i2.asSmallInteger];
    if (null !== n3 && null !== r3 && 0 !== r3)
      return e5.number([n3, r3]);
    if (t2.isInteger && i2.isInteger) {
      let [n4, r4] = ou(t2), [a3, o3] = ou(i2);
      return o3.isOne ? n4 * a3 < 0 ? Uu(r4) : r4 : n4 * a3 > 0 ? e5._fn("Rational", [r4, o3]) : e5._fn("Rational", [e5.negate(r4), o3]);
    }
  }
  if (!("Divide" !== t2.head && "Rational" !== t2.head || "Divide" !== i2.head && "Rational" !== i2.head))
    return uc(e5, e5.mul([t2.op1, i2.op2]), e5.mul([t2.op2, i2.op1]));
  if (t2.isLiteral) {
    const [n3, r3] = t2.rationalValue;
    if (null !== n3 && null !== r3)
      return uc(e5, e5.mul([e5.number(n3), i2]), e5.number(r3));
  }
  if (i2.isLiteral) {
    const [n3, r3] = i2.rationalValue;
    if (null !== n3 && null !== r3)
      return uc(e5, e5.mul([t2, e5.number(r3)]), e5.number(n3));
  }
  if ("Divide" === t2.head || "Rational" === t2.head)
    return uc(e5, e5.mul([t2.op1, i2]), t2.op2);
  if ("Divide" === i2.head || "Rational" === i2.head)
    return uc(e5, e5.mul([t2, i2.op2]), i2.op1);
  let [n2, r2] = ou(t2), [a2, o2] = ou(i2);
  return r2 = r2.canonical, o2 = o2.canonical, o2.isLiteral && o2.isOne ? n2 * a2 < 0 ? Uu(r2) : r2 : (o2 = e5.inverse(o2), r2.isOne ? o2 : r2.isNegativeOne ? Uu(o2) : n2 * a2 > 0 ? e5.mul([r2, o2]) : Uu(e5.mul([r2, o2])));
}
function cc(e5, t2, i2) {
  var n2, r2;
  if (t2.isLiteral && i2.isLiteral) {
    const [a2, o2] = [t2.asSmallInteger, i2.asSmallInteger];
    if (null !== a2 && null !== o2 && 0 !== o2)
      return e5.number(Dl([a2, o2]));
    if (t2.isInteger && i2.isInteger) {
      let [a3, o3] = [null !== (n2 = t2.decimalValue) && void 0 !== n2 ? n2 : t2.machineValue ? e5.decimal(t2.machineValue) : null, null !== (r2 = i2.decimalValue) && void 0 !== r2 ? r2 : i2.machineValue ? e5.decimal(i2.machineValue) : null];
      if (null !== a3 && null !== o3)
        return [a3, o3] = Gl([a3, o3]), o3.eq(1) ? e5.number(a3) : Yl(a3) && Yl(o3) ? e5.number([a3.toNumber(), o3.toNumber()]) : e5._fn("Rational", [e5.number(a3), e5.number(o3)]);
    }
  }
}
var dc = [{ functions: [{ name: "Abs", wikidata: "Q3317982", threadable: true, idempotent: true, complexity: 1200, signature: { domain: ["Function", "ExtendedRealNumber", "NonNegativeNumber"], simplify: (e5, t2) => hc(e5, t2[0], "simplify"), evaluate: (e5, t2) => hc(e5, t2[0], "evaluate"), N: (e5, t2) => hc(e5, t2[0], "N") } }, { name: "Add", wikidata: "Q32043", associative: true, commutative: true, threadable: true, idempotent: true, complexity: 1300, signature: { domain: "NumericFunction", codomain: (e5, t2) => function(e6, t3) {
  let i2 = null;
  for (const e7 of t3) {
    if (!e7.isNumeric)
      return null;
    i2 = i2 ? _u(i2, e7) : e7;
  }
  return i2;
}(0, t2), canonical: (e5, t2) => Qu(e5, t2), simplify: (e5, t2) => function(e6, t3) {
  const i2 = new Yu(e6);
  for (const n2 of t3) {
    if (n2.isImaginary && n2.isInfinity)
      return e6.symbol("ComplexInfinity");
    if (n2.isNaN || "Undefined" === n2.symbol)
      return e6._NAN;
    n2.isZero || i2.addTerm(n2);
  }
  return i2.asExpression();
}(e5, t2), evaluate: (e5, t2) => ec(e5, t2), N: (e5, t2) => ec(e5, t2, "N") } }, { name: "Ceil", description: "Rounds a number up to the next largest integer", complexity: 1250, signature: { domain: ["Function", "Number", "Integer"], evaluate: (e5, t2) => {
  const i2 = t2[0];
  return i2.decimalValue ? e5.number(i2.decimalValue.ceil()) : i2.complexValue ? e5.number(i2.complexValue.ceil(0)) : null !== i2.asFloat ? e5.number(Math.ceil(i2.asFloat)) : void 0;
} } }, { name: "Chop", associative: true, threadable: true, idempotent: true, complexity: 1200, signature: { domain: ["Function", "Number", "Number"], evaluate: (e5, t2) => {
  const i2 = t2[0];
  return i2.decimalValue ? e5.number(e5.chop(i2.decimalValue)) : i2.complexValue ? e5.number(e5.chop(i2.complexValue)) : null !== i2.asFloat ? e5.number(e5.chop(i2.asFloat)) : void 0;
} } }, { name: "Complex", wikidata: "Q11567", complexity: 500 }, { name: "Divide", wikidata: "Q1226939", complexity: 2500, signature: { domain: ["Function", "Number", "Number", "Number"], canonical: (e5, t2) => uc(e5, t2[0], t2[1]), simplify: (e5, t2) => cc(e5, t2[0], t2[1]) } }, { name: "Exp", wikidata: "Q168698", threadable: true, complexity: 3500, signature: { domain: ["Function", "Number", "Number"], canonical: (e5, t2) => e5.power(e5.symbol("ExponentialE"), t2[0]) } }, { name: "Erf", description: "Complementary Error Function", complexity: 7500 }, { name: "Erfc", description: "Complementary Error Function", complexity: 7500 }, { name: "Factorial", description: "The factorial function", wikidata: "Q120976", complexity: 9e3, signature: { domain: ["Function", "Number", "Number"], evaluate: (e5, t2) => {
  const i2 = t2[0].asSmallInteger;
  return null !== i2 && i2 >= 0 ? Rl(e5) ? e5.number(Ul(e5, e5.decimal(i2))) : e5.number(function(e6) {
    if (!Number.isInteger(e6) || e6 < 0)
      return NaN;
    let t3 = 1;
    for (let i3 = 2; i3 <= e6; i3++)
      t3 *= i3;
    return t3;
  }(i2)) : t2[0].complexValue ? e5.number(t2[0].complexValue.add(1)) : null !== t2[0].asFloat ? e5.number(Il(1 + t2[0].asFloat)) : void 0;
} } }, { name: "Floor", wikidata: "Q56860783", complexity: 1250, signature: { domain: ["Function", "ExtendedRealNumber", "ExtendedRealNumber"], evaluate: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.floor()) : t2[0].complexValue ? e5.number(t2[0].complexValue.floor(0)) : null !== t2[0].asFloat ? e5.number(Math.floor(t2[0].asFloat)) : void 0 } }, { name: "Gamma", wikidata: "Q190573", complexity: 8e3, signature: { domain: ["Function", "Number", "Number", "Number"], N: (e5, t2) => t2[0].decimalValue ? e5.number(Xl(e5, t2[0].decimalValue)) : t2[0].complexValue ? e5.number(t2[0].complexValue) : null !== t2[0].asFloat ? e5.number(Il(t2[0].asFloat)) : void 0 } }, { name: "LogGamma", complexity: 8e3, signature: { domain: ["Function", "Number", "Number", "Number"], N: (e5, t2) => t2[0].decimalValue ? e5.number(Jl(e5, t2[0].decimalValue)) : t2[0].complexValue ? e5.number(t2[0].complexValue) : null !== t2[0].asFloat ? e5.number(ql(t2[0].asFloat)) : void 0 } }, { name: "Ln", description: "Natural Logarithm", wikidata: "Q204037", complexity: 4e3, signature: { domain: ["Function", "Number", "Number", "Number"], N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.log()) : t2[0].complexValue ? e5.number(t2[0].complexValue.log()) : null !== t2[0].asFloat ? e5.number(Math.log(t2[0].asFloat)) : void 0 } }, { name: "Log", description: "Log(z, b = 10) = Logarithm of base b", wikidata: "Q11197", complexity: 4100, signature: { domain: ["Function", "Number", "Number", "Number"], N: (e5, t2) => {
  var i2, n2, r2, a2, o2, s2, l2, u2;
  const c2 = t2[0], d2 = null !== (i2 = t2[1]) && void 0 !== i2 ? i2 : e5.number(10);
  if (c2.decimalValue) {
    const t3 = null !== (r2 = null === (n2 = d2.decimalValue) || void 0 === n2 ? void 0 : n2.log()) && void 0 !== r2 ? r2 : e5.decimal(null !== (a2 = d2.asFloat) && void 0 !== a2 ? a2 : NaN).log();
    return e5.number(c2.decimalValue.log().div(t3));
  }
  if (c2.complexValue) {
    const t3 = null !== (s2 = null === (o2 = d2.complexValue) || void 0 === o2 ? void 0 : o2.log()) && void 0 !== s2 ? s2 : e5.complex(null !== (l2 = d2.asFloat) && void 0 !== l2 ? l2 : NaN).log();
    return e5.number(c2.complexValue.log().div(t3));
  }
  if (null !== c2.asFloat)
    return e5.number(Math.log(c2.asFloat) / Math.log(null !== (u2 = d2.asFloat) && void 0 !== u2 ? u2 : NaN));
} } }, { name: "Lb", description: "Base-2 Logarithm", wikidata: "Q581168", complexity: 4100, signature: { domain: ["Function", "Number", "Number"], N: (e5, t2) => {
  const i2 = t2[0];
  return i2.decimalValue ? e5.number(i2.decimalValue.log().div(e5._DECIMAL_TWO)) : i2.complexValue ? e5.number(i2.complexValue.log().div(e5.complex(2))) : null !== i2.asFloat ? e5.number(Math.log2(i2.asFloat)) : void 0;
} } }, { name: "Lg", description: "Base-10 Logarithm", wikidata: "Q966582", complexity: 4100, signature: { domain: ["Function", "Number", "Number"], N: (e5, t2) => {
  const i2 = t2[0];
  return i2.decimalValue ? e5.number(i2.decimalValue.log().div(e5.decimal(10))) : i2.complexValue ? e5.number(i2.complexValue.log().div(e5.complex(10))) : null !== i2.asFloat ? e5.number(Math.log10(i2.asFloat)) : void 0;
} } }, { name: "Max", description: "Maximum of two or more numbers", complexity: 1200, signature: { domain: ["Function", ["Sequence", "Number"], "Number"], simplify: (e5, t2) => 0 === t2.length ? e5._NEGATIVE_INFINITY : 1 === t2.length ? t2[0] : e5.box(["Max", ...t2]), evaluate: (e5, t2) => {
  if (0 === t2.length)
    return e5._NEGATIVE_INFINITY;
  let i2;
  const n2 = [];
  for (const e6 of t2)
    e6.isNumber && void 0 !== e6.value ? i2 && !e6.isGreater(i2) || (i2 = e6) : n2.push(e6);
  return n2.length > 0 ? e5.box(i2 ? ["Max", i2, ...n2] : ["Max", ...n2]) : null != i2 ? i2 : e5._NAN;
} } }, { name: "Min", description: "Minimum of two or more numbers", complexity: 1200, signature: { domain: ["Function", ["Sequence", "Number"], "Number"], simplify: (e5, t2) => 0 === t2.length ? e5._NEGATIVE_INFINITY : 1 === t2.length ? t2[0] : e5.box(["Min", ...t2]), evaluate: (e5, t2) => {
  if (0 === t2.length)
    return e5._NEGATIVE_INFINITY;
  let i2;
  const n2 = [];
  for (const e6 of t2)
    e6.isNumber && void 0 !== e6.value ? i2 && !e6.isLess(i2) || (i2 = e6) : n2.push(e6);
  return n2.length > 0 ? e5.box(i2 ? ["Min", i2, ...n2] : ["Min", ...n2]) : null != i2 ? i2 : e5._NAN;
} } }, { name: "Multiply", wikidata: "Q40276", associative: true, commutative: true, idempotent: true, complexity: 2100, signature: { domain: "NumericFunction", canonical: (e5, t2) => ac(e5, t2), simplify: (e5, t2) => function(e6, t3) {
  const i2 = new su(e6);
  for (const n2 of t3) {
    if (n2.isNaN || "Undefined" === n2.symbol)
      return e6._NAN;
    i2.addTerm(n2);
  }
  return i2.asExpression();
}(e5, t2), evaluate: (e5, t2) => oc(e5, t2), N: (e5, t2) => oc(e5, t2, "N") } }, { name: "Negate", description: "Additive Inverse", wikidata: "Q715358", complexity: 2e3, signature: { domain: ["Function", "Number", "Number"], codomain: (e5, t2) => {
  if (!t2[0].literal)
    return t2[0];
  const i2 = { PositiveNumber: "NegativeNumber", NonNegativeNumber: "NonPositiveNumber", NonPositiveNumber: "NonNegativeNumber", NegativeNumber: "PositiveNumber", PositiveInteger: "NegativeInteger", NonNegativeInteger: "NonPositiveInteger", NonPositiveInteger: "NonNegativeInteger", NegativeInteger: "PositiveInteger" }[t2[0].literal];
  return i2 ? e5.domain(i2) : t2[0];
}, canonical: (e5, t2) => Uu(t2[0]), simplify: (e5, t2) => Xu(0, t2[0], "simplify"), evaluate: (e5, t2) => Xu(0, t2[0], "evaluate"), N: (e5, t2) => Xu(0, t2[0], "N"), sgn: (e5, t2) => {
  const i2 = t2[0];
  return i2.isZero ? 0 : i2.isPositive ? -1 : i2.isNegative ? 1 : void 0;
} } }, { name: "Power", wikidata: "Q33456", commutative: false, complexity: 3500, signature: { domain: ["Function", "Number", "Number", "Number"], canonical: (e5, t2) => {
  var i2;
  return null !== (i2 = ic(e5, t2[0], t2[1])) && void 0 !== i2 ? i2 : e5._fn("Power", t2);
}, simplify: (e5, t2) => rc(e5, t2[0], t2[1], "simplify"), evaluate: (e5, t2) => rc(e5, t2[0], t2[1], "evaluate"), N: (e5, t2) => rc(e5, t2[0], t2[1], "N") } }, { name: "Product", wikidata: "Q901718", complexity: 1e3, hold: "first", signature: { domain: ["Function", "Anything", "Tuple", "Number"], canonical: (e5, t2) => function(e6, t3, i2) {
  var n2, r2, a2, o2, s2, l2;
  let u2, c2 = null, d2 = null, h2 = null;
  return i2 && "Tuple" !== i2.head && "Triple" !== i2.head && "Pair" !== i2.head && "Single" !== i2.head ? c2 = i2 : i2 && (c2 = null !== (r2 = null === (n2 = i2.ops) || void 0 === n2 ? void 0 : n2[0]) && void 0 !== r2 ? r2 : null, d2 = null !== (o2 = null === (a2 = i2.ops) || void 0 === a2 ? void 0 : a2[1]) && void 0 !== o2 ? o2 : null, h2 = null !== (l2 = null === (s2 = i2.ops) || void 0 === s2 ? void 0 : s2[2]) && void 0 !== l2 ? l2 : null), u2 = null !== c2 && c2.symbol ? "Lambda" === t3.head ? t3.op1 : t3.subs({ [c2.symbol]: "_" }) : "Lambda" === t3.head ? t3.op1 : t3, null != c2 || (c2 = e6.symbol("Nothing")), i2 = h2 ? e6.tuple([c2, null != d2 ? d2 : e6.symbol("Nothing"), h2]) : d2 && h2 ? e6.tuple([c2, d2, h2]) : d2 ? e6.tuple([c2, d2]) : c2, e6._fn("Product", [e6._fn("Lambda", [u2]), i2]);
}(e5, t2[0], t2[1]), simplify: (e5, t2) => lc(e5, t2[0], t2[1], "simplify"), evaluate: (e5, t2) => lc(e5, t2[0], t2[1], "evaluate"), N: (e5, t2) => lc(e5, t2[0], t2[1], "N") } }, { name: "Rational", complexity: 2400, signature: { domain: ["Function", "RealNumber", ["Maybe", "Integer"], "RationalNumber"], canonical: (e5, t2) => 2 === t2.length ? uc(e5, t2[0], t2[1]) : e5._fn("Rational", t2), simplify: (e5, t2) => {
  if (2 === t2.length)
    return cc(e5, t2[0], t2[1]);
}, evaluate: (e5, t2) => {
  var i2, n2, r2;
  if (2 === t2.length) {
    const [i3, n3] = [t2[0].asSmallInteger, t2[1].asSmallInteger];
    return null !== i3 && null !== n3 ? e5.number([i3, n3]) : void 0;
  }
  const a2 = null !== (r2 = null !== (i2 = t2[0].asFloat) && void 0 !== i2 ? i2 : null === (n2 = t2[0].decimalValue) || void 0 === n2 ? void 0 : n2.toNumber()) && void 0 !== r2 ? r2 : null;
  if (null === a2)
    return t2[0];
  const o2 = function(e6) {
    if (!Number.isFinite(e6))
      return e6;
    if (0 == e6 % 1)
      return e6;
    let t3 = Math.floor(e6), i3 = 1, n3 = 0, r3 = t3, a3 = 1;
    for (; e6 - t3 > 1e-15 * a3 * a3; ) {
      t3 = Math.floor(e6 = 1 / (e6 - t3));
      const o3 = i3;
      i3 = r3;
      const s2 = n3;
      n3 = a3, r3 = o3 + t3 * i3, a3 = s2 + t3 * n3;
    }
    return [r3, a3];
  }(a2);
  return "number" == typeof o2 ? e5.number(o2) : e5.number([o2[0], o2[1]]);
}, N: (e5, t2) => {
  var i2, n2;
  if (2 === t2.length) {
    const [r2, a2] = [t2[0].machineValue, t2[1].machineValue];
    if (null !== r2 && null !== a2)
      return e5.number(r2 / a2);
    const [o2, s2] = [null !== (i2 = t2[0].decimalValue) && void 0 !== i2 ? i2 : t2[0].asFloat ? e5.decimal(t2[0].asFloat) : null, null !== (n2 = t2[1].decimalValue) && void 0 !== n2 ? n2 : t2[1].asFloat ? e5.decimal(t2[1].asFloat) : null];
    if (null !== o2 && null !== s2)
      return e5.number(o2.div(s2));
  }
} } }, { name: "Root", complexity: 3200, signature: { domain: ["Function", "Number", "RationalNumber", "Number"], canonical: (e5, t2) => {
  var i2;
  const n2 = e5.inverse(t2[1]);
  return null !== (i2 = ic(e5, t2[0], n2)) && void 0 !== i2 ? i2 : e5._fn("Power", [t2[0], n2]);
}, N: (e5, t2) => {
  var i2, n2, r2;
  const a2 = t2[0], o2 = t2[1];
  if (a2.decimalValue)
    return e5.number(a2.decimalValue.pow(e5._DECIMAL_ONE.div(null !== (i2 = o2.asFloat) && void 0 !== i2 ? i2 : NaN)));
  if (a2.complexValue) {
    const t3 = o2.complexValue ? Qo.exports.Complex.ONE.div(o2.complexValue) : e5.complex(1 / (null !== (n2 = o2.asFloat) && void 0 !== n2 ? n2 : NaN));
    return e5.number(a2.complexValue.pow(t3));
  }
  return null !== a2.asFloat ? e5.number(Math.pow(a2.asFloat, null !== (r2 = o2.asFloat) && void 0 !== r2 ? r2 : NaN)) : void 0;
} } }, { name: "Round", complexity: 1250, signature: { domain: ["Function", "Number", "Number"], evaluate: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.round()) : t2[0].complexValue ? e5.number(t2[0].complexValue.round(0)) : null !== t2[0].asFloat ? e5.number(Math.round(t2[0].asFloat)) : void 0 } }, { name: "Sign", complexity: 1200, signature: { domain: ["Function", "Number", ["Range", -1, 1]], simplify: (e5, t2) => {
  const i2 = t2[0].sgn;
  return 0 === i2 ? e5._ZERO : 1 === i2 ? e5._ONE : -1 === i2 ? e5._NEGATIVE_ONE : void 0;
}, evaluate: (e5, t2) => {
  const i2 = t2[0].sgn;
  return 0 === i2 ? e5._ZERO : 1 === i2 ? e5._ONE : -1 === i2 ? e5._NEGATIVE_ONE : void 0;
}, N: (e5, t2) => {
  const i2 = t2[0].sgn;
  return 0 === i2 ? e5._ZERO : 1 === i2 ? e5._ONE : -1 === i2 ? e5._NEGATIVE_ONE : void 0;
} } }, { name: "SignGamma", description: "The sign of the gamma function: -1 or +1", complexity: 7900 }, { name: "Sqrt", description: "Square Root", wikidata: "Q134237", complexity: 3e3, signature: { domain: ["Function", "Number", "Number"], canonical: (e5, t2) => {
  var i2;
  return null !== (i2 = ic(e5, t2[0], e5._HALF)) && void 0 !== i2 ? i2 : e5._fn("Power", [t2[0], e5._HALF]);
}, simplify: (e5, t2) => mc(e5, t2[0], "simplify"), evaluate: (e5, t2) => mc(e5, t2[0], "evaluate"), N: (e5, t2) => mc(e5, t2[0], "N") } }, { name: "Square", wikidata: "Q3075175", complexity: 3100, signature: { domain: ["Function", "Number", "Number"], canonical: (e5, t2) => {
  var i2;
  return null !== (i2 = ic(e5, t2[0], e5._TWO)) && void 0 !== i2 ? i2 : e5._fn("Power", [t2[0], e5._TWO]);
}, evaluate: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.mul(t2[0].decimalValue)) : t2[0].complexValue ? e5.number(t2[0].complexValue.mul(t2[0].complexValue)) : null !== t2[0].asFloat ? e5.number(t2[0].asFloat * t2[0].asFloat) : void 0 } }, { name: "Subscript", hold: "last", signature: { domain: ["Function", "Anything", "Anything", "Anything"], codomain: (e5, t2) => (t2[0].isFunction, t2[0]), canonical: (e5, t2) => {
  var i2, n2;
  const r2 = t2[0], a2 = t2[1];
  if (r2.string && a2.isLiteral && null !== a2.asSmallInteger) {
    const t3 = a2.asSmallInteger;
    if (t3 > 1 && t3 <= 36) {
      const [i3, n3] = Fl(r2.string, t3);
      return n3 ? e5.error(["unexpected-digit", n3[0]], ["Latex", e5.string(r2.string)]) : e5.number(i3);
    }
  }
  if (r2.symbol) {
    if (null === (i2 = r2.symbolDefinition) || void 0 === i2 ? void 0 : i2.at)
      return e5._fn("At", [r2, a2]);
    let t3 = null !== (n2 = a2.string) && void 0 !== n2 ? n2 : a2.symbol;
    if (t3 || null !== a2.asSmallInteger && (t3 = a2.asSmallInteger.toString()), t3)
      return e5.symbol(r2.symbol + "_" + t3);
  }
  return e5._fn("Subscript", t2);
} } }, { name: "Subtract", wikidata: "Q40754", complexity: 1350, signature: { domain: ["Function", "Number", ["Maybe", "Number"], "Number"], canonical: (e5, t2) => 1 === t2.length ? Uu(t2[0]) : Qu(e5, [t2[0], Uu(t2[1])]), evaluate: (e5, t2) => {
  var i2, n2, r2, a2, o2, s2;
  const l2 = t2[0], u2 = t2[1];
  return l2.complexValue || u2.complexValue ? e5.number(e5.complex(null !== (i2 = l2.complexValue) && void 0 !== i2 ? i2 : l2.asFloat).sub(null !== (n2 = u2.complexValue) && void 0 !== n2 ? n2 : u2.asFloat)) : l2.decimalValue || u2.decimalValue ? e5.number(e5.decimal(null !== (a2 = null !== (r2 = l2.decimalValue) && void 0 !== r2 ? r2 : l2.asFloat) && void 0 !== a2 ? a2 : NaN).sub(null !== (s2 = null !== (o2 = u2.decimalValue) && void 0 !== o2 ? o2 : u2.asFloat) && void 0 !== s2 ? s2 : NaN)) : null !== l2.asFloat && null !== u2.asFloat ? e5.number(l2.asFloat - u2.asFloat) : void 0;
} } }, { name: "Sum", wikidata: "Q218005", complexity: 1e3, hold: "first", signature: { domain: ["Function", "Anything", "Tuple", "Number"], canonical: (e5, t2) => function(e6, t3, i2) {
  var n2, r2, a2, o2, s2, l2;
  let u2, c2 = null, d2 = null, h2 = null;
  return i2 && "Tuple" !== i2.head && "Triple" !== i2.head && "Pair" !== i2.head && "Single" !== i2.head ? c2 = i2 : i2 && (c2 = null !== (r2 = null === (n2 = i2.ops) || void 0 === n2 ? void 0 : n2[0]) && void 0 !== r2 ? r2 : null, d2 = null !== (o2 = null === (a2 = i2.ops) || void 0 === a2 ? void 0 : a2[1]) && void 0 !== o2 ? o2 : null, h2 = null !== (l2 = null === (s2 = i2.ops) || void 0 === s2 ? void 0 : s2[2]) && void 0 !== l2 ? l2 : null), u2 = null !== c2 && c2.symbol ? "Lambda" === t3.head ? t3.op1 : t3.subs({ [c2.symbol]: "_" }) : "Lambda" === t3.head ? t3.op1 : t3, null != c2 || (c2 = e6.symbol("Nothing")), i2 = h2 ? e6.tuple([c2, null != d2 ? d2 : e6.symbol("Nothing"), h2]) : d2 && h2 ? e6.tuple([c2, d2, h2]) : d2 ? e6.tuple([c2, d2]) : c2, e6._fn("Sum", [e6._fn("Lambda", [u2]), i2]);
}(e5, t2[0], t2[1]), simplify: (e5, t2) => tc(e5, t2[0], t2[1], "simplify"), evaluate: (e5, t2) => tc(e5, t2[0], t2[1], "evaluate"), N: (e5, t2) => tc(e5, t2[0], t2[1], "N") } }] }, { symbols: [{ name: "MachineEpsilon", domain: "RealNumber", constant: true, real: true, value: { num: Number.EPSILON.toString() } }, { name: "Half", constant: true, hold: false, value: ["Rational", 1, 2] }, { name: "ImaginaryUnit", domain: "ImaginaryNumber", constant: true, hold: true, wikidata: "Q193796", imaginary: true, value: ["Complex", 0, 1] }, { name: "ExponentialE", domain: "TranscendentalNumber", algebraic: false, wikidata: "Q82435", constant: true, hold: true, real: true, value: (e5) => Rl(e5) ? e5._DECIMAL_ONE.exp() : Math.exp(1) }, { name: "GoldenRatio", domain: "AlgebraicNumber", wikidata: "Q41690", constant: true, algebraic: true, hold: false, value: ["Divide", ["Add", 1, ["Sqrt", 5]], 2] }, { name: "CatalanConstant", domain: "RealNumber", algebraic: void 0, wikidata: "Q855282", constant: true, value: { num: "0.91596559417721901505460351493238411077414937428167\n                  21342664981196217630197762547694793565129261151062\n                  48574422619196199579035898803325859059431594737481\n                  15840699533202877331946051903872747816408786590902\n                  47064841521630002287276409423882599577415088163974\n                  70252482011560707644883807873370489900864775113225\n                  99713434074854075532307685653357680958352602193823\n                  23950800720680355761048235733942319149829836189977\n                  06903640418086217941101917532743149978233976105512\n                  24779530324875371878665828082360570225594194818097\n                  53509711315712615804242723636439850017382875977976\n                  53068370092980873887495610893659771940968726844441\n                  66804621624339864838916280448281506273022742073884\n                  31172218272190472255870531908685735423498539498309\n                  91911596738846450861515249962423704374517773723517\n                  75440708538464401321748392999947572446199754961975\n                  87064007474870701490937678873045869979860644874974\n                  64387206238513712392736304998503539223928787979063\n                  36440323547845358519277777872709060830319943013323\n                  16712476158709792455479119092126201854803963934243\n                  " } }, { name: "EulerGamma", domain: "RealNumber", algebraic: void 0, wikidata: "Q273023", constant: true, value: { num: "0.57721566490153286060651209008240243104215933593992359880576723488486772677766\n          467093694706329174674951463144724980708248096050401448654283622417399764492353\n          625350033374293733773767394279259525824709491600873520394816567085323315177661\n          152862119950150798479374508570574002992135478614669402960432542151905877553526\n          733139925401296742051375413954911168510280798423487758720503843109399736137255\n          306088933126760017247953783675927135157722610273492913940798430103417771778088\n          154957066107501016191663340152278935867965497252036212879226555953669628176388\n          792726801324310104765059637039473949576389065729679296010090151251959509222435\n          014093498712282479497471956469763185066761290638110518241974448678363808617494\n          551698927923018773910729457815543160050021828440960537724342032854783670151773\n          943987003023703395183286900015581939880427074115422278197165230110735658339673" } }] }, { functions: [{ name: "PreIncrement", signature: { domain: ["Function", "Number", "Number"] } }, { name: "PreDecrement", signature: { domain: ["Function", "Number", "Number"] } }] }];
function hc(e5, t2, i2) {
  if ("simplify" !== i2 || t2.isLiteral) {
    if (null !== t2.machineValue)
      return e5.number(Math.abs(t2.machineValue));
    if (t2.decimalValue)
      return e5.number(t2.decimalValue.abs());
    if (t2.complexValue)
      return e5.number(t2.complexValue.abs());
    const [n2, r2] = t2.rationalValue;
    if (null === n2 || null === r2)
      return;
    return e5.number("N" === i2 ? Math.abs(n2 / r2) : [Math.abs(n2), r2]);
  }
  return t2.isNonNegative ? t2 : t2.isNegative ? e5.negate(t2) : void 0;
}
function mc(e5, t2, i2) {
  if (t2.isOne)
    return e5._ONE;
  if (t2.isZero)
    return e5._ZERO;
  if ("N" === i2 || "evaluate" === i2 && !t2.isInteger)
    return t2.complexValue ? e5.number(t2.complexValue.sqrt()) : t2.isNonNegative ? t2.decimalValue ? e5.number(t2.decimalValue.sqrt()) : null !== t2.asFloat ? e5.number(Math.sqrt(t2.asFloat)) : void 0 : jl(e5) ? e5.number(e5.complex(t2.asFloat).sqrt()) : e5._NAN;
  if (null !== t2.asSmallInteger) {
    const [i3, n2] = Cl(t2.asSmallInteger, 2);
    if (1 === n2)
      return e5.number(i3);
    if (1 !== i3)
      return this._fn("Multiply", [i3, e5._fn("Sqrt", [e5.box(n2).canonical])]);
  }
}
var pc = [{ symbols: [{ name: "Nothing", domain: "Nothing" }] }, { functions: [{ name: "KeyValuePair", description: "A key/value pair", complexity: 8200, signature: { domain: ["Function", "String", "Anything", ["Tuple", "String", "Anything"]], codomain: (e5, t2) => e5.domain(["Tuple", "String", t2[1]]), canonical: (e5, t2) => e5.tuple(t2) } }, { name: "Single", description: "A tuple with a single element", complexity: 8200, signature: { domain: ["Function", "Anything", ["Tuple", "Anything"]], codomain: (e5, t2) => e5.domain(["Tuple", t2[0]]), canonical: (e5, t2) => e5.tuple(t2) } }, { name: "Pair", description: "A tuple of two elements", complexity: 8200, signature: { domain: ["Function", "Anything", "Anything", ["Tuple", "Anything", "Anything"]], codomain: (e5, t2) => e5.domain(["Tuple", t2[0], t2[1]]), canonical: (e5, t2) => e5.tuple(t2) } }, { name: "Triple", description: "A tuple of three elements", complexity: 8200, signature: { domain: ["Function", "Anything", "Anything", "Anything", ["Tuple", "Anything", "Anything", "Anything"]], codomain: (e5, t2) => e5.domain(["Tuple", t2[0], t2[1], t2[2]]), canonical: (e5, t2) => e5.tuple(t2) } }, { name: "Tuple", description: "A fixed number of heterogeneous elements", complexity: 8200, signature: { domain: ["Function", ["Sequence", "Anything"], ["Tuple", ["Sequence", "Anything"]]], codomain: (e5, t2) => e5.domain(["Tuple", ...t2]) } }] }, { functions: [{ name: "BaseForm", description: "`BaseForm(expr, base=10)`", complexity: 9e3, inert: true, signature: { domain: ["Function", "Value", ["Maybe", "Integer"], "Value"], codomain: (e5, t2) => t2[0] } }, { name: "Delimiter", complexity: 9e3, hold: "first", signature: { domain: ["Function", "Anything", ["Maybe", "String"], ["Maybe", "String"], "Anything"], codomain: (e5, t2) => t2[0], canonical: (e5, t2) => t2[0].canonical } }, { name: "Error", complexity: 500, inert: true, signature: { domain: ["Function", "Anything", ["Maybe", "Anything"], "Void"] } }, { name: "ErrorCode", complexity: 500, inert: true, signature: { domain: ["Function", "Anything", ["Maybe", ["Sequence", "Anything"]], "Anything"] } }, { name: "HorizontalSpacing", signature: { domain: "Function", canonical: (e5, t2) => 2 === t2.length ? t2[0].canonical : e5.box(["Sequence"]) } }, { name: "Style", complexity: 9e3, inert: true, signature: { domain: ["Function", "Anything", ["Maybe", "Dictionary"], "Anything"] } }] }, { functions: [{ name: "Apply", signature: { domain: "Function" } }, { name: "About", signature: { domain: "Function" } }, { name: "Block", signature: { domain: "Function" } }, { name: "Domain", signature: { domain: ["Function", "Anything", "Domain"], canonical: (e5, t2) => e5.domain(t2[0]) } }, { name: "Evaluate", hold: "all", signature: { domain: ["Function", "Anything", "Anything"], codomain: (e5, t2) => t2[0], evaluate: (e5, t2) => t2[0].evaluate() } }, { name: "FromDigits", description: "`FromDigits(s, base=10)`       return an integer representation of the string `s` in base `base`.", signature: { domain: ["Function", "String", ["Maybe", ["Range", 1, 36]], "Integer"], evaluate: (e5, t2) => {
  const i2 = t2[0];
  if (!i2.string)
    return e5.error(["incompatible-domain", "String", i2.domain.json], ["Latex", i2.latex]);
  const n2 = t2[1];
  if (n2.isNothing)
    return e5.number(Number.parseInt(i2.string, 10));
  if (null === n2.machineValue)
    return e5.error(["unexpected-base", n2.latex], ["Latex", n2.latex]);
  const r2 = n2.machineValue;
  if (r2 < 2 || r2 > 36)
    return e5.error(["unexpected-base", r2], ["Latex", n2.latex]);
  const [a2, o2] = Fl(i2.string, r2);
  return o2 ? e5.error(["unexpected-digit", o2[0]], ["Latex", o2]) : e5.number(a2);
} } }, { name: "Head", signature: { domain: "Function", evaluate: (e5, t2) => {
  const i2 = t2[0];
  return "string" == typeof i2.head ? e5.symbol(i2.head) : i2.head;
} } }, { name: "Html", signature: { domain: ["Function", "Value", "String"], evaluate: (e5, t2) => (t2.length, e5.string("")) } }, { name: "IntegerString", description: "`IntegerString(n, base=10)`       return a string representation of the integer `n` in base `base`.", signature: { domain: ["Function", "Integer", ["Maybe", "Integer"], "String"], evaluate: (e5, t2) => {
  var i2, n2, r2, a2;
  const o2 = t2[0], s2 = null !== (r2 = null !== (i2 = o2.machineValue) && void 0 !== i2 ? i2 : null === (n2 = o2.decimalValue) || void 0 === n2 ? void 0 : n2.toNumber()) && void 0 !== r2 ? r2 : NaN;
  if (Number.isNaN(s2) || !Number.isInteger(s2))
    return void e5.signal(e5._fn("IntegerString", t2), `Expected first argument as an integer. Got \\(${o2.latex}$\\)`);
  const l2 = t2[1];
  if (l2.isNothing)
    return o2.machineValue ? e5.string(Math.abs(o2.machineValue).toString()) : o2.decimalValue ? e5.string(o2.decimalValue.abs().toString()) : e5.string(Math.abs(Math.round(null !== (a2 = o2.asFloat) && void 0 !== a2 ? a2 : NaN)).toString());
  if (null === l2.asSmallInteger)
    return void e5.signal(e5._fn("IntegerString", t2), `Expected \`base\` as an integer between 2 and 36. Got \\(${l2.latex}$\\)`);
  const u2 = l2.asSmallInteger;
  if (!(u2 < 2 || u2 > 36))
    return e5.string(Math.abs(s2).toString(u2));
  e5.signal(e5._fn("IntegerString", t2), "Expected `base` as an integer between 2 and 36. Got " + u2);
} } }, { name: "Lambda", wikidata: "Q567612", hold: "all", signature: { domain: ["Function", "Anything", "Function"], canonical: (e5, t2) => e5._fn("Lambda", [t2[0].canonical]), evaluate: (e5, t2) => {
  var i2;
  return Fu(e5, t2[0], null !== (i2 = t2[1].ops) && void 0 !== i2 ? i2 : []).evaluate();
} } }, { name: "Latex", inert: true, signature: { domain: ["Function", "String", "String"] } }, { name: "LatexString", hold: "all", signature: { domain: ["Function", ["Sequence", "Anything"], "String"], evaluate: (e5, t2) => e5.string(as(t2.map((t3) => e5.serialize(t3)))) } }, { name: "LatexTokens", hold: "all", signature: { domain: ["Function", "Anything", ["List", "String"]], evaluate: (e5, t2) => {
  var i2;
  if (0 === t2.length)
    return e5._fn("List", []);
  let n2 = "";
  return n2 = "Latex" === t2[0].head ? null !== (i2 = t2[0].op1.string) && void 0 !== i2 ? i2 : "" : "LatexString" === t2[0].head ? t2[0].op1.latex : t2[0].latex, e5._fn("List", rs(n2, []).map((t3) => e5.string(t3)));
} } }, { name: "JoinLatexTokens", signature: { domain: ["Function", ["Sequence", "String"], "String"], evaluate: (e5, t2) => 0 === t2.length ? e5.string("") : e5.string(as(t2.map((e6) => {
  var t3;
  return null !== (t3 = e6.string) && void 0 !== t3 ? t3 : "";
}))) } }, { name: "FromLatex", signature: { domain: ["Function", "String", "Anything"], evaluate: (e5, t2) => {
  var i2;
  return 0 === t2.length ? e5.box(["Sequence"]) : e5.parse(null !== (i2 = t2[0].string) && void 0 !== i2 ? i2 : "");
} } }, { name: "Signatures", signature: { domain: ["Function", "Symbol", ["Maybe", ["List", "Domain"]]], evaluate: (e5, t2) => {
  const i2 = t2[0].symbol;
  if (!i2)
    return e5.symbol("Nothing");
  const n2 = e5.lookupFunction(i2);
  return n2 ? e5.fn("List", [n2.signature.domain]) : e5.symbol("Nothing");
} } }, { name: "String", threadable: true, signature: { domain: ["Function", ["Maybe", "Anything"], "String"], evaluate: (e5, t2) => 0 === t2.length ? e5.string("") : e5.string(t2.map((e6) => {
  var t3;
  return null !== (t3 = e6.string) && void 0 !== t3 ? t3 : `\\(${e6.latex}$\\)`;
}).join("")) } }, { name: "Symbol", complexity: 500, description: "Construct a new symbol with a name formed by concatenating the arguments", threadable: true, hold: "all", signature: { domain: ["Function", ["Sequence", "Anything"], "Symbol"], evaluate: (e5, t2) => {
  if (0 === t2.length)
    return e5.symbol("Nothing");
  const i2 = t2.map((e6) => {
    const t3 = e6.symbol;
    if (null !== t3)
      return t3;
    const n2 = i2.string;
    if (null !== n2)
      return n2;
    const r2 = i2.smallIntegerValue;
    return null !== r2 ? r2.toString() : "";
  }).join("");
  return i2.length > 0 ? e5.symbol(i2) : e5.symbol("Nothing");
} } }, { name: "SymbolName", signature: { domain: ["Function", "Anything", ["Maybe", "String"]], evaluate: (e5, t2) => t2[0].symbol ? e5.string(t2[0].symbol) : e5.symbol("Nothing") } }, { name: "Tail", signature: { domain: ["Function", "Value", ["List", "Value"]], evaluate: (e5, t2) => {
  var i2;
  return e5._fn("List", null !== (i2 = t2[0].ops) && void 0 !== i2 ? i2 : []);
} } }, { name: "Timing", description: "`Timing(expr)` evaluates `expr` and return a `Pair` of the number of second elapsed for the evaluation, and the value of the evaluation", signature: { domain: ["Function", "Value", ["Maybe", "Integer"], ["Tuple", "Value", "Number"]], evaluate: (e5, t2) => {
  var i2;
  if ("Nothing" === t2[1].symbol) {
    const i3 = globalThis.performance.now(), n3 = t2[0].evaluate(), r3 = 1e3 * (globalThis.performance.now() - i3);
    return e5.pair(e5.number(r3), n3);
  }
  let n2, r2 = Math.max(3, Math.round(null !== (i2 = t2[1].asSmallInteger) && void 0 !== i2 ? i2 : 3)), a2 = [];
  for (; r2 > 0; ) {
    const e6 = globalThis.performance.now();
    n2 = t2[0].evaluate(), a2.push(1e3 * (globalThis.performance.now() - e6)), r2 -= 1;
  }
  const o2 = Math.max(...a2), s2 = Math.min(...a2);
  a2 = a2.filter((e6) => e6 > s2 && e6 < o2);
  const l2 = a2.reduce((e6, t3) => e6 + t3, 0);
  return 0 === l2 ? e5.pair(e5.number(o2), n2) : e5.pair(e5.number(l2 / a2.length), n2);
} } }] }];
var fc = { symbols: [{ name: "True", wikidata: "Q16751793", domain: "Boolean", constant: true }, { name: "False", wikidata: "Q5432619", domain: "Boolean", constant: true }, { name: "Maybe", wikidata: "Q781546", domain: "MaybeBoolean", constant: true }], functions: [{ name: "And", wikidata: "Q191081", threadable: true, associative: true, commutative: true, idempotent: true, complexity: 1e4, signature: { domain: "LogicOperator", simplify: gc, evaluate: gc } }, { name: "Or", wikidata: "Q1651704", threadable: true, associative: true, commutative: true, idempotent: true, complexity: 1e4, signature: { domain: "LogicOperator", simplify: yc, evaluate: yc } }, { name: "Not", wikidata: "Q190558", involution: true, complexity: 10100, signature: { domain: "LogicOperator", simplify: bc, evaluate: bc } }, { name: "Equivalent", wikidata: "Q220433", complexity: 10200, signature: { domain: "LogicOperator", simplify: vc, evaluate: vc } }, { name: "Implies", wikidata: "Q7881229", complexity: 10200, signature: { domain: "LogicOperator", simplify: xc, evaluate: xc } }, { name: "Exists", signature: { domain: "MaybeBoolean" } }, { name: "If", hold: "rest", signature: { domain: "Function", codomain: (e5, t2) => e5.domain(["Union", t2[0], t2[1]]), simplify: (e5, t2) => {
  const i2 = t2[0];
  return i2 && "True" === i2.symbol ? t2[1] ? t2[1].simplify() : e5.box("Nothing") : t2[2] ? t2[2].simplify() : e5.box("Nothing");
}, evaluate: (e5, t2) => {
  const i2 = t2[0];
  return i2 && "True" === i2.symbol ? t2[1] ? t2[1].evaluate() : e5.box("Nothing") : t2[2] ? t2[2].evaluate() : e5.box("Nothing");
}, N: (e5, t2) => {
  const i2 = t2[0];
  return i2 && "True" === i2.symbol ? t2[1] ? t2[1].N() : e5.box("Nothing") : t2[2] ? t2[2].N() : e5.box("Nothing");
} } }, { name: "Loop", hold: "all", signature: { domain: "Function", simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = t2[0]) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box("Nothing");
}, evaluate: (e5, t2) => {
  var i2;
  const n2 = null !== (i2 = t2[0]) && void 0 !== i2 ? i2 : e5.box("Nothing");
  if (n2.isNothing)
    return n2;
  let r2, a2 = 0;
  do {
    r2 = n2.evaluate(), a2 += 1;
  } while ("Return" !== r2.head && a2 < e5.iterationLimit);
  return "Return" === r2.head ? r2.op1 : e5.error("iteration-limit-exceeded");
}, N: (e5, t2) => {
  const i2 = t2[0];
  return i2 && "True" === i2.symbol ? t2[1] ? t2[1].N() : e5.box("Nothing") : t2[2] ? t2[2].N() : e5.box("Nothing");
} } }] };
function gc(e5, t2) {
  if (0 === t2.length)
    return e5.symbol("True");
  const i2 = [];
  for (const n2 of t2) {
    if ("False" === n2.symbol)
      return e5.symbol("False");
    if ("True" !== n2.symbol) {
      let t3 = false;
      for (const r2 of i2)
        if (r2.isSame(n2))
          t3 = true;
        else if ("Not" === n2.head && n2.op1.isSame(r2) || "Not" === r2.head && r2.op1.isSame(n2))
          return e5.symbol("False");
      t3 || i2.push(n2);
    }
  }
  return 0 === i2.length ? e5.symbol("True") : 1 === i2.length ? i2[0] : e5._fn("And", i2);
}
function yc(e5, t2) {
  if (0 === t2.length)
    return e5.symbol("True");
  const i2 = [];
  for (const n2 of t2) {
    if ("True" === n2.symbol)
      return e5.symbol("True");
    if ("False" !== n2.symbol) {
      let t3 = false;
      for (const r2 of i2)
        if (r2.isSame(n2))
          t3 = true;
        else if ("Not" === n2.head && n2.op1.isSame(r2) || "Not" === r2.head && r2.op1.isSame(n2))
          return e5.symbol("True");
      t3 || i2.push(n2);
    }
  }
  return 0 === i2.length ? e5.symbol("True") : 1 === i2.length ? i2[0] : e5._fn("Or", i2);
}
function bc(e5, t2) {
  const i2 = t2[0].symbol;
  return "True" === i2 ? e5.symbol("False") : "False" === i2 ? e5.symbol("True") : "Maybe" === i2 ? e5.symbol("Maybe") : void 0;
}
function vc(e5, t2) {
  const i2 = t2[0].symbol, n2 = t2[1].symbol;
  return "True" === i2 && "True" === n2 || "False" === i2 && "False" === n2 ? e5.symbol("True") : "True" === i2 && "False" === n2 || "False" === i2 && "True" === n2 ? e5.symbol("False") : "Maybe" === i2 || "Maybe" === n2 ? e5.symbol("Maybe") : void 0;
}
function xc(e5, t2) {
  const i2 = t2[0].symbol, n2 = t2[1].symbol;
  return "True" === i2 && "True" === n2 || "False" === i2 && "False" === n2 || "False" === i2 && "True" === n2 ? e5.symbol("True") : "True" === i2 && "False" === n2 ? e5.symbol("False") : "Maybe" === i2 || "Maybe" === n2 ? e5.symbol("Maybe") : void 0;
}
function kc(e5, t2) {
  const i2 = e5.engine;
  return "Negate" === e5.head && "Negate" === t2.head ? kc(e5.op1, t2.op1) : "Negate" === e5.head ? Uu(kc(e5.op1, t2)) : "Negate" === t2.head ? Uu(kc(e5, t2.op1)) : "Add" === e5.head ? i2.add(e5.ops.map((e6) => kc(e6, t2))) : "Add" === t2.head ? i2.add(t2.ops.map((t3) => kc(e5, t3))) : i2.mul([e5, t2]);
}
function _c(e5, t2) {
  if (1 === t2)
    return e5;
  const i2 = kc(e5, e5);
  return 2 === t2 ? i2 : t2 % 2 == 0 ? _c(i2, t2 / 2) : kc(_c(i2, Math.round(t2 / 2) - 1), e5);
}
var wc = [{ functions: [{ name: "Expand", description: "Expand out products and positive integer powers", signature: { domain: ["Function", "Value", "Value"], evaluate: (e5, t2) => function(e6) {
  if ("Multiply" === (e6 = e6.simplify()).head)
    return 2 === e6.nops ? kc(e6.op1, e6.op2) : e6.ops.reduce((e7, t3) => kc(e7, t3), e6.engine._ONE);
  if ("Power" === e6.head) {
    const t3 = e6.op1.head;
    if ("Multiply" === t3)
      return e6.engine.mul(e6.op1.ops.map((t4) => e6.engine.power(t4, e6.op2)));
    if ("Negate" === t3) {
      const t4 = e6.op2.asSmallInteger;
      if (null !== t4 && t4 > 0)
        return t4 % 2 == 0 ? e6.engine.power(e6.op1.op1, e6.op2) : e6.engine.negate(e6.engine.power(e6.op1.op1, e6.op2));
    }
    if ("Add" === t3) {
      const t4 = e6.op2.asSmallInteger;
      if (null !== t4)
        return t4 > 0 ? _c(e6.op1, t4).simplify() : e6.engine.inverse(_c(e6.op1, -t4).simplify());
    }
  }
  return e6;
}(t2[0]) } }] }];
var Sc = [{ symbols: [{ name: "Degrees", domain: "RealNumber", constant: true, value: ["Divide", "Pi", 180] }, { name: "Pi", domain: "TranscendentalNumber", algebraic: false, constant: true, hold: true, wikidata: "Q167", value: (e5) => Rl(e5) ? e5._DECIMAL_PI : Math.PI }], functions: [{ name: "Hypot", signature: { domain: ["Function", "Number", "Number", "NonNegativeNumber"], simplify: (e5, t2) => e5.box(["Sqrt", ["Add", ["Square", t2[0]], ["Square", t2[1]]]]).simplify(), evaluate: ["Sqrt", ["Add", ["Square", "_1"], ["Square", "_2"]]] } }, { name: "Sin", complexity: 5e3, signature: { domain: ["Function", "Number", ["Interval", -1, 1]], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Sin", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : jl(e5) ? e5.box(["Divide", ["Subtract", ["Exp", ["Multiply", "ImaginaryUnit", t2[0]]], ["Exp", ["Multiply", "ImaginaryUnit", ["Negate", t2[0]]]]], ["Complex", 0, 2]]).simplify() : void 0;
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Sin", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5.chop(t2[0].decimalValue.sin())) : t2[0].complexValue ? e5.number(t2[0].complexValue.sin()) : null !== t2[0].asFloat ? e5.number(Math.sin(t2[0].asFloat)) : void 0 } }] }, { functions: [{ name: "Arctan", wikidata: "Q2257242", complexity: 5200, signature: { domain: ["Function", "Number", "ExtendedRealNumber"], simplify: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Arctan", t2[0])) || void 0 === i2 ? void 0 : i2.simplify();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.atan()) : t2[0].complexValue ? e5.number(t2[0].complexValue.atan()) : null !== t2[0].asFloat ? e5.number(Math.atan(t2[0].asFloat)) : void 0 } }, { name: "Arctan2", wikidata: "Q776598", complexity: 5200, signature: { domain: ["Function", "Number", "Number", "Number"], N: (e5, t2) => t2[0].decimalValue && t2[1].decimalValue ? e5.number(Xo.atan2(t2[0].decimalValue, t2[1].decimalValue)) : null !== t2[0].asFloat && null !== t2[1].asFloat ? e5.number(Math.atan2(t2[0].asFloat, t2[1].asFloat)) : void 0 } }, { name: "Cos", complexity: 5050, signature: { domain: ["Function", "Number", ["Interval", -1, 1]], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Cos", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Sin", ["Add", t2[0], ["Multiply", "Half", "Pi"]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Cos", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.cos()) : t2[0].complexValue ? e5.number(t2[0].complexValue.cos()) : null !== t2[0].asFloat ? e5.number(Math.cos(t2[0].asFloat)) : void 0 } }, { name: "Tan", complexity: 5100, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Tan", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", ["Sin", t2[0]], ["Cos", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Tan", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.tan()) : t2[0].complexValue ? e5.number(t2[0].complexValue.tan()) : null !== t2[0].asFloat ? e5.number(Math.tan(t2[0].asFloat)) : void 0 } }] }, { functions: [{ name: "Arcosh", complexity: 6200, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Arcoshh", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Ln", ["Add", t2[0], ["Sqrt", ["Subtract", ["Square", t2[0]], 1]]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Arcoshh", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.acosh()) : t2[0].complexValue ? e5.number(t2[0].complexValue.acosh()) : null !== t2[0].asFloat ? e5.number(Math.acosh(t2[0].asFloat)) : void 0 } }, { name: "Arcsin", complexity: 5500, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Arcsin", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Multiply", 2, ["Arctan2", t2[0], ["Add", 1, ["Sqrt", ["Subtract", 1, ["Square", t2[0]]]]]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Arcsin", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.asin()) : t2[0].complexValue ? e5.number(t2[0].complexValue.asin()) : null !== t2[0].asFloat ? e5.number(Math.asin(t2[0].asFloat)) : void 0 } }, { name: "Arsinh", complexity: 6100, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Arsinh", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Ln", ["Add", t2[0], ["Sqrt", ["Add", ["Square", t2[0]], 1]]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Arsinh", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.asinh()) : t2[0].complexValue ? e5.number(t2[0].complexValue.asinh()) : null !== t2[0].asFloat ? e5.number(Math.asinh(t2[0].asFloat)) : void 0 } }, { name: "Artanh", complexity: 6300, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Artanh", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Multiply", "Half", ["Ln", ["Divide", ["Add", 1, t2[0]], ["Subtract", 1, t2[0]]]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Artanh", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.atanh()) : t2[0].complexValue ? e5.number(t2[0].complexValue.atanh()) : null !== t2[0].asFloat ? e5.number(Math.atanh(t2[0].asFloat)) : void 0 } }, { name: "Cosh", complexity: 6050, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Cosh", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Multiply", "Half", ["Add", ["Exp", t2[0]], ["Exp", ["Negate", t2[0]]]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Cosh", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.cosh()) : t2[0].complexValue ? e5.number(t2[0].complexValue.cosh()) : null !== t2[0].asFloat ? e5.number(Math.cosh(t2[0].asFloat)) : void 0 } }, { name: "Cot", complexity: 5600, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Cot", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", ["Cos", t2[0]], ["Sin", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Cot", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5._DECIMAL_ONE.div(t2[0].decimalValue.tan())) : t2[0].complexValue ? e5.number(t2[0].complexValue.tan().inverse()) : null !== t2[0].asFloat ? e5.number(1 / Math.tan(t2[0].asFloat)) : void 0 } }, { name: "Csc", description: "Cosecant", complexity: 5600, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Csc", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", 1, ["Sin", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Csc", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5._DECIMAL_ONE.div(t2[0].decimalValue.sin())) : t2[0].complexValue ? e5.number(t2[0].complexValue.sin().inverse()) : null !== t2[0].asFloat ? e5.number(1 / Math.sin(t2[0].asFloat)) : void 0 } }, { name: "Haversine", wikidata: "Q2528380", signature: { domain: ["Function", "ExtendedRealNumber", ["Interval", 0, 1]], evaluate: ["Divide", ["Subtract", 1, ["Cos", "_1"]], 2] } }, { name: "InverseHaversine", signature: { domain: ["Function", "ExtendedRealNumber", "RealNumber"], evaluate: ["Multiply", 2, ["Arcsin", ["Sqrt", "_1"]]] } }, { name: "Sec", description: "Secant, inverse of cosine", complexity: 5500, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Sec", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", 1, ["Cos", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Sec", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5._DECIMAL_ONE.div(t2[0].decimalValue.cos())) : t2[0].complexValue ? e5.number(t2[0].complexValue.cos().inverse()) : null !== t2[0].asFloat ? e5.number(1 / Math.cos(t2[0].asFloat)) : void 0 } }, { name: "Sinh", complexity: 6e3, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Sinh", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Multiply", "Half", ["Subtract", ["Exp", t2[0]], ["Exp", ["Negate", t2[0]]]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Sinh", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
} } }] }, { functions: [{ name: "Csch", complexity: 6200, signature: { domain: ["Function", "Number", "ExtendedRealNumber"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Csch", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", 1, ["Sinh", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Csch", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5._DECIMAL_ONE.div(t2[0].decimalValue.sinh())) : t2[0].complexValue ? e5.number(t2[0].complexValue.sinh().inverse()) : null !== t2[0].asFloat ? e5.number(1 / Math.sinh(t2[0].asFloat)) : void 0 } }, { name: "Sech", complexity: 6200, signature: { domain: ["Function", "Number", ["Interval", -1, 1]], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Sech", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", 1, ["Cosh", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Sech", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5._DECIMAL_ONE.div(t2[0].decimalValue.cosh())) : t2[0].complexValue ? e5.number(t2[0].complexValue.cosh().inverse()) : null !== t2[0].asFloat ? e5.number(1 / Math.cosh(t2[0].asFloat)) : void 0 } }, { name: "Tanh", complexity: 6200, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Tanh", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", ["Sinh", t2[0]], ["Cosh", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Tanh", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.tanh()) : t2[0].complexValue ? e5.number(t2[0].complexValue.tanh()) : null !== t2[0].asFloat ? e5.number(Math.tanh(t2[0].asFloat)) : void 0 } }] }, { functions: [{ name: "Arccos", complexity: 5550, signature: { domain: ["Function", "Number", "ExtendedRealNumber"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Arccos", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Subtract", ["Divide", "Pi", 2], ["Arcsin", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Arccos", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(t2[0].decimalValue.acos()) : t2[0].complexValue ? e5.number(t2[0].complexValue.acos()) : null !== t2[0].asFloat ? e5.number(Math.acos(t2[0].asFloat)) : void 0 } }, { name: "Coth", complexity: 6300, signature: { domain: ["Function", "Number", "Number"], simplify: (e5, t2) => {
  var i2, n2;
  return null !== (n2 = null === (i2 = Dc(e5, "Coth", t2[0])) || void 0 === i2 ? void 0 : i2.simplify()) && void 0 !== n2 ? n2 : e5.box(["Divide", 1, ["Tanh", t2[0]]]).simplify();
}, evaluate: (e5, t2) => {
  var i2;
  return null === (i2 = Dc(e5, "Coth", t2[0])) || void 0 === i2 ? void 0 : i2.evaluate();
}, N: (e5, t2) => t2[0].decimalValue ? e5.number(e5._DECIMAL_ONE.div(t2[0].decimalValue.tanh())) : t2[0].complexValue ? e5.number(t2[0].complexValue.tanh().inverse()) : null !== t2[0].asFloat ? e5.number(1 / Math.tanh(t2[0].asFloat)) : void 0 } }, { name: "InverseFunction", signature: { domain: ["Function", "Function", "Function"], simplify: (e5, t2) => Tc(e5, t2[0]), evaluate: (e5, t2) => Tc(e5, t2[0]) } }] }];
var Mc = ["Sqrt", 2];
var Nc = ["Sqrt", 3];
var Lc = ["Sqrt", 5];
var Ac = ["Sqrt", 6];
var Cc = [[[0, 1], { Sin: 0, Cos: 1, Tan: 0, Cot: NaN, Sec: 1, Csc: NaN }], [[1, 12], { Sin: ["Divide", ["Subtract", Ac, Mc], 4], Cos: ["Divide", ["Add", Ac, Mc], 4], Tan: ["Subtract", 2, Nc], Cot: ["Add", 2, Nc], Sec: ["Subtract", Ac, Mc], Csc: ["Add", Ac, Mc] }], [[1, 10], { Sin: ["Divide", ["Subtract", Lc, 1], 4], Cos: ["Divide", ["Sqrt", ["Add", 10, ["Multiply", 2, Lc]]], 4], Tan: ["Divide", ["Sqrt", ["Subtract", 25, ["Multiply", 10, Lc]]], 4], Cot: ["Sqrt", ["Add", 5, ["Multiply", 2, Lc]]], Sec: ["Divide", ["Sqrt", ["Subtract", 50, ["Multiply", 10, Lc]]], 5], Csc: ["Add", 1, Lc] }], [[1, 8], { Sin: "$\\frac\\sqrt{2-\\sqrt2}{2}$", Cos: "$\\frac {\\sqrt {2+{\\sqrt {2}}}}{2}$", Tan: "$\\sqrt{2} - 1$", Cot: "$\\sqrt{2} + 1$", Sec: "$\\sqrt{ 4 - 2\\sqrt{2}}$", Csc: "$\\sqrt{ 4 + 2\\sqrt{2}}$" }], [[1, 6], { Sin: "$\\frac{1}{2}$", Cos: "$\\frac{\\sqrt{3}}{2}$", Tan: "$\\frac{\\sqrt{3}}{3}$", Cot: "$\\frac{2\\sqrt{3}}{3}$", Sec: "$\\sqrt{3}$", Csc: 2 }], [[1, 5], { Sin: "$\\frac{\\sqrt{10- 2\\sqrt{5}}} {4}$", Cos: "$\\frac{1+ \\sqrt{5}} {4}$", Tan: "$\\sqrt{5-2\\sqrt5}$", Cot: "$\\frac{\\sqrt{25+10\\sqrt5}} {5}$", Sec: "$\\sqrt{5} - 1$", Csc: "$\\frac{\\sqrt{50+10\\sqrt{5}}} {5}$" }], [[1, 4], { Sin: ["Divide", Mc, 2], Cos: ["Divide", Mc, 2], Tan: 1, Cot: 1, Sec: Mc, Csc: Mc }], [[3, 10], { Sin: "$\\frac{1+ \\sqrt{5}} {4}$", Cos: "$\\frac{\\sqrt{10- 2\\sqrt{5}}} {4}$", Tan: "$\\frac{\\sqrt{25+10\\sqrt5}} {5}$", Cot: "$\\sqrt{5-2\\sqrt5}$", Sec: "$$", Csc: "$\\frac{\\sqrt{50+10\\sqrt{5}}} {5}$" }], [[1, 3], { Sin: ["Divide", Nc, 2], Cos: "Half", Tan: Nc, Cot: ["Divide", Nc, 3], Sec: 2, Csc: ["Divide", ["Multiply", 2, Nc], 3] }], [[3, 8], { Sin: "$\\frac{ \\sqrt{2 + \\sqrt{2}} } {2}$", Cos: "$\\frac{ \\sqrt{2 - \\sqrt{2}} } {2}$", Tan: "$\\sqrt{2} + 1$", Cot: "$\\sqrt{2} - 1$", Sec: "$\\sqrt{ 4 + 2 \\sqrt{2} }$", Csc: "$\\sqrt{ 4 - 2 \\sqrt{2} }$" }], [[2, 5], { Sin: "$\\frac{\\sqrt{10+ 2\\sqrt{5}}} {4}$", Cos: "$\\frac{\\sqrt{5}-1} {4}$", Tan: "$\\sqrt{5+2\\sqrt{5}}$", Cot: "$\\frac{\\sqrt{25-10\\sqrt{5}}} {5}$", Sec: "$1 + \\sqrt{5}$", Csc: "$\\frac{\\sqrt{50-10\\sqrt{5}}} {5}$" }], [[5, 12], { Sin: "$\\frac{\\sqrt{6} + \\sqrt{2}} {4}$", Cos: "$\\frac{ \\sqrt{6} - \\sqrt{2}} {4}$", Tan: "$2+\\sqrt{3}$", Cot: "$2-\\sqrt{3}$", Sec: "$\\sqrt{6}+\\sqrt{2}$", Csc: "$\\sqrt{6} - \\sqrt{2}$" }], [[1, 2], { Sin: 1, Cos: 0, Tan: NaN, Cot: 0, Sec: NaN, Csc: 1 }]];
var Ec = { Sin: [[1, "Sin"], [1, "Cos"], [-1, "Sin"], [-1, "Cos"]], Cos: [[1, "Cos"], [-1, "Sin"], [-1, "Cos"], [1, "Sin"]], Sec: [[1, "Sec"], [-1, "Csc"], [-1, "Sec"], [1, "Csc"]], Csc: [[1, "Csc"], [1, "Sec"], [-1, "Csc"], [-1, "Sec"]], Tan: [[1, "Tan"], [-1, "Cot"], [1, "Tan"], [-1, "Cot"]], Cot: [[1, "Cot"], [-1, "Tan"], [1, "Cot"], [-1, "Tan"]] };
function Dc(e5, t2, i2) {
  var n2, r2, a2, o2, s2, l2;
  const u2 = e5.cache("constructible-trigonometric-values", () => {
    var t3;
    const i3 = [];
    for (const [n3, r3] of Cc) {
      const a3 = {};
      for (const i4 of Object.keys(r3))
        a3[i4] = (null !== (t3 = e5.parse(Pl(r3[i4]))) && void 0 !== t3 ? t3 : e5.box(r3[i4])).canonical;
      i3.push([n3, a3]);
    }
    return i3;
  }, (e6) => {
    for (const [t3, i3] of e6)
      for (const e7 of Object.values(i3))
        e7.unbind();
    return e6;
  });
  if (!(i2 = null !== (n2 = i2.numericValue) && void 0 !== n2 ? n2 : i2).isLiteral)
    return;
  let c2 = null !== (o2 = null !== (r2 = i2.asFloat) && void 0 !== r2 ? r2 : null === (a2 = i2.decimalValue) || void 0 === a2 ? void 0 : a2.toNumber()) && void 0 !== o2 ? o2 : null;
  if (null === c2)
    return;
  c2 %= 2 * Math.PI;
  const d2 = "Cos" !== t2 && "Sec" !== t2 ? Math.sign(c2) : 1;
  c2 = Math.abs(c2);
  const h2 = Math.floor(2 * c2 / Math.PI);
  let m2;
  c2 %= Math.PI / 2, [m2, t2] = null !== (l2 = null === (s2 = Ec[t2]) || void 0 === s2 ? void 0 : s2[h2]) && void 0 !== l2 ? l2 : [1, t2], m2 *= d2;
  for (const [[i3, n3], r3] of u2)
    if (0 === e5.chop(c2 - Math.PI * i3 / n3))
      return m2 < 0 ? Uu(r3[t2]) : r3[t2];
}
function Tc(e5, t2) {
  const i2 = t2.symbol;
  if ("string" != typeof i2)
    return t2;
  const n2 = { Sin: "Arcsin", Cos: "Arccos", Tan: "Arctan", Sec: "Arcsec", Csc: " Arccsc", Sinh: "Arsinh", Cosh: "Arcosh", Tanh: "Artanh", Sech: "Arcsech", Csch: "Arcsch", Arcosh: "Cosh", Arcos: "Cos", Arccsc: "Csc", Arcsch: "Csch", Arcsec: "Sec", Arcsin: "Sin", Arsinh: "Sinh", Arctan: "Tan", Artanh: "Tanh" }[i2];
  return n2 ? e5.symbol(n2) : t2;
}
function zc(e5) {
  return Object.fromEntries(Object.entries(e5).filter(([e6, t2]) => void 0 !== t2));
}
function qc(e5) {
  const t2 = { ...e5 };
  return e5.zero || e5.one || e5.negativeOne ? (t2.number = true, t2.integer = true, t2.rational = true, t2.algebraic = true, t2.real = true, t2.extendedReal = true, t2.complex = true, t2.extendedComplex = true, t2.imaginary = false, t2.positive = false, t2.nonPositive = true, t2.negative = false, t2.nonNegative = true, t2.zero = e5.zero, t2.notZero = !e5.zero, t2.one = e5.one, t2.negativeOne = e5.negativeOne, t2.negativeOne = false, t2.infinity = false, t2.NaN = false, t2.finite = true, t2.even = e5.one, t2.odd = !e5.one, t2.prime = false, t2.composite = false, t2) : (true === t2.notZero && (t2.imaginary || (t2.real = true), t2.zero = false), (t2.positive || t2.nonNegative) && (t2.negativeOne = false), t2.positive ? (t2.nonPositive = false, t2.negative = false, t2.nonNegative = true) : t2.nonPositive ? (t2.positive = false, t2.negative = t2.notZero, t2.nonNegative = !t2.zero) : t2.negative ? (t2.positive = false, t2.nonPositive = t2.notZero, t2.nonNegative = false) : t2.nonNegative && (t2.positive = t2.notZero, t2.nonPositive = !t2.zero, t2.negative = false), (t2.positive || t2.negative || t2.nonPositive || t2.nonNegative) && (t2.number = true, t2.finite ? t2.real = true : t2.finite || (t2.complex = true), t2.imaginary = false), t2.infinity && (t2.finite = false, t2.NaN = false), t2.finite && (t2.number = true, t2.complex = true, t2.infinity = false, t2.NaN = false), e5.even && (t2.odd = false), e5.odd && (t2.even = false), t2.integer && (t2.rational = true), t2.rational && (t2.algebraic = true), t2.algebraic && (t2.real = true), t2.extendedReal && (t2.real = true), t2.real && (t2.complex = true), t2.imaginary && (t2.complex = true), t2.extendedComplex && (t2.complex = true), t2.complex && (t2.number = true), t2.real && t2.infinity && (t2.extendedReal = true), t2.complex && t2.infinity && (t2.extendedComplex = true), (t2.even || t2.infinity || t2.NaN || t2.negative || t2.imaginary || false === t2.integer) && (t2.prime = false), t2.number && t2.prime && (t2.composite = false), t2);
}
function Ic(e5) {
  if (!e5)
    return {};
  const t2 = {};
  if (e5.isNumeric) {
    const i2 = e5.symbol;
    t2.number = true, "Integer" === i2 && (t2.integer = true), "RationalNumber" === i2 && (t2.rational = true), "AlgebraicNumber" === i2 && (t2.algebraic = true), "TranscendentalNumber" === i2 && (t2.algebraic = false, t2.real = true), "ExtendedRealNumber" === i2 && (t2.extendedReal = true), "RealNumber" === i2 && (t2.real = true), "ImaginaryNumber" === i2 && (t2.imaginary = true), "ExtendedComplexNumber" === i2 && (t2.extendedComplex = true), "ComplexNumber" === i2 && (t2.complex = true);
  } else
    t2.number = false, t2.integer = false, t2.rational = false, t2.algebraic = false, t2.real = false, t2.extendedReal = false, t2.complex = false, t2.extendedComplex = false, t2.imaginary = false, t2.positive = false, t2.nonPositive = false, t2.negative = false, t2.nonNegative = false, t2.zero = false, t2.notZero = false, t2.one = false, t2.negativeOne = false, t2.infinity = false, t2.NaN = false, t2.odd = false, t2.even = false, t2.prime = false, t2.composite = false;
  return zc(qc(t2));
}
function Fc(e5) {
  return zc({ number: (e5 = e5.canonical).isNumber, integer: e5.isInteger, rational: e5.isRational, algebraic: e5.isAlgebraic, real: e5.isReal, extendedReal: e5.isExtendedReal, complex: e5.isComplex, extendedComplex: e5.isExtendedComplex, imaginary: e5.isImaginary, positive: e5.isPositive, nonPositive: e5.isNonPositive, negative: e5.isNegative, nonNegative: e5.isNonNegative, zero: e5.isZero, notZero: e5.isNotZero, one: e5.isOne, negativeOne: e5.isNegativeOne, infinity: e5.isInfinity, NaN: e5.isNaN, finite: e5.isFinite, even: e5.isEven, odd: e5.isOdd, prime: e5.isPrime, composite: e5.isComposite });
}
var Oc = class {
  constructor(e5, t2) {
    var i2, n2;
    if (!e5.context)
      throw Error("No context available");
    this._engine = e5, this.scope = e5.context, this._def = t2, this.name = t2.name, this.constant = null !== (i2 = t2.constant) && void 0 !== i2 && i2, this.hold = null === (n2 = t2.hold) || void 0 === n2 || n2, this._value = null, this._domain = null;
  }
  reset() {
    var e5;
    null === (e5 = this._value) || void 0 === e5 || e5.unbind(), this.unbind();
  }
  unbind() {
    this._value = null, this._domain = null;
  }
  bind() {
    var e5;
    this._value = void 0;
    const t2 = this._def, i2 = this._engine, n2 = zc({ description: t2.description, wikidata: t2.wikidata, number: t2.number, integer: t2.integer, rational: t2.rational, algebraic: t2.algebraic, real: t2.real, extendedReal: t2.extendedReal, complex: t2.complex, zero: t2.zero, notZero: t2.notZero, one: t2.one, negativeOne: t2.negativeOne, infinity: t2.infinity, NaN: t2.NaN, finite: t2.finite, even: t2.even, odd: t2.odd, prime: t2.prime, composite: t2.composite });
    if ("value" in t2 && "number" == typeof t2.value) {
      const e6 = i2.number(t2.value);
      let r3;
      const a3 = t2.domain ? i2.domain(t2.domain) : void 0;
      return r3 = a3 && e6.domain.isCompatible(a3) ? a3 : e6.domain, this._value = e6, this._domain = r3, this.setProps(Fc(e6)), this.setProps(Ic(r3)), void this.setProps(n2);
    }
    let r2, a2;
    if (false === t2.hold && (r2 = this.value, !r2))
      throw Error(`Symbol definition "${t2.name}": Expected a value "hold=false" `);
    r2 = null == r2 ? void 0 : r2.canonical;
    const o2 = t2.domain ? i2.domain(t2.domain) : void 0;
    if (a2 = !o2 || r2 && !r2.domain.isCompatible(o2) ? null !== (e5 = null == r2 ? void 0 : r2.domain) && void 0 !== e5 ? e5 : i2.defaultDomain : o2, !r2)
      return this._value = void 0, this._domain = a2, this.setProps(Ic(a2)), void this.setProps(n2);
    this._value = r2, this._domain = a2, this.setProps(Fc(r2)), this.setProps(Ic(a2)), this.setProps(n2);
  }
  get value() {
    var e5, t2;
    return null === this._value && this.bind(), void 0 === this._value && (Ol(this._def.value) ? this._value = this._engine.parse(this._def.value) : "function" == typeof this._def.value ? this._value = this._engine.box(null !== (e5 = this._def.value(this._engine)) && void 0 !== e5 ? e5 : "Undefined") : this._def.value && (this._value = this._engine.box(this._def.value))), null !== (t2 = this._value) && void 0 !== t2 ? t2 : void 0;
  }
  set value(e5) {
    if (this.constant)
      throw Error(`The value of the constant "${this.name}" cannot be changed`);
    "number" == typeof e5 && (e5 = this._engine.box(e5)), this._value = e5, e5 && this.setProps(Fc(e5));
  }
  get domain() {
    var e5;
    return null === this._domain && this.bind(), null !== (e5 = this._domain) && void 0 !== e5 ? e5 : void 0;
  }
  set domain(e5) {
    var t2;
    if (!e5)
      return void (this._domain = void 0);
    e5 = this._engine.domain(e5);
    const i2 = null === (t2 = this.value) || void 0 === t2 ? void 0 : t2.domain;
    i2 && !i2.isCompatible(e5) && (e5 = i2), this._domain = e5, this.setProps(Ic(e5));
  }
  updateFlags(e5) {
    this.setProps(qc(e5));
  }
  setProps(e5) {
    e5.wikidata && (this.wikidata = e5.wikidata), e5.description && (this.description = e5.description), void 0 !== e5.number && (this._number = e5.number), void 0 !== e5.integer && (this._integer = e5.integer), void 0 !== e5.rational && (this._rational = e5.rational), void 0 !== e5.algebraic && (this._algebraic = e5.algebraic), void 0 !== e5.real && (this._real = e5.real), void 0 !== e5.extendedReal && (this._extendedReal = e5.extendedReal), void 0 !== e5.complex && (this._complex = e5.complex), void 0 !== e5.extendedComplex && (this._extendedComplex = e5.extendedComplex), void 0 !== e5.imaginary && (this._imaginary = e5.imaginary), void 0 !== e5.positive && (this._positive = e5.positive), void 0 !== e5.nonPositive && (this._nonPositive = e5.nonPositive), void 0 !== e5.negative && (this._negative = e5.negative), void 0 !== e5.nonNegative && (this._nonNegative = e5.nonNegative), void 0 !== e5.zero && (this._zero = e5.zero), void 0 !== e5.notZero && (this._notZero = e5.notZero), void 0 !== e5.one && (this._one = e5.one), void 0 !== e5.negativeOne && (this._negativeOne = e5.negativeOne), void 0 !== e5.infinity && (this._infinity = e5.infinity), void 0 !== e5.finite && (this._finite = e5.finite), void 0 !== e5.NaN && (this._NaN = e5.NaN), void 0 !== e5.even && (this._even = e5.even), void 0 !== e5.odd && (this._odd = e5.odd), void 0 !== e5.prime && (this._prime = e5.prime), void 0 !== e5.composite && (this._composite = e5.composite);
  }
  get number() {
    return null === this._value && this.bind(), this._number;
  }
  set number(e5) {
    this.updateFlags({ number: e5 });
  }
  get integer() {
    return null === this._value && this.bind(), this._integer;
  }
  set integer(e5) {
    this.updateFlags({ integer: e5 });
  }
  get rational() {
    return null === this._value && this.bind(), this._rational;
  }
  set rational(e5) {
    this.updateFlags({ rational: e5 });
  }
  get algebraic() {
    return null === this._value && this.bind(), this._algebraic;
  }
  set algebraic(e5) {
    this.updateFlags({ algebraic: e5 });
  }
  get real() {
    return null === this._value && this.bind(), this._real;
  }
  set real(e5) {
    this.updateFlags({ real: e5 });
  }
  get extendedReal() {
    return null === this._value && this.bind(), this._extendedReal;
  }
  set extendedReal(e5) {
    this.updateFlags({ extendedReal: e5 });
  }
  get complex() {
    return null === this._value && this.bind(), this._complex;
  }
  set complex(e5) {
    this.updateFlags({ complex: e5 });
  }
  get extendedComplex() {
    return null === this._value && this.bind(), this._extendedComplex;
  }
  set extendedComplex(e5) {
    this.updateFlags({ extendedComplex: e5 });
  }
  get imaginary() {
    return null === this._value && this.bind(), this._imaginary;
  }
  set imaginary(e5) {
    this.updateFlags({ imaginary: e5 });
  }
  get positive() {
    return null === this._value && this.bind(), this._positive;
  }
  set positive(e5) {
    this.updateFlags({ positive: e5 });
  }
  get nonPositive() {
    return null === this._value && this.bind(), this._nonPositive;
  }
  set nonPositive(e5) {
    this.updateFlags({ nonPositive: e5 });
  }
  get negative() {
    return null === this._value && this.bind(), this._negative;
  }
  set negative(e5) {
    this.updateFlags({ negative: e5 });
  }
  get nonNegative() {
    return null === this._value && this.bind(), this._nonNegative;
  }
  set nonNegative(e5) {
    this.updateFlags({ nonNegative: e5 });
  }
  get zero() {
    return null === this._value && this.bind(), this._zero;
  }
  set zero(e5) {
    this.updateFlags({ zero: e5 });
  }
  get notZero() {
    return null === this._value && this.bind(), this._notZero;
  }
  set notZero(e5) {
    this.updateFlags({ notZero: e5 });
  }
  get one() {
    return null === this._value && this.bind(), this._one;
  }
  set one(e5) {
    this.updateFlags({ one: e5 });
  }
  get negativeOne() {
    return null === this._value && this.bind(), this._negativeOne;
  }
  set negativeOne(e5) {
    this.updateFlags({ negativeOne: e5 });
  }
  get infinity() {
    return null === this._value && this.bind(), this._infinity;
  }
  set infinity(e5) {
    this.updateFlags({ infinity: e5 });
  }
  get finite() {
    return null === this._value && this.bind(), this._finite;
  }
  set finite(e5) {
    this.updateFlags({ finite: e5 });
  }
  get NaN() {
    return null === this._value && this.bind(), this._NaN;
  }
  set NaN(e5) {
    this.updateFlags({ NaN: e5 });
  }
  get even() {
    return null === this._value && this.bind(), this._even;
  }
  set even(e5) {
    this.updateFlags({ even: e5 });
  }
  get odd() {
    return null === this._value && this.bind(), this._odd;
  }
  set odd(e5) {
    this.updateFlags({ odd: e5 });
  }
  get prime() {
    var e5;
    if (null === this._value && this.bind(), void 0 === this._prime && (null === (e5 = this._value) || void 0 === e5 ? void 0 : e5.isNumber))
      if (!this._value.isInteger || this._value.isNonPositive)
        this._prime = false, this._composite = false;
      else {
        const e6 = this._value.asFloat;
        null !== e6 ? (this._prime = $u(e6), this._composite = !this._prime) : (this._prime = void 0, this._composite = void 0);
      }
    return this._prime;
  }
  set prime(e5) {
    this.updateFlags({ prime: e5 });
  }
  get composite() {
    if (null === this._value && this.bind(), void 0 === this._composite) {
      const e5 = this.prime;
      this._composite = void 0 === e5 ? void 0 : !e5;
    }
    return this._composite;
  }
  set composite(e5) {
    this.updateFlags({ composite: e5 });
  }
};
var Pc = class {
  constructor(e5, t2) {
    var i2, n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2, p2;
    if (!e5.context)
      throw Error("No context available");
    this.engine = e5, this.scope = e5.context;
    const f2 = null !== (i2 = t2.idempotent) && void 0 !== i2 && i2, g2 = null !== (n2 = t2.involution) && void 0 !== n2 && n2;
    if (f2 && g2)
      throw Error(`Function Definition "${t2.name}": the 'idempotent' and 'involution' flags are mutually exclusive`);
    if (this.name = t2.name, this.description = t2.description, this.wikidata = t2.wikidata, this.threadable = null !== (r2 = t2.threadable) && void 0 !== r2 && r2, this.associative = null !== (a2 = t2.associative) && void 0 !== a2 && a2, this.commutative = null !== (o2 = t2.commutative) && void 0 !== o2 && o2, this.idempotent = f2, this.involution = g2, this.inert = null !== (s2 = t2.inert) && void 0 !== s2 && s2, this.numeric = null !== (l2 = t2.numeric) && void 0 !== l2 && l2, this.scoped = null !== (u2 = t2.scoped) && void 0 !== u2 && u2, this.pure = null === (c2 = t2.pure) || void 0 === c2 || c2, this.complexity = null !== (d2 = t2.complexity) && void 0 !== d2 ? d2 : 1e5, this.hold = null !== (h2 = t2.hold) && void 0 !== h2 ? h2 : "none", this.inert) {
      if (t2.hold)
        throw Error(`Function Definition "${t2.name}": an inert function should not have a hold`);
      if (this.hold = "rest", t2.signature) {
        const e6 = t2.signature;
        if ("simplify" in e6 || "evaluate" in e6 || "N" in e6 || "evalDimension" in e6 || "sgn" in e6 || "compile" in e6)
          throw Error(`Function Definition "${t2.name}": an inert function should only have 'canonical' or 'codomain' handlers`);
      }
      if (this.threadable)
        throw Error(`Function Definition "${t2.name}": an inert function should not be threadable`);
      if (this.associative)
        throw Error(`Function Definition "${t2.name}": an inert function should not be associative`);
      if (this.commutative)
        throw Error(`Function Definition "${t2.name}": an inert function should not be commutative`);
      if (this.idempotent)
        throw Error(`Function Definition "${t2.name}": an inert function should not be idempotent`);
      if (this.involution)
        throw Error(`Function Definition "${t2.name}": an inert function should not be involution`);
      if (!this.pure)
        throw Error(`Function Definition "${t2.name}": an inert function should be pure`);
    }
    if (t2.signature) {
      const i3 = t2.signature, n3 = i3.domain ? e5.domain(i3.domain) : t2.numeric ? e5.domain("NumericFunction") : e5.domain("Function");
      if (!n3.isValid)
        throw Error(`Function Definition "${t2.name}": invalid domain ${JSON.stringify(i3.domain)}`);
      const r3 = null !== (p2 = null !== (m2 = i3.codomain) && void 0 !== m2 ? m2 : n3.codomain) && void 0 !== p2 ? p2 : t2.numeric ? e5.domain("Number") : e5.domain("Anything");
      this.signature = { domain: n3, codomain: r3, canonical: i3.canonical, simplify: i3.simplify, evaluate: i3.evaluate ? "function" == typeof i3.evaluate ? i3.evaluate : e5.lambda(i3.evaluate, n3) : void 0, N: i3.N, evalDimension: i3.evalDimension, sgn: i3.sgn, compile: i3.compile };
    } else
      t2.numeric ? this.signature = { domain: e5.domain("NumericFunction"), codomain: e5.domain("Number") } : this.signature = { domain: e5.domain("Function"), codomain: e5.domain("Anything") };
  }
  reset() {
  }
};
function Bc(e5, t2) {
  return new Pc(e5, t2);
}
function $c(e5) {
  if ("all" === e5)
    return $c(["domains", "core", "control-structures", "logic", "collections", "relop", "numeric", "arithmetic", "algebra", "calculus", "combinatorics", "linear-algebra", "other", "physics", "polynomials", "statistics", "trigonometry", "dimensions", "units"]);
  "string" == typeof e5 && (e5 = [e5]);
  const t2 = [];
  for (const i2 of e5) {
    const e6 = Vc[i2];
    if (!e6)
      throw Error("Unknown library category " + i2);
    Array.isArray(e6) ? t2.push(...e6) : t2.push(e6);
  }
  return t2;
}
var Vc = { algebra: [], arithmetic: dc, calculus: [{ functions: [{ name: "Integrate", wikidata: "Q80091", signature: { domain: ["Function", "Anything", ["Union", "Tuple", "Symbol"], "Number"] } }] }], combinatorics: [], "control-structures": [], dimensions: [], domains: [], core: pc, collections: [{ symbols: [{ name: "EmptySet", domain: "Set", constant: true, wikidata: "Q226183" }], functions: [{ name: "Element", complexity: 11200, signature: { domain: "Predicate" } }, { name: "NotElement", complexity: 11200, signature: { domain: "Predicate", canonical: (e5, t2) => e5.fn("Not", [e5.fn("Element", t2)]) } }, { name: "Subset", complexity: 11200, signature: { domain: "Predicate" } }, { name: "NotSubset", complexity: 11200, signature: { domain: "Predicate", canonical: (e5, t2) => e5.fn("Not", [e5.fn("Subset", t2)]) } }, { name: "Superset", complexity: 11200, signature: { domain: "Predicate" } }, { name: "SupersetEqual", complexity: 11200, signature: { domain: "Predicate" } }, { name: "NotSuperset", complexity: 11200, signature: { domain: "Predicate", canonical: (e5, t2) => e5.fn("Not", [e5.fn("Superset", t2)]) } }, { name: "NotSupersetEqual", complexity: 11200, signature: { domain: "Predicate", canonical: (e5, t2) => e5.fn("Not", [e5.fn("SupersetEqual", t2)]) } }, { name: "SubsetEqual", complexity: 11200, signature: { domain: "Predicate" } }, { name: "NotSubsetNotEqual", complexity: 11200, signature: { domain: "Predicate", canonical: (e5, t2) => e5.fn("Not", [e5.fn("SubsetEqual", t2)]) } }, { name: "CartesianProduct", wikidata: "Q173740", signature: { domain: ["Function", "Set", ["Sequence", "Set"], "Set"] } }, { name: "Complement", wikidata: "Q242767", signature: { domain: ["Function", "Set", "Set"] } }, { name: "Intersection", wikidata: "Q185837", threadable: true, associative: true, commutative: true, involution: true, signature: { domain: ["Function", "Set", ["Sequence", "Set"], "Set"], evaluate: function(e5, t2) {
  return e5.symbol("EmptySet");
} } }, { name: "Union", wikidata: "Q185359", threadable: true, associative: true, commutative: true, involution: true, signature: { domain: ["Function", "Set", ["Sequence", "Set"], "Set"], evaluate: function(e5, t2) {
  return e5.symbol("False");
} } }, { name: "SetMinus", wikidata: "Q18192442", signature: { domain: ["Function", "Set", "Value", "Set"], evaluate: function(e5, t2) {
  return e5.symbol("EmptySet");
} } }, { name: "SymmetricDifference", wikidata: "Q1147242", signature: { domain: ["Function", "Set", ["Sequence", "Set"], "Set"] } }] }, { functions: [{ name: "Sequence", signature: { domain: "Function" } }] }], "linear-algebra": [], logic: fc, numeric: [], other: [], relop: { functions: [{ name: "Equal", commutative: true, complexity: 11e3, signature: { domain: "RelationalOperator", evaluate: (e5, t2) => {
  if (t2.length < 2)
    return e5.symbol("True");
  let i2;
  for (const n2 of t2)
    if (i2) {
      if (false === i2.isEqual(n2))
        return e5.symbol("False");
    } else
      i2 = n2;
  return e5.symbol("True");
} } }, { name: "NotEqual", wikidata: "Q28113351", commutative: true, complexity: 11e3, signature: { domain: "RelationalOperator", evaluate: (e5, t2) => {
  if (t2.length < 2)
    return e5.symbol("False");
  let i2;
  for (const n2 of t2)
    if (i2) {
      if (true === i2.isEqual(n2))
        return e5.symbol("False");
    } else
      i2 = n2;
  return e5.symbol("True");
} } }, { name: "Less", complexity: 11e3, signature: { domain: "RelationalOperator", evaluate: (e5, t2) => {
  if (t2.length < 2)
    return e5.symbol("True");
  let i2;
  for (const n2 of t2) {
    if (!n2.isNumber)
      return;
    if (i2) {
      const t3 = e5.fn("Subtract", [n2, i2]).N().sgn;
      if (null == t3)
        return;
      if (t3 <= 0)
        return e5.symbol("False");
      i2 = n2;
    } else
      i2 = n2;
  }
  return e5.symbol("True");
} } }, { name: "NotLess", complexity: 11e3, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("Less", t2)]) } }, { name: "Greater", complexity: 11e3, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Less", t2.reverse()), evaluate: (e5, t2) => {
  if (t2.length < 2)
    return e5.symbol("True");
  let i2;
  for (const n2 of t2) {
    if (!n2.isNumber)
      return;
    if (i2) {
      const t3 = e5.fn("Subtract", [n2, i2]).N().sgn;
      if (null == t3)
        return;
      if (t3 >= 0)
        return e5.symbol("False");
      i2 = n2;
    } else
      i2 = n2;
  }
  return e5.symbol("True");
} } }, { name: "NotGreater", complexity: 11e3, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("Greater", t2)]) } }, { name: "LessEqual", complexity: 11e3, signature: { domain: "RelationalOperator", evaluate: (e5, t2) => {
  if (t2.length < 2)
    return e5.symbol("True");
  let i2;
  for (const n2 of t2) {
    if (!n2.isNumber)
      return;
    if (i2) {
      const t3 = e5.fn("Subtract", [n2, i2]).N().sgn;
      if (null == t3)
        return;
      if (t3 < 0)
        return e5.symbol("False");
      i2 = n2;
    } else
      i2 = n2;
  }
  return e5.symbol("True");
} } }, { name: "NotLessNotEqual", complexity: 11e3, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("LessEqual", t2)]) } }, { name: "GreaterEqual", complexity: 11e3, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("LessEqual", t2.reverse()), evaluate: (e5, t2) => {
  if (t2.length < 2)
    return e5.symbol("True");
  let i2;
  for (const n2 of t2) {
    if (!n2.isNumber)
      return;
    if (i2) {
      const t3 = e5.fn("Subtract", [n2, i2]).N().sgn;
      if (null == t3)
        return;
      if (t3 > 0)
        return e5.symbol("False");
      i2 = n2;
    } else
      i2 = n2;
  }
  return e5.symbol("True");
} } }, { name: "NotGreaterNotEqual", complexity: 11e3, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("GreaterEqual", t2)]) } }, { name: "TildeFullEqual", description: "Indicate isomorphism, congruence and homotopic equivalence", signature: { domain: "RelationalOperator" } }, { name: "NotTildeFullEqual", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("TildeFullEqual", t2)]) } }, { name: "TildeEqual", description: "Approximately or asymptotically equal", complexity: 11e3, signature: { domain: "RelationalOperator" } }, { name: "NotTildeEqual", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("TildeEqual", t2)]) } }, { name: "Approx", complexity: 11100, signature: { domain: "RelationalOperator" } }, { name: "NotApprox", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("Approx", t2)]) } }, { name: "ApproxEqual", complexity: 11100, signature: { domain: "RelationalOperator" } }, { name: "NotApproxEqual", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("ApproxEqual", t2)]) } }, { name: "ApproxNotEqual", complexity: 11100, signature: { domain: "RelationalOperator" } }, { name: "NotApproxNotEqual", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("ApproxNotEqual", t2)]) } }, { name: "Precedes", complexity: 11100, signature: { domain: "RelationalOperator" } }, { name: "NotPrecedes", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("Precedes", t2)]) } }, { name: "Succeeds", signature: { domain: "RelationalOperator" } }, { name: "NotSucceeds", complexity: 11100, signature: { domain: "RelationalOperator", canonical: (e5, t2) => e5._fn("Not", [e5._fn("Succeeds", t2)]) } }] }, polynomials: wc, physics: { symbols: [{ name: "Mu-0", description: "Vaccum permeability", constant: true, wikidata: "Q1515261", domain: "RealNumber", value: 125663706212e-17 }] }, statistics: [], trigonometry: Sc, units: [] };
function Kc(e5) {
  if ("object" != typeof e5 || !("name" in e5) || !e5.name)
    throw Error("Missing name for definition" + JSON.stringify(e5));
  const t2 = e5.name.normalize();
  if (!cs(t2))
    throw Error("Invalid definition name " + t2);
  return t2;
}
function Rc(e5, t2) {
  var i2, n2;
  if (!e5.context)
    throw Error("No context available");
  null !== (i2 = (n2 = e5.context).symbolTable) && void 0 !== i2 || (n2.symbolTable = { symbols: /* @__PURE__ */ new Map(), functions: /* @__PURE__ */ new Map(), symbolWikidata: /* @__PURE__ */ new Map(), functionWikidata: /* @__PURE__ */ new Map() });
  const r2 = e5.context.symbolTable;
  if (t2.symbols)
    for (const i3 of t2.symbols) {
      const t3 = Kc(i3), n3 = new Oc(e5, i3);
      if (i3.wikidata) {
        if (r2.symbolWikidata.has(i3.wikidata))
          throw Error(`Duplicate symbol with wikidata ${i3.wikidata}, ${t3} and ${r2.symbolWikidata.get(i3.wikidata).name}`);
        r2.symbolWikidata.set(i3.wikidata, n3);
      }
      if (r2.symbols.has(t3))
        throw Error(`Duplicate symbol definition ${t3}:
${JSON.stringify(r2.symbols.get(t3))}
${JSON.stringify(i3)}`);
      r2.symbols.set(t3, n3);
    }
  if (t2.functions)
    for (const i3 of t2.functions) {
      const t3 = Kc(i3), n3 = Bc(e5, i3);
      if (i3.wikidata) {
        if (r2.functionWikidata.has(i3.wikidata))
          throw Error(`Duplicate function with wikidata ${i3.wikidata}, ${t3} and ${r2.functionWikidata.get(i3.wikidata).name}`);
        r2.functionWikidata.set(i3.wikidata, n3);
      }
      if (r2.functions.has(t3))
        throw Error(`Duplicate function definition ${t3}:
${JSON.stringify(r2.symbols.get(t3))}
${JSON.stringify(i3)}`);
      r2.functions.set(t3, n3);
    }
}
function jc(e5) {
  return Number.isInteger(e5) ? Math.floor(Math.log2(Math.abs(e5)) / Math.log2(10)) + (e5 > 0 ? 1 : 2) : 2;
}
var Hc = function e4(t2) {
  var i2, n2;
  if (t2.symbol)
    return 1;
  if (t2.isLiteral) {
    if (t2.isZero)
      return 1;
    if (t2.isInteger && null !== t2.asFloat)
      return jc(t2.asFloat);
    const [e5, i3] = t2.rationalValue;
    if (null !== e5 && null !== i3)
      return jc(e5) + jc(i3) + 1;
    if (t2.complexValue) {
      const e6 = t2.complexValue;
      return jc(e6.re) + jc(e6.im) + 1;
    }
    if (t2.isNumber)
      return 2;
  }
  const r2 = t2.head;
  return ("string" == typeof r2 ? 1 : e4(r2)) + (null !== (n2 = null === (i2 = t2.ops) || void 0 === i2 ? void 0 : i2.reduce((t3, i3) => t3 + e4(i3), 0)) && void 0 !== n2 ? n2 : 0);
};
var Wc = class {
  constructor(e5) {
    this._items = e5 ? e5 instanceof Wc ? new Map(e5._items) : new Map(e5) : /* @__PURE__ */ new Map();
  }
  has(e5) {
    for (const t2 of this._items.keys())
      if (t2.isSame(e5))
        return true;
    return false;
  }
  get(e5) {
    for (const [t2, i2] of this._items)
      if (t2.isSame(e5))
        return i2;
  }
  clear() {
    this._items.clear();
  }
  set(e5, t2) {
    for (const i2 of this._items.keys())
      if (i2.isSame(e5))
        return void this._items.set(i2, t2);
    this._items.set(e5, t2);
  }
  delete(e5) {
    this._items.delete(e5);
  }
  [Symbol.iterator]() {
    return this._items.entries();
  }
  entries() {
    return this._items.entries();
  }
};
var Zc = class extends Zl {
  constructor(e5, t2, i2) {
    super(e5, i2), this._pattern = Ol(t2) ? e5.parse(t2) : e5.box(t2), this._pattern.isCanonical && (this._canonicalPattern = this._pattern);
  }
  get hash() {
    return Hl("Pattern") ^ this._pattern.hash;
  }
  unbind() {
    var e5;
    this._pattern.unbind(), null === (e5 = this._canonicalPattern) || void 0 === e5 || e5.unbind();
  }
  get json() {
    return du(this.engine, "Pattern", [this._pattern]);
  }
  get head() {
    return "Pattern";
  }
  get domain() {
    return this.engine.domain("Pattern");
  }
  get isCanonical() {
    return true;
  }
  set isCanonical(e5) {
  }
  isSame(e5) {
    return this === e5 || e5 instanceof Zc && this._pattern.isSame(e5._pattern);
  }
  isEqual(e5) {
    return e5 instanceof Zc && this._pattern.isEqual(e5._pattern);
  }
  match(e5, t2) {
    var i2, n2;
    let r2 = this._pattern;
    return (null == t2 ? void 0 : t2.exact) || (this._canonicalPattern || (this._canonicalPattern = this._pattern.canonical), r2 = this._canonicalPattern), function(e6, t3, i3) {
      var n3;
      return Uc(e6, t3, {}, { numericTolerance: null !== (n3 = null == i3 ? void 0 : i3.numericTolerance) && void 0 !== n3 ? n3 : 1e-10 }) || null;
    }(e5, r2, { recursive: null !== (i2 = null == t2 ? void 0 : t2.recursive) && void 0 !== i2 && i2, numericTolerance: null !== (n2 = null == t2 ? void 0 : t2.numericTolerance) && void 0 !== n2 ? n2 : 0 });
  }
  test(e5, t2) {
    return null !== this.match(e5, t2);
  }
  count(e5, t2) {
    let i2 = 0;
    for (const n2 of e5)
      null !== this.match(n2, t2) && (i2 += 1);
    return i2;
  }
  subs(e5) {
    return new Zc(this.engine, this._pattern.subs(e5).canonical);
  }
};
function Gc(e5, t2, i2) {
  const n2 = function(e6) {
    const t3 = e6.match(/^__?_?([a-zA-Z0-9]+)/);
    return null === t3 ? "" : t3[1];
  }(e5);
  return "" === n2 ? i2 : i2[n2] ? t2.isSame(t2.engine.box(i2[n2])) ? i2 : null : (i2[n2] = t2, i2);
}
function Uc(e5, t2, i2, n2) {
  const r2 = e5.engine;
  if (t2 instanceof Vu)
    return e5 instanceof Vu ? 0 === n2.numericTolerance ? t2.isSame(e5) ? Jc(r2, i2) : null : t2.isEqualWithTolerance(e5, n2.numericTolerance) ? Jc(r2, i2) : null : null;
  const a2 = t2.string;
  if (null !== a2)
    return e5.string === a2 ? Jc(r2, i2) : null;
  const o2 = t2.symbol;
  if (null !== o2)
    return o2.startsWith("_") ? Gc(o2, e5, Jc(r2, i2)) : o2 === e5.symbol ? Jc(r2, i2) : null;
  if (t2.nops !== e5.nops)
    return null;
  const s2 = t2.keys;
  if (null !== s2) {
    const t3 = e5.keys;
    if (null === t3)
      return null;
    for (const e6 of s2) {
      const r3 = Uc(t3[e6], s2[e6], i2, n2);
      if (null === r3)
        return null;
      i2 = r3;
    }
    return Jc(r2, i2);
  }
  if (t2.ops) {
    const a3 = t2.head;
    if ("string" == typeof a3 && a3.startsWith("_"))
      return Gc(a3, r2.box(e5.head), Jc(r2, i2));
    {
      const t3 = Uc(r2.box(e5.head), r2.pattern(a3), i2, n2);
      if (null === t3)
        return null;
      i2 = t3;
    }
    const o3 = e5.ops;
    let s3 = { ...i2 }, l2 = 0;
    const u2 = t2.ops.map((e6) => r2.pattern(e6));
    for (; l2 < t2.nops; ) {
      const e6 = u2[l2], t3 = e6.symbol;
      if (null !== t3)
        if (t3.startsWith("__")) {
          let e7 = 0;
          if (void 0 === u2[l2 + 1])
            e7 = o3.length + 1;
          else {
            let t4 = false;
            for (; !t4 && e7 < o3.length; )
              t4 = null !== Uc(o3[e7], u2[l2 + 1], i2, n2), e7 += 1;
            if (!t4)
              return null;
          }
          if (!t3.startsWith("___") && e7 <= 1)
            return null;
          s3 = Gc(t3, r2.fn("Sequence", o3.splice(0, e7 - 1)), Jc(r2, s3));
        } else if (t3.startsWith("_"))
          s3 = Gc(t3, o3.shift(), Jc(r2, s3));
        else {
          const t4 = Uc(o3.shift(), e6, i2, n2);
          if (null === t4)
            return null;
          s3 = { ...s3, ...t4 };
        }
      else {
        const t4 = Uc(o3.shift(), e6, i2, n2);
        if (null === t4)
          return null;
        s3 = { ...s3, ...t4 };
      }
      if (null === s3)
        return null;
      l2 += 1;
    }
    return Jc(r2, s3);
  }
  return null;
}
function Jc(e5, t2) {
  return null === t2 ? null : Object.fromEntries(Object.entries(t2).map(([t3, i2]) => [t3, e5.box(i2)]));
}
function Xc(e5) {
  return null != e5 && "constant" in e5;
}
var Yc = class extends Zl {
  constructor(e5, t2, i2) {
    super(e5, i2), this._scope = e5.context, this._name = t2, this._def = null, e5._register(this);
  }
  get hash() {
    return void 0 === this._hash && (this._hash = Hl(this._name)), this._hash;
  }
  unbind() {
    var e5;
    return null === (e5 = this._def) || void 0 === e5 ? void 0 : e5.reset();
  }
  get isPure() {
    var e5, t2, i2, n2, r2;
    return null !== (r2 = null !== (i2 = (null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.constant) && (null === (t2 = this.symbolDefinition.value) || void 0 === t2 ? void 0 : t2.isPure)) && void 0 !== i2 ? i2 : null === (n2 = this.functionDefinition) || void 0 === n2 ? void 0 : n2.pure) && void 0 !== r2 && r2;
  }
  get isFree() {
    var e5;
    return !(null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.value);
  }
  get isConstant() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.constant) && void 0 !== t2 && t2;
  }
  get isCanonical() {
    var e5;
    return false !== (null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.hold);
  }
  set isCanonical(e5) {
  }
  get canonical() {
    var e5, t2, i2, n2;
    return false === (null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.hold) && null !== (n2 = null !== (i2 = null === (t2 = this.symbolDefinition.value) || void 0 === t2 ? void 0 : t2.value) && void 0 !== i2 ? i2 : this.symbolDefinition.value) && void 0 !== n2 ? n2 : this;
  }
  get wikidata() {
    var e5, t2, i2;
    return null !== (i2 = null !== (e5 = this._wikidata) && void 0 !== e5 ? e5 : null === (t2 = this.baseDefinition) || void 0 === t2 ? void 0 : t2.wikidata) && void 0 !== i2 ? i2 : "";
  }
  get description() {
    return this.baseDefinition && this.baseDefinition.description ? "string" == typeof this.baseDefinition.description ? [this.baseDefinition.description] : this.baseDefinition.description : [];
  }
  get url() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.baseDefinition) || void 0 === e5 ? void 0 : e5.url) && void 0 !== t2 ? t2 : "";
  }
  get complexity() {
    return 7;
  }
  get head() {
    return "Symbol";
  }
  get symbol() {
    return this._name;
  }
  get isNothing() {
    return "Nothing" === this._name;
  }
  get isLiteral() {
    return false;
  }
  get baseDefinition() {
    var e5;
    return null === this._def && this.bind(this._scope), null !== (e5 = this._def) && void 0 !== e5 ? e5 : void 0;
  }
  get symbolDefinition() {
    return null === this._def && this.bind(this._scope), Xc(this._def) ? this._def : void 0;
  }
  get functionDefinition() {
    return null === this._def && this.bind(this._scope), null != (e5 = this._def) && "signature" in e5 ? this._def : void 0;
    var e5;
  }
  bind(e5) {
    if ("_" === this._name[0] || null === e5)
      return void (this._def = void 0);
    let t2;
    if (t2 = this.engine.lookupSymbol(this._name, this._wikidata, e5), (null == t2 ? void 0 : t2.wikidata) && this._wikidata && t2.wikidata !== this._wikidata && (t2 = void 0), t2)
      return this._name = t2.name, void (this._def = t2);
    t2 = this.engine.lookupFunction(this._name, e5), t2 ? this._def = t2 : null !== this.engine.defaultDomain && (this._def = this.engine.defineSymbol({ name: this._name, wikidata: this._wikidata, domain: this.engine.defaultDomain, ...Ic(this.engine.defaultDomain) }), this._name = this._def.name);
  }
  get value() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.value;
  }
  set value(e5) {
    var t2, i2;
    if ("_" === this._name[0])
      throw Error(`The value of the wildcard "${this._name}" cannot be changed`);
    let n2;
    if (this.engine.forget(this._name), void 0 !== e5) {
      const i3 = this.engine.box(e5);
      n2 = null !== (t2 = i3.value) && void 0 !== t2 ? t2 : i3.evaluate();
    }
    (null == n2 ? void 0 : n2.domain.isCompatible("Function")) ? this._def = this.engine.defineFunction({ name: this._name, signature: { domain: n2.domain, evaluate: n2 } }) : this._def && Xc(this._def) ? this._def.value = n2 : this._def = this.engine.defineSymbol({ name: this._name, value: n2, domain: null !== (i2 = this.engine.defaultDomain) && void 0 !== i2 ? i2 : this.engine.domain("Anything") });
  }
  get numericValue() {
    var e5, t2;
    return null === (t2 = null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.value) || void 0 === t2 ? void 0 : t2.numericValue;
  }
  get domain() {
    var e5, t2;
    return this.functionDefinition ? this.engine.domain("Function") : null !== (t2 = null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.domain) && void 0 !== t2 ? t2 : this.engine.domain("Anything");
  }
  set domain(e5) {
    if ("_" === this._name[0])
      throw Error(`The domain of the wildcard "${this._name}" cannot be changed`);
    e5.isCompatible("Function") ? (this.engine.forget(this._name), this._def = this.engine.defineFunction({ name: this._name, signature: { domain: e5 } })) : Xc(this._def) ? this._def.domain = e5 : (this.engine.forget(this._name), this._def = this.engine.defineSymbol({ name: this._name, domain: e5, ...Ic(e5) }));
  }
  get explicitDomain() {
    var e5, t2;
    return this.functionDefinition ? this.engine.domain("Function") : null !== (t2 = null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.domain) && void 0 !== t2 ? t2 : null;
  }
  get json() {
    return hu(this.engine, this._name, { latex: this._latex, wikidata: this._wikidata });
  }
  get sgn() {
    var e5, t2, i2, n2;
    const r2 = null === (e5 = this.value) || void 0 === e5 ? void 0 : e5.sgn;
    return void 0 !== r2 ? r2 : true === (null === (t2 = this.symbolDefinition) || void 0 === t2 ? void 0 : t2.zero) ? 0 : true === (null === (i2 = this.symbolDefinition) || void 0 === i2 ? void 0 : i2.positive) ? 1 : true === (null === (n2 = this.symbolDefinition) || void 0 === n2 ? void 0 : n2.negative) ? -1 : void 0;
  }
  has(e5) {
    return "string" == typeof e5 ? this._name === e5 : e5.includes(this._name);
  }
  isSame(e5) {
    return this === e5 || e5 instanceof Yc && this._name === e5._name;
  }
  match(e5, t2) {
    return e5 instanceof Yc && this._name === e5._name ? {} : null;
  }
  isEqual(e5) {
    var t2;
    if (this === e5)
      return true;
    if (null !== e5.symbol)
      return e5.symbol === this._name;
    const i2 = null === (t2 = this.symbolDefinition) || void 0 === t2 ? void 0 : t2.value;
    if (i2)
      return i2.isEqual(e5);
    if (e5.isZero) {
      if (this.isZero)
        return true;
      if (this.isNotZero)
        return false;
    }
    return this.isZero && e5.isNotZero || this.engine.ask(["NotEqual", this, e5]).length, false;
  }
  isLess(e5) {
    if (null !== e5.symbol && e5.symbol === this._name)
      return false;
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 < 0;
    }
  }
  isLessEqual(e5) {
    if (null !== e5.symbol && e5.symbol === this._name)
      return true;
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 <= 0;
    }
    return this.isLess(e5) || this.isEqual(e5);
  }
  isGreater(e5) {
    if (null !== e5.symbol && e5.symbol === this._name)
      return false;
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 > 0;
    }
  }
  isGreaterEqual(e5) {
    if (null !== e5.symbol && e5.symbol === this._name)
      return true;
    if (e5.isZero) {
      const e6 = this.sgn;
      if (null === e6)
        return false;
      if (void 0 !== e6)
        return e6 >= 0;
    }
    return this.isGreater(e5) || this.isEqual(e5);
  }
  get isFunction() {
    return !!this.functionDefinition;
  }
  get isZero() {
    var e5, t2, i2, n2;
    return null !== (t2 = null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.zero) && void 0 !== t2 ? t2 : null === (n2 = null === (i2 = this.symbolDefinition) || void 0 === i2 ? void 0 : i2.value) || void 0 === n2 ? void 0 : n2.isZero;
  }
  get isNotZero() {
    var e5;
    const t2 = null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.notZero;
    if ("boolean" == typeof t2)
      return t2;
    const i2 = this.sgn;
    return "number" == typeof i2 ? 0 !== i2 : void 0;
  }
  get isOne() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.one;
  }
  get isNegativeOne() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.negativeOne;
  }
  get isOdd() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.odd;
  }
  get isEven() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.even;
  }
  get isPrime() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.prime;
  }
  get isComposite() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.composite;
  }
  get isInfinity() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.infinity;
  }
  get isNaN() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.NaN;
  }
  get isPositive() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.positive;
  }
  get isNonPositive() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.nonPositive;
  }
  get isNegative() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.negative;
  }
  get isNonNegative() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.nonNegative;
  }
  get isNumber() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.number;
  }
  get isInteger() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.integer;
  }
  get isRational() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.rational;
  }
  get isAlgebraic() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.rational;
  }
  get isReal() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.real;
  }
  get isExtendedReal() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.extendedReal;
  }
  get isComplex() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.complex;
  }
  get isImaginary() {
    var e5;
    return null === (e5 = this.symbolDefinition) || void 0 === e5 ? void 0 : e5.imaginary;
  }
  simplify(e5) {
    var t2, i2;
    const n2 = (null == e5 ? void 0 : e5.rules) && null !== (t2 = this.replace(e5.rules)) && void 0 !== t2 ? t2 : this;
    if (false === (null === (i2 = n2.symbolDefinition) || void 0 === i2 ? void 0 : i2.hold)) {
      const t3 = n2.value;
      if (t3)
        return t3.simplify(e5);
    }
    return n2;
  }
  evaluate(e5) {
    var t2, i2;
    const n2 = this.symbolDefinition;
    return n2 ? true === n2.hold ? this : null !== (i2 = null === (t2 = n2.value) || void 0 === t2 ? void 0 : t2.evaluate(e5)) && void 0 !== i2 ? i2 : this : this;
  }
  N(e5) {
    var t2, i2, n2, r2;
    const a2 = null === (t2 = this.symbolDefinition) || void 0 === t2 ? void 0 : t2.value;
    return null !== (r2 = null !== (n2 = null !== (i2 = null == a2 ? void 0 : a2.N(e5)) && void 0 !== i2 ? i2 : null == a2 ? void 0 : a2.evaluate(e5)) && void 0 !== n2 ? n2 : a2) && void 0 !== r2 ? r2 : this;
  }
  replace(e5, t2) {
    return Tu(this, e5, t2);
  }
  subs(e5) {
    return e5[this._name] ? this.engine.box(e5[this._name]) : this;
  }
};
var Qc = class {
  constructor(e5) {
    var t2, i2, n2, r2;
    if (this._cache = {}, this._commonSymbols = { True: null, False: null, Maybe: null, All: null, Nothing: null, None: null, Undefined: null, Pi: null, ImaginaryUnit: null }, this._commonNumbers = { 0: null, 1: null, 2: null, 3: null, 4: null, 5: null, 6: null, 7: null, 8: null, 9: null, 10: null }, this._commonDomains = { Anything: null, Nothing: null, Boolean: null, MaybeBoolean: null, String: null, Domain: null, Symbol: null, Integer: null, RationalNumber: null, AlgebraicNumber: null, RealNumber: null, ExtendedRealNumber: null, ImaginaryNumber: null, ComplexNumber: null, ExtendedComplexNumber: null, Number: null, PositiveInteger: null, TranscendentalNumber: null, PositiveNumber: null, Function: null, NumericFunction: null, RealFunction: null, TrigonometricFunction: null, HyperbolicFunction: null, LogicOperator: null, Predicate: null, RelationalOperator: null, Expression: null, BooleanExpression: null, NumericExpression: null }, void 0 !== e5 && "object" != typeof e5)
      throw Error("Unexpected argument");
    this._latexDictionary = null == e5 ? void 0 : e5.latexDictionary, this._jsonSerializationOptions = { exclude: [], shorthands: ["function", "symbol", "string", "dictionary", "number"], metadata: [], repeatingDecimal: true }, this._stats = { highwaterMark: 0, symbols: /* @__PURE__ */ new Set(), expressions: /* @__PURE__ */ new Set() }, this._defaultDomain = null, this._numericMode = null !== (t2 = null == e5 ? void 0 : e5.numericMode) && void 0 !== t2 ? t2 : "auto", this._precision = Math.max(null !== (i2 = null == e5 ? void 0 : e5.numericPrecision) && void 0 !== i2 ? i2 : 100, Math.floor(Ll)), this._decimal = Xo.clone({ precision: this._precision }), this.tolerance = null !== (n2 = null == e5 ? void 0 : e5.tolerance) && void 0 !== n2 ? n2 : 1e-10, this._ZERO = new Vu(this, 0), this._ONE = new Vu(this, 1), this._TWO = new Vu(this, 2), this._HALF = new Vu(this, [1, 2]), this._NEGATIVE_ONE = new Vu(this, -1), this._I = new Vu(this, Qo.exports.Complex.I), this._NAN = new Vu(this, NaN), this._POSITIVE_INFINITY = new Vu(this, 1 / 0), this._NEGATIVE_INFINITY = new Vu(this, -1 / 0), this._COMPLEX_INFINITY = new Vu(this, Qo.exports.Complex.INFINITY), this.reset();
    const a2 = null !== (r2 = null == e5 ? void 0 : e5.symbolTables) && void 0 !== r2 ? r2 : Qc.getSymbolTables();
    this.pushScope({ symbolTable: a2, scope: { warn: (e6) => {
      for (const t3 of e6)
        t3.message;
    }, timeLimit: 2, memoryLimit: 1, recursionLimit: 1024 } }), null === (null == e5 ? void 0 : e5.assumptions) ? this.pushScope() : this.pushScope({ assumptions: null == e5 ? void 0 : e5.assumptions });
    for (const e6 of Object.keys(this._commonDomains))
      this._commonDomains[e6] && !this._commonDomains[e6].symbolDefinition && this._commonDomains[e6].bind(this.context);
    for (const e6 of Object.keys(this._commonSymbols))
      this._commonSymbols[e6] && !this._commonSymbols[e6].symbolDefinition && this._commonSymbols[e6].bind(this.context);
    if (null == e5 ? void 0 : e5.defaultDomain) {
      const t3 = this.domain(e5.defaultDomain);
      t3.isValid ? this._defaultDomain = t3 : this._defaultDomain = this.domain("ExtendedRealNumber");
    } else
      this._defaultDomain = this.domain("ExtendedRealNumber");
  }
  static getSymbolTables(e5 = "all") {
    return $c(e5);
  }
  reset() {
    var e5, t2;
    this._DECIMAL_NEGATIVE_ONE = this.decimal(-1), this._DECIMAL_NAN = this.decimal(NaN), this._DECIMAL_ZERO = this.decimal(0), this._DECIMAL_ONE = this.decimal(1), this._DECIMAL_TWO = this.decimal(2), this._DECIMAL_HALF = this._DECIMAL_ONE.div(this._DECIMAL_TWO), this._DECIMAL_PI = this._DECIMAL_NEGATIVE_ONE.acos();
    const i2 = this._stats.symbols.values(), n2 = this._stats.expressions.values();
    this._stats.symbols = /* @__PURE__ */ new Set(), this._stats.expressions = /* @__PURE__ */ new Set();
    for (const e6 of i2)
      e6.unbind();
    for (const e6 of n2)
      e6.unbind();
    for (const e6 of Object.values(this._commonDomains))
      null == e6 || e6.unbind();
    for (const e6 of Object.values(this._commonSymbols))
      null == e6 || e6.unbind();
    let r2 = this.context;
    for (; r2; ) {
      if (null === (e5 = r2.symbolTable) || void 0 === e5 ? void 0 : e5.functions)
        for (const [e6, t3] of r2.symbolTable.functions)
          t3.reset();
      if (null === (t2 = r2.symbolTable) || void 0 === t2 ? void 0 : t2.symbols)
        for (const [e6, t3] of r2.symbolTable.symbols)
          t3.reset();
      r2 = r2.parentScope;
    }
    for (const e6 of Object.keys(this._cache))
      this._cache[e6].value && (this._cache[e6].purge ? this._cache[e6].value = this._cache[e6].purge(this._cache[e6].value) : delete this._cache[e6]);
  }
  _register(e5) {
    this._stats.highwaterMark += 1;
  }
  _unregister(e5) {
  }
  get stats() {
    const e5 = this._stats.expressions;
    return this._stats.expressions = null, this._stats.expressions = e5, { ...this._stats };
  }
  get precision() {
    return this._precision;
  }
  set precision(e5) {
    if ("machine" === e5 && (e5 = Math.floor(Ll)), e5 !== this._precision) {
      if ("number" != typeof e5 || e5 <= 0)
        throw Error('Expected "machine" or a positive number');
      this._latexSyntax && this.latexSyntax.updateOptions({ precision: e5, avoidExponentsInRange: [-6, e5] }), this._precision = Math.max(e5, Math.floor(Ll)), this._decimal = this._decimal.config({ precision: this._precision }), this.reset();
    }
  }
  get numericMode() {
    return this._numericMode;
  }
  set numericMode(e5) {
    if (e5 !== this._numericMode) {
      if ("string" != typeof e5)
        throw Error("Expected a string");
      this._numericMode = e5, "complex" !== e5 && "machine" !== e5 || (this._precision = Math.floor(Ll)), this._latexSyntax && this.latexSyntax.options.precision > this._precision && this.latexSyntax.updateOptions({ precision: this._precision }), this.reset();
    }
  }
  get timeLimit() {
    let e5 = this.context;
    for (; e5; ) {
      if (void 0 !== e5.timeLimit)
        return e5.timeLimit;
      e5 = e5.parentScope;
    }
    return 2;
  }
  get iterationLimit() {
    let e5 = this.context;
    for (; e5; ) {
      if (void 0 !== e5.iterationLimit)
        return e5.iterationLimit;
      e5 = e5.parentScope;
    }
    return 1024;
  }
  get recursionLimit() {
    let e5 = this.context;
    for (; e5; ) {
      if (void 0 !== e5.recursionLimit)
        return e5.recursionLimit;
      e5 = e5.parentScope;
    }
    return 1024;
  }
  get defaultDomain() {
    return this._defaultDomain;
  }
  set defaultDomain(e5) {
    if (null === e5)
      this._defaultDomain = null;
    else {
      const t2 = this.domain(e5);
      if (!t2.isValid)
        throw Error("Invalid domain " + e5);
      this._defaultDomain = t2;
    }
  }
  get tolerance() {
    return this._tolerance;
  }
  set tolerance(e5) {
    this._tolerance = "number" == typeof e5 && Number.isFinite(e5) ? Math.max(e5, 0) : 1e-10, this._decimalTolerance = this.decimal(this._tolerance);
  }
  decimal(e5) {
    return new this._decimal(e5);
  }
  complex(e5, t2) {
    return new Qo.exports.Complex(e5, t2);
  }
  chop(e5) {
    return "number" == typeof e5 && Math.abs(e5) <= this._tolerance || e5 instanceof Xo && e5.abs().lte(this._decimalTolerance) || e5 instanceof Qo.exports.Complex && Math.abs(e5.re) <= this._tolerance && Math.abs(e5.im) <= this._tolerance ? 0 : e5;
  }
  get latexSyntax() {
    return this._latexSyntax || (this._latexSyntax = new xl({ computeEngine: this, dictionary: this._latexDictionary, precision: this.precision, avoidExponentsInRange: [-6, this.precision], onError: (e5) => {
      throw Error(e5[0].message.toString());
    } })), this._latexSyntax;
  }
  static getLatexDictionary(e5 = "all") {
    return xl.getDictionary(e5);
  }
  set costFunction(e5) {
    "function" != typeof e5 && (this._cost = Hc), this._cost = e5;
  }
  get costFunction() {
    var e5;
    return null !== (e5 = this._cost) && void 0 !== e5 ? e5 : Hc;
  }
  lookupSymbol(e5, t2, i2) {
    var n2, r2;
    if ("string" != typeof e5)
      throw Error("Expected a string");
    if (e5.startsWith("_") || !this.context)
      return;
    let a2;
    if (null != i2 || (i2 = this.context), t2)
      for (; i2 && !a2; )
        a2 = null === (n2 = i2.symbolTable) || void 0 === n2 ? void 0 : n2.symbolWikidata.get(t2), i2 = i2.parentScope;
    if (e5.length > 0)
      for (i2 = this.context; i2 && !a2; )
        a2 = null === (r2 = i2.symbolTable) || void 0 === r2 ? void 0 : r2.symbols.get(e5), i2 = i2.parentScope;
    return a2;
  }
  lookupFunction(e5, t2) {
    var i2;
    if ("string" != typeof e5)
      throw Error("Expected a string");
    if (!e5.startsWith("_") && this.context)
      for (null != t2 || (t2 = this.context); t2; ) {
        const n2 = null === (i2 = t2.symbolTable) || void 0 === i2 ? void 0 : i2.functions.get(e5);
        if (n2)
          return n2;
        t2 = t2.parentScope;
      }
  }
  defineSymbol(e5) {
    if (!this.context)
      throw Error("Symbol cannot be defined: no scope available");
    const t2 = new Oc(this, e5);
    return this.context.symbolTable || (this.context.symbolTable = { symbols: /* @__PURE__ */ new Map(), functions: /* @__PURE__ */ new Map(), symbolWikidata: /* @__PURE__ */ new Map(), functionWikidata: /* @__PURE__ */ new Map() }), t2.name && this.context.symbolTable.symbols.set(t2.name, t2), t2.wikidata && this.context.symbolTable.symbolWikidata.set(t2.wikidata, t2), t2;
  }
  defineFunction(e5) {
    if (!this.context)
      throw Error("Function cannot be defined: no scope available");
    const t2 = Bc(this, e5);
    return this.context.symbolTable || (this.context.symbolTable = { symbols: /* @__PURE__ */ new Map(), functions: /* @__PURE__ */ new Map(), symbolWikidata: /* @__PURE__ */ new Map(), functionWikidata: /* @__PURE__ */ new Map() }), t2.name && this.context.symbolTable.functions.set(e5.name, t2), t2.wikidata && this.context.symbolTable.functionWikidata.set(t2.wikidata, t2), t2;
  }
  pushScope(e5) {
    var t2;
    if (void 0 !== e5 && "object" != typeof e5)
      throw Error("Expected an object literal");
    if (null === this.context)
      throw Error("No parent scope available");
    if (this.context = { ...null == e5 ? void 0 : e5.scope, parentScope: this.context, assumptions: this.context ? new Wc(this.context.assumptions) : new Wc() }, null == e5 ? void 0 : e5.symbolTable)
      if (Array.isArray(e5.symbolTable))
        for (const t3 of e5.symbolTable)
          Rc(this, t3);
      else
        Rc(this, e5.symbolTable);
    if (void 0 !== (null == e5 ? void 0 : e5.assumptions))
      for (const i2 of e5.assumptions)
        this.assume(null !== (t2 = this.parse(Pl(i2))) && void 0 !== t2 ? t2 : i2);
  }
  popScope() {
    var e5;
    if (!this.context)
      throw Error("No scope available");
    const t2 = null === (e5 = this.context) || void 0 === e5 ? void 0 : e5.parentScope;
    if (this.context.warnings) {
      const e6 = [...this.context.warnings];
      this.context.warnings = [], this.context.warn && this.context.warn(e6);
    }
    t2 && this.context.warnings && this.context.warnings.length > 0 && (t2.warnings ? t2.warnings = [...t2.warnings, ...this.context.warnings] : t2.warnings = [...this.context.warnings]), this.context = t2;
  }
  get assumptions() {
    if (!this.context)
      throw Error("No scope available");
    return this.context.assumptions || (this.context.assumptions = new Wc()), this.context.assumptions;
  }
  shouldContinueExecution() {
    return void 0 === this.deadline || this.deadline >= Date.now();
  }
  checkContinueExecution() {
    if (!this.shouldContinueExecution())
      throw Error("timeout");
  }
  assert(e5, t2, i2, n2) {
    e5 || this.signal(t2, i2, n2);
  }
  signal(e5, t2, i2) {
    "object" == typeof e5 && "message" in e5 ? i2 = e5.message : e5.latex, void 0 === i2 || "string" == typeof i2 || Array.isArray(i2) && i2.map((e6) => e6.toString()).join(", ");
  }
  cache(e5, t2, i2) {
    var n2;
    if (void 0 === this._cache[e5])
      try {
        this._cache[e5] = { build: t2, purge: i2, value: t2() };
      } catch (e6) {
      }
    return null === (n2 = this._cache[e5]) || void 0 === n2 ? void 0 : n2.value;
  }
  box(e5) {
    return Ru(this, e5);
  }
  fn(e5, t2, i2) {
    var n2, r2, a2, o2, s2, l2, u2, c2, d2, h2, m2;
    if ("Hold" === e5)
      return this._fn("Hold", t2, i2);
    if (t2 = t2.map((e6) => e6.canonical), "String" === e5)
      return this.string(t2.map((e6) => {
        var t3;
        return null !== (t3 = e6.string) && void 0 !== t3 ? t3 : e6.latex;
      }).join(""), i2);
    if ("Symbol" === e5)
      return this.symbol(t2.map((e6) => {
        var t3;
        return null !== (t3 = e6.string) && void 0 !== t3 ? t3 : e6.latex;
      }).join(""), i2);
    if (("Divide" === e5 || "Rational" === e5) && 2 === t2.length) {
      const [e6, i3] = [null !== (n2 = t2[0].machineValue) && void 0 !== n2 ? n2 : t2[0].asSmallInteger, null !== (r2 = t2[1].machineValue) && void 0 !== r2 ? r2 : t2[1].asSmallInteger];
      if (null !== e6 && null !== i3 && Number.isInteger(e6) && Number.isInteger(i3))
        return this.number([e6, i3]);
    }
    if ("Number" === e5) {
      if (1 === t2.length) {
        const e6 = t2[0], i3 = null !== (o2 = null !== (a2 = e6.decimalValue) && void 0 !== a2 ? a2 : e6.complexValue) && void 0 !== o2 ? o2 : e6.machineValue;
        if (null !== i3)
          return this.number(i3);
        const [n3, r3] = e6.rationalValue;
        if (null !== n3 && null !== r3)
          return this.number([n3, r3]);
      }
      return this._NAN;
    }
    if ("Complex" === e5) {
      if (1 === t2.length) {
        const e6 = t2[0].asFloat;
        return null !== e6 ? this.number(this.complex(0, e6)) : this.mul([t2[0], this._I]);
      }
      if (2 === t2.length) {
        const e6 = t2[0].asFloat, n3 = t2[1].asFloat;
        return null !== e6 && null !== n3 && this.number(this.complex(e6, n3)), 0 === n3 ? t2[0] : this.add([t2[0], this.mul([t2[1], this._I])], i2);
      }
    }
    if ("Negate" === e5 && 1 === t2.length)
      return Uu(null !== (s2 = t2[0]) && void 0 !== s2 ? s2 : this.error("missing"), i2);
    if ("Single" === e5 || "Pair" === e5 || "Triple" === e5 || "KeyValuePair" === e5)
      return this.tuple(t2, i2);
    if ("Dictionary" === e5) {
      const e6 = {};
      for (const i3 of t2)
        if ("Tuple" === i3.head) {
          const t3 = i3.op1;
          if (t3.isValid && !t3.isNothing) {
            i3.op2;
            let n3 = null !== (l2 = t3.symbol) && void 0 !== l2 ? l2 : t3.string;
            if (!n3 && t3.isLiteral) {
              const e7 = null !== (u2 = t3.machineValue) && void 0 !== u2 ? u2 : t3.asSmallInteger;
              e7 && Number.isFinite(e7) && Number.isInteger(e7) && (n3 = e7.toString());
            }
            n3 && e6[n3];
          }
        }
      return new Cu(this, e6, i2);
    }
    return "Add" === e5 ? this.add(t2, i2) : "Multiply" === e5 ? this.mul(t2, i2) : "Divide" === e5 ? this.divide(null !== (c2 = t2[0]) && void 0 !== c2 ? c2 : this.error("missing"), null !== (d2 = t2[1]) && void 0 !== d2 ? d2 : this.error("missing"), i2) : "Power" === e5 ? this.power(null !== (h2 = t2[0]) && void 0 !== h2 ? h2 : this.error("missing"), null !== (m2 = t2[1]) && void 0 !== m2 ? m2 : this.error("missing"), i2) : new Iu(this, e5, t2, i2).canonical;
  }
  _fn(e5, t2, i2) {
    const n2 = new Iu(this, e5, t2, i2);
    return n2.isCanonical = true, n2;
  }
  error(e5, t2) {
    if (t2 && Array.isArray(t2) && "Latex" === t2[0] && (void 0 !== t2[1] && t2[1] || (t2 = ""), "object" == typeof t2[1] && "str" in t2[1] && !t2[1].str && (t2 = "")), Array.isArray(e5) && "invalid-domain" === e5[0])
      return gu(this, ["Error", ["ErrorCode", "'invalid-domain'", e5[1]]]);
    const i2 = "string" == typeof e5 ? this.string(e5) : this._fn("ErrorCode", [this.string(e5[0]), ...e5.slice(1).map((e6) => this.box(e6).canonical)]);
    return t2 ? this._fn("Error", [i2, this.box(t2).canonical]) : this._fn("Error", [i2]);
  }
  add(e5, t2) {
    const i2 = Qu(this, e5);
    return void 0 !== (null == t2 ? void 0 : t2.latex) && (i2.latex = t2.latex), void 0 !== (null == t2 ? void 0 : t2.wikidata) && (i2.wikidata = t2.wikidata), i2;
  }
  mul(e5, t2) {
    const i2 = ac(this, e5);
    return void 0 !== (null == t2 ? void 0 : t2.latex) && (i2.latex = t2.latex), void 0 !== (null == t2 ? void 0 : t2.wikidata) && (i2.wikidata = t2.wikidata), i2;
  }
  power(e5, t2, i2) {
    var n2;
    let r2 = null;
    if ("number" == typeof t2 ? r2 = t2 : Array.isArray(t2) ? 1 === t2[1] && (r2 = t2[0]) : r2 = t2.machineValue, 1 === r2)
      return e5;
    if (-1 === r2 && e5.isLiteral) {
      const [t3, i3] = e5.rationalValue;
      if (null !== t3 && null !== i3)
        return this.number([i3, t3]);
      const n3 = e5.asSmallInteger;
      if (null !== n3)
        return this.number([1, n3]);
    }
    return ("number" == typeof t2 || Array.isArray(t2)) && (t2 = this.number(t2)), null !== (n2 = ic(this, e5, t2, i2)) && void 0 !== n2 ? n2 : this._fn("Power", [e5, t2], i2);
  }
  inverse(e5, t2) {
    var i2;
    let n2 = this._NEGATIVE_ONE;
    if ("Power" === e5.head) {
      if (e5.op2.isNegativeOne)
        return e5.op1;
      n2 = Uu(e5.op2), e5 = e5.op1;
    }
    return null !== (i2 = ic(this, e5, n2, t2)) && void 0 !== i2 ? i2 : this._fn("Power", [e5, n2], t2);
  }
  negate(e5, t2) {
    return Uu(e5, t2);
  }
  divide(e5, t2, i2) {
    const n2 = uc(this, e5, t2);
    return void 0 !== (null == i2 ? void 0 : i2.latex) && (n2.latex = i2.latex), void 0 !== (null == i2 ? void 0 : i2.wikidata) && (n2.wikidata = i2.wikidata), n2;
  }
  pair(e5, t2, i2) {
    return this._fn("Tuple", [e5.canonical, t2.canonical], i2);
  }
  tuple(e5, t2) {
    return this._fn("Tuple", e5.map((e6) => e6.canonical), t2);
  }
  string(e5, t2) {
    return new Ku(this, e5, t2);
  }
  symbol(e5, t2) {
    var i2;
    if ("NaN" === (e5 = e5.normalize()))
      return this._NAN;
    if ("Infinity" === e5)
      return this._POSITIVE_INFINITY;
    if ("+Infinity" === e5)
      return this._POSITIVE_INFINITY;
    if ("-Infinity" === e5)
      return this._NEGATIVE_INFINITY;
    if ("Half" === e5)
      return this._HALF;
    if (!cs(e5))
      return this.error(["invalid-symbol-name", { str: e5 }], ["Latex", { str: null !== (i2 = null == t2 ? void 0 : t2.latex) && void 0 !== i2 ? i2 : "" }]);
    if (void 0 !== (null == t2 ? void 0 : t2.latex))
      return new Yc(this, e5, t2);
    let n2 = this._commonSymbols[e5];
    return n2 ? (null == t2 ? void 0 : t2.wikidata) && n2.wikidata && n2.wikidata !== t2.wikidata ? new Yc(this, e5, t2) : n2 : null === n2 ? (n2 = new Yc(this, e5), this._commonSymbols[e5] = n2, n2) : new Yc(this, e5, t2);
  }
  domain(e5, t2) {
    var i2;
    return e5 instanceof fu ? e5 : (e5 instanceof Zl && e5.symbol && (e5 = e5.symbol), "string" == typeof e5 && (null === this._commonDomains[e5] && (this._commonDomains[e5] = gu(this, e5, t2)), this._commonDomains[e5]) ? this._commonDomains[e5] : xu(e5) ? gu(this, e5, t2) : this.error(["invalid-domain", { str: JSON.stringify(e5) }], ["Latex", { str: null !== (i2 = null == t2 ? void 0 : t2.latex) && void 0 !== i2 ? i2 : "" }]));
  }
  lambda(e5, t2) {
    const i2 = this.context;
    this.context = null;
    const n2 = this.box(e5);
    return this.context = i2, n2;
  }
  number(e5, t2) {
    var i2, n2;
    if (Array.isArray(e5) && 1 === e5[1] && (e5 = e5[0]), "number" == typeof e5) {
      if (-1 === e5)
        return this._NEGATIVE_ONE;
      if (null === this._commonNumbers[e5] && (this._commonNumbers[e5] = null !== (i2 = ju(this, e5)) && void 0 !== i2 ? i2 : null), this._commonNumbers[e5])
        return this._commonNumbers[e5];
    }
    return null !== (n2 = ju(this, e5, t2)) && void 0 !== n2 ? n2 : this._NAN;
  }
  rules(e5) {
    return Eu(this, e5);
  }
  pattern(e5) {
    return new Zc(this, e5);
  }
  parse(e5) {
    var t2;
    return "string" != typeof e5 ? null : this.box(this.latexSyntax.parse(null !== (t2 = Pl(e5)) && void 0 !== t2 ? t2 : e5));
  }
  serialize(e5) {
    return "object" == typeof e5 && "json" in e5 ? this.latexSyntax.serialize(e5.json) : this.latexSyntax.serialize(e5);
  }
  get latexOptions() {
    const e5 = this.latexSyntax;
    return new Proxy({ ...this.latexSyntax.options, ...this.latexSyntax.serializer.options }, { set: (t2, i2, n2) => i2 in t2 && (e5.updateOptions({ [i2]: n2 }), true) });
  }
  set latexOptions(e5) {
    this.latexSyntax.updateOptions(e5);
  }
  get jsonSerializationOptions() {
    return this._jsonSerializationOptions;
  }
  set jsonSerializationOptions(e5) {
    e5.exclude && (this._jsonSerializationOptions.exclude = [...e5.exclude]), e5.shorthands && ("all" === e5.shorthands || e5.shorthands.includes("all") ? this._jsonSerializationOptions.shorthands = ["function", "symbol", "string", "dictionary", "number"] : this._jsonSerializationOptions.shorthands = [...e5.shorthands]), e5.metadata && ("all" === e5.metadata || e5.metadata.includes("all") ? this._jsonSerializationOptions.metadata = ["latex", "wikidata"] : this._jsonSerializationOptions.metadata = [...e5.metadata]);
  }
  ask(e5) {
    const t2 = this.pattern(e5), i2 = [];
    for (const [e6, n2] of this.assumptions) {
      const r2 = t2.match(e6, { numericTolerance: this._tolerance });
      null !== r2 && true === n2 && i2.push(r2);
    }
    return i2;
  }
  infer(e5, t2) {
    if ("string" != typeof e5) {
      if (!e5.symbol)
        return "internal-error";
      e5 = e5.symbol;
    }
    return "ok";
  }
  assume(e5, t2) {
    try {
      const i2 = Pl(e5), n2 = i2 ? this.parse(i2) : this.box(e5);
      return t2 ? xu(t2) ? Au(this.box(["Element", n2, this.domain(t2)])) : Au(this.box(["Equal", n2, t2])) : Au(n2);
    } catch (e6) {
      return "internal-error";
    }
  }
  forget(e5) {
    if (!this.context)
      throw Error("No scope available");
    if (void 0 === e5)
      return this.context.symbolTable = void 0, void this.assumptions.clear();
    if (Array.isArray(e5))
      for (const t2 of e5)
        this.forget(t2);
    else if ("string" == typeof e5) {
      this.context.symbolTable && (this.context.symbolTable.symbols.delete(e5), this.context.symbolTable.symbolWikidata.delete(e5), this.context.symbolTable.functions.delete(e5), this.context.symbolTable.functionWikidata.delete(e5));
      for (const [t2, i2] of this.assumptions)
        $l(t2).includes(e5) && this.assumptions.delete(t2);
    }
  }
};
var ed = '@keyframes ML__caret-blink{0%,to{opacity:1}50%{opacity:0}}.ML__caret:after{animation:ML__caret-blink 1.05s step-end infinite forwards;border:none;border-radius:2px;border-right:2px solid var(--caret-color,var(--ML__caret-color));content:"";left:-1px;margin-right:-2px;position:relative}.ML__text-caret:after{animation:ML__caret-blink 1.05s step-end infinite forwards;border:none;border-radius:1px;border-right:1px solid var(--caret-color,var(--ML__caret-color));content:"";left:0;margin-right:-1px;position:relative}.ML__latex-caret:after{animation:ML__caret-blink 1.05s step-end infinite forwards;border:none;color:var(--caret-color,var(--ML__caret-color));content:"_";margin-right:calc(-1ex - 2px);position:relative}.ML__container{--ML__selection-background-color:hsl(var(--hue,212),97%,85%);--ML__text-highlight-background-color:hsla(var(--hue,212),40%,50%,0.1);--ML__contains-highlight-background-color:hsl(var(--hue,212),40%,95%);--ML__selection-color:currentColor;--ML__caret-color:hsl(var(--hue,212),40%,49%);--ML__smart-fence-color:currentColor;--ML__latex-color:var(--primary,hsl(var(--hue,212),40%,50%));--ML__placeholder-color:hsl(var(--hue,212),40%,49%);align-items:flex-end;display:flex;flex-flow:row;isolation:isolate;justify-content:space-between;min-height:39px;touch-action:none;width:100%}@media (prefers-color-scheme:dark){.ML__container{--ML__selection-background-color:hsl(var(--hue,212),25%,45%);--ML__text-highlight-background-color:hsla(var(--hue,212),40%,50%,0.2);--ML__contains-highlight-background-color:hsl(var(--hue,212),5%,34%);--ML__caret-color:hsl(var(--hue,212),60%,69%);--ML__latex-color:var(--primary,hsl(var(--hue,212),40%,50%));--ML__placeholder-color:hsl(var(--hue,212),60%,69%)}}.ML__content{align-items:center;align-self:center;display:flex;overflow:hidden;padding:2px 0 2px 1px;position:relative;width:100%}.ML__virtual-keyboard-toggle{box-sizing:border-box;display:none}.ML__virtual-keyboard-toggle>span{align-items:center;align-self:center;display:flex}.ML__virtual-keyboard-toggle.is-visible{fill:currentColor;align-items:center;align-self:center;background:transparent;border:1px solid transparent;border-radius:8px;color:var(--primary,hsl(var(--hue,212),40%,50%));cursor:pointer;display:flex;flex-direction:column;flex-shrink:0;height:34px;justify-content:center;margin-right:4px;padding:0;transition:background .2s cubic-bezier(.64,.09,.08,1);width:34px}.ML__virtual-keyboard-toggle.is-visible:hover{fill:currentColor;background:hsla(0,0%,70%,.5);border-radius:8px;color:#333}.ML__textarea__textarea{clip:rect(0 0 0 0);border:none;display:inline-block;font-family:KaTeX_Main;font-size:1em;height:1px;outline:none;position:absolute;resize:none;transform:scale(0);width:1px}.ML__focused .ML__text{background:var(--highlight-text,var(--ML__text-highlight-background-color))}.ML__smart-fence__close{color:var(--smart-fence-color,var(--ML__smart-fence-color));opacity:var(--smart-fence-opacity,.5)}.ML__focused .ML__selection{background:var(--selection-background-color-focused,var(--selection-background-color,var(--ML__selection-background-color)))!important}.ML__focused .ML__selected,.ML__focused .ML__selected .ML__contains-caret,.ML__focused .ML__selected .ML__placeholder,.ML__focused .ML__selected .ML__smart-fence__close{color:var(--selection-color-focused,var(--selection-color,var(--ML__selection-color)))!important}.ML__selection{background:var(--selection-background-color,var(--ML__selection-background-color))!important;box-sizing:border-box}.ML__selected,.ML__selected .ML__contains-caret,.ML__selected .ML__placeholder,.ML__selected .ML__smart-fence__close{color:var(--selection-color,var(--ML__selection-color));opacity:1}.ML__contains-caret .ML__sqrt-line,.ML__contains-caret .ML__sqrt-sign,.ML__contains-caret.ML__close,.ML__contains-caret.ML__open,.ML__contains-caret>.ML__close,.ML__contains-caret>.ML__open{color:var(--caret-color,var(--ML__caret-color))}.ML__contains-highlight{background:var(--contains-highlight-backround-color,var(--ML__contains-highlight));box-sizing:border-box}.ML__latex{color:var(--latex-color,var(--ML__latex-color));font-family:IBM Plex Mono,Source Code Pro,Consolas,Roboto Mono,Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Courier,monospace;font-weight:400}.ML__suggestion{opacity:.5}.ML__virtual-keyboard-toggle.is-visible.is-pressed:hover{fill:currentColor;background:hsl(var(--hue,212),25%,35%);color:#fafafa}.ML__virtual-keyboard-toggle:focus{border:2px solid var(--primary,hsl(var(--hue,212),40%,50%));border-radius:8px;outline:none}.ML__virtual-keyboard-toggle.is-active,.ML__virtual-keyboard-toggle.is-active:hover,.ML__virtual-keyboard-toggle.is-pressed{fill:currentColor;background:hsl(var(--hue,212),25%,35%);color:#fafafa}[data-ML__tooltip]{position:relative}[data-ML__tooltip][data-placement=top]:after{bottom:100%;top:inherit}[data-ML__tooltip]:after{background:#616161;border-radius:2px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12),0 3px 1px -2px rgba(0,0,0,.2);color:#fff;content:attr(data-ML__tooltip);display:none;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:12px;font-weight:400;max-width:200px;opacity:0;padding:8px;position:absolute;right:110%;text-align:center;transform:scale(.5);transition:all .15s cubic-bezier(.4,0,1,1);width:max-content;z-index:2}@media only screen and (max-width:767px){[data-ML__tooltip]:after{font-size:16px;padding:8px 16px}}:not(.tracking) [data-ML__tooltip]:hover{position:relative}:not(.tracking) [data-ML__tooltip]:hover:after{display:inline-table;opacity:1;transform:scale(1);visibility:visible}[data-ML__tooltip][data-delay]:after{transition-delay:0s}[data-ML__tooltip][data-delay]:hover:after{transition-delay:1s}';
function td(e5) {
  return "number" == typeof e5 && !Number.isNaN(e5);
}
function id(e5) {
  return Array.isArray(e5) && 2 === e5.length;
}
function nd(e5) {
  return null != e5 && "object" == typeof e5 && "ranges" in e5 && Array.isArray(e5.ranges);
}
function rd(e5) {
  let t2;
  if ("body" === e5.treeBranch)
    t2 = { enclose: "cross out", leftright: "delimiter", surd: "square root", root: "math field", mop: "operator" }[e5.type];
  else if ("genfrac" === e5.parent.type) {
    if ("above" === e5.treeBranch)
      return "numerator";
    if ("below" === e5.treeBranch)
      return "denominator";
  } else
    "surd" === e5.parent.type ? "above" === e5.treeBranch && (t2 = "index") : "superscript" === e5.treeBranch ? t2 = "superscript" : "subscript" === e5.treeBranch && (t2 = "subscript");
  return null != t2 ? t2 : "parent";
}
var ad = class {
  constructor(e5, t2, i2) {
    this.options = e5, this._selection = { ranges: [[0, 0]], direction: "none" }, this._anchor = 0, this._position = 0, this.mathfield = i2, this.suppressChangeNotifications = false, this.root = new nt("root", i2, { mode: e5.mode }), this.root.body = [], this.setListeners(t2);
  }
  get atoms() {
    return this.root.children;
  }
  get selection() {
    return this._selection;
  }
  set selection(e5) {
    this.setSelection(e5);
  }
  setSelection(e5, t2) {
    return this.deferNotifications({ selection: true }, () => {
      const i2 = this.normalizeSelection(e5, t2);
      if (void 0 === i2)
        throw new TypeError("Invalid selection");
      if (1 === i2.ranges.length && i2.ranges[0][0] === i2.ranges[0][1]) {
        const e6 = i2.ranges[0][0];
        this._position = e6, this._anchor = e6, this._selection = i2;
      } else {
        const e6 = yr(i2);
        "backward" === i2.direction ? [this._position, this._anchor] = e6 : [this._anchor, this._position] = e6;
        const t3 = this.at(e6[0] + 1), n2 = this.at(e6[1]), r2 = nt.commonAncestor(t3, n2);
        "array" === (null == r2 ? void 0 : r2.type) && t3.parent === r2 && n2.parent, this._selection = { ranges: [e6], direction: i2.direction };
      }
    });
  }
  setPositionHandlingPlaceholder(e5) {
    var t2, i2, n2;
    "placeholder" === (null === (t2 = this.at(e5)) || void 0 === t2 ? void 0 : t2.type) ? this.setSelection(e5 - 1, e5) : "placeholder" === (null === (n2 = null === (i2 = this.at(e5)) || void 0 === i2 ? void 0 : i2.rightSibling) || void 0 === n2 ? void 0 : n2.type) ? this.setSelection(e5, e5 + 1) : this.position = e5;
  }
  getState() {
    return { content: this.root.toJson(), selection: this.selection };
  }
  setState(e5, t2) {
    var i2;
    const n2 = this.suppressChangeNotifications;
    this.suppressChangeNotifications = null === (i2 = null == t2 ? void 0 : t2.suppressChangeNotifications) || void 0 === i2 || i2;
    let r2 = {};
    "undo" === (null == t2 ? void 0 : t2.type) && (r2 = { inputType: "historyUndo" }), "redo" === (null == t2 ? void 0 : t2.type) && (r2 = { inputType: "historyRedo" }), vr(this, r2) && (this.root = ci(e5.content, this.mathfield), this.selection = e5.selection, xr(this, r2)), this.suppressChangeNotifications = n2;
  }
  get position() {
    return this._position;
  }
  set position(e5) {
    this.setSelection(e5, e5);
  }
  get anchor() {
    return this._anchor;
  }
  get selectionIsCollapsed() {
    return this._anchor === this._position;
  }
  get selectionIsPlaceholder() {
    return 1 === Math.abs(this._anchor - this._position) && "placeholder" === this.at(Math.max(this._anchor, this._position)).type;
  }
  collapseSelection(e5 = "forward") {
    return this._anchor !== this._position && (this.position = "backward" === e5 ? Math.min(this._anchor, this._position) : Math.max(this._anchor, this._position), true);
  }
  get lastOffset() {
    return this.atoms.length - 1;
  }
  at(e5) {
    return this.atoms[e5];
  }
  offsetOf(e5) {
    return this.atoms.indexOf(e5);
  }
  getSiblingsRange(e5) {
    const t2 = this.at(e5), { parent: i2 } = t2;
    if (!i2)
      return [0, this.lastOffset];
    const n2 = t2.parent.branch(t2.treeBranch);
    return [this.offsetOf(n2[0]), this.offsetOf(n2[n2.length - 1])];
  }
  getBranchRange(e5, t2) {
    const i2 = this.at(e5).branch(t2);
    return [this.offsetOf(i2[0]), this.offsetOf(i2[i2.length - 1])];
  }
  getAtoms(e5, t2, i2) {
    var n2, r2;
    let a2, o2, s2 = null != i2 ? i2 : {};
    if (nd(e5)) {
      if (s2 = null !== (n2 = t2) && void 0 !== n2 ? n2 : {}, e5.ranges.length > 1)
        return e5.ranges.reduce((e6, t3) => [...e6, ...this.getAtoms(t3, s2)], []);
      e5 = e5.ranges[0];
    }
    if (td(e5)) {
      if (a2 = e5, !td(t2))
        return [];
      o2 = t2;
    } else
      [a2, o2] = e5, s2 = null !== (r2 = t2) && void 0 !== r2 ? r2 : {};
    if (!Number.isFinite(a2))
      return [];
    void 0 === s2.includeChildren && (s2.includeChildren = false), a2 < 0 && (a2 = this.lastOffset - a2 + 1), o2 < 0 && (o2 = this.lastOffset - o2 + 1);
    const l2 = Math.min(a2, o2) + 1, u2 = Math.max(a2, o2);
    if (1 === l2 && u2 === this.lastOffset)
      return [this.root];
    let c2 = [];
    for (let e6 = l2; e6 <= u2; e6++) {
      const t3 = this.atoms[e6];
      od(this, t3, l2, u2) && c2.push(t3);
    }
    return s2.includeChildren || (c2 = c2.filter((e6) => {
      let t3 = false, { parent: i3 } = e6;
      for (; i3 && !t3; )
        t3 = od(this, i3, l2, u2), i3 = i3.parent;
      return !t3;
    })), c2;
  }
  getAllAtoms(e5) {
    const t2 = [], i2 = this.lastOffset;
    for (let n2 = e5; n2 <= i2; n2++)
      t2.push(this.atoms[n2]);
    for (let i3 = 0; i3 < e5; i3++)
      t2.push(this.atoms[i3]);
    return t2;
  }
  extractAtoms(e5) {
    let t2 = this.getAtoms(e5);
    1 === t2.length && "root" === t2[0].type && (t2 = t2[0].children);
    for (const e6 of t2)
      e6.parent.removeChild(e6);
    return t2;
  }
  deleteAtoms(e5) {
    this.extractAtoms(e5), this.position = e5[0];
  }
  atomToString(e5, t2) {
    const i2 = null != t2 ? t2 : "latex";
    if (i2.startsWith("latex"))
      return ge.serialize([e5], { expandMacro: "latex-expanded" === i2, skipStyles: "latex-unstyled" === i2, defaultMode: this.mathfield.options.defaultMode });
    if ("math-ml" === i2)
      return Fn(e5, this.mathfield.options);
    if ("spoken" === i2)
      return Vn(e5, this.mathfield.options);
    if ("spoken-text" === i2) {
      const t3 = this.mathfield.options.textToSpeechMarkup;
      this.mathfield.options.textToSpeechMarkup = "";
      const i3 = Vn(e5, this.mathfield.options);
      return this.mathfield.options.textToSpeechMarkup = t3, i3;
    }
    if ("spoken-ssml" === i2 || "spoken-ssml-with-highlighting" === i2) {
      const t3 = this.mathfield.options.textToSpeechMarkup;
      this.mathfield.options.textToSpeechMarkup = "ssml";
      const i3 = Vn(e5, this.mathfield.options);
      return this.mathfield.options.textToSpeechMarkup = t3, i3;
    }
    if ("math-json" === i2)
      try {
        const t3 = this.mathfield.computeEngine.parse(nt.serialize(e5, { expandMacro: false, defaultMode: "math" }));
        return JSON.stringify(t3.json);
      } catch (e6) {
        return JSON.stringify(["Error", "Nothing", `'${e6.toString()}'`]);
      }
    return "ascii-math" === i2 ? Qi(e5) : "";
  }
  getValue(e5, t2, i2) {
    if (void 0 === e5)
      return this.atomToString(this.root, "latex");
    if ("string" == typeof e5)
      return this.atomToString(this.root, e5);
    let n2, r2;
    if (td(e5) && td(t2) ? (n2 = [this.normalizeRange([e5, t2])], r2 = null != i2 ? i2 : "latex") : id(e5) ? (n2 = [this.normalizeRange(e5)], r2 = t2) : nd(e5) ? (n2 = e5.ranges, r2 = t2) : (n2 = [], r2 = "latex"), r2.startsWith("latex")) {
      const e6 = { expandMacro: "latex-expanded" === r2, skipStyles: "latex-unstyled" === r2, defaultMode: this.mathfield.options.defaultMode };
      return Xe(n2.map((t3) => nt.serialize(this.getAtoms(t3), e6)));
    }
    return n2.map((e6) => this.getAtoms(e6).map((e7) => this.atomToString(e7, r2)).join("")).join("");
  }
  extendSelection(e5) {
    let t2 = this._anchor;
    if ("forward" === e5) {
      let e6 = this._position;
      do {
        let t3 = this.at(e6 + 1);
        if (null == t3 ? void 0 : t3.inCaptureSelection) {
          for (; !t3.captureSelection; )
            t3 = t3.parent;
          e6 = this.offsetOf(null == t3 ? void 0 : t3.lastChild) + 1;
        } else
          e6 += 1;
      } while (e6 <= this.lastOffset && this.at(e6).isFirstSibling);
      return e6 === t2 - 1 && "first" === this.at(t2).type && (e6 = t2), this.extendSelectionTo(t2, e6);
    }
    let i2 = this._position - 1;
    if (i2 < 0)
      return false;
    for (; i2 >= 0 && this.at(i2).isLastSibling; ) {
      let e6 = this.at(i2);
      if (null == e6 ? void 0 : e6.inCaptureSelection) {
        for (; !e6.captureSelection; )
          e6 = e6.parent;
        i2 = this.offsetOf(e6.firstChild) - 1;
      } else
        i2 -= 1;
    }
    return i2 < 0 && (i2 = 0), i2 === t2 + 1 && "first" === this.at(i2).type && (t2 = i2), this.extendSelectionTo(t2, i2);
  }
  extendSelectionTo(e5, t2) {
    return this.deferNotifications({ selection: true }, () => {
      const i2 = this.normalizeRange([e5, t2]);
      let [n2, r2] = i2, { parent: a2 } = this.at(r2);
      if (a2 && ("genfrac" === a2.type || "msubsup" === a2.type))
        for (; a2 !== this.root && sd(this, a2, [n2, r2]); )
          r2 = this.offsetOf(a2), a2 = a2.parent;
      for (a2 = this.at(n2).parent; a2 !== this.root && sd(this, a2, [n2, r2]); )
        n2 = this.offsetOf(a2.leftSibling), a2 = a2.parent;
      if (a2 = this.at(r2).parent, "genfrac" === (null == a2 ? void 0 : a2.type))
        for (; a2 !== this.root && sd(this, a2, [n2, r2]); )
          r2 = this.offsetOf(a2), a2 = a2.parent;
      this._position = this.normalizeOffset(t2), this._selection = { ranges: [[n2, r2]], direction: "none" };
    });
  }
  setListeners(e5) {
    this.listeners = e5;
  }
  announce(e5, t2, i2 = []) {
    var n2, r2;
    null === (r2 = null === (n2 = this.mathfield.host) || void 0 === n2 ? void 0 : n2.dispatchEvent(new CustomEvent("announce", { detail: { command: e5, previousPosition: t2, atoms: i2 }, cancelable: true, bubbles: true, composed: true }))) || void 0 === r2 || r2 || function(e6, t3, i3, n3) {
      var r3;
      let a2 = "";
      "plonk" === t3 ? (null === (r3 = e6.plonkSound) || void 0 === r3 || r3.play().catch((e7) => {
      }), e6.flushInlineShortcutBuffer()) : "delete" === t3 ? a2 = ta(e6.options, "deleted: ", n3) : "focus" === t3 || t3.includes("move") ? a2 = function(e7, t4) {
        if (Number.isNaN(t4))
          return "";
        const i4 = e7.at(t4);
        if (!i4)
          return "";
        if (i4.treeDepth <= e7.at(e7.position).treeDepth)
          return "";
        let n4 = "", r4 = i4.parent;
        const a3 = e7.at(e7.position).parent;
        for (; r4 !== e7.root && r4 !== a3; )
          n4 += `out of ${rd(r4)};`, r4 = r4.parent;
        return n4;
      }(e6.model, i3) + (e6.model.selectionIsCollapsed ? "" : "selected: ") + function(e7, t4) {
        if (!e7.selectionIsCollapsed)
          return ta(t4, "", e7.getAtoms(e7.selection));
        let i4 = "";
        const n4 = e7.at(e7.position), r4 = rd(n4);
        return n4.isFirstSibling && (i4 = (r4 ? "start of " + r4 : "unknown") + ": "), n4.isLastSibling ? n4.isFirstSibling || (i4 += r4 ? "end of " + r4 : "unknown") : i4 += ta(t4, "", n4), i4;
      }(e6.model, e6.options) : "replacement" === t3 ? a2 = ta(e6.options, "", e6.model.at(e6.model.position)) : "line" === t3 ? (a2 = ta(e6.options, "", e6.model.root), e6.keyboardDelegate.setAriaLabel("after: " + a2)) : a2 = n3 ? ta(e6.options, t3 + " ", n3) : t3;
      const o2 = e6.ariaLiveText.textContent.includes("\xA0") ? " \u202F " : " \xA0 ";
      e6.ariaLiveText.textContent = a2 + o2;
    }(this.mathfield, e5, t2, i2);
  }
  deferNotifications(e5, t2) {
    const i2 = this._selection, n2 = this._anchor, r2 = this._position, a2 = this.suppressChangeNotifications;
    this.suppressChangeNotifications = true;
    const o2 = this.root.changeCounter;
    t2();
    const s2 = this.root.changeCounter !== o2, l2 = n2 !== this._anchor || r2 !== this._position || "different" === function(e6, t3) {
      if (e6.direction === t3.direction) {
        const i3 = e6.ranges.length;
        if (t3.ranges.length === i3) {
          let n3 = 0;
          for (; n3 < i3 && "equal" === gr(e6.ranges[n3], t3.ranges[n3]); )
            n3++;
          return n3 === i3 ? "equal" : "different";
        }
      }
      return "different";
    }(this._selection, i2);
    return this.suppressChangeNotifications = a2, e5.content && s2 && xr(this, { data: e5.data, inputType: e5.type }), e5.selection && l2 && br(this), s2 || l2;
  }
  normalizeOffset(e5) {
    return e5 > 0 ? e5 = Math.min(e5, this.lastOffset) : e5 < 0 && (e5 = this.lastOffset + e5 + 1), e5;
  }
  normalizeRange(e5) {
    let [t2, i2] = e5;
    return t2 = this.normalizeOffset(t2), i2 = this.normalizeOffset(i2), t2 < i2 ? [t2, i2] : [i2, t2];
  }
  normalizeSelection(e5, t2) {
    var i2;
    let n2;
    if (td(e5)) {
      const i3 = this.normalizeOffset(e5);
      if (td(t2)) {
        const e6 = this.normalizeOffset(t2);
        n2 = i3 <= e6 ? { ranges: [[i3, e6]], direction: "none" } : { ranges: [[e6, i3]], direction: "backward" };
      } else
        n2 = { ranges: [[i3, i3]], direction: "none" };
    } else if (id(e5)) {
      const t3 = this.normalizeOffset(e5[0]), i3 = this.normalizeOffset(e5[1]);
      n2 = t3 <= i3 ? { ranges: [[t3, i3]], direction: "none" } : { ranges: [[i3, t3]], direction: "backward" };
    } else
      nd(e5) && (n2 = { ranges: e5.ranges.map((e6) => this.normalizeRange(e6)), direction: null !== (i2 = e5.direction) && void 0 !== i2 ? i2 : "none" });
    return n2;
  }
};
function od(e5, t2, i2, n2) {
  const r2 = e5.offsetOf(t2);
  if (r2 < i2 || r2 > n2)
    return false;
  if (!t2.hasChildren)
    return true;
  const a2 = e5.offsetOf(t2.firstChild);
  if (a2 >= i2 && a2 <= n2) {
    const r3 = e5.offsetOf(t2.lastChild);
    if (r3 >= i2 && r3 <= n2)
      return true;
  }
  return false;
}
function sd(e5, t2, i2) {
  if (!(null == t2 ? void 0 : t2.hasChildren))
    return false;
  const [n2, r2] = i2, a2 = e5.offsetOf(t2.firstChild), o2 = e5.offsetOf(t2.lastChild);
  return a2 >= n2 && a2 <= r2 && o2 >= a2 && o2 <= r2;
}
function ld(e5, t2) {
  let i2 = e5.at(e5.position);
  for (; i2 && !(Array.isArray(i2.treeBranch) && i2.parent instanceof Bt); )
    i2 = i2.parent;
  if (Array.isArray(null == i2 ? void 0 : i2.treeBranch) && (null == i2 ? void 0 : i2.parent) instanceof Bt) {
    const n2 = i2.parent;
    let r2;
    switch (t2) {
      case "after row":
        n2.addRowAfter(i2.treeBranch[0]), r2 = e5.offsetOf(n2.getCell(i2.treeBranch[0] + 1, 0)[0]);
        break;
      case "after column":
        if (n2.maxColumns <= n2.colCount)
          return void e5.announce("plonk");
        n2.addColumnAfter(i2.treeBranch[1]), r2 = e5.offsetOf(n2.getCell(i2.treeBranch[0], i2.treeBranch[1] + 1)[0]);
        break;
      case "before row":
        n2.addRowBefore(i2.treeBranch[0]), r2 = e5.offsetOf(n2.getCell(i2.treeBranch[0] - 1, 0)[0]);
        break;
      case "before column":
        if (n2.maxColumns <= n2.colCount)
          return void e5.announce("plonk");
        n2.addColumnBefore(i2.treeBranch[1]), r2 = e5.offsetOf(n2.getCell(i2.treeBranch[0], i2.treeBranch[1] - 1)[0]);
    }
    e5.setSelection(r2, r2 + 1);
  }
}
function ud(e5) {
  return !!vr(e5, { inputType: "insertText" }) && (ld(e5, "after row"), xr(e5, { inputType: "insertText" }), true);
}
function cd(e5) {
  return !!vr(e5, { inputType: "insertText" }) && (ld(e5, "after column"), xr(e5, { inputType: "insertText" }), true);
}
function dd(e5, t2) {
  let i2 = e5.at(e5.position);
  for (; i2 && !(Array.isArray(i2.treeBranch) && i2.parent instanceof Bt); )
    i2 = i2.parent;
  if (Array.isArray(null == i2 ? void 0 : i2.treeBranch) && (null == i2 ? void 0 : i2.parent) instanceof Bt) {
    const n2 = i2.parent, r2 = i2.treeBranch;
    let a2;
    switch (t2) {
      case "row":
        if (n2.rowCount > 1) {
          n2.removeRow(r2[0]);
          const t3 = n2.getCell(Math.max(0, r2[0] - 1), r2[1]);
          a2 = e5.offsetOf(t3[t3.length - 1]);
        }
        break;
      case "column":
        if (n2.colCount > n2.minColumns) {
          n2.removeColumn(r2[1]);
          const t3 = n2.getCell(r2[0], Math.max(0, r2[1] - 1));
          a2 = e5.offsetOf(t3[t3.length - 1]);
        }
    }
    a2 && e5.setPositionHandlingPlaceholder(a2);
  }
}
function hd(e5, t2, i2, n2) {
  var r2, a2, o2, s2, l2, u2;
  const c2 = i2.parent;
  if (i2 instanceof wt) {
    const r3 = !n2 && "forward" === t2 || "body" === n2 && "backward" === t2;
    let a3 = r3 ? e5.offsetOf(i2.firstChild) : e5.offsetOf(i2.lastChild);
    return r3 ? "?" !== i2.rightDelim && "." !== i2.rightDelim ? (i2.leftDelim = ".", i2.isDirty = true) : (c2.addChildrenAfter(i2.removeBranch("body"), i2), c2.removeChild(i2), a3--) : "?" !== i2.leftDelim && "." !== i2.leftDelim ? (i2.rightDelim = ".", i2.isDirty = true) : (c2.addChildrenAfter(i2.removeBranch("body"), i2), c2.removeChild(i2), a3--), e5.position = a3, true;
  }
  if ("surd" === i2.type) {
    if ("forward" === t2 && !n2 || "backward" === t2 && "body" === n2) {
      const t3 = i2.leftSibling;
      i2.hasChildren && c2.addChildrenAfter(i2.removeBranch("body"), i2), c2.removeChild(i2), e5.position = e5.offsetOf(t3);
    } else
      "forward" === t2 && "body" === n2 ? e5.position = e5.offsetOf(i2) : n2 || "backward" !== t2 ? "above" === n2 && (i2.hasEmptyBranch("above") && i2.removeBranch("above"), e5.position = "backward" === t2 ? e5.offsetOf(i2.leftSibling) : e5.offsetOf(i2.body[0])) : i2.hasChildren ? e5.position = e5.offsetOf(i2.lastChild) : (e5.position = Math.max(0, e5.offsetOf(i2) - 1), c2.removeChild(i2));
    return true;
  }
  if ("box" === i2.type || "enclose" === i2.type) {
    const r3 = n2 && "backward" === t2 || !n2 && "forward" === t2 ? i2.leftSibling : i2.lastChild;
    return c2.addChildrenAfter(i2.removeBranch("body"), i2), c2.removeChild(i2), e5.position = e5.offsetOf(r3), true;
  }
  if ("genfrac" === i2.type || "overunder" === i2.type) {
    if (!n2)
      return !("overunder" === i2.type && i2.hasEmptyBranch("body") || "genfrac" === i2.type && i2.hasEmptyBranch("below") && i2.hasEmptyBranch("above") || (e5.position = e5.offsetOf("forward" === t2 ? i2.firstChild : i2.lastChild), 0));
    const r3 = "numerator-denominator" === i2.context.fractionNavigationOrder ? "above" : "below", a3 = "above" === r3 ? "below" : "above";
    if ("forward" === t2 && n2 === r3 || "backward" === t2 && n2 === a3) {
      const t3 = i2.removeBranch(r3), n3 = i2.removeBranch(a3);
      return c2.addChildrenAfter([...t3, ...n3], i2), c2.removeChild(i2), e5.position = e5.offsetOf(t3.length > 0 ? t3[t3.length - 1] : n3[0]), true;
    }
    return "backward" === t2 ? (e5.position = e5.offsetOf(i2.leftSibling), true) : (e5.position = e5.offsetOf(i2), true);
  }
  if (i2.isExtensibleSymbol || "msubsup" === i2.type) {
    if (!n2 && "forward" === t2)
      return false;
    if (!n2) {
      if (i2.subscript || i2.superscript) {
        const n3 = "forward" === t2 ? null !== (a2 = null === (r2 = i2.superscript) || void 0 === r2 ? void 0 : r2[0]) && void 0 !== a2 ? a2 : null === (o2 = i2.subscript) || void 0 === o2 ? void 0 : o2[0] : null !== (l2 = null === (s2 = i2.subscript) || void 0 === s2 ? void 0 : s2[0].lastSibling) && void 0 !== l2 ? l2 : null === (u2 = i2.superscript) || void 0 === u2 ? void 0 : u2[0].lastSibling;
        return n3 && (e5.position = e5.offsetOf(n3)), true;
      }
      return false;
    }
    if (n2 && i2.hasEmptyBranch(n2) && i2.removeBranch(n2), !i2.hasChildren) {
      const n3 = "forward" === t2 ? e5.offsetOf(i2) : Math.max(0, e5.offsetOf(i2) - 1);
      return i2.parent.removeChild(i2), e5.position = n3, true;
    }
    if ("superscript" === n2)
      if ("backward" === t2) {
        const t3 = e5.offsetOf(i2.firstChild) - 1;
        e5.position = t3;
      } else
        i2.subscript ? e5.position = e5.offsetOf(i2.subscript[0]) : e5.position = e5.offsetOf(i2);
    else
      "subscript" === n2 && ("backward" === t2 && i2.superscript ? e5.position = e5.offsetOf(i2.superscript[0].lastSibling) : e5.position = "backward" === t2 ? e5.offsetOf(i2.firstChild) - 1 : e5.offsetOf(i2));
    return true;
  }
  return false;
}
function md(e5, t2, i2) {
  const n2 = e5.getAtoms(t2);
  if (n2.length > 0 && n2[0].parent) {
    let i3 = n2[0].parent.firstChild;
    "first" === i3.type && (i3 = i3.rightSibling);
    const r2 = n2[n2.length - 1].parent.lastChild;
    let a2 = n2[0];
    "first" === a2.type && (a2 = a2.rightSibling);
    const o2 = n2[n2.length - 1];
    if (a2 === i3 && o2 === r2) {
      const i4 = n2[0].parent;
      "root" !== i4.type && (t2 = [e5.offsetOf(i4.leftSibling), e5.offsetOf(i4.rightSibling)]);
    }
  }
  return e5.deferNotifications({ content: true, selection: true, type: i2 }, () => e5.deleteAtoms(t2));
}
function pd(e5, t2) {
  const i2 = e5.at(t2);
  let n2;
  if (i2) {
    n2 = i2.mode;
    let e6 = i2.parent;
    for (; !n2 && e6; )
      e6 && (n2 = e6.mode), e6 = e6.parent;
  }
  return n2;
}
function fd(t2, i2) {
  t2 && i2 && (e(t2) ? t2.forEach((e5) => fd(e5, i2)) : "object" == typeof t2 && (t2.style.color || t2.style.backgroundColor || t2.style.fontFamily || t2.style.fontShape || t2.style.fontSeries || t2.style.fontSize || t2.style.variant || t2.style.variantStyle || (t2.applyStyle(i2), fd(t2.body, i2), fd(t2.above, i2), fd(t2.below, i2), fd(t2.subscript, i2), fd(t2.superscript, i2))));
}
function gd(e5, t2, i2, n2) {
  function r2(e6, t3) {
    for (const i3 of a2)
      if (i3.style[e6] !== t3)
        return false;
    return true;
  }
  if ((t2 = e5.normalizeRange(t2))[0] === t2[1])
    return false;
  const a2 = e5.getAtoms(t2, { includeChildren: true });
  "toggle" === n2.operation && (i2.color && r2("color", i2.color) && (i2.color = "none", i2.verbatimColor = void 0), i2.backgroundColor && r2("backgroundColor", i2.backgroundColor) && (i2.backgroundColor = "none", i2.verbatimBackgroundColor = void 0), i2.fontFamily && r2("fontFamily", i2.fontFamily) && (i2.fontFamily = "none"), i2.fontSeries && r2("fontSeries", i2.fontSeries) && (i2.fontSeries = "auto"), i2.fontShape && r2("fontShape", i2.fontShape) && (i2.fontShape = "auto"), i2.fontSize && r2("fontSize", i2.fontSize) && (i2.fontSize = 5));
  for (const e6 of a2)
    e6.applyStyle(i2);
  return true;
}
function yd(e5, t2, i2) {
  if ("text" !== e5.at(t2).mode)
    return t2;
  const n2 = "backward" === i2 ? -1 : 1;
  let r2;
  if (f.test(e5.at(t2).value)) {
    let i3, a2 = t2;
    do {
      i3 = "text" === e5.at(a2).mode && f.test(e5.at(a2).value), a2 += n2;
    } while (e5.at(a2) && i3);
    r2 = e5.at(a2) ? a2 - 2 * n2 : a2 - n2;
  } else if (/\s/.test(e5.at(t2).value)) {
    let i3 = t2;
    for (; e5.at(i3) && "text" === e5.at(i3).mode && /\s/.test(e5.at(i3).value); )
      i3 += n2;
    if (e5.at(i3)) {
      let t3 = true;
      do {
        t3 = "text" === e5.at(i3).mode && !/\s/.test(e5.at(i3).value), i3 += n2;
      } while (e5.at(i3) && t3);
      r2 = e5.at(i3) ? i3 - 2 * n2 : i3 - n2;
    } else
      r2 = i3 - n2;
  } else {
    let i3 = t2;
    for (; e5.at(i3) && "text" === e5.at(i3).mode && !/\s/.test(e5.at(i3).value); )
      i3 += n2;
    r2 = e5.at(i3) ? i3 : i3 - n2;
    let a2 = true;
    for (; e5.at(i3) && a2; )
      a2 = "text" === e5.at(i3).mode && /\s/.test(e5.at(i3).value), a2 && (r2 = i3), i3 += n2;
    r2 = e5.at(i3) ? i3 - 2 * n2 : i3 - n2;
  }
  return r2 - (n2 > 0 ? 0 : 1);
}
function bd(e5, t2, i2) {
  var n2, r2, a2, o2, s2, l2, u2;
  const c2 = e5.position;
  null !== (n2 = null == i2 ? void 0 : i2.extend) && void 0 !== n2 && n2 || e5.collapseSelection(t2);
  let d2 = e5.at(e5.position);
  if ("forward" === t2 && ("msubsup" === d2.type ? (d2 = d2.rightSibling, d2 || (d2 = e5.at(e5.position + 1))) : d2 = e5.at(e5.position + 1)), !d2)
    return e5.announce("plonk"), false;
  let h2 = e5.offsetOf(d2);
  if (d2 instanceof At)
    h2 = yd(e5, h2, t2);
  else if (d2 instanceof ti)
    if (d2.isSuggestion)
      for (; d2 && d2 instanceof ti; )
        d2.isSuggestion = false, h2 = e5.offsetOf(d2), d2 = d2.rightSibling;
    else if ("forward" === t2) {
      if (d2 = d2.rightSibling, !(d2 && d2 instanceof ti))
        return e5.announce("plonk"), false;
      for (; d2 && d2 instanceof ti && /[a-zA-Z\*]/.test(d2.value); )
        h2 = e5.offsetOf(d2), d2 = d2.rightSibling;
    } else {
      if (d2 = d2.leftSibling, !(d2 && d2 instanceof ti))
        return e5.announce("plonk"), false;
      for (; d2 && d2 instanceof ti && /[a-zA-Z\*]/.test(d2.value); )
        h2 = e5.offsetOf(d2), d2 = d2.leftSibling;
    }
  else if ("forward" === t2 && "mopen" === d2.type) {
    let t3 = 0;
    do {
      "mopen" === d2.type ? t3 += 1 : "mclose" === d2.type && (t3 -= 1), d2 = d2.rightSibling;
    } while (!d2.isLastSibling && 0 !== t3);
    h2 = e5.offsetOf(d2.leftSibling);
  } else if ("backward" === t2 && "mclose" === d2.type) {
    let t3 = 0;
    do {
      "mopen" === d2.type ? t3 += 1 : "mclose" === d2.type && (t3 -= 1), d2 = d2.leftSibling;
    } while (!d2.isFirstSibling && 0 !== t3);
    h2 = e5.offsetOf(d2);
  } else if ("backward" === t2)
    if ("first" === d2.type)
      for (; h2 > 0 && "first" === d2.type; )
        h2 -= 1, d2 = e5.at(h2);
    else {
      const t3 = d2.type;
      "msubsup" === d2.type && (h2 = e5.offsetOf(e5.at(h2).leftSibling)), h2 -= 1;
      let i3 = null === (r2 = e5.at(h2)) || void 0 === r2 ? void 0 : r2.type;
      for (; h2 >= 0 && i3 === t3; )
        "msubsup" === (null === (a2 = e5.at(h2)) || void 0 === a2 ? void 0 : a2.type) ? h2 = e5.offsetOf(e5.at(h2).leftSibling) : h2 -= 1, i3 = e5.at(h2).type;
    }
  else {
    const { type: t3 } = d2;
    let i3 = null === (o2 = e5.at(h2)) || void 0 === o2 ? void 0 : o2.type;
    const { lastOffset: n3 } = e5;
    for (; h2 <= n3 && (i3 === t3 || "msubsup" === i3); ) {
      for (; "msubsup" === (null === (s2 = e5.at(h2).rightSibling) || void 0 === s2 ? void 0 : s2.type); )
        h2 = e5.offsetOf(e5.at(h2).rightSibling);
      h2 += 1, i3 = null === (l2 = e5.at(h2)) || void 0 === l2 ? void 0 : l2.type;
    }
    h2 -= 1;
  }
  if (null !== (u2 = null == i2 ? void 0 : i2.extend) && void 0 !== u2 && u2) {
    if (!e5.setSelection(e5.anchor, h2))
      return e5.announce("plonk"), false;
  } else {
    if (h2 === e5.position)
      return e5.announce("plonk"), false;
    e5.position = h2;
  }
  return e5.announce("move", c2), true;
}
function vd(e5, t2, i2) {
  var n2, r2, a2, o2;
  if (i2 = null != i2 ? i2 : { extend: false }, "forward" !== t2) {
    const [t3, i3] = Sr(e5);
    void 0 !== t3 && void 0 !== i3 && e5.deleteAtoms([t3, i3]);
  }
  if ("upward" === t2)
    return function(e6, t3) {
      var i3, n3, r3, a3;
      const o3 = null !== (i3 = null == t3 ? void 0 : t3.extend) && void 0 !== i3 && i3;
      o3 || e6.collapseSelection("backward");
      const s3 = e6.at(e6.position);
      let l2 = s3;
      for (; l2 && "below" !== l2.treeBranch && !(Array.isArray(l2.treeBranch) && l2.parent instanceof Bt); )
        l2 = l2.parent;
      if (Array.isArray(null == l2 ? void 0 : l2.treeBranch) && l2.parent instanceof Bt) {
        const t4 = l2.parent, i4 = Math.max(0, l2.treeBranch[0] - 1);
        xd(e6, s3, t4.array[i4][l2.treeBranch[1]], o3, "up");
      } else {
        if (!l2) {
          let t4 = true;
          return e6.suppressChangeNotifications || (t4 = null === (a3 = null === (r3 = e6.mathfield.host) || void 0 === r3 ? void 0 : r3.dispatchEvent(new CustomEvent("move-out", { detail: { direction: "upward" }, cancelable: true, bubbles: true, composed: true }))) || void 0 === a3 || a3), e6.announce(t4 ? "plonk" : "line"), t4;
        }
        xd(e6, s3, null !== (n3 = l2.parent.branch("above")) && void 0 !== n3 ? n3 : l2.parent.createBranch("above"), o3, "up");
      }
      return true;
    }(e5, i2);
  if ("downward" === t2)
    return function(e6, t3) {
      var i3, n3, r3, a3;
      const o3 = null !== (i3 = null == t3 ? void 0 : t3.extend) && void 0 !== i3 && i3;
      o3 || e6.collapseSelection("forward");
      const s3 = e6.at(e6.position);
      let l2 = s3;
      for (; l2 && "above" !== l2.treeBranch && !(Array.isArray(l2.treeBranch) && l2.parent instanceof Bt); )
        l2 = l2.parent;
      if (Array.isArray(null == l2 ? void 0 : l2.treeBranch) && l2.parent instanceof Bt) {
        const t4 = l2.parent, i4 = Math.min(t4.array.length - 1, l2.treeBranch[0] + 1);
        xd(e6, s3, t4.array[i4][l2.treeBranch[1]], o3, "down");
      } else {
        if (!l2) {
          let t4 = true;
          return e6.suppressChangeNotifications || (t4 = null === (a3 = null === (r3 = e6.mathfield.host) || void 0 === r3 ? void 0 : r3.dispatchEvent(new CustomEvent("move-out", { detail: { direction: "downward" }, cancelable: true, bubbles: true, composed: true }))) || void 0 === a3 || a3), e6.announce(t4 ? "plonk" : "line"), t4;
        }
        xd(e6, s3, null !== (n3 = l2.parent.branch("below")) && void 0 !== n3 ? n3 : l2.parent.createBranch("below"), o3, "down");
      }
      return true;
    }(e5, i2);
  const s2 = e5.position;
  if (i2.extend)
    return e5.extendSelection(t2);
  if (e5.selectionIsPlaceholder)
    return e5.collapseSelection(t2), vd(e5, t2);
  if (!e5.collapseSelection(t2)) {
    let s3 = e5.position + ("forward" === t2 ? 1 : -1), l2 = e5.at(s3);
    if (s3 >= 0 && s3 <= e5.lastOffset) {
      if ("forward" === t2)
        if (l2.inCaptureSelection) {
          for (; !l2.captureSelection; )
            l2 = l2.parent;
          s3 = e5.offsetOf(l2);
        } else if (!l2.isFirstSibling && l2.isLastSibling && (null === (n2 = l2.parent) || void 0 === n2 ? void 0 : n2.skipBoundary)) {
          if (s3 + 1 !== e5.lastOffset)
            return e5.position = s3, vd(e5, "forward", i2);
          s3 += 1;
        } else
          l2 instanceof ti && l2.isSuggestion && (l2.isSuggestion = false);
      else if ("backward" === t2)
        if (null === (r2 = l2.parent) || void 0 === r2 ? void 0 : r2.inCaptureSelection) {
          for (; !l2.captureSelection; )
            l2 = l2.parent;
          s3 = Math.max(0, e5.offsetOf(l2.leftSibling));
        } else
          l2.skipBoundary && (s3 = Math.max(0, e5.position - 2));
    }
    if (s3 < 0 || s3 > e5.lastOffset) {
      let i3 = true;
      return e5.suppressChangeNotifications || (i3 = null === (o2 = null === (a2 = e5.mathfield.host) || void 0 === a2 ? void 0 : a2.dispatchEvent(new CustomEvent("move-out", { detail: { direction: t2 }, cancelable: true, bubbles: true, composed: true }))) || void 0 === o2 || o2), i3 && e5.announce("plonk"), i3;
    }
    e5.setPositionHandlingPlaceholder(s3);
  }
  return e5.announce("move", s2), true;
}
function xd(e5, t2, i2, n2, r2) {
  const a2 = ir(e5.mathfield.getHTMLElement(t2)).right, o2 = e5.offsetOf(function(e6, t3, i3) {
    let n3 = 1 / 0, r3 = 0;
    for (; r3 < t3.length; r3++) {
      const a3 = ir(e6.getHTMLElement(t3[r3])).right, o3 = Math.abs(i3 - a3);
      if (!(o3 <= n3))
        break;
      n3 = o3;
    }
    return t3[r3 - 1];
  }(e5.mathfield, i2, a2));
  if (n2) {
    const [t3, i3] = e5.selection.ranges[0];
    let n3;
    n3 = o2 < ("up" === r2 ? t3 : i3) ? { ranges: [[o2, i3]], direction: "backward" } : { ranges: [[t3, o2]], direction: "forward" }, e5.setSelection(n3);
  } else
    e5.setPositionHandlingPlaceholder(o2);
  e5.announce(`move ${r2}`);
}
function kd(e5) {
  const t2 = e5.position, i2 = e5.at(t2).parent;
  return i2 && "root" !== i2.type ? (e5.position = e5.offsetOf(i2), e5.announce("move", t2), true) : (e5.announce("plonk"), false);
}
function _d(e5) {
  var t2;
  if (e5.collapseSelection(), function(e6) {
    let t3 = 0, i3 = e6.at(e6.position), n2 = false;
    for (; i3; )
      i3.hasEmptyBranch("superscript") && i3.hasEmptyBranch("subscript") || (t3 += 1), i3.hasEmptyBranch("superscript") ? i3.hasEmptyBranch("subscript") || (n2 = false) : n2 = true, i3 = i3.parent;
    return n2 ? t3 : 0;
  }(e5) >= e5.mathfield.options.scriptDepth[1])
    return e5.announce("plonk"), false;
  let i2 = e5.at(e5.position);
  return void 0 === i2.subsupPlacement && ("msubsup" !== (null === (t2 = i2.rightSibling) || void 0 === t2 ? void 0 : t2.type) && i2.parent.addChildAfter(new St(e5.mathfield, { style: i2.computedStyle }), i2), i2 = i2.rightSibling), i2.createBranch("superscript"), e5.setSelection(e5.getSiblingsRange(e5.offsetOf(i2.superscript[0]))), true;
}
function wd(e5) {
  var t2;
  if (e5.collapseSelection(), function(e6) {
    let t3 = 0, i3 = e6.at(e6.position), n2 = false;
    for (; i3; )
      i3.hasEmptyBranch("superscript") && i3.hasEmptyBranch("subscript") || (t3 += 1), i3.hasEmptyBranch("superscript") ? i3.hasEmptyBranch("subscript") || (n2 = true) : n2 = false, i3 = i3.parent;
    return n2 ? t3 : 0;
  }(e5) >= e5.mathfield.options.scriptDepth[0])
    return e5.announce("plonk"), false;
  let i2 = e5.at(e5.position);
  return void 0 === i2.subsupPlacement && ("msubsup" !== (null === (t2 = e5.at(e5.position + 1)) || void 0 === t2 ? void 0 : t2.type) && i2.parent.addChildAfter(new St(e5.mathfield, { style: e5.at(e5.position).computedStyle }), i2), i2 = e5.at(e5.position + 1)), i2.createBranch("subscript"), e5.setSelection(e5.getSiblingsRange(e5.offsetOf(i2.subscript[0]))), true;
}
function Sd(e5, i2, n2 = true) {
  var r2, a2;
  const o2 = "forward" === i2 ? 1 : -1;
  "placeholder" === e5.at(e5.anchor).type && vd(e5, i2);
  const s2 = e5.getAllAtoms(Math.max(e5.position + o2, 0));
  "backward" === i2 && s2.reverse();
  const l2 = s2.filter((e6) => "placeholder" === e6.type || e6.treeDepth > 2 && e6.isFirstSibling && e6.isLastSibling);
  if (0 === l2.length) {
    if (!n2 || null !== (a2 = null === (r2 = e5.mathfield.host) || void 0 === r2 ? void 0 : r2.dispatchEvent(new CustomEvent("focus-out", { detail: { direction: i2 }, cancelable: true, bubbles: true, composed: true }))) && void 0 !== a2 && !a2)
      return e5.announce("plonk"), false;
    const s3 = function() {
      function e6(e7) {
        return !((n3 = e7).disabled || "hidden" === n3.type && "INPUT" === n3.tagName.toUpperCase() || function(e8) {
          if (!t() || e8 === document.activeElement || e8.contains(document.activeElement))
            return false;
          if ("hidden" === getComputedStyle(e8).visibility)
            return true;
          const i4 = e8.getBoundingClientRect();
          if (0 === i4.width || 0 === i4.height)
            return true;
          for (; e8; ) {
            if ("none" === getComputedStyle(e8).display)
              return true;
            e8 = e8.parentElement;
          }
          return false;
        }(n3) || function(e8) {
          return "INPUT" === e8.tagName.toUpperCase() && "radio" === e8.type && !function(e9) {
            var t2;
            if (!e9.name)
              return true;
            const i4 = function(e10, t3) {
              for (const i5 of e10)
                if (i5.checked && i5.form === t3)
                  return i5;
              return null;
            }((null !== (t2 = e9.form) && void 0 !== t2 ? t2 : e9.ownerDocument).querySelectorAll('input[type="radio"][name="' + e9.name + '"]'), e9.form);
            return !i4 || i4 === e9;
          }(e8);
        }(e7) || i3(e7) < 0);
        var n3;
      }
      function i3(e7) {
        var t2;
        const i4 = Number.parseInt(null !== (t2 = e7.getAttribute("tabindex")) && void 0 !== t2 ? t2 : "NaN", 10);
        return Number.isNaN(i4) ? "true" === e7.contentEditable ? 0 : "AUDIO" !== e7.nodeName && "VIDEO" !== e7.nodeName || null !== e7.getAttribute("tabindex") ? e7.tabIndex : 0 : i4;
      }
      return t() ? function(t2) {
        const n3 = [], r3 = [];
        return [...t2.querySelectorAll('input, select, textarea, a[href], button,\n        [tabindex], audio[controls], video[controls],\n        [contenteditable]:not([contenteditable="false"]), details>summary')].filter(e6).forEach((e7, t3) => {
          const a3 = i3(e7);
          0 === a3 ? n3.push(e7) : r3.push({ documentOrder: t3, tabIndex: a3, node: e7 });
        }), r3.sort((e7, t3) => e7.tabIndex === t3.tabIndex ? e7.documentOrder - t3.documentOrder : e7.tabIndex - t3.tabIndex).map((e7) => e7.node).concat(n3);
      }(document.body) : [];
    }();
    if (!document.activeElement || 1 === s3.length)
      return e5.announce("plonk"), false;
    let l3 = s3.indexOf(document.activeElement) + o2;
    return !!(document.activeElement instanceof ch && u2(document.activeElement, i2, o2)) || (l3 < 0 && (l3 = s3.length - 1), l3 >= s3.length && (l3 = 0), !!(s3[l3] instanceof ch && u2(s3[l3], i2, o2)) || (s3[l3].focus(), 0 !== l3 || (e5.announce("plonk"), false)));
  }
  function u2(e6, t2, i3) {
    var n3, r3, a3;
    const o3 = [...null !== (r3 = null === (n3 = e6.shadowRoot) || void 0 === n3 ? void 0 : n3.querySelectorAll("math-field")) && void 0 !== r3 ? r3 : []];
    if (o3.length) {
      const n4 = null === (a3 = e6.shadowRoot) || void 0 === a3 ? void 0 : a3.activeElement, r4 = o3.indexOf(n4);
      let s3 = r4 + i3;
      if (r4 < 0 && "backward" === t2 && (s3 = o3.length - 1), s3 >= 0 && s3 < o3.length)
        return o3[s3].focus(), true;
    }
    return false;
  }
  const c2 = e5.position, d2 = e5.offsetOf(l2[0]);
  return "placeholder" === l2[0].type ? e5.setSelection(d2 - 1, d2) : e5.position = d2, e5.announce("move", c2), true;
}
function Md(e5) {
  var t2, i2, n2, r2, a2, o2;
  if ("text" === pd(e5, e5.position)) {
    let t3 = Math.min(e5.anchor, e5.position), i3 = Math.max(e5.anchor, e5.position), n3 = false;
    for (; !n3 && t3 > 0; ) {
      const i4 = e5.at(t3);
      "text" === i4.mode && f.test(i4.value) ? t3 -= 1 : n3 = true;
    }
    for (n3 = false; !n3 && i3 <= e5.lastOffset; ) {
      const t4 = e5.at(i3);
      "text" === t4.mode && f.test(t4.value) ? i3 += 1 : n3 = true;
    }
    if (n3 && (i3 -= 1), t3 >= i3)
      return e5.setSelection(i3 - 1, i3), true;
    e5.setSelection(t3, i3);
  } else {
    const s2 = e5.at(e5.position);
    if (s2.isDigit()) {
      let n3 = Math.min(e5.anchor, e5.position), r3 = Math.max(e5.anchor, e5.position);
      for (; null === (t2 = e5.at(n3)) || void 0 === t2 ? void 0 : t2.isDigit(); )
        n3 -= 1;
      for (; null === (i2 = e5.at(r3)) || void 0 === i2 ? void 0 : i2.isDigit(); )
        r3 += 1;
      e5.setSelection(n3, r3 - 1);
    } else if (s2.style.variant || s2.style.variantStyle) {
      let t3 = Math.min(e5.anchor, e5.position), i3 = Math.max(e5.anchor, e5.position), l2 = null === (n2 = e5.at(t3)) || void 0 === n2 ? void 0 : n2.style;
      for (; l2 && l2.variant === s2.style.variant && l2.variantStyle === s2.style.variantStyle; )
        t3 -= 1, l2 = null === (r2 = e5.at(t3)) || void 0 === r2 ? void 0 : r2.style;
      for (l2 = null === (a2 = e5.at(i3)) || void 0 === a2 ? void 0 : a2.style; l2 && l2.variant === s2.style.variant && l2.variantStyle === s2.style.variantStyle; )
        i3 += 1, l2 = null === (o2 = e5.at(i3)) || void 0 === o2 ? void 0 : o2.style;
      e5.setSelection(t3, i3 - 1);
    } else
      e5.setSelection(e5.offsetOf(s2.firstSibling), e5.offsetOf(s2.lastSibling));
  }
  return true;
}
Er({ addRowAfter: ud, addColumnAfter: cd, addRowBefore: function(e5) {
  return !!vr(e5, { inputType: "insertText" }) && (ld(e5, "before row"), xr(e5, { inputType: "insertText" }), true);
}, addColumnBefore: function(e5) {
  return !!vr(e5, { inputType: "insertText" }) && (ld(e5, "before column"), xr(e5, { inputType: "insertText" }), true);
}, removeRow: function(e5) {
  return !!vr(e5, { inputType: "deleteContent" }) && (dd(e5, "row"), xr(e5, { inputType: "deleteContent" }), true);
}, removeColumn: function(e5) {
  return !!vr(e5, { inputType: "deleteContent" }) && (dd(e5, "column"), xr(e5, { inputType: "deleteContent" }), true);
} }, { target: "model", category: "array-edit" }), Er({ deleteAll: (e5) => vr(e5, { inputType: "deleteContent" }) && md(e5, [0, -1], "deleteContent"), deleteForward: (e5) => function(e6) {
  return !!vr(e6, { inputType: "deleteContentForward" }) && (e6.selectionIsCollapsed ? e6.deferNotifications({ content: true, selection: true, type: "deleteContentForward" }, () => {
    var t2, i2;
    let n2 = e6.at(e6.position).rightSibling;
    if (n2 && hd(e6, "forward", n2))
      return;
    if (n2) {
      if (e6.at(e6.position).isLastSibling && hd(e6, "forward", n2.parent, n2.treeBranch))
        return;
    } else {
      if (n2 = e6.at(e6.position), n2.isLastSibling && hd(e6, "forward", n2.parent, n2.treeBranch))
        return;
      n2 = null;
    }
    if (e6.position === e6.lastOffset || !n2)
      return void e6.announce("plonk");
    n2.parent.removeChild(n2);
    let r2 = null === (t2 = e6.at(e6.position)) || void 0 === t2 ? void 0 : t2.rightSibling;
    for (; "msubsup" === (null == r2 ? void 0 : r2.type); )
      r2.parent.removeChild(r2), r2 = null === (i2 = e6.at(e6.position)) || void 0 === i2 ? void 0 : i2.rightSibling;
    e6.announce("delete", void 0, [n2]);
  }) : md(e6, yr(e6.selection), "deleteContentForward"));
}(e5), deleteBackward: (e5) => function(e6) {
  return !!vr(e6, { inputType: "deleteContentBackward" }) && (e6.selectionIsCollapsed ? e6.deferNotifications({ content: true, selection: true, type: "deleteContentBackward" }, () => {
    let t2 = e6.at(e6.position);
    if (!t2 || !hd(e6, "backward", t2)) {
      if (null == t2 ? void 0 : t2.isFirstSibling) {
        if (hd(e6, "backward", t2.parent, t2.treeBranch))
          return;
        t2 = null;
      }
      t2 ? (e6.position = e6.offsetOf(t2.leftSibling), t2.parent.removeChild(t2), e6.announce("delete", void 0, [t2])) : e6.announce("plonk");
    }
  }) : md(e6, yr(e6.selection), "deleteContentBackward"));
}(e5), deleteNextWord: (e5) => vr(e5, { inputType: "deleteWordForward" }) && md(e5, [e5.anchor, yd(e5, e5.position, "forward")], "deleteWordForward"), deletePreviousWord: (e5) => vr(e5, { inputType: "deleteWordBackward" }) && md(e5, [e5.anchor, yd(e5, e5.position, "backward")], "deleteWordBackward"), deleteToGroupStart: (e5) => vr(e5, { inputType: "deleteSoftLineBackward" }) && md(e5, [e5.anchor, e5.offsetOf(e5.at(e5.position).firstSibling)], "deleteSoftLineBackward"), deleteToGroupEnd: (e5) => vr(e5, { inputType: "deleteSoftLineForward" }) && md(e5, [e5.anchor, e5.offsetOf(e5.at(e5.position).lastSibling)], "deleteSoftLineForward"), deleteToMathFieldStart: (e5) => vr(e5, { inputType: "deleteHardLineBackward" }) && md(e5, [e5.anchor, 0], "deleteHardLineBackward"), deleteToMathFieldEnd: (e5) => vr(e5, { inputType: "deleteHardLineForward" }) && md(e5, [e5.anchor, -1], "deleteHardLineForward") }, { target: "model", category: "delete" }), Er({ moveToOpposite: (e5) => {
  const t2 = e5.at(e5.position), { parent: i2 } = t2;
  if (!i2)
    return e5.announce("plonk"), false;
  const n2 = t2.treeBranch;
  let r2;
  return "string" == typeof n2 && (r2 = { superscript: "subscript", subscript: "superscript", above: "below", below: "above" }[n2]), r2 ? (i2.branch(r2) || i2.createBranch(r2), e5.setSelection(e5.getBranchRange(e5.offsetOf(i2), r2))) : t2.subsupPlacement ? wd(e5) : _d(e5);
}, moveBeforeParent: (e5) => {
  const { parent: t2 } = e5.at(e5.position);
  return t2 ? (e5.position = e5.offsetOf(t2), true) : (e5.announce("plonk"), false);
}, moveAfterParent: (e5) => kd(e5), moveToNextPlaceholder: (e5) => Sd(e5, "forward"), moveToPreviousPlaceholder: (e5) => Sd(e5, "backward"), moveToNextChar: (e5) => vd(e5, "forward"), moveToPreviousChar: (e5) => vd(e5, "backward"), moveUp: (e5) => vd(e5, "upward"), moveDown: (e5) => vd(e5, "downward"), moveToNextWord: (e5) => bd(e5, "forward"), moveToPreviousWord: (e5) => bd(e5, "backward"), moveToGroupStart: (e5) => {
  const t2 = e5.offsetOf(e5.at(e5.position).firstSibling);
  return t2 === e5.position ? (e5.announce("plonk"), false) : (e5.position = t2, true);
}, moveToGroupEnd: (e5) => {
  const t2 = e5.offsetOf(e5.at(e5.position).lastSibling);
  return t2 === e5.position ? (e5.announce("plonk"), false) : (e5.position = t2, true);
}, moveToMathFieldStart: (e5) => 0 === e5.position ? (e5.announce("plonk"), false) : (e5.position = 0, true), moveToMathFieldEnd: (e5) => e5.position === e5.lastOffset ? (e5.announce("plonk"), false) : (e5.position = e5.lastOffset, true), moveToSuperscript: (e5) => _d(e5), moveToSubscript: (e5) => wd(e5) }, { target: "model", category: "selection-anchor" }), Er({ selectGroup: (e5) => {
  const t2 = Md(e5);
  return t2 || e5.announce("plonk"), t2;
}, selectAll: (e5) => e5.setSelection(0, e5.lastOffset), extendSelectionForward: (e5) => {
  const t2 = e5.extendSelection("forward");
  return t2 || e5.announce("plonk"), t2;
}, extendSelectionBackward: (e5) => {
  const t2 = e5.extendSelection("backward");
  return t2 || e5.announce("plonk"), t2;
}, extendToNextWord: (e5) => bd(e5, "forward", { extend: true }), extendToPreviousWord: (e5) => bd(e5, "backward", { extend: true }), extendSelectionUpward: (e5) => vd(e5, "upward", { extend: true }), extendSelectionDownward: (e5) => vd(e5, "downward", { extend: true }), extendToNextBoundary: (e5) => bd(e5, "forward", { extend: true }), extendToPreviousBoundary: (e5) => bd(e5, "backward", { extend: true }), extendToGroupStart: (e5) => {
  const t2 = e5.setSelection(e5.anchor, e5.offsetOf(e5.at(e5.position).firstSibling));
  return t2 || e5.announce("plonk"), t2;
}, extendToGroupEnd: (e5) => {
  const t2 = e5.setSelection(e5.anchor, e5.offsetOf(e5.at(e5.position).lastSibling));
  return t2 || e5.announce("plonk"), t2;
}, extendToMathFieldStart: (e5) => {
  const t2 = e5.setSelection(e5.anchor, 0);
  return t2 || e5.announce("plonk"), t2;
}, extendToMathFieldEnd: (e5) => {
  const t2 = e5.setSelection(e5.anchor, e5.lastOffset);
  return t2 || e5.announce("plonk"), t2;
} }, { target: "model", category: "selection-extend" });
var Nd = /* @__PURE__ */ new Set(["Backquote", "Digit0", "Digit1", "Digit2", "Digit3", "Digit4", "Digit5", "Digit6", "Digit7", "Digit8", "Digit9", "Minus", "Equal", "IntlYen", "KeyQ", "KeyW", "KeyE", "KeyR", "KeyT", "KeyY", "KeyU", "KeyI", "KeyO", "KeyP", "BracketLeft", "BracketRight", "Backslash", "KeyA", "KeyS", "KeyD", "KeyF", "KeyG", "KeyH", "KeyJ", "KeyK", "KeyL", "Semicolon", "Quote", "IntlBackslash", "KeyZ", "KeyX", "KeyC", "KeyV", "KeyB", "KeyN", "KeyM", "Comma", "Period", "Slash", "IntlRo", "Space", "Numpad0", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "NumpadAdd", "NumpadComma", "NumpadDecimal", "NumpadDivide", "NumpadEqual", "NumpadHash", "NumpadMultiply", "NumpadParenLeft", "NumpadParenRight", "NumpadStar", "NumpadSubstract"]);
function Ld(e5) {
  return !e5.ctrlKey && !e5.metaKey && "Dead" !== e5.key && ("" === e5.code || Nd.has(e5.code));
}
function Ad(e5) {
  const t2 = [];
  return (e5 = function(e6) {
    if (e6.code)
      return e6;
    const t3 = Object.entries(Wi().mapping);
    let i2 = false, n2 = false, r2 = "";
    for (let a2 = 0; a2 < 4; a2++) {
      for (const [o2, s2] of t3)
        if (s2[a2] === e6.key) {
          r2 = o2, 3 === a2 ? (i2 = true, n2 = true) : 2 === a2 ? i2 = true : 1 === a2 && (n2 = true);
          break;
        }
      if (r2)
        break;
    }
    return new KeyboardEvent(e6.type, { ...e6, altKey: i2, shiftKey: n2, code: r2 });
  }(e5)).ctrlKey && t2.push("ctrl"), e5.metaKey && t2.push("meta"), e5.altKey && t2.push("alt"), e5.shiftKey && t2.push("shift"), 0 === t2.length ? "[" + e5.code + "]" : (t2.push("[" + e5.code + "]"), t2.join("+"));
}
function Cd() {
  var e5;
  if (!t())
    return null;
  let i2 = document.activeElement;
  for (; null === (e5 = null == i2 ? void 0 : i2.shadowRoot) || void 0 === e5 ? void 0 : e5.activeElement; )
    i2 = i2.shadowRoot.activeElement;
  return i2;
}
function Ed(e5) {
  var t2;
  if (!e5)
    return "";
  let i2;
  return "Unidentified" === e5.key && e5.target && (i2 = e5.target.value), i2 = null !== (t2 = null != i2 ? i2 : e5.key) && void 0 !== t2 ? t2 : e5.code, /^(Dead|Return|Enter|Tab|Escape|Delete|PageUp|PageDown|Home|End|Help|ArrowLeft|ArrowRight|ArrowUp|ArrowDown)$/.test(i2) && (i2 = ""), i2;
}
var Dd = class {
  constructor(e5) {
    this.recording = false, this.canCoalesce = false, this.model = e5, this.reset();
  }
  get maximumDepth() {
    return 1e3;
  }
  reset() {
    this.stack = [], this.index = -1;
  }
  startRecording() {
    this.recording = true;
  }
  canUndo() {
    return this.index > 0;
  }
  canRedo() {
    return this.index !== this.stack.length - 1;
  }
  undo() {
    return !!this.canUndo() && (this.model.setState(this.stack[this.index - 1], { suppressChangeNotifications: false, type: "undo" }), this.index -= 1, this.canCoalesce = false, true);
  }
  redo() {
    return !!this.canRedo() && (this.index += 1, this.model.setState(this.stack[this.index], { suppressChangeNotifications: false, type: "redo" }), this.canCoalesce = false, true);
  }
  pop() {
    this.canUndo() && (this.index -= 1, this.stack.pop());
  }
  snapshot() {
    return !!this.recording && (this.stack.splice(this.index + 1, this.stack.length - this.index - 1), this.stack.push(this.model.getState()), this.index++, this.stack.length > this.maximumDepth && this.stack.shift(), this.canCoalesce = false, true);
  }
  snapshotAndCoalesce() {
    if (!this.recording)
      return false;
    this.canCoalesce && this.pop();
    const e5 = this.snapshot();
    return this.canCoalesce = true, e5;
  }
};
function Td(e5, t2, i2) {
  "function" == typeof t2 && (i2 = t2, t2 = 1 / 0), void 0 === t2 && (t2 = 1 / 0);
  let n2 = e5.position, r2 = false, a2 = "";
  for (; !r2; ) {
    const o2 = e5.at(n2);
    r2 = 0 === t2 || void 0 === o2 || "math" !== o2.mode || !(/mord|textord|mpunct/.test(o2.type) || "mop" === o2.type && /[a-zA-Z]+/.test(o2.value)) || !o2.hasEmptyBranch("superscript") || !o2.hasEmptyBranch("subscript") || "function" == typeof i2 && !i2(o2), r2 || (o2.mode = "text", o2.command = o2.value, o2.verbatimLatex = void 0, a2 += o2.value), n2 -= 1, t2 -= 1;
  }
  xr(e5, { data: a2, inputType: "insertText" });
}
function zd(e5, t2, i2) {
  "function" == typeof t2 && (i2 = t2, t2 = 1 / 0), void 0 === t2 && (t2 = 1 / 0);
  let n2 = e5.position, r2 = false;
  const a2 = [];
  for (; !r2; ) {
    const o2 = e5.at(n2);
    r2 = 0 === t2 || !o2 || o2.isFirstSibling || "text" !== o2.mode || " " === o2.value || i2 && !i2(o2), r2 || (a2.push(o2.serialize({ defaultMode: "math" })), o2.mode = "math"), n2 -= 1, t2 -= 1;
  }
  qd(e5), xr(e5, { data: Xe(a2), inputType: "insertText" });
}
function qd(e5) {
  var t2;
  let i2 = e5.position - 1;
  for (; i2 >= 0 && "math" === (null === (t2 = e5.at(i2)) || void 0 === t2 ? void 0 : t2.mode); )
    i2 -= 1;
  if (!(i2 < 0) && "text" === e5.at(i2).mode && " " === e5.at(i2).value && "math" === e5.at(i2 - 1).mode) {
    e5.at(i2 - 1).parent.removeChild(e5.at(i2 - 1));
    const t3 = e5.suppressChangeNotifications;
    e5.suppressChangeNotifications = true, e5.position -= 1, e5.suppressChangeNotifications = t3, xr(e5, { inputType: "deleteContent" });
  }
}
var Id = "#mathlive-keystroke-caption-panel{--keystroke:#fff;--on-keystroke:#555;--keystroke-border:#f7f7f7;background:var(--secondary,hsl(var(--hue,212),19%,26%));border-color:var(--secondary-border,#e8e8e8);border-radius:6px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);display:flex;flex-direction:row-reverse;justify-content:center;padding:16px;position:absolute;text-align:center;visibility:hidden;z-index:1}@media (prefers-color-scheme:dark){body:not([theme=light]) #mathlive-keystroke-caption-panel{--keystroke:hsl(var(--hue,212),50%,30%);--on-keystroke:#fafafa;--keystroke-border:hsl(var(--hue,212),50%,25%)}}body[theme=dark] #mathlive-keystroke-caption-panel{--keystroke:hsl(var(--hue,212),50%,30%);--on-keystroke:#fafafa;--keystroke-border:hsl(var(--hue,212),50%,25%)}#mathlive-keystroke-caption-panel>span{fill:currentColor;background-color:var(--keystroke);border:2px solid var(--keystroke-border);border-radius:6px;color:var(--on-keystroke);font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:1em;margin:0 8px 0 0;min-width:14px;padding:4px}";
var Fd;
var Od = null;
var Pd = null;
function Bd(e5) {
  return e5.keystrokeCaption || (e5.keystrokeCaption = Wn("mathlive-keystroke-caption-panel"), void 0 === Fd && (Fd = Ot(Id).toString(36)), Od = Ft(null, Id, Fd), Pd = Ft(null, It, Ot(It).toString(36))), e5.keystrokeCaption;
}
function $d(e5) {
  if (!e5)
    return null;
  if (e5.length > 1)
    return null;
  const t2 = e5[0];
  return t2 instanceof wt && "(" === t2.leftDelim && ")" === t2.rightDelim ? t2.removeBranch("body") : null;
}
function Vd(e5) {
  if (e5) {
    for (let t2 = 0; e5[t2]; t2++) {
      const i2 = e5[t2];
      if (i2 instanceof wt && "(" === i2.leftDelim) {
        let n2 = 0, r2 = 0, a2 = 0;
        for (let e6 = 0; i2.body[e6]; e6++)
          "genfrac" === i2.body[e6].type && (n2++, r2 = e6), a2++;
        0 === a2 && 1 === n2 && (e5[t2] = i2.body[r2]);
      }
    }
    for (const t2 of e5) {
      for (const e6 of t2.branches)
        if (!t2.hasEmptyBranch(e6)) {
          Vd(t2.branch(e6));
          const i2 = $d(t2.branch(e6));
          i2 && t2.setChildren(i2, e6);
        }
      if (t2 instanceof Bt)
        for (const e6 of t2.cells)
          Vd(e6);
    }
  }
}
function Kd(e5) {
  if (!e5)
    return [];
  const t2 = [];
  for (const i2 of e5) {
    for (const e6 of i2.branches)
      if (!i2.hasEmptyBranch(e6)) {
        const n2 = Kd(i2.branch(e6));
        t2.push(...n2);
      }
    i2 instanceof Mt && t2.push(i2);
  }
  return t2;
}
function Rd(e5) {
  return !!/^(mord|surd|msubsup|leftright|mop|mclose)$/.test(e5.type) && !e5.isExtensibleSymbol && !e5.isFunction;
}
function jd(e5, t2, i2) {
  const n2 = e5.at(e5.position), { parent: r2 } = n2;
  let a2 = r2 instanceof wt ? r2.leftDelim + r2.rightDelim : "";
  if ("\\lbrace\\rbrace" === a2 && (a2 = "{}"), "\\{\\}" === a2 && (a2 = "{}"), "\\lparen\\rparen" === a2 && (a2 = "()"), "{}" === a2 && /\||\\vert|\\Vert|\\mvert|\\mid/.test(t2))
    return _r.insert("math", e5, "\\,\\middle" + t2 + "\\, ", { format: "latex", style: i2 }), true;
  if ("{" !== t2 && "\\{" !== t2 || (t2 = "\\lbrace"), "}" !== t2 && "\\}" !== t2 || (t2 = "\\rbrace"), "[" === t2 && (t2 = "\\lbrack"), "]" === t2 && (t2 = "\\rbrack"), lt[t2]) {
    const a3 = r2;
    if ("leftright" === a3.type && a3.firstChild === n2 && ("?" === a3.leftDelim || "." === a3.leftDelim))
      return a3.leftDelim = t2, a3.isDirty = true, true;
    if (!(r2 instanceof wt && "|" === r2.leftDelim)) {
      if (_r.insert("math", e5, `\\left${t2}\\right?`, { format: "latex", style: i2 }), "first" !== n2.lastSibling.type) {
        const t3 = e5.offsetOf(n2.lastSibling), i3 = e5.extractAtoms([e5.position, t3]);
        e5.at(e5.position).body = i3, e5.position -= 1;
      }
      return true;
    }
  }
  let o2 = "";
  if (Object.keys(lt).forEach((e6) => {
    t2 === lt[e6] && (o2 = e6);
  }), o2) {
    if (r2 instanceof wt && n2.isLastSibling)
      return r2.isDirty = true, r2.rightDelim = t2, e5.position += 1, xr(e5, { data: t2, inputType: "insertText" }), true;
    const a3 = e5.offsetOf(n2.firstSibling);
    let o3;
    for (o3 = e5.position; o3 >= a3; o3--) {
      const t3 = e5.at(o3);
      if (t3 instanceof wt && "?" === t3.rightDelim)
        break;
    }
    const s2 = e5.at(o3);
    if (o3 >= a3 && s2 instanceof wt)
      return s2.rightDelim = t2, s2.addChildren(e5.extractAtoms([o3, e5.position]), n2.treeBranch), e5.position = o3, xr(e5, { data: t2, inputType: "insertText" }), true;
    if (r2 instanceof wt && "?" === r2.rightDelim)
      return r2.isDirty = true, r2.rightDelim = t2, r2.parent.addChildren(e5.extractAtoms([e5.position, e5.offsetOf(n2.lastSibling)]), r2.treeBranch), e5.position = e5.offsetOf(r2), xr(e5, { data: t2, inputType: "insertText" }), true;
    const l2 = r2.parent;
    return !!(l2 instanceof wt && "?" === l2.rightDelim && e5.at(e5.position).isLastSibling) && (e5.position = e5.offsetOf(l2), jd(e5, t2, i2));
  }
  return false;
}
function Hd(e5, t2, i2) {
  var n2, r2, a2, o2;
  const { model: s2 } = e5;
  !function(e6) {
    var t3, i3;
    if (!e6)
      return;
    if ("Unidentified" === e6.key)
      return;
    if ("Dead" === e6.key)
      return;
    const n3 = e6.shiftKey && e6.altKey ? 3 : e6.altKey ? 2 : e6.shiftKey ? 1 : 0;
    for (const r3 of Ri)
      (null === (t3 = r3.mapping[e6.code]) || void 0 === t3 ? void 0 : t3[n3]) === e6.key ? r3.score += 1 : (null === (i3 = r3.mapping[e6.code]) || void 0 === i3 ? void 0 : i3[n3]) && (r3.score = 0);
    Ri.sort((e7, t4) => t4.score - e7.score);
  }(i2);
  const l2 = Wi();
  if (e5.keyboardLayout !== l2.id && (e5.keyboardLayout = l2.id, e5._keybindings = void 0), clearTimeout(e5.inlineShortcutBufferFlushTimer), e5.inlineShortcutBufferFlushTimer = 0, function(e6, t3) {
    if (e6.options.readOnly || !e6.keystrokeCaptionVisible)
      return;
    const i3 = Bd(e6), n3 = e6.element.getBoundingClientRect();
    i3.style.left = `${n3.left}px`, i3.style.top = n3.top - 64 + "px", i3.innerHTML = e6.options.createHTML("<span>" + (Gi(t3) || t3) + "</span>" + i3.innerHTML), i3.style.visibility = "visible", setTimeout(() => {
      i3.childNodes.length > 0 && i3.childNodes[i3.childNodes.length - 1].remove(), 0 === i3.childNodes.length && (i3.style.visibility = "hidden");
    }, 3e3);
  }(e5, t2), i2.defaultPrevented)
    return e5.flushInlineShortcutBuffer(), false;
  let u2, c2, d2 = "";
  if (!e5.options.readOnly) {
    if ("math" === e5.mode && !i2.ctrlKey && !i2.metaKey)
      if ("[Backspace]" === t2)
        e5.inlineShortcutBuffer.pop(), e5.flushInlineShortcutBuffer({ defer: true });
      else if (Ld(i2)) {
        const t3 = Ed(i2), a3 = (null !== (r2 = null === (n2 = e5.inlineShortcutBuffer[e5.inlineShortcutBuffer.length - 1]) || void 0 === n2 ? void 0 : n2.keystrokes) && void 0 !== r2 ? r2 : "") + t3;
        e5.inlineShortcutBuffer.push({ state: s2.getState(), keystrokes: a3, leftSiblings: Zd(e5) });
        let o3 = 0, l3 = "";
        for (; !u2 && o3 < a3.length; ) {
          c2 = e5.inlineShortcutBuffer.length - (a3.length - o3), l3 = a3.slice(o3);
          const t4 = e5.inlineShortcutBuffer[c2].leftSiblings;
          u2 = ki(t4, l3, e5.options.inlineShortcuts), !u2 && /^[a-zA-Z][a-zA-Z0-9]+'?([_\^][a-zA-Z0-9\*\+\-]'?)?$/.test(l3) && (u2 = e5.options.onInlineShortcut(e5, l3)), o3 += 1;
        }
        e5.flushInlineShortcutBuffer({ defer: true });
      } else
        e5.flushInlineShortcutBuffer(), e5.snapshot();
    if (e5.options.smartMode) {
      const n3 = e5.mode;
      u2 ? e5.mode = "math" : function(e6, t3, i3) {
        if (e6.smartModeSuppressed)
          return false;
        const { model: n4 } = e6;
        if (!n4.at(n4.position).isLastSibling)
          return false;
        if (!i3 || !Ld(i3))
          return false;
        const r3 = Ed(i3);
        if (!n4.selectionIsCollapsed)
          return !("text" !== e6.mode || !/[/_^]/.test(r3));
        const a3 = function(e7) {
          let t4 = "", i4 = e7.position, n5 = false;
          for (; !n5; ) {
            const r4 = e7.at(i4);
            n5 = !(r4 && ("text" === r4.mode || "math" === r4.mode && /mord|textord|mpunct/.test(r4.type))), n5 || (t4 = r4.value + t4), i4 -= 1;
          }
          return t4;
        }(n4) + r3;
        if ("text" === e6.mode) {
          if ("Esc" === t3 || /[/\\]/.test(r3))
            return true;
          if (/[\^_]/.test(r3))
            return /(^|\s)[a-zA-Z][^_]$/.test(a3) && zd(n4, 1), true;
          const e7 = { ")": "(", "}": "{", "]": "[" }[r3], { parent: i4 } = n4.at(n4.position);
          if (e7 && i4 instanceof wt && i4.leftDelim === e7)
            return true;
          if (/(^|[^a-zA-Z])(a|I) $/.test(a3))
            return false;
          if (/[$\u20ac\xa3\u20a4\u20ba\xa5\xa4\u0e3f\xa2\u20a1\u20a7\u20a8\u20b9\u20a9\u20b1]/u.test(r3))
            return true;
          if (/(^|[^a-zA-Z'\u2019])[a-zA-Z] $/.test(a3))
            return zd(n4, 1), false;
          if (/\D\.[^\d\s]$/.test(a3)) {
            zd(n4, 1);
            const e8 = n4.at(n4.position);
            return e8.value = "\u22C5", e8.style.variant = "normal", e8.command = "\\cdot", e8.verbatimLatex = void 0, xr(n4, { data: "\\cdot", inputType: "insertText" }), true;
          }
          if (/(^|\s)[a-zA-Z][^a-zA-Z]$/.test(a3))
            return zd(n4, 1), true;
          if (/\.\d$/.test(a3))
            return zd(n4, 1), true;
          if (/\([\d+\-.]$/.test(a3))
            return zd(n4, 1), true;
          if (/\([a-z][,;]$/.test(a3))
            return zd(n4, 2), true;
          if (/[\d+\-=><*|]$/.test(r3))
            return qd(n4), true;
        } else {
          if ("[Space]" === t3)
            return Td(n4, void 0, (e7) => /[a-z][:,;.]$/.test(e7.value)), true;
          if (/[a-zA-Z]{3,}$/.test(a3) && !/(dxd|abc|xyz|uvw)$/.test(a3))
            return Td(n4, void 0, (e7) => /[a-zA-Z]/.test(e7.value)), true;
          if (/(^|\W)(if)$/i.test(a3))
            return Td(n4, 1), true;
          if (/(\u0393|\u0394|\u0398|\u039B|\u039E|\u03A0|\u03A3|\u03A5|\u03A6|\u03A8|\u03A9|[\u03B1-\u03C9]|\u03D1|\u03D5|\u03D6|\u03F1|\u03F5){3,}$/u.test(a3) && !/(\u03b1\u03b2\u03b3)$/.test(a3))
            return Td(n4, void 0, (e7) => /(:|,|;|.|\u0393|\u0394|\u0398|\u039B|\u039E|\u03A0|\u03A3|\u03A5|\u03A6|\u03A8|\u03A9|[\u03B1-\u03C9]|\u03D1|\u03D5|\u03D6|\u03F1|\u03F5)/u.test(e7.value)), true;
          if ("?" === r3)
            return true;
          if ("." === r3 && !/[\d-+]\.$/.test(a3))
            return true;
        }
        return false;
      }(e5, t2, i2) && (e5.mode = { math: "text", text: "math" }[e5.mode], d2 = ""), e5.mode !== n3 && ((null === (a2 = e5.host) || void 0 === a2 ? void 0 : a2.dispatchEvent(new Event("mode-change", { bubbles: true, composed: true, cancelable: true }))) || (e5.mode = n3));
    }
  }
  if (!u2) {
    if (d2 || (d2 = function(e6, t3, i3) {
      if (0 === e6.length)
        return "";
      const n3 = $i(Bi(i3));
      for (let i4 = e6.length - 1; i4 >= 0; i4--)
        if (e6[i4].key === n3 && (!e6[i4].ifMode || e6[i4].ifMode === t3))
          return e6[i4].command;
      return "";
    }(e5.keybindings, e5.mode, t2)), !d2 && ("[Enter]" === t2 || "[Return]" === t2)) {
      let t3 = false;
      return vr(s2, { inputType: "insertLineBreak" }) && (e5.host && (t3 = !e5.host.dispatchEvent(new Event("change", { bubbles: true, composed: true }))), t3 || i2.preventDefault && (i2.preventDefault(), i2.stopPropagation()), xr(s2, { inputType: "insertLineBreak" })), t3;
    }
    if ("math" === e5.mode) {
      if ("[Space]" === t2) {
        if (e5.flushInlineShortcutBuffer(), e5.options.mathModeSpace)
          return e5.snapshot(), _r.insert("math", s2, e5.options.mathModeSpace, { format: "latex" }), d2 = "", e5.dirty = true, e5.scrollIntoView(), i2.preventDefault && (i2.preventDefault(), i2.stopPropagation()), false;
        const t3 = s2.at(s2.position + 1), n3 = s2.at(s2.position - 1);
        "text" !== (null == t3 ? void 0 : t3.mode) && "text" !== (null == n3 ? void 0 : n3.mode) || (e5.snapshot(), _r.insert("text", s2, " "), e5.dirty = true);
      }
      (null === (o2 = s2.at(s2.position)) || void 0 === o2 ? void 0 : o2.isDigit()) && "," === e5.options.decimalSeparator && "," === Ed(i2) && (d2 = "insertDecimalSeparator");
    }
  }
  if (!u2 && !d2)
    return true;
  const h2 = s2.at(Math.max(s2.position, s2.anchor)), { parent: m2 } = h2;
  if ("moveAfterParent" === d2 && "leftright" === (null == m2 ? void 0 : m2.type) && h2.isLastSibling && e5.options.smartFence && jd(s2, ".", e5.style) && (d2 = "", mr(e5)), d2)
    e5.executeCommand(d2);
  else if (u2) {
    e5.keyboardDelegate.cancelComposition();
    const t3 = { ...s2.at(s2.position).computedStyle, ...e5.style };
    if (!/^\\({|}|\[|]|@|#|\$|%|&|\^|_|backslash)$/.test(u2)) {
      const n3 = e5.mode;
      _r.insert(e5.mode, s2, Ed(i2), { suppressChangeNotifications: true, style: t3 }), e5.snapshot(), s2.setState(e5.inlineShortcutBuffer[c2].state), e5.mode = n3;
    }
    s2.deferNotifications({ content: true, selection: true, data: null != u2 ? u2 : null, type: "insertText" }, () => (_r.insert(e5.mode, s2, u2, { format: "latex", style: t3 }), qd(e5.model), u2.endsWith(" ") && (e5.mode = "text", _r.insert("text", s2, " ", { style: t3 })), true)), e5.snapshot(), e5.dirty = true, s2.announce("replacement");
  }
  return e5.scrollIntoView(), i2.preventDefault && i2.preventDefault(), false;
}
function Wd(e5, t2, i2) {
  var n2, a2;
  const { model: o2 } = e5;
  if (e5.options.readOnly)
    return void o2.announce("plonk");
  if ((i2 = null != i2 ? i2 : {}).focus && e5.focus(), i2.feedback && (e5.options.keypressVibration && r() && navigator.vibrate(3), null === (n2 = e5.keypressSound) || void 0 === n2 || n2.play().catch(console.warn)), "string" == typeof i2.mode && e5.mode !== i2.mode && e5.switchMode(i2.mode), i2.simulateKeystroke) {
    const i3 = t2.charAt(0), n3 = new KeyboardEvent("keypress", { key: i3 });
    if (!Hd(e5, i3, n3))
      return;
  }
  const s2 = o2.at(o2.position), l2 = { ...s2.computedStyle, ...e5.style };
  o2.selectionIsCollapsed || (o2.deleteAtoms(yr(o2.selection)), e5.snapshot());
  const u2 = Ze(t2);
  if ("latex" === e5.mode)
    o2.deferNotifications({ content: true, selection: true, data: t2, type: "insertText" }, () => {
      Mr(e5);
      for (const e6 of u2)
        _r.insert("latex", o2, e6);
      Nr(e5);
    });
  else if ("text" === e5.mode)
    for (const e6 of u2)
      _r.insert("text", o2, e6, { style: l2 });
  else if ("math" === e5.mode)
    for (const t3 of u2) {
      let i3 = { "^": "moveToSuperscript", _: "moveToSubscript", " ": "moveAfterParent" }[t3];
      " " === t3 && e5.options.mathModeSpace && (i3 = ["insert", e5.options.mathModeSpace]), i3 ? e5.executeCommand(i3) : /\d/.test(t3) && e5.options.smartSuperscript && "superscript" === s2.treeBranch && "mop" !== (null === (a2 = s2.parent) || void 0 === a2 ? void 0 : a2.type) && s2.hasNoSiblings ? (_r.insert("math", o2, t3, { style: l2 }), kd(o2)) : ("mord" === s2.type && /[a-zA-Z]/.test(s2.value) && /[a-zA-Z]/.test(t3) && (s2.style.variant && (l2.variant = s2.style.variant), s2.style.variantStyle && (l2.variantStyle = s2.style.variantStyle)), _r.insert("math", o2, t3, { style: l2 }));
    }
  e5.snapshotAndCoalesce(), e5.dirty = true, e5.scrollIntoView();
}
function Zd(e5) {
  const t2 = e5.model, i2 = [];
  let n2 = t2.at(Math.min(t2.position, t2.anchor));
  for (; "first" !== n2.type; )
    i2.push(n2), n2 = n2.leftSibling;
  return i2;
}
function Gd(e5, t2) {
  var i2, n2, r2, a2, o2, s2;
  const l2 = {};
  "string" == typeof t2.color && (l2.verbatimColor = t2.color, l2.color = null !== (i2 = e5.colorMap(t2.color)) && void 0 !== i2 ? i2 : "none"), "string" == typeof t2.backgroundColor && (l2.verbatimBackgroundColor = t2.backgroundColor, l2.backgroundColor = null !== (n2 = e5.backgroundColorMap(t2.backgroundColor)) && void 0 !== n2 ? n2 : "none"), "string" == typeof t2.fontFamily && (l2.fontFamily = t2.fontFamily), "string" == typeof t2.series && (l2.fontSeries = t2.series), "string" == typeof t2.fontSeries && (l2.fontSeries = t2.fontSeries.toLowerCase()), l2.fontSeries && (l2.fontSeries = null !== (r2 = { bold: "b", medium: "m", normal: "m" }[l2.fontSeries]) && void 0 !== r2 ? r2 : l2.fontSeries), "string" == typeof t2.shape && (l2.fontShape = t2.shape), "string" == typeof t2.fontShape && (l2.fontShape = t2.fontShape.toLowerCase()), l2.fontShape && (l2.fontShape = null !== (a2 = { italic: "it", up: "n", upright: "n", normal: "n" }[l2.fontShape]) && void 0 !== a2 ? a2 : l2.fontShape);
  const u2 = null !== (o2 = t2.size) && void 0 !== o2 ? o2 : t2.fontSize;
  return "number" == typeof u2 ? l2.fontSize = Math.max(1, Math.min(10, u2)) : "string" == typeof u2 && (l2.fontSize = null !== (s2 = { size1: 1, size2: 2, size3: 3, size4: 4, size5: 5, size6: 6, size7: 7, size8: 8, size9: 9, size10: 10 }[u2.toLowerCase()]) && void 0 !== s2 ? s2 : { tiny: 1, scriptsize: 2, footnotesize: 3, small: 4, normal: 5, normalsize: 5, large: 6, Large: 7, LARGE: 8, huge: 9, Huge: 10 }[u2]), l2;
}
new class extends _r {
  constructor() {
    super("math");
  }
  onPaste(e5, t2) {
    if (!t2.clipboardData)
      return false;
    if (!vr(e5.model, { dataTransfer: t2.clipboardData, inputType: "insertFromPaste" }))
      return false;
    let i2 = "", n2 = "auto", r2 = t2.clipboardData.getData("application/json+mathlive");
    if (r2)
      try {
        const i3 = JSON.parse(r2);
        if (i3 && Array.isArray(i3)) {
          e5.snapshot();
          const n3 = ci(i3, e5), { model: r3 } = e5;
          r3.selectionIsCollapsed || r3.deleteAtoms(yr(r3.selection));
          const a2 = r3.at(r3.position);
          if (a2.parent instanceof Bt) {
            const e6 = [];
            let t3 = [];
            "first" === n3[0].type && n3.shift(), "first" === n3[n3.length - 1].type && n3.pop();
            for (const i5 of n3)
              "first" === i5.type && t3.length > 0 ? (e6.push(t3), t3 = [i5]) : t3.push(i5);
            t3.length > 0 && e6.push(t3);
            let i4 = Number(a2.treeBranch[0]), r4 = Number(a2.treeBranch[1]);
            const o2 = a2.parent.maxColumns;
            for (; a2.parent.colCount - r4 < e6.length && a2.parent.colCount < o2; )
              a2.parent.addColumn();
            a2.parent.addChildrenAfter(e6[0], a2);
            for (let t4 = 1; t4 < e6.length; t4++)
              r4++, r4 >= o2 && (r4 = 0, a2.parent.addRowAfter(i4), i4++), a2.parent.setCell(i4, r4, e6[t4]);
          } else
            a2.parent.addChildrenAfter(n3.filter((e6) => "first" !== e6.type), a2);
          return r3.position = r3.offsetOf(n3[n3.length - 1]), xr(r3, { inputType: "insertFromPaste" }), mr(e5), t2.preventDefault(), t2.stopPropagation(), true;
        }
      } catch {
      }
    if (r2 = t2.clipboardData.getData("application/json"), r2)
      try {
        const t3 = JSON.parse(r2);
        if ("object" == typeof t3 && "latex" in t3 && t3.latex && (i2 = t3.latex), !i2) {
          const n3 = e5.computeEngine.box(t3);
          n3.has("Error") || (i2 = n3.latex);
        }
        i2 || (n2 = "latex");
      } catch {
      }
    if (i2 || (i2 = t2.clipboardData.getData("application/x-latex"), i2 && (n2 = "latex")), i2 || (i2 = t2.clipboardData.getData("text/plain")), i2) {
      let r3;
      return e5.snapshot(), [r3, i2] = Ai(i2), "auto" === n2 && r3 && (n2 = "latex"), this.insert(e5.model, i2, { format: n2 }) && mr(e5), t2.preventDefault(), t2.stopPropagation(), true;
    }
    return false;
  }
  insert(e5, t2, i2) {
    const n2 = "string" == typeof t2 ? t2 : e5.mathfield.computeEngine.box(t2).latex;
    if (!vr(e5, { data: n2, inputType: "insertText" }))
      return false;
    if (i2.insertionMode || (i2.insertionMode = "replaceSelection"), i2.selectionMode || (i2.selectionMode = "placeholder"), i2.format || (i2.format = "auto"), e5.mathfield.smartFence) {
      if (e5.selectionIsCollapsed && "string" == typeof t2 && jd(e5, t2, i2.style))
        return true;
    } else if ("replaceAll" !== i2.insertionMode) {
      const { parent: i3 } = e5.at(e5.position);
      if (i3 instanceof wt && "?" === i3.rightDelim && e5.at(e5.position).isLastSibling && "string" == typeof t2 && /^[)}\]|]$/.test(t2))
        return i3.isDirty = true, i3.rightDelim = t2, e5.position += 1, br(e5), xr(e5, { data: n2, inputType: "insertText" }), true;
    }
    const { suppressChangeNotifications: r2 } = e5;
    i2.suppressChangeNotifications && (e5.suppressChangeNotifications = true);
    const a2 = e5.suppressChangeNotifications;
    e5.suppressChangeNotifications = true;
    const o2 = {};
    if (o2[0] = "replaceAll" === i2.insertionMode ? "" : e5.getValue(e5.selection, "latex-unstyled"), o2["?"] = "\\placeholder{}", o2["@"] = o2["?"], "replaceSelection" !== i2.insertionMode || e5.selectionIsCollapsed ? "replaceAll" === i2.insertionMode ? (e5.root.setChildren([], "body"), e5.position = 0) : "insertBefore" === i2.insertionMode ? e5.collapseSelection("backward") : "insertAfter" === i2.insertionMode && e5.collapseSelection("forward") : e5.deleteAtoms(yr(e5.selection)), e5.at(e5.position).isLastSibling || "placeholder" !== e5.at(e5.position + 1).type ? "placeholder" === e5.at(e5.position).type && e5.deleteAtoms([e5.position - 1, e5.position]) : e5.deleteAtoms([e5.position, e5.position + 1]), o2[0])
      o2["@"] = o2[0];
    else if ("string" == typeof t2 && /(^|[^\\])#@/.test(t2)) {
      const t3 = function(e6) {
        let t4 = e6.at(e6.position);
        if ("text" === t4.mode) {
          for (; !t4.isFirstSibling && "text" === t4.mode; )
            t4 = t4.leftSibling;
          return e6.offsetOf(t4);
        }
        const i3 = t4, n3 = [];
        for (; !t4.isFirstSibling && (Rd(t4) || n3.length > 0); )
          "mclose" === t4.type && n3.unshift(t4.value), "mopen" === t4.type && n3.length > 0 && t4.value === ut[n3[0]] && n3.shift(), t4 = t4.leftSibling;
        return i3 === t4 ? -1 : e6.offsetOf(t4);
      }(e5);
      t3 >= 0 && (o2["@"] = e5.getValue(t3, e5.position, "latex-unstyled"), e5.deleteAtoms([t3, e5.position]));
    }
    o2[0] || (o2[0] = o2["?"]);
    let s2 = false;
    const [l2, u2] = function(e6, t3, i3, n3) {
      var r3;
      let a3, o3 = [];
      return "string" != typeof t3 || "math-json" === n3.format ? ([a3, t3] = ["latex", e6.mathfield.computeEngine.box(t3).latex], o3 = Dt(t3, e6.mathfield, { parseMode: "math" })) : "string" == typeof t3 && "ascii-math" === n3.format ? ([a3, t3] = wi(t3, { format: "ascii-math", inlineShortcuts: e6.mathfield.options.inlineShortcuts }), o3 = Dt(t3, e6.mathfield, { parseMode: "math" }), "latex" !== a3 && e6.options.removeExtraneousParentheses && Vd(o3)) : ("auto" === n3.format || (null === (r3 = n3.format) || void 0 === r3 ? void 0 : r3.startsWith("latex"))) && ("auto" === n3.format && ([a3, t3] = wi(t3, { format: "auto", inlineShortcuts: e6.mathfield.options.inlineShortcuts })), "latex" === n3.format && ([, t3] = Ai(t3)), o3 = Dt(t3, e6.mathfield, { parseMode: "math", args: i3 }), "latex" !== n3.format && e6.options.removeExtraneousParentheses && Vd(o3)), fd(o3, n3.style), [null != a3 ? a3 : "latex", o3];
    }(e5, t2, (e6) => (s2 = true, o2[e6]), i2);
    if (!u2)
      return false;
    const c2 = Kd(u2), d2 = c2.filter((t3) => t3.placeholderId && !e5.mathfield.placeholders.has(t3.placeholderId)), h2 = c2.map((e6) => e6.placeholderId);
    [...e5.mathfield.placeholders.keys()].filter((e6) => !h2.includes(e6)).forEach((t3) => {
      var i3;
      e5.mathfield.placeholders.has(t3) && (null === (i3 = e5.mathfield.placeholders.get(t3)) || void 0 === i3 || i3.field.remove(), e5.mathfield.placeholders.delete(t3));
    }), d2.forEach((t3) => {
      var i3, n3;
      const r3 = new ch({ virtualKeyboardMode: "onfocus", readOnly: false, fontsDirectory: e5.mathfield.options.fontsDirectory }), a3 = null === (i3 = e5.mathfield.element) || void 0 === i3 ? void 0 : i3.querySelector(".ML__placeholdercontainer");
      r3.value = (null === (n3 = t3.defaultValue) || void 0 === n3 ? void 0 : n3.length) ? nt.serialize(t3.defaultValue, { defaultMode: "text" }) : "", r3.classList.add("nested-mathfield"), r3.style.display = "inline-block", r3.style.zIndex = "1001", r3.style.position = "absolute", r3.style.minWidth = "30px";
      const o3 = document.createElement("style");
      o3.textContent = ".nested-mathfield { border: 1px solid black; }\n          .ML__container{ min-height:auto !important; }\n          ", r3.appendChild(o3), r3.addEventListener("input", () => {
        !function(e6, t4) {
          !e6.suppressChangeNotifications && e6.mathfield.host && (e6.suppressChangeNotifications = true, e6.mathfield.host.dispatchEvent(new CustomEvent("placeholder-change", { detail: { placeholderId: t4 }, bubbles: true, composed: true })), e6.suppressChangeNotifications = false);
        }(e5, t3.placeholderId), setTimeout(() => mr(e5.mathfield));
      }), null == a3 || a3.appendChild(r3), e5.mathfield.placeholders.set(t3.placeholderId, { atom: t3, field: r3 });
    });
    const { parent: m2 } = e5.at(e5.position);
    if ("latex" !== l2 && e5.options.removeExtraneousParentheses && m2 instanceof wt && "(" === m2.leftDelim && m2.hasEmptyBranch("body") && 1 === u2.length && "genfrac" === u2[0].type) {
      const e6 = m2.parent, t3 = m2.treeBranch;
      e6.removeChild(m2), e6.setChildren(u2, t3);
    }
    const p2 = m2.hasEmptyBranch("body"), f2 = e5.at(e5.position);
    f2.parent.addChildrenAfter(u2, f2), "latex" === l2 && "string" == typeof t2 && "root" === m2.type && p2 && !s2 && (m2.verbatimLatex = t2), e5.suppressChangeNotifications = a2;
    const g2 = u2[u2.length - 1];
    if ("placeholder" === i2.selectionMode) {
      const t3 = u2.reduce((e6, t4) => [...e6, ...t4.children.filter((e7) => "placeholder" === e7.type)], []);
      if (t3.length > 0) {
        const i3 = e5.offsetOf(t3[0]);
        e5.setSelection(i3 - 1, i3), e5.announce("move");
      } else
        g2 && (e5.position = e5.offsetOf(g2));
    } else
      "before" === i2.selectionMode || ("after" === i2.selectionMode ? g2 && (e5.position = e5.offsetOf(g2)) : "item" === i2.selectionMode && e5.setSelection(e5.anchor, e5.offsetOf(g2)));
    return xr(e5, { data: n2, inputType: "insertText" }), e5.suppressChangeNotifications = r2, true;
  }
}(), Er({ undo: (e5) => (Ar(e5, "accept"), e5.undo(), true), redo: (e5) => (Ar(e5, "accept"), e5.redo(), true), scrollIntoView: (e5) => (e5.scrollIntoView(), true), scrollToStart: (e5) => (e5.field.scroll(0, 0), true), scrollToEnd: (e5) => {
  const t2 = e5.field.getBoundingClientRect();
  return e5.field.scroll(t2.left - window.scrollX, 0), true;
}, enterLatexMode: (e5) => (e5.switchMode("latex"), true), toggleKeystrokeCaption: function(e5) {
  return e5.keystrokeCaptionVisible = !e5.keystrokeCaptionVisible, e5.keystrokeCaptionVisible ? (e5.keystrokeCaption = Bd(e5), e5.keystrokeCaption.innerHTML = "") : e5.keystrokeCaption && (e5.keystrokeCaption.style.visibility = "hidden"), false;
}, plonk: (e5) => (e5.model.announce("plonk"), true), switchMode: (e5, t2, i2, n2) => (e5.switchMode(t2, i2, n2), true), insert: (e5, t2, i2) => e5.insert(t2, i2), typedText: (e5, t2, i2) => (Wd(e5, t2, i2), true), insertDecimalSeparator: (e5) => {
  if ("math" === e5.mode && "," === e5.options.decimalSeparator) {
    const t2 = e5.model;
    if (t2.at(Math.max(t2.position, t2.anchor)).isDigit())
      return e5.snapshot(), e5.insert("{,}", { format: "latex" }), true;
  }
  return e5.insert("."), true;
}, commit: (e5) => {
  var t2;
  return null === (t2 = e5.host) || void 0 === t2 || t2.dispatchEvent(new Event("change", { bubbles: true, composed: true })), true;
} }), Er({ copyToClipboard: (e5) => (e5.focus(), e5.model.selectionIsCollapsed && e5.select(), document.execCommand("copy"), false), cutToClipboard: (e5) => (e5.focus(), document.execCommand("cut"), true), pasteFromClipboard: (e5) => (e5.focus(), document.execCommand("paste"), true) }, { target: "mathfield", category: "clipboard" }), Er({ applyStyle: function(e5, t2) {
  e5.flushInlineShortcutBuffer();
  const i2 = Gd(e5, t2), { model: n2 } = e5;
  return n2.selectionIsCollapsed ? (e5.style.fontSeries && i2.fontSeries === e5.style.fontSeries && (i2.fontSeries = "auto"), i2.fontShape && i2.fontShape === e5.style.fontShape && (i2.fontShape = "auto"), i2.color && i2.color === e5.style.color && (i2.color = "none"), i2.backgroundColor && i2.backgroundColor === e5.style.backgroundColor && (i2.backgroundColor = "none"), i2.fontSize && i2.fontSize === e5.style.fontSize && (i2.fontSize = "auto"), e5.style = { ...e5.style, ...i2 }) : e5.model.deferNotifications({ content: true, type: "insertText" }, () => {
    n2.selection.ranges.forEach((e6) => gd(n2, e6, i2, { operation: "toggle" })), e5.snapshot();
  }), true;
} }, { target: "mathfield" });
var Ud;
var Jd;
var Xd = null;
var Yd = 0;
function Qd(e5) {
  return t() && "TouchEvent" in globalThis && e5 instanceof TouchEvent;
}
function eh(e5) {
  return t() && "PointerEvent" in globalThis && e5 instanceof PointerEvent;
}
function th(e5, t2, i2) {
  if (e5 >= i2.left && e5 <= i2.right && t2 >= i2.top && t2 <= i2.bottom)
    return 0;
  const n2 = e5 - (i2.left + i2.right) / 2, r2 = t2 - (i2.top + i2.bottom) / 2;
  return n2 * n2 + r2 * r2;
}
function ih(e5, t2, i2, n2, r2) {
  if (!i2.id)
    return [1 / 0, null];
  if (t2.has(i2.id))
    return t2.get(i2.id);
  const a2 = Qn(e5, i2);
  if (!a2)
    return [1 / 0, null];
  let o2 = [1 / 0, null];
  if (i2.hasChildren && !i2.captureSelection && n2 >= a2.left && n2 <= a2.right)
    for (const a3 of i2.children) {
      const i3 = ih(e5, t2, a3, n2, r2);
      i3[0] <= o2[0] && (o2 = i3);
    }
  return o2[1] || (o2 = [th(n2, r2, a2), i2]), t2.set(i2.id, o2), o2;
}
function nh(e5, t2, i2) {
  const [, n2] = ih(e5, /* @__PURE__ */ new Map(), e5.model.root, t2, i2);
  return n2;
}
function rh(e5, t2, i2, n2) {
  var r2;
  const a2 = e5.fieldContent.getBoundingClientRect();
  if (t2 > a2.right || i2 > a2.bottom + 8)
    return e5.model.lastOffset;
  if (t2 < a2.left || i2 < a2.top - 8)
    return 0;
  (n2 = null != n2 ? n2 : {}).bias = null !== (r2 = n2.bias) && void 0 !== r2 ? r2 : 0;
  let o2 = nh(e5, t2, i2);
  const s2 = [];
  let l2 = o2;
  for (; l2; )
    s2.unshift(l2), l2 = l2.parent;
  for (const e6 of s2)
    if (e6.captureSelection) {
      o2 = e6;
      break;
    }
  let u2 = e5.model.offsetOf(o2);
  if (u2 < 0)
    return -1;
  if (o2.leftSibling)
    if (0 === n2.bias && "placeholder" !== o2.type) {
      const i3 = Qn(e5, o2);
      i3 && t2 < (i3.left + i3.right) / 2 && (u2 = e5.model.offsetOf(o2.leftSibling));
    } else
      n2.bias < 0 && (u2 = e5.model.offsetOf(o2.leftSibling));
  return u2;
}
new class extends _r {
  constructor() {
    super("text");
  }
  onPaste(e5, t2) {
    if (!t2.clipboardData)
      return false;
    const i2 = t2.clipboardData.getData("text/plain");
    return !(!i2 || !vr(e5.model, { inputType: "insertFromPaste", data: i2 }) || (e5.snapshot(), this.insert(e5.model, i2) && (xr(e5.model, { inputType: "insertFromPaste" }), mr(e5)), t2.preventDefault(), t2.stopPropagation(), 0));
  }
  insert(e5, t2, i2 = {}) {
    if (!vr(e5, { data: t2, inputType: "insertText" }))
      return false;
    i2.insertionMode || (i2.insertionMode = "replaceSelection"), i2.selectionMode || (i2.selectionMode = "placeholder"), i2.format || (i2.format = "auto");
    const { suppressChangeNotifications: n2 } = e5;
    i2.suppressChangeNotifications && (e5.suppressChangeNotifications = true);
    const r2 = e5.suppressChangeNotifications;
    e5.suppressChangeNotifications = true, "replaceSelection" !== i2.insertionMode || e5.selectionIsCollapsed ? "replaceAll" === i2.insertionMode ? (e5.root.setChildren([], "body"), e5.position = 0) : "insertBefore" === i2.insertionMode ? e5.collapseSelection("backward") : "insertAfter" === i2.insertionMode && e5.collapseSelection("forward") : e5.deleteAtoms(yr(e5.selection));
    const a2 = function(e6, t3) {
      return Dt(e6 = (e6 = (e6 = (e6 = (e6 = (e6 = (e6 = (e6 = (e6 = (e6 = (e6 = e6.replace(/\\/g, "\\textbackslash ")).replace(/#/g, "\\#")).replace(/\$/g, "\\$")).replace(/%/g, "\\%")).replace(/&/g, "\\&")).replace(/_/g, "\\_")).replace(/{/g, "\\textbraceleft ")).replace(/}/g, "\\textbraceright ")).replace(/\^/g, "\\textasciicircum ")).replace(/~/g, "\\textasciitilde ")).replace(/\xa3/g, "\\textsterling "), t3, { parseMode: "text" });
    }(t2, e5.mathfield);
    if (fd(a2, i2.style), !a2)
      return false;
    const o2 = e5.at(e5.position), s2 = o2.parent.addChildrenAfter(a2, o2);
    return e5.suppressChangeNotifications = r2, "before" === i2.selectionMode || ("item" === i2.selectionMode ? e5.setSelection(e5.anchor, e5.offsetOf(s2)) : s2 && (e5.position = e5.offsetOf(s2))), xr(e5, { data: t2, inputType: "insertText" }), e5.suppressChangeNotifications = n2, true;
  }
}();
var ah = class {
  constructor(e5, i2) {
    var r2, a2, o2;
    this.focusBlurInProgress = false, this.stylesheets = [], this.options = la({ ...da(), registers: an(this) }, i2.readOnly ? { ...i2, virtualKeyboardMode: "off" } : { plonkSound: "plonk.wav", keypressSound: { spacebar: "keypress-spacebar.wav", return: "keypress-return.wav", delete: "keypress-delete.wav", default: "keypress-standard.wav" }, ...i2 }), "auto" === this.options.virtualKeyboardMode && (this.options.virtualKeyboardMode = n() ? "onfocus" : "off"), i2.computeEngine && (this._computeEngine = i2.computeEngine), i2.eventSink && (this.host = i2.eventSink), this.placeholders = /* @__PURE__ */ new Map(), this.plonkSound = this.options.plonkSound, this.options.keypressSound ? !this.options.keypressSound || "string" == typeof this.options.keypressSound || this.options.keypressSound instanceof HTMLAudioElement || (this.keypressSound = this.options.keypressSound.default, this.spacebarKeypressSound = this.options.keypressSound.spacebar, this.returnKeypressSound = this.options.keypressSound.return, this.deleteKeypressSound = this.options.keypressSound.delete) : (this.keypressSound = null, this.spacebarKeypressSound = null, this.returnKeypressSound = null, this.deleteKeypressSound = null), this.element = e5, e5.mathfield = this;
    let s2 = null !== (r2 = i2.value) && void 0 !== r2 ? r2 : this.element.textContent;
    s2 && (s2 = s2.trim()), null !== this.options.fontsDirectory && pi(this.options.fontsDirectory), Ud || (Ud = Ot(It).toString(36)), this.stylesheets.push(Ft(e5, It, Ud)), Jd || (Jd = Ot(ed).toString(36)), this.stylesheets.push(Ft(e5, ed, Jd));
    let l2 = "<span class=ML__textarea>";
    if (n() ? l2 += "<span class=ML__textarea__textarea tabindex=-1 role=textbox></span>" : l2 += `<textarea class=ML__textarea__textarea autocapitalize=off autocomplete=off autocorrect=off spellcheck=false inputmode=none aria-hidden="true" tabindex="${null !== (a2 = e5.tabIndex) && void 0 !== a2 ? a2 : 0}"></textarea>`, l2 += "</span>", l2 += '<span part="container" class="ML__container"><span part="content" class="ML__content"></span>', l2 += `<div part='virtual-keyboard-toggle' class="ML__virtual-keyboard-toggle" role="button" data-ML__tooltip="${sn("tooltip.toggle virtual keyboard")}">`, l2 += null !== (o2 = this.options.virtualKeyboardToggleGlyph) && void 0 !== o2 ? o2 : ca, l2 += "</div>", l2 += "<div class='ML__placeholdercontainer'></div>", l2 += "</span>", l2 += '<div class="ML__sr-only"><span aria-role="status" aria-live="assertive" aria-atomic="true"></span><span></span></div>', this.element.innerHTML = this.options.createHTML(l2), !this.element.children)
      return;
    let u2 = 0;
    const c2 = this.element.children[u2++].firstElementChild;
    this.field = this.element.children[u2].children[0], u2++, this.virtualKeyboardToggle = this.element.querySelector(".ML__virtual-keyboard-toggle"), this.ariaLiveText = this.element.children[u2].children[0], this.accessibleNode = this.element.children[u2++].children[1], this.keystrokeCaptionVisible = false, this.popoverVisible = false, this.suggestionIndex = 0, this.inlineShortcutBuffer = [], this.inlineShortcutBufferFlushTimer = 0, this.mode = ha(this.options), this.smartModeSuppressed = false, this.style = {}, this.options.readOnly || "manual" !== this.options.virtualKeyboardMode ? this.virtualKeyboardToggle.classList.remove("is-visible") : this.virtualKeyboardToggle.classList.add("is-visible"), this.options.readOnly ? this.element.classList.add("ML__isReadOnly") : this.element.classList.remove("ML__isReadOnly"), "inline-math" === this.options.defaultMode ? this.element.classList.add("ML__isInline") : this.element.classList.remove("ML__isInline"), this.element.querySelector(".ML__content").addEventListener("click", (e6) => e6.stopImmediatePropagation(), { capture: false }), this.field.addEventListener("wheel", this, { passive: false }), nr((e6) => this.executeCommand(e6), this.virtualKeyboardToggle, { default: "toggleVirtualKeyboard", alt: "toggleVirtualKeyboardAlt", shift: "toggleVirtualKeyboardShift" }), this.blurred = true, jn(this.element, "focus", this), jn(this.element, "blur", this), this.keyboardDelegate = function(e6, t2, i3) {
      let n2, r3 = null, a3 = null, o3 = false, s3 = false, l3 = false;
      function u3(e7) {
        clearTimeout(n2), n2 = setTimeout(() => {
          clearTimeout(n2), e7();
        });
      }
      function c3() {
        if (e6.selectionStart !== e6.selectionEnd)
          return;
        const t3 = e6.value;
        e6.value = "", t3.length > 0 && i3.typedText(t3);
      }
      const d2 = e6;
      return d2.addEventListener("keydown", (t3) => {
        o3 || "Process" === t3.key || "CapsLock" === t3.code || /(Control|Meta|Alt|Shift)(Left|Right)/.test(t3.code) ? r3 = null : (r3 = t3, a3 = null, i3.keystroke(Ad(t3), t3) ? "textarea" !== e6.tagName.toLowerCase() && (1 === t3.key.length && i3.typedText(t3.key), t3.preventDefault()) : (r3 = null, e6.value = ""));
      }, true), d2.addEventListener("keypress", (e7) => {
        o3 || (r3 && a3 && i3.keystroke(Ad(r3), r3), a3 = e7, u3(c3));
      }, true), d2.addEventListener("keyup", () => {
        o3 || r3 && !a3 && c3();
      }, true), d2.addEventListener("paste", (t3) => {
        e6.focus(), e6.value = "", i3.paste(t3) || t3.preventDefault(), t3.stopImmediatePropagation();
      }, true), d2.addEventListener("cut", (e7) => i3.cut(e7), true), d2.addEventListener("copy", (e7) => i3.copy(e7), true), d2.addEventListener("blur", (n3) => {
        var o4, u4, c4;
        if ((null === (u4 = null === (o4 = n3.relatedTarget) || void 0 === o4 ? void 0 : o4._mathfield) || void 0 === u4 ? void 0 : u4.element) === t2)
          return e6.focus(), n3.preventDefault(), void n3.stopPropagation();
        const d3 = null === (c4 = Tr.scrim) || void 0 === c4 ? void 0 : c4.state;
        return "open" === d3 || "opening" === d3 || n3.relatedTarget === n3.target.getRootNode().host ? (n3.preventDefault(), void n3.stopPropagation()) : void (l3 || s3 || (l3 = true, r3 = null, a3 = null, i3.blur && i3.blur(), l3 = false, n3.stopPropagation()));
      }, true), d2.addEventListener("focus", (t3) => {
        l3 || s3 || (s3 = true, i3.focus && i3.focus(), Cd() === e6 && "function" == typeof e6.select && e6.select(), s3 = false, t3.stopPropagation());
      }, true), d2.addEventListener("compositionstart", (t3) => {
        o3 = true, e6.value = "", i3.compositionStart && i3.compositionStart(t3.data);
      }, true), d2.addEventListener("compositionupdate", (e7) => {
        o3 && i3.compositionUpdate && i3.compositionUpdate(e7.data);
      }, true), d2.addEventListener("compositionend", (t3) => {
        e6.value = "", o3 && (o3 = false, i3.compositionEnd && i3.compositionEnd(t3.data));
      }, true), d2.addEventListener("beforeinput", (e7) => {
        e7.stopImmediatePropagation();
      }), d2.addEventListener("input", (e7) => {
        if (!o3 && "insertCompositionText" !== e7.inputType) {
          if ("insertFromPaste" === e7.inputType)
            return e7.preventDefault(), void e7.stopPropagation();
          u3(c3), e7.preventDefault(), e7.stopPropagation();
        }
      }), { cancelComposition: () => {
        const t3 = i3.blur, n3 = i3.focus;
        i3.blur = null, i3.focus = null, e6.blur(), e6.focus(), i3.blur = t3, i3.focus = n3;
      }, blur: () => {
        "function" == typeof e6.blur && e6.blur();
      }, focus: () => {
        "function" == typeof e6.focus && e6.focus();
      }, hasFocus: () => Cd() === e6, setValue: (t3) => {
        t3 ? (e6.value = t3, Cd() === e6 && "function" == typeof e6.select && e6.select()) : (e6.value = "", e6.setAttribute("aria-label", ""));
      }, setAriaLabel: (t3) => {
        e6.setAttribute("aria-label", "after: " + t3);
      }, moveTo: (t3, i4) => {
        e6.style.top = `${i4}px`, e6.style.left = `${t3}px`;
      } };
    }(c2, this.element, { typedText: (e6) => Wd(this, e6), cut: (e6) => {
      this.options.readOnly ? this.model.announce("plonk") : vr(this.model, { inputType: "deleteByCut" }) && (this.snapshot(), _r.onCopy(this, e6), setTimeout(() => {
        md(this.model, yr(this.model.selection), "deleteByCut"), mr(this);
      }, 0));
    }, copy: (e6) => _r.onCopy(this, e6), paste: (e6) => {
      let t2 = true;
      return this.options.readOnly && (t2 = false), t2 && (t2 = _r.onPaste(this.model.at(this.model.position).mode, this, e6)), t2 || this.model.announce("plonk"), t2;
    }, keystroke: (e6, t2) => Hd(this, e6, t2), focus: () => this.onFocus(), blur: () => this.onBlur(), compositionStart: (e6) => this.onCompositionStart(e6), compositionUpdate: (e6) => this.onCompositionUpdate(e6), compositionEnd: (e6) => this.onCompositionEnd(e6) }), t() && "PointerEvent" in window ? jn(this.field, "pointerdown", this) : jn(this.field, "touchstart:active mousedown", this), jn(window, "resize", this), window.addEventListener("blur", () => {
      Gn(this) && this.hasFocus() && window.addEventListener("focus", (e6) => {
        e6.target === window && Gn(this) && this.focus();
      }, { once: true });
    }, { capture: true }), this.model = new ad({ mode: ha(this.options), macros: this.options.macros, removeExtraneousParentheses: this.options.removeExtraneousParentheses }, { onSelectionDidChange: (e6) => this._onSelectionDidChange() }, this), this.undoManager = new Dd(this.model), s2 && _r.insert("math", this.model, s2, { insertionMode: "replaceAll", selectionMode: "after", format: "latex", suppressChangeNotifications: true }), this.undoManager.startRecording(), this.undoManager.snapshot(), this.model.setListeners({ onSelectionDidChange: (e6) => this._onSelectionDidChange() }), mr(this), t() && document.fonts.ready.then(() => pr(this));
  }
  get colorMap() {
    return (e5) => {
      var t2;
      let i2;
      return "function" == typeof (null === (t2 = this.options) || void 0 === t2 ? void 0 : t2.colorMap) && (i2 = this.options.colorMap(e5)), i2 || (i2 = Se(e5)), i2;
    };
  }
  get backgroundColorMap() {
    return (e5) => {
      var t2;
      let i2;
      return "function" == typeof (null === (t2 = this.options) || void 0 === t2 ? void 0 : t2.backgroundColorMap) && (i2 = this.options.backgroundColorMap(e5)), i2 || "function" != typeof this.options.colorMap || (i2 = this.options.colorMap(e5)), i2 || (i2 = Me(e5)), i2;
    };
  }
  get fractionNavigationOrder() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.options) || void 0 === e5 ? void 0 : e5.fractionNavigationOrder) && void 0 !== t2 ? t2 : "numerator-denominator";
  }
  get placeholderSymbol() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.options) || void 0 === e5 ? void 0 : e5.placeholderSymbol) && void 0 !== t2 ? t2 : "\u25A2";
  }
  get smartFence() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.options) || void 0 === e5 ? void 0 : e5.smartFence) && void 0 !== t2 && t2;
  }
  get letterShapeStyle() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.options) || void 0 === e5 ? void 0 : e5.letterShapeStyle) && void 0 !== t2 ? t2 : "tex";
  }
  get registers() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this.options) || void 0 === e5 ? void 0 : e5.registers) && void 0 !== t2 ? t2 : {};
  }
  getDefinition(e5, t2 = "math") {
    return un(e5, t2);
  }
  getMacro(e5) {
    return cn(e5, this.options.macros);
  }
  get virtualKeyboard() {
    var e5;
    if (!this.options.readOnly)
      return this._virtualKeyboard || ((null === (e5 = window.mathlive) || void 0 === e5 ? void 0 : e5.sharedVirtualKeyboard) || this.options.useSharedVirtualKeyboard ? this._virtualKeyboard = new Yr({ targetOrigin: this.options.sharedVirtualKeyboardTargetOrigin, originValidator: this.options.originValidator, mathfield: this }) : this._virtualKeyboard = new Fr(this.options, this)), this._virtualKeyboard;
  }
  get computeEngine() {
    return this._computeEngine || (this._computeEngine = new Qc(), "," === this.options.decimalSeparator && (this._computeEngine.latexOptions.decimalMarker = "{,}")), this._computeEngine;
  }
  get virtualKeyboardState() {
    var e5;
    return (null === (e5 = this.virtualKeyboard) || void 0 === e5 ? void 0 : e5.visible) ? "visible" : "hidden";
  }
  set virtualKeyboardState(e5) {
    this.virtualKeyboard && ("hidden" === e5 ? this.virtualKeyboard.executeCommand("hideVirtualKeyboard") : "visible" === e5 && this.virtualKeyboard.executeCommand("showVirtualKeyboard"));
  }
  get keybindings() {
    var e5, t2;
    if (this._keybindings)
      return this._keybindings;
    const [i2, n2] = function(e6, t3) {
      const i3 = [], n3 = [];
      for (const r2 of e6)
        try {
          const e7 = Ui(r2, t3);
          if (e7) {
            const n4 = i3.filter((t4) => t4.key === e7.key && t4.ifMode === e7.ifMode);
            if (n4.length > 0)
              throw new Error(`Ambiguous key binding ${r2.key} (${Ji(r2.command)}) matches ${n4[0].key} (${Ji(n4[0].command)}) with the ${t3.displayName} keyboard layout`);
            i3.push(e7);
          }
        } catch (e7) {
          e7 instanceof Error && n3.push(e7.message);
        }
      return [i3, n3];
    }(this.options.keybindings, null !== (e5 = Wi()) && void 0 !== e5 ? e5 : Vi);
    return (null === (t2 = Wi()) || void 0 === t2 ? void 0 : t2.score) > 0 && (this._keybindings = i2, n2.length), i2;
  }
  setOptions(e5) {
    var t2, i2;
    if (this.options = la(this.options, e5), this._computeEngine && "decimalSeparator" in e5 && (this._computeEngine.latexOptions.decimalMarker = "," === this.options.decimalSeparator ? "{,}" : "."), this.model.setListeners({ onSelectionDidChange: (e6) => this._onSelectionDidChange() }), this.model.options.macros = this.options.macros, this._keybindings = void 0, this.plonkSound = this.options.plonkSound, !this.options.keypressSound || "string" == typeof this.options.keypressSound || this.options.keypressSound instanceof HTMLAudioElement || (this.keypressSound = this.options.keypressSound.default, this.spacebarKeypressSound = this.options.keypressSound.spacebar, this.returnKeypressSound = this.options.keypressSound.return, this.deleteKeypressSound = this.options.keypressSound.delete), "inline-math" === this.options.defaultMode ? this.element.classList.add("ML__isInline") : this.element.classList.remove("ML__isInline"), this.options.readOnly ? (this.hasFocus() && "visible" === this.virtualKeyboardState && this.executeCommand("hideVirtualKeyboard"), this.onBlur(), this.element.classList.add("ML__isReadOnly")) : this.element.classList.remove("ML__isReadOnly"), null === (t2 = this.virtualKeyboard) || void 0 === t2 || t2.setOptions(this.options), this.options.readOnly || "manual" !== this.options.virtualKeyboardMode ? this.virtualKeyboardToggle.classList.remove("is-visible") : this.virtualKeyboardToggle.classList.add("is-visible"), "virtualKeyboardToggleGlyph" in e5) {
      const e6 = null === (i2 = this.element) || void 0 === i2 ? void 0 : i2.querySelector(".ML__virtual-keyboard-toggle");
      e6 && (e6.innerHTML = this.options.createHTML(this.options.virtualKeyboardToggleGlyph));
    }
    const n2 = nt.serialize(this.model.root, { expandMacro: false, defaultMode: this.options.defaultMode });
    ("macros" in e5 || this.model.getValue() !== n2) && _r.insert("math", this.model, n2, { insertionMode: "replaceAll", selectionMode: "after", format: "latex", suppressChangeNotifications: true }), mr(this);
  }
  getOptions(e5) {
    return ua(this.options, e5);
  }
  getOption(e5) {
    return ua(this.options, e5);
  }
  handleEvent(e5) {
    if (Gn(this))
      switch (e5.type) {
        case "focus":
          this.onFocus();
          break;
        case "blur":
          this.onBlur();
          break;
        case "touchstart":
        case "mousedown":
        case "pointerdown":
          !function(e6, i2) {
            var n2;
            e6.atomBoundsCache = /* @__PURE__ */ new Map();
            const r2 = e6;
            let a2, o2 = false, s2 = "none";
            if (eh(i2) && i2.buttons > 1)
              return;
            let l2 = false, u2 = false;
            const c2 = Qd(i2) ? i2.touches[0].clientX : i2.clientX, d2 = Qd(i2) ? i2.touches[0].clientY : i2.clientY, h2 = Date.now(), m2 = r2.field, p2 = setInterval(() => {
              l2 ? m2.scroll({ top: 0, left: m2.scrollLeft - 16 }) : u2 && m2.scroll({ top: 0, left: m2.scrollLeft + 16 });
            }, 32);
            function f2(i3) {
              t() && ("PointerEvent" in window ? (Hn(m2, "pointermove", g2), Hn(m2, "pointerup pointercancel", f2), i3 instanceof PointerEvent && m2.releasePointerCapture(i3.pointerId)) : (Hn(m2, "touchmove", g2), Hn(m2, "touchcancel touchend", f2), Hn(window, "mousemove", g2), Hn(window, "mouseup blur", f2)), o2 = false, clearInterval(p2), e6.element.classList.remove("tracking"), i3 && i3.preventDefault());
            }
            function g2(t2) {
              if (!r2.hasFocus())
                return void f2(null);
              const i3 = Qd(t2) ? t2.touches[0].clientX : t2.clientX, n3 = Qd(t2) ? t2.touches[0].clientY : t2.clientY, o3 = Qd(t2) || "touch" === t2.pointerType ? 20 : 5;
              if (Date.now() < h2 + 500 && Math.abs(c2 - i3) < o3 && Math.abs(d2 - n3) < o3)
                return t2.preventDefault(), void t2.stopPropagation();
              const s3 = m2.getBoundingClientRect();
              u2 = i3 > s3.right, l2 = i3 < s3.left;
              let p3 = a2;
              eh(t2) ? t2.isPrimary || (p3 = rh(r2, t2.clientX, t2.clientY, { bias: 0 })) : t2.touches && 2 === t2.touches.length && (p3 = rh(r2, t2.touches[1].clientX, t2.touches[1].clientY, { bias: 0 }));
              const g3 = rh(r2, i3, n3, { bias: i3 <= c2 ? i3 === c2 ? 0 : -1 : 1 });
              p3 >= 0 && g3 >= 0 && (r2.model.extendSelectionTo(p3, g3), mr(e6)), t2.preventDefault(), t2.stopPropagation();
            }
            Xd && Math.abs(Xd.x - c2) < 5 && Math.abs(Xd.y - d2) < 5 && Date.now() < Xd.time + 500 ? (Yd += 1, Xd.time = h2) : (Xd = { x: c2, y: d2, time: h2 }, Yd = 1);
            const y2 = m2.getBoundingClientRect();
            if (c2 >= y2.left && c2 <= y2.right && d2 >= y2.top && d2 <= y2.bottom) {
              if (e6.hasFocus() || (s2 = "all", e6.focus({ scrollIntoView: false })), e6.flushInlineShortcutBuffer(), e6.smartModeSuppressed = false, a2 = rh(e6, c2, d2, { bias: 0 }), a2 >= 0) {
                if (e6.element.classList.add("tracking"), i2.shiftKey) {
                  const t2 = e6.model.selectionIsCollapsed;
                  e6.model.extendSelectionTo(e6.model.anchor, a2), s2 = Lr(e6.model) || t2 ? "all" : "selection";
                } else
                  "placeholder" === e6.model.at(a2).type ? (e6.model.setSelection(a2 - 1, a2), s2 = "selection") : "placeholder" === (null === (n2 = e6.model.at(a2).rightSibling) || void 0 === n2 ? void 0 : n2.type) ? (e6.model.setSelection(a2, a2 + 1), s2 = "selection") : (e6.model.position = a2, s2 = Lr(e6.model) ? "all" : "selection");
                e6.style = {}, 3 === i2.detail || Yd > 2 ? (f2(i2), 3 !== i2.detail && 3 !== Yd || (e6.model.selection = { ranges: [[0, e6.model.lastOffset]] }, s2 = "all")) : o2 || (o2 = true, t() && "PointerEvent" in window ? (jn(m2, "pointermove", g2), jn(m2, "pointerup pointercancel", f2), i2 instanceof PointerEvent && m2.setPointerCapture(i2.pointerId)) : (jn(window, "blur", f2), Qd(i2) && i2.touches ? (jn(i2.target, "touchmove", g2), jn(i2.target, "touchcancel touchend", f2)) : (jn(window, "mousemove", g2), jn(window, "mouseup", f2))), 2 !== i2.detail && 2 !== Yd || (Md(e6.model), s2 = "all"));
              }
            } else
              Xd = null;
            "none" !== s2 && (e6.model.selectionIsCollapsed && (s2 = "all"), mr(e6)), i2.preventDefault();
          }(this, e5);
          break;
        case "resize":
          this.resizeTimer && cancelAnimationFrame(this.resizeTimer), this.resizeTimer = requestAnimationFrame(() => Gn(this) && this.onResize());
          break;
        case "wheel":
          this.onWheel(e5);
      }
  }
  dispose() {
    if (!Gn(this))
      return;
    const e5 = this.element;
    delete this.element, delete e5.mathfield, e5.innerHTML = this.model.getValue(), Hn(e5, "pointerdown", this), Hn(e5, "touchstart:active mousedown", this), Hn(e5, "focus", this), Hn(e5, "blur", this), Hn(window, "resize", this), window.removeEventListener("blur", this, { capture: true }), delete this.accessibleNode, delete this.ariaLiveText, delete this.field, delete this.fieldContent, this.virtualKeyboardToggle.remove(), delete this.virtualKeyboardToggle, this._virtualKeyboard && (this._virtualKeyboard.dispose(), delete this._virtualKeyboard), Zn(this.popover), or && or.release(), sr && sr.release(), delete this.popover, Zn(this.keystrokeCaption), Od && Od.release(), Pd && Pd.release(), delete this.keystrokeCaption, this.stylesheets.forEach((e6) => null == e6 ? void 0 : e6.release());
  }
  flushInlineShortcutBuffer(e5) {
    if (null != e5 || (e5 = { defer: false }), !e5.defer)
      return this.inlineShortcutBuffer = [], clearTimeout(this.inlineShortcutBufferFlushTimer), void (this.inlineShortcutBufferFlushTimer = 0);
    this.options.inlineShortcutTimeout > 0 && (clearTimeout(this.inlineShortcutBufferFlushTimer), this.inlineShortcutBufferFlushTimer = setTimeout(() => this.flushInlineShortcutBuffer(), this.options.inlineShortcutTimeout));
  }
  executeCommand(t2) {
    var i2, n2;
    return "virtual-keyboard" === Dr(t2) ? null !== (n2 = null === (i2 = this.virtualKeyboard) || void 0 === i2 ? void 0 : i2.executeCommand(t2)) && void 0 !== n2 && n2 : function(t3, i3) {
      var n3, r2, a2;
      if (!i3)
        return false;
      let o2, s2 = [], l2 = false, u2 = false;
      e(i3) ? (o2 = i3[0], s2 = i3.slice(1)) : o2 = i3, o2 = o2.replace(/-\w/g, (e5) => e5[1].toUpperCase());
      const c2 = null === (n3 = Cr[o2]) || void 0 === n3 ? void 0 : n3.target;
      if ("model" === c2) {
        if (t3.options.readOnly && /^(paste|cut|insert|delete|transpose|add)/.test(o2))
          return t3.model.announce("plonk"), false;
        /^(delete|transpose|add)/.test(o2) && "deleteBackward" !== o2 && t3.flushInlineShortcutBuffer(), /^(delete|transpose|add)/.test(o2) && "latex" !== t3.mode && (t3.popUndoStack(), t3.snapshot()), "latex" !== t3.mode || /^(complete)/.test(o2) || Mr(t3), Cr[o2].fn(t3.model, ...s2), "latex" !== t3.mode && /^(delete|transpose|add)/.test(o2) && t3.snapshot(), "latex" === t3.mode && Nr(t3), u2 = true, l2 = true;
      } else if ("virtual-keyboard" === c2)
        u2 = null !== (a2 = null === (r2 = t3.virtualKeyboard) || void 0 === r2 ? void 0 : r2.executeCommand(i3)) && void 0 !== a2 && a2, l2 = true;
      else {
        if (!Cr[o2])
          throw new Error(`Unknown command "${o2}"`);
        /^(undo|redo)/.test(o2) && t3.flushInlineShortcutBuffer(), u2 = Cr[o2].fn(t3, ...s2), l2 = true;
      }
      return "virtual-keyboard" !== c2 && (t3.model.selectionIsCollapsed && !/^(transpose|paste|complete|((moveToNextChar|moveToPreviousChar|extend).*))_$/.test(o2) || (t3.flushInlineShortcutBuffer(), t3.style = {})), u2 && mr(t3), l2;
    }(this, t2);
  }
  get errors() {
    return Tt(this.model.getValue(), this);
  }
  getValue(e5, t2, i2) {
    return this.model.getValue(e5, t2, i2);
  }
  setValue(e5, t2) {
    var i2;
    void 0 === (t2 = null != t2 ? t2 : { mode: "math" }).insertionMode && (t2.insertionMode = "replaceAll"), void 0 !== t2.format && "auto" !== t2.format || (t2.format = "latex");
    let n2 = "math";
    void 0 !== t2.mode && "auto" !== t2.mode || (n2 = null !== (i2 = pd(this.model, this.model.position)) && void 0 !== i2 ? i2 : "math"), _r.insert(n2, this.model, e5, t2) && (this.undoManager.snapshot(), mr(this));
  }
  get expression() {
    const e5 = this.computeEngine;
    return e5.box(e5.parse(this.model.getValue()));
  }
  scrollIntoView() {
    var e5;
    if (!this.element)
      return;
    null === (e5 = this.host) || void 0 === e5 || e5.scrollIntoView({ block: "nearest", inline: "nearest" }), this.dirty && pr(this, { interactive: true });
    const t2 = this.field.getBoundingClientRect();
    let i2 = null;
    if (this.model.selectionIsCollapsed)
      i2 = Un(this.field);
    else {
      const e6 = er(this);
      if (e6.length > 0) {
        let n2 = -1 / 0, r2 = -1 / 0;
        for (const t3 of e6)
          t3.right > n2 && (n2 = t3.right), t3.top < r2 && (r2 = t3.top);
        i2 = { x: n2 + t2.left - this.field.scrollLeft, y: r2 + t2.top - this.field.scrollTop, height: 0 };
      }
    }
    if (this.host && i2) {
      const e6 = this.host.getBoundingClientRect(), t3 = i2.y;
      let n2 = this.host.scrollTop;
      t3 < e6.top ? n2 = t3 - e6.top + this.host.scrollTop : t3 > e6.bottom && (n2 = t3 - e6.bottom + this.host.scrollTop + i2.height), this.host.scroll({ top: n2, left: 0 });
    }
    if (i2) {
      const e6 = i2.x - window.scrollX;
      let n2 = this.field.scrollLeft;
      e6 < t2.left ? n2 = e6 - t2.left + this.field.scrollLeft - 20 : e6 > t2.right && (n2 = e6 - t2.right + this.field.scrollLeft + 20), this.field.scroll({ top: this.field.scrollTop, left: n2 });
    }
  }
  insert(e5, t2) {
    var i2;
    if ("string" == typeof e5 && e5.length > 0) {
      if (this.flushInlineShortcutBuffer(), (t2 = null != t2 ? t2 : { mode: "math" }).focus && this.focus(), t2.feedback && (this.options.keypressVibration && r() && navigator.vibrate(3), null === (i2 = this.keypressSound) || void 0 === i2 || i2.play().catch(console.warn)), t2.scrollIntoView && this.scrollIntoView(), "\\\\" === e5)
        ud(this.model);
      else if ("&" === e5)
        cd(this.model);
      else {
        const i3 = this.style;
        _r.insert(this.mode, this.model, e5, { style: this.model.at(this.model.position).computedStyle, ...t2 }), t2.resetStyle && (this.style = i3);
      }
      return this.undoManager.snapshot(), mr(this), true;
    }
    return false;
  }
  switchMode(e5, t2 = "", i2 = "") {
    var n2;
    if (this.mode === e5 || this.options.readOnly)
      return;
    if (!(null === (n2 = this.host) || void 0 === n2 ? void 0 : n2.dispatchEvent(new Event("mode-change", { bubbles: true, composed: true, cancelable: true }))))
      return;
    const r2 = this.mode, { model: a2 } = this;
    a2.deferNotifications({ content: Boolean(i2) || Boolean(t2), selection: true, type: "insertText" }, () => {
      var n3;
      let o2 = false;
      if (this.flushInlineShortcutBuffer(), this.smartModeSuppressed = /text|math/.test(this.mode) && /text|math/.test(e5), t2 && "latex" !== e5) {
        const i3 = Dt(t2, this, { parseMode: e5 });
        a2.collapseSelection("forward");
        const n4 = a2.at(a2.position);
        a2.position = a2.offsetOf(n4.parent.addChildrenAfter(i3, n4)), o2 = true;
      }
      if (this.mode = e5, "latex" === e5) {
        let e6, i3 = a2.selectionIsCollapsed;
        Ar(this, "accept"), (null === (n3 = this.virtualKeyboard) || void 0 === n3 ? void 0 : n3.visible) && this.executeCommand(["switchKeyboardLayer", "latex-lower"]);
        let r3 = a2.at(a2.position);
        if (i3)
          e6 = "\\";
        else {
          const n4 = yr(a2.selection);
          e6 = this.model.getValue(n4, "latex");
          const o4 = this.model.extractAtoms(n4);
          1 === o4.length && o4[0] instanceof Mt && (e6 = t2, i3 = true), r3 = a2.at(n4[0]);
        }
        const o3 = new ii(e6, this);
        r3.parent.addChildAfter(o3, r3), i3 ? a2.position = a2.offsetOf(o3.lastChild) : a2.setSelection(a2.offsetOf(o3.firstChild), a2.offsetOf(o3.lastChild));
      } else
        wr(a2).forEach((e6) => {
          e6.isError = false;
        });
      if (i2) {
        const e6 = Dt(i2, this, { parseMode: r2 });
        a2.collapseSelection("forward");
        const t3 = a2.at(a2.position);
        a2.position = a2.offsetOf(t3.parent.addChildrenAfter(e6, t3)), o2 = true;
      }
      return mr(this), o2;
    }), this.mode = e5;
  }
  hasFocus() {
    return t() && this.keyboardDelegate.hasFocus();
  }
  focus(e5) {
    var t2;
    this.keyboardDelegate.focus(), this.model.announce("line"), (null === (t2 = null == e5 ? void 0 : e5.scrollIntoView) || void 0 === t2 || t2) && this.scrollIntoView();
  }
  blur() {
    this.keyboardDelegate.blur();
  }
  select() {
    this.model.selection = { ranges: [[0, this.model.lastOffset]] };
  }
  applyStyle(e5, t2 = {}) {
    var i2, n2;
    const r2 = { operation: "set", suppressChangeNotifications: false };
    id(t2) ? r2.range = t2 : (r2.range = t2.range, r2.suppressChangeNotifications = null !== (i2 = t2.suppressChangeNotifications) && void 0 !== i2 && i2);
    const a2 = Gd(this, e5), o2 = null !== (n2 = r2.operation) && void 0 !== n2 ? n2 : "set";
    this.model.deferNotifications({ content: !r2.suppressChangeNotifications, type: "insertText" }, () => {
      void 0 === r2.range ? this.model.selection.ranges.forEach((e6) => gd(this.model, e6, a2, { operation: o2 })) : gd(this.model, r2.range, a2, { operation: o2 });
    }), mr(this);
  }
  getCaretPoint() {
    const e5 = Un(this.field);
    return e5 ? { x: e5.x, y: e5.y } : null;
  }
  setCaretPoint(e5, t2) {
    const i2 = rh(this, e5, t2, { bias: 0 });
    if (i2 < 0)
      return false;
    const n2 = this.model.position;
    return this.model.position = i2, this.model.announce("move", n2), mr(this), true;
  }
  getPlaceholderField(e5) {
    var t2;
    return null === (t2 = this.placeholders.get(e5)) || void 0 === t2 ? void 0 : t2.field;
  }
  attachNestedMathfield() {
    let e5 = false;
    this.placeholders.forEach((t2) => {
      var i2, n2, r2, a2, o2, s2, l2, u2;
      const c2 = null === (i2 = this.field) || void 0 === i2 ? void 0 : i2.querySelector(`[data-placeholder-id=${t2.atom.placeholderId}]`);
      if (c2) {
        const i3 = c2.getBoundingClientRect(), d2 = null === (n2 = this.field) || void 0 === n2 ? void 0 : n2.getBoundingClientRect(), h2 = 0.6 * parseInt(window.getComputedStyle(c2).fontSize);
        (!t2.field.style.fontSize || Math.abs(h2 - parseFloat(t2.field.style.fontSize)) >= 0.2) && (e5 = true, t2.field.style.fontSize = `${h2}px`);
        const m2 = (null !== (r2 = null == i3 ? void 0 : i3.top) && void 0 !== r2 ? r2 : 0) - (null !== (a2 = null == d2 ? void 0 : d2.top) && void 0 !== a2 ? a2 : 0) + (null !== (o2 = this.element.offsetTop) && void 0 !== o2 ? o2 : 0), p2 = (null !== (s2 = null == i3 ? void 0 : i3.left) && void 0 !== s2 ? s2 : 0) - (null !== (l2 = null == d2 ? void 0 : d2.left) && void 0 !== l2 ? l2 : 0) + (null !== (u2 = this.element.offsetLeft) && void 0 !== u2 ? u2 : 0);
        (!t2.field.style.left || Math.abs(p2 - parseFloat(t2.field.style.left)) >= 1) && (e5 = true, t2.field.style.left = `${p2}px`), (!t2.field.style.top || Math.abs(m2 - parseFloat(t2.field.style.top)) >= 1) && (e5 = true, t2.field.style.top = `${m2}px`);
      }
    }), e5 && mr(this);
  }
  canUndo() {
    return this.undoManager.canUndo();
  }
  canRedo() {
    return this.undoManager.canRedo();
  }
  popUndoStack() {
    this.undoManager.pop();
  }
  snapshot() {
    var e5, t2;
    this.undoManager.snapshot() && (null === (e5 = this.virtualKeyboard) || void 0 === e5 || e5.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null === (t2 = this.host) || void 0 === t2 || t2.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "snapshot" } })));
  }
  snapshotAndCoalesce() {
    var e5, t2;
    this.undoManager.snapshotAndCoalesce() && (null === (e5 = this.virtualKeyboard) || void 0 === e5 || e5.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null === (t2 = this.host) || void 0 === t2 || t2.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "snapshot" } })));
  }
  undo() {
    var e5, t2;
    this.undoManager.undo() && (null === (e5 = this.virtualKeyboard) || void 0 === e5 || e5.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null === (t2 = this.host) || void 0 === t2 || t2.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "undo" } })));
  }
  redo() {
    var e5, t2;
    this.undoManager.redo() && (null === (e5 = this.virtualKeyboard) || void 0 === e5 || e5.executeCommand(["onUndoStateChanged", this.canUndo(), this.canRedo()]), null === (t2 = this.host) || void 0 === t2 || t2.dispatchEvent(new CustomEvent("undo-state-change", { bubbles: true, composed: true, detail: { type: "undo" } })));
  }
  _onSelectionDidChange() {
    var e5, t2, i2;
    this.keyboardDelegate.setValue(this.model.getValue(this.model.selection, "latex-expanded"));
    const n2 = this.model.getAtoms(this.model.selection);
    if (1 === n2.length && "placeholder" === n2[0].type) {
      const t3 = n2[0];
      this.model.mathfield.placeholders.has(t3.placeholderId) && (null === (e5 = this.model.mathfield.placeholders.get(t3.placeholderId)) || void 0 === e5 || e5.field.focus());
    }
    {
      const e6 = this.model.at(this.model.position), i3 = null !== (t2 = e6.mode) && void 0 !== t2 ? t2 : ha(this.options);
      this.mode !== i3 && ("latex" === this.mode ? (Ar(this, "accept", { mode: i3 }), this.model.position = this.model.offsetOf(e6)) : this.switchMode(i3));
    }
    null === (i2 = this.host) || void 0 === i2 || i2.dispatchEvent(new Event("selection-change", { bubbles: true, composed: true }));
  }
  onFocus() {
    var e5, t2, i2;
    !this.focusBlurInProgress && this.blurred && (this.focusBlurInProgress = true, this.blurred = false, this.keyboardDelegate.focus(), null === (e5 = this.virtualKeyboard) || void 0 === e5 || e5.setOptions(this.options), null === (t2 = this.virtualKeyboard) || void 0 === t2 || t2.enable(), "onfocus" === this.options.virtualKeyboardMode && this.executeCommand("showVirtualKeyboard"), ur(this), pr(this, { interactive: true }), null === (i2 = this.host) || void 0 === i2 || i2.dispatchEvent(new Event("focus", { bubbles: false, composed: true })), this.valueOnFocus = this.model.getValue(), this.focusBlurInProgress = false);
  }
  onBlur() {
    var e5, t2, i2;
    this.focusBlurInProgress || this.blurred || (this.focusBlurInProgress = true, this.blurred = true, this.ariaLiveText.textContent = "", Ar(this, "accept"), this.model.getValue() !== this.valueOnFocus && this.executeCommand("commit"), !(null === (e5 = window.mathlive) || void 0 === e5 ? void 0 : e5.sharedVirtualKeyboard) && /onfocus|manual/.test(this.options.virtualKeyboardMode) && this.executeCommand("hideVirtualKeyboard"), null === (t2 = this.virtualKeyboard) || void 0 === t2 || t2.disable(), null === (i2 = this.host) || void 0 === i2 || i2.dispatchEvent(new Event("blur", { bubbles: false, composed: true })), mr(this), this.focusBlurInProgress = false);
  }
  onCompositionStart(e5) {
    this.model.deleteAtoms(yr(this.model.selection)), requestAnimationFrame(() => {
      pr(this);
      const e6 = Un(this.field);
      e6 && this.keyboardDelegate.moveTo(e6.x, e6.y);
    });
  }
  onCompositionUpdate(e5) {
    !function(e6, t2) {
      const i2 = e6.at(e6.position);
      if ("composition" === i2.type)
        i2.value = t2;
      else {
        const { caret: n2 } = i2;
        i2.caret = "";
        const r2 = new jt(t2, e6.mathfield, { mode: i2.mode });
        r2.caret = n2, i2.parent.addChildAfter(r2, i2), e6.position += 1;
      }
    }(this.model, e5), mr(this);
  }
  onCompositionEnd(e5) {
    !function(e6) {
      const t2 = e6.at(e6.position);
      "composition" === t2.type && (t2.parent.removeChild(t2), e6.position -= 1);
    }(this.model), Wd(this, e5, { simulateKeystroke: true });
  }
  onResize() {
    ur(this);
  }
  onWheel(e5) {
    const t2 = 5 * e5.deltaX;
    if (!Number.isFinite(t2) || 0 === t2)
      return;
    const i2 = this.field;
    t2 < 0 && 0 === i2.scrollLeft || t2 > 0 && i2.offsetWidth + i2.scrollLeft >= i2.scrollWidth || (i2.scrollBy({ top: 0, left: t2 }), e5.preventDefault(), e5.stopPropagation());
  }
  getHTMLElement(e5) {
    let t2 = e5;
    for (; !t2.id && t2.hasChildren; )
      t2 = e5.children[0];
    if (t2.id)
      return this.element.querySelector(`[data-atom-id="${t2.id}"]`);
    throw new TypeError("Could not get an ID from atom");
  }
};
var oh;
var sh;
var lh = t() ? document.createElement("template") : null;
lh && (lh.innerHTML = '<style>\n:host { display: block; position: relative; overflow: hidden auto;}\n:host([hidden]) { display: none; }\n:host([disabled]) { opacity:  .5; }\n:host(:focus), :host(:focus-within) {\n  outline: Highlight auto 1px;    /* For Firefox */\n  outline: -webkit-focus-ring-color auto 1px;\n}\n:host([readonly]), :host([read-only]) { outline: none; }\n</style>\n<div></div><slot style="display:none"></slot>');
var uh = /* @__PURE__ */ new WeakMap();
var ch = class extends HTMLElement {
  constructor(e5) {
    i(), super(), this.attachShadow({ mode: "open" }), this.shadowRoot.append(lh.content.cloneNode(true));
    const t2 = this.shadowRoot.querySelector("slot:not([name])");
    this._slotValue = t2.assignedNodes().map((e6) => 3 === e6.nodeType ? e6.textContent : "").join("").trim(), e5 && this.setOptions(e5), this.shadowRoot.host.addEventListener("pointerdown", (e6) => this.onPointerDown(), true), this.shadowRoot.host.addEventListener("focus", () => {
      var e6;
      return null === (e6 = this._mathfield) || void 0 === e6 ? void 0 : e6.focus();
    }, true), this.shadowRoot.host.addEventListener("blur", () => {
      var e6;
      return null === (e6 = this._mathfield) || void 0 === e6 ? void 0 : e6.blur();
    }, true);
  }
  static get optionsAttributes() {
    return { "default-mode": "string", "fonts-directory": "string", "sounds-directory": "string", "horizontal-spacing-scale": "string", "math-mode-space": "string", "inline-shortcut-timeout": "string", "keypress-vibration": "on/off", "keypress-sound": "string", "plonk-sound": "string", "letter-shape-style": "string", locale: "string", "read-only": "boolean", "remove-extraneous-parentheses": "on/off", "smart-fence": "on/off", "smart-mode": "on/off", "smart-superscript": "on/off", "speech-engine": "string", "speech-engine-rate": "string", "speech-engine-voice": "string", "text-to-speech-markup": "string", "text-to-speech-rules": "string", "virtual-keyboard-layout": "string", "virtual-keyboard-mode": "string", "virtual-keyboard-theme": "string", "virtual-keyboards": "string", "use-shared-virtual-keyboard": "boolean", "shared-virtual-keyboard-target-origin": "string" };
  }
  static get observedAttributes() {
    return [...Object.keys(ch.optionsAttributes), "disabled", "readonly", "read-only"];
  }
  onPointerDown() {
    window.addEventListener("pointerup", (e5) => {
      e5.target === this && this.dispatchEvent(new MouseEvent("click", { altKey: e5.altKey, button: e5.button, buttons: e5.buttons, clientX: e5.clientX, clientY: e5.clientY, ctrlKey: e5.ctrlKey, metaKey: e5.metaKey, movementX: e5.movementX, movementY: e5.movementY, relatedTarget: e5.relatedTarget, screenX: e5.screenX, screenY: e5.screenY, shiftKey: e5.shiftKey }));
    }, { once: true });
  }
  getPlaceholderField(e5) {
    var t2;
    return null === (t2 = this._mathfield) || void 0 === t2 ? void 0 : t2.getPlaceholderField(e5);
  }
  addEventListener(e5, t2, i2) {
    return super.addEventListener(e5, t2, i2);
  }
  removeEventListener(e5, t2, i2) {
    super.removeEventListener(e5, t2, i2);
  }
  get mode() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.mode) && void 0 !== t2 ? t2 : "math";
  }
  set mode(e5) {
    this._mathfield && (this._mathfield.mode = e5);
  }
  get computeEngine() {
    if (this._mathfield)
      return this._mathfield.computeEngine;
  }
  get expression() {
    if (this._mathfield)
      return this._mathfield.expression;
  }
  set expression(e5) {
    var t2, i2;
    if (!this._mathfield)
      return;
    const n2 = null !== (i2 = null === (t2 = this.computeEngine) || void 0 === t2 ? void 0 : t2.box(e5).latex) && void 0 !== i2 ? i2 : null;
    null !== n2 && this._mathfield.setValue(n2);
  }
  get errors() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.errors) && void 0 !== t2 ? t2 : [];
  }
  get placeholders() {
    if (!this._mathfield)
      return {};
    const e5 = {};
    for (const [t2, i2] of this._mathfield.placeholders)
      e5[t2] = i2.field;
    return e5;
  }
  getOptions(e5) {
    return this._mathfield ? ua(this._mathfield.options, e5) : uh.has(this) ? ua(la(da(), uh.get(this).options), e5) : null;
  }
  getOption(e5) {
    return this.getOptions([e5])[e5];
  }
  setOptions(e5) {
    if (this._mathfield)
      this._mathfield.setOptions(e5), this._mathfield.placeholders.forEach((t2) => {
        t2.field.setOptions({ ...e5, virtualKeyboardMode: "onfocus", readOnly: false });
      });
    else if (uh.has(this)) {
      const t2 = { ...uh.get(this).options, ...e5 };
      uh.set(this, { ...uh.get(this), selection: { ranges: t2.readOnly ? [[0, 0]] : [[0, -1]] }, options: t2 });
    } else
      uh.set(this, { value: void 0, selection: { ranges: [[0, 0]] }, options: e5 });
    !function(e6) {
      const t2 = da(), i2 = e6.getOptions();
      Object.keys(ch.optionsAttributes).forEach((n2) => {
        const r2 = dh(n2);
        "on/off" === ch.optionsAttributes[n2] ? t2[r2] !== i2[r2] ? e6.setAttribute(n2, i2[r2] ? "on" : "off") : e6.removeAttribute(n2) : t2[r2] !== i2[r2] && ("boolean" === ch.optionsAttributes[n2] ? i2[r2] ? e6.setAttribute(n2, "") : e6.removeAttribute(n2) : "string" != typeof i2[r2] && "number" != typeof i2[r2] || e6.setAttribute(n2, i2[r2].toString()));
      });
    }(this);
  }
  executeCommand(e5) {
    var t2, i2;
    return null !== (i2 = null === (t2 = this._mathfield) || void 0 === t2 ? void 0 : t2.executeCommand(e5)) && void 0 !== i2 && i2;
  }
  getValue(e5, t2, i2) {
    var n2, r2;
    if (this._mathfield)
      return this._mathfield.model.getValue(e5, t2, i2);
    if (uh.has(this)) {
      let a2, o2, s2;
      if (nd(e5) ? ([a2, o2] = e5.ranges[0], s2 = t2) : id(e5) ? ([a2, o2] = e5, s2 = t2) : td(e5) && td(t2) ? (a2 = e5, o2 = t2, s2 = i2) : (a2 = 0, o2 = -1, s2 = e5), (void 0 === s2 || "latex" === s2) && 0 === a2 && -1 === o2)
        return null !== (r2 = null !== (n2 = uh.get(this).value) && void 0 !== n2 ? n2 : this.textContent) && void 0 !== r2 ? r2 : "";
    }
    return "";
  }
  setValue(e5, t2) {
    if (this._mathfield && void 0 !== e5)
      return t2 || (t2 = { suppressChangeNotifications: true }), void this._mathfield.setValue(e5, t2);
    if (uh.has(this)) {
      const t3 = uh.get(this).options;
      return void uh.set(this, { value: e5, selection: { ranges: t3.readOnly ? [[0, 0]] : [[0, -1]], direction: "forward" }, options: t3 });
    }
    const i2 = hh(this);
    uh.set(this, { value: e5, selection: { ranges: i2.readOnly ? [[0, 0]] : [[0, -1]], direction: "forward" }, options: i2 });
  }
  hasFocus() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.hasFocus()) && void 0 !== t2 && t2;
  }
  get virtualKeyboardState() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.virtualKeyboardState) && void 0 !== t2 ? t2 : "hidden";
  }
  set virtualKeyboardState(e5) {
    this._mathfield && (this._mathfield.virtualKeyboardState = e5);
  }
  focus() {
    super.focus();
  }
  blur() {
    var e5;
    null === (e5 = this._mathfield) || void 0 === e5 || e5.blur(), super.blur();
  }
  select() {
    var e5;
    null === (e5 = this._mathfield) || void 0 === e5 || e5.select();
  }
  insert(e5, t2) {
    var i2, n2;
    return null !== (n2 = null === (i2 = this._mathfield) || void 0 === i2 ? void 0 : i2.insert(e5, t2)) && void 0 !== n2 && n2;
  }
  applyStyle(e5, t2) {
    var i2;
    return null === (i2 = this._mathfield) || void 0 === i2 ? void 0 : i2.applyStyle(e5, t2);
  }
  get caretPoint() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.getCaretPoint()) && void 0 !== t2 ? t2 : null;
  }
  set caretPoint(e5) {
    var t2;
    e5 && (null === (t2 = this._mathfield) || void 0 === t2 || t2.setCaretPoint(e5.x, e5.y));
  }
  setCaretPoint(e5, t2) {
    var i2, n2;
    return null !== (n2 = null === (i2 = this._mathfield) || void 0 === i2 ? void 0 : i2.setCaretPoint(e5, t2)) && void 0 !== n2 && n2;
  }
  offsetFromPoint(e5, t2, i2) {
    return this._mathfield ? rh(this._mathfield, e5, t2, i2) : -1;
  }
  hitboxFromOffset(e5) {
    if (!this._mathfield)
      return null;
    const t2 = this._mathfield.model.at(e5);
    if (!t2)
      return null;
    const i2 = Qn(this._mathfield, t2);
    return i2 ? new DOMRect(i2.left, i2.top, i2.right - i2.left, i2.bottom - i2.top) : null;
  }
  connectedCallback() {
    var e5, t2;
    this.hasAttribute("role") || this.setAttribute("role", "textbox"), this.setAttribute("dir", "ltr"), this.hasAttribute("aria-label") || this.setAttribute("aria-label", "math input field"), this.setAttribute("contenteditable", "true"), this.setAttribute("aria-multiline", "false"), this.hasAttribute("tabindex") || this.setAttribute("tabindex", "0");
    const i2 = this.shadowRoot.querySelector("slot:not([name])");
    try {
      this._style = i2.assignedElements().filter((e6) => "style" === e6.tagName.toLowerCase()).map((e6) => e6.textContent).join("");
    } catch (e6) {
    }
    if (this._style) {
      const e6 = document.createElement("style");
      e6.textContent = this._style, this.shadowRoot.appendChild(e6);
    }
    try {
      const e6 = i2.assignedElements().filter((e7) => "script" === e7.tagName.toLowerCase() && "application/json" === e7.type).map((e7) => e7.textContent).join("");
      e6 && this.setOptions(JSON.parse(e6));
    } catch (e6) {
    }
    let n2 = "";
    if (n2 = this.hasAttribute("value") ? null !== (e5 = this.getAttribute("value")) && void 0 !== e5 ? e5 : "" : null !== (t2 = null == i2 ? void 0 : i2.assignedNodes().map((e6) => 3 === e6.nodeType ? e6.textContent : "").join("").trim()) && void 0 !== t2 ? t2 : "", this._mathfield = new ah(this.shadowRoot.querySelector(":host > div"), { eventSink: this, ...uh.has(this) ? uh.get(this).options : hh(this), value: n2 }), !uh.has(this)) {
      this.upgradeProperty("disabled"), this.upgradeProperty("readonly");
      for (const e6 of Object.keys(ch.optionsAttributes))
        this.upgradeProperty(dh(e6));
    }
    this._mathfield && this._mathfield.model ? (uh.has(this) && this._mathfield.model.deferNotifications({ content: false, selection: false }, () => {
      const e6 = uh.get(this).value;
      void 0 !== e6 && this._mathfield.setValue(e6), this._mathfield.model.selection = uh.get(this).selection, uh.delete(this);
    }), i2.addEventListener("slotchange", (e6) => {
      if (e6.target !== i2)
        return;
      const t3 = i2.assignedNodes().map((e7) => 3 === e7.nodeType ? e7.textContent : "").join("").trim();
      t3 !== this._slotValue && (this._mathfield ? this._mathfield.setValue(t3) : this.value = t3);
    }), this.dispatchEvent(new Event("mount", { cancelable: false, bubbles: true, composed: true }))) : this._mathfield = null;
  }
  disconnectedCallback() {
    if (this.dispatchEvent(new Event("unmount", { cancelable: false, bubbles: true, composed: true })), !this._mathfield)
      return;
    const e5 = ua(this._mathfield.options, Object.keys(ch.optionsAttributes).map((e6) => dh(e6)));
    uh.set(this, { value: this._mathfield.getValue(), selection: this._mathfield.model.selection, options: e5 }), this._mathfield.dispose(), this._mathfield = null;
  }
  upgradeProperty(e5) {
    if (this.hasOwnProperty(e5)) {
      const t2 = this[e5];
      delete this[e5], "readonly" !== e5 && "read-only" !== e5 || (e5 = "readOnly"), this[e5] = t2;
    }
  }
  attributeChangedCallback(e5, t2, i2) {
    if (t2 === i2)
      return;
    const n2 = null !== i2;
    switch (e5) {
      case "disabled":
        this.disabled = n2;
        break;
      case "read-only":
      case "readonly":
        this.readOnly = n2;
    }
  }
  get readonly() {
    return this.hasAttribute("readonly") || this.hasAttribute("read-only");
  }
  set readonly(e5) {
    const t2 = Boolean(e5);
    t2 ? (this.setAttribute("readonly", ""), this.setAttribute("disabled", ""), this.setAttribute("aria-readonly", "true")) : (this.removeAttribute("readonly"), this.removeAttribute("read-only"), this.removeAttribute("disabled"), this.removeAttribute("aria-readonly")), this.setOptions({ readOnly: t2 });
  }
  get disabled() {
    return this.hasAttribute("disabled");
  }
  set disabled(e5) {
    const t2 = Boolean(e5);
    t2 ? this.setAttribute("disabled", "") : this.removeAttribute("disabled"), this.setAttribute("aria-disabled", t2 ? "true" : "false"), this.setOptions({ readOnly: t2 });
  }
  get value() {
    return this.getValue();
  }
  set value(e5) {
    this.setValue(e5);
  }
  get defaultMode() {
    return this.getOption("defaultMode");
  }
  set defaultMode(e5) {
    this.setOptions({ defaultMode: e5 });
  }
  get fontsDirectory() {
    return this.getOption("fontsDirectory");
  }
  set fontsDirectory(e5) {
    this.setOptions({ fontsDirectory: e5 });
  }
  get mathModeSpace() {
    return this.getOption("mathModeSpace");
  }
  set mathModeSpace(e5) {
    this.setOptions({ mathModeSpace: e5 });
  }
  get inlineShortcutTimeout() {
    return this.getOption("inlineShortcutTimeout");
  }
  set inlineShortcutTimeout(e5) {
    this.setOptions({ inlineShortcutTimeout: e5 });
  }
  get keypressVibration() {
    return this.getOption("keypressVibration");
  }
  set keypressVibration(e5) {
    this.setOptions({ keypressVibration: e5 });
  }
  get keypressSound() {
    return this.getOption("keypressSound");
  }
  set keypressSound(e5) {
    this.setOptions({ keypressSound: e5 });
  }
  get plonkSound() {
    var e5;
    return null !== (e5 = this.getOption("plonkSound")) && void 0 !== e5 ? e5 : null;
  }
  set plonkSound(e5) {
    this.setOptions({ plonkSound: e5 });
  }
  get letterShapeStyle() {
    return this.getOption("letterShapeStyle");
  }
  set letterShapeStyle(e5) {
    this.setOptions({ letterShapeStyle: e5 });
  }
  get locale() {
    return this.getOption("locale");
  }
  set locale(e5) {
    this.setOptions({ locale: e5 });
  }
  get readOnly() {
    return this.getOption("readOnly");
  }
  set readOnly(e5) {
    this.setOptions({ readOnly: e5 });
  }
  get removeExtraneousParentheses() {
    return this.getOption("removeExtraneousParentheses");
  }
  set removeExtraneousParentheses(e5) {
    this.setOptions({ removeExtraneousParentheses: e5 });
  }
  get smartFence() {
    return this.getOption("smartFence");
  }
  set smartFence(e5) {
    this.setOptions({ smartFence: e5 });
  }
  get smartMode() {
    return this.getOption("smartMode");
  }
  set smartMode(e5) {
    this.setOptions({ smartMode: e5 });
  }
  get smartSuperscript() {
    return this.getOption("smartSuperscript");
  }
  set smartSuperscript(e5) {
    this.setOptions({ smartSuperscript: e5 });
  }
  get speechEngine() {
    return this.getOption("speechEngine");
  }
  set speechEngine(e5) {
    this.setOptions({ speechEngine: e5 });
  }
  get speechEngineRate() {
    return this.getOption("speechEngineRate");
  }
  set speechEngineRate(e5) {
    this.setOptions({ speechEngineRate: e5 });
  }
  get speechEngineVoice() {
    return this.getOption("speechEngineVoice");
  }
  set speechEngineVoice(e5) {
    this.setOptions({ speechEngineVoice: e5 });
  }
  get textToSpeechMarkup() {
    return this.getOption("textToSpeechMarkup");
  }
  set textToSpeechMarkup(e5) {
    this.setOptions({ textToSpeechMarkup: e5 });
  }
  get textToSpeechRules() {
    return this.getOption("textToSpeechRules");
  }
  set textToSpeechRule(e5) {
    this.setOptions({ textToSpeechRules: e5 });
  }
  get virtualKeyboardLayout() {
    return this.getOption("virtualKeyboardLayout");
  }
  set virtualKeyboardLayout(e5) {
    this.setOptions({ virtualKeyboardLayout: e5 });
  }
  get virtualKeyboardMode() {
    return this.getOption("virtualKeyboardMode");
  }
  set virtualKeyboardMode(e5) {
    this.setOptions({ virtualKeyboardMode: e5 });
  }
  get virtualKeyboardTheme() {
    return this.getOption("virtualKeyboardTheme");
  }
  set virtualKeyboardTheme(e5) {
    this.setOptions({ virtualKeyboardTheme: e5 });
  }
  get virtualKeyboards() {
    return this.getOption("virtualKeyboards");
  }
  set virtualKeyboards(e5) {
    this.setOptions({ virtualKeyboards: e5 });
  }
  get useSharedVirtualKeyboard() {
    return this.getOption("useSharedVirtualKeyboard");
  }
  set useSharedVirtualKeyboard(e5) {
    this.setOptions({ useSharedVirtualKeyboard: e5 });
  }
  get sharedVirtualKeyboardTargetOrigin() {
    return this.getOption("sharedVirtualKeyboardTargetOrigin");
  }
  set sharedVirtualKeyboardTargetOrigin(e5) {
    this.setOptions({ sharedVirtualKeyboardTargetOrigin: e5 });
  }
  get selection() {
    return this._mathfield ? this._mathfield.model.selection : uh.has(this) ? uh.get(this).selection : { ranges: [[0, 0]], direction: "forward" };
  }
  set selection(e5) {
    "number" == typeof e5 && (e5 = { ranges: [[e5, e5]] }), this._mathfield ? this._mathfield.model.selection = e5 : uh.has(this) ? uh.set(this, { ...uh.get(this), selection: e5 }) : uh.set(this, { value: void 0, selection: e5, options: hh(this) });
  }
  get selectionIsCollapsed() {
    const e5 = this.selection;
    return 1 === e5.ranges.length && e5.ranges[0][0] === e5.ranges[0][1];
  }
  get position() {
    return this._mathfield ? this._mathfield.model.position : uh.has(this) ? uh.get(this).selection.ranges[0][0] : 0;
  }
  set position(e5) {
    this._mathfield && (this._mathfield.model.position = e5), uh.has(this) ? uh.set(this, { ...uh.get(this), selection: { ranges: [[e5, e5]] } }) : uh.set(this, { value: void 0, selection: { ranges: [[e5, e5]] }, options: hh(this) });
  }
  getOffsetDepth(e5) {
    var t2, i2;
    return this._mathfield && null !== (i2 = (null === (t2 = this._mathfield.model.at(e5)) || void 0 === t2 ? void 0 : t2.treeDepth) - 2) && void 0 !== i2 ? i2 : 0;
  }
  get lastOffset() {
    var e5, t2;
    return null !== (t2 = null === (e5 = this._mathfield) || void 0 === e5 ? void 0 : e5.model.lastOffset) && void 0 !== t2 ? t2 : -1;
  }
};
function dh(e5) {
  return e5.toLowerCase().replace(/[^a-zA-Z\d]+(.)/g, (e6, t2) => t2.toUpperCase());
}
function hh(e5) {
  const t2 = {}, i2 = ch.optionsAttributes;
  return Object.keys(i2).forEach((n2) => {
    if (e5.hasAttribute(n2)) {
      const r2 = e5.getAttribute(n2);
      "boolean" === i2[n2] ? t2[dh(n2)] = true : "on/off" === i2[n2] ? t2[dh(n2)] = "on" === r2 || "off" !== r2 && void 0 : "number" === i2[n2] ? t2[dh(n2)] = Number.parseFloat(null != r2 ? r2 : "0") : t2[dh(n2)] = r2;
    } else
      "boolean" === i2[n2] && (t2[dh(n2)] = false);
  }), t2;
}
function mh(e5) {
  var t2, i2;
  return (null === (t2 = window.mathlive) || void 0 === t2 ? void 0 : t2.sharedVirtualKeyboard) || ([...document.querySelectorAll("math-field")].some((e6) => e6.isConnected && e6._mathfield && e6._mathfield._virtualKeyboard), window.mathlive || (window.mathlive = {}), window.mathlive.sharedVirtualKeyboard = new Qr(e5)), null === (i2 = window.mathlive) || void 0 === i2 ? void 0 : i2.sharedVirtualKeyboard;
}
function ph(e5, t2) {
  var i2;
  (t2 = null != t2 ? t2 : {}).mathstyle = null !== (i2 = t2.mathstyle) && void 0 !== i2 ? i2 : "displaystyle";
  const n2 = ln(), r2 = new nt("root", n2);
  r2.body = Dt(e5, n2, { parseMode: "math", mathstyle: t2.mathstyle });
  const a2 = r2.render(new he({ registers: n2.registers, renderPlaceholder: () => new ze(160, { maxFontSize: 1 }) }, { fontSize: 5, letterShapeStyle: n2.letterShapeStyle }, t2.mathstyle));
  return a2 ? (Pe(a2), Ie(a2), Be(a2, { classes: "ML__mathlive" }).toMarkup()) : "";
}
function fh(e5) {
  return Tt(e5, ln());
}
function gh(e5, t2 = {}) {
  return Fn(Dt(e5, ln(), { parseMode: "math", args: () => "", mathstyle: "displaystyle" }), t2);
}
function yh(e5, t2 = {}) {
  return Vn(Dt(e5, ln(), { parseMode: "math", mathstyle: "displaystyle" }), t2);
}
var bh;
function vh(e5) {
  return bh || (bh = new Qc()), bh.box(e5).latex;
}
function xh(e5) {
  i(), kh(document.body, e5);
}
function kh(e5, i2) {
  var n2, r2, a2, o2;
  const s2 = function(e6) {
    if ("string" == typeof e6 && t()) {
      const t2 = document.getElementById(e6);
      if (null === t2)
        throw new Error(`The element with ID "${e6}" could not be found.`);
      return t2;
    }
    return "string" == typeof e6 ? null : e6;
  }(e5);
  if (!s2)
    return;
  const l2 = null != i2 ? i2 : {};
  null !== (n2 = l2.renderToMarkup) && void 0 !== n2 || (l2.renderToMarkup = ph), null !== (r2 = l2.renderToMathML) && void 0 !== r2 || (l2.renderToMathML = gh), null !== (a2 = l2.renderToSpeakableText) && void 0 !== a2 || (l2.renderToSpeakableText = yh), null !== (o2 = l2.serializeToLatex) && void 0 !== o2 || (l2.serializeToLatex = vh), Fi(s2, l2);
}
t() && !(null === (oh = window.customElements) || void 0 === oh ? void 0 : oh.get("math-field")) && (window.MathfieldElement = ch, window.mathlive = { version: "0.84.0" }, null === (sh = window.customElements) || void 0 === sh || sh.define("math-field", ch));
var _h = { mathlive: "0.84.0", computeEngine: "0.7.0" };
var wh = { latexToAsciiMath: vn, asciiMathToLatex: xn, FUNCTIONS: kn.FUNCTIONS, MATH_SYMBOLS: kn.MATH_SYMBOLS, TEXT_SYMBOLS: kn.TEXT_SYMBOLS, ENVIRONMENTS: kn.ENVIRONMENTS, DEFAULT_KEYBINDINGS: kn.DEFAULT_KEYBINDINGS, getKeybindingMarkup: kn.getKeybindingMarkup };
export {
  Qc as ComputeEngine,
  ch as MathfieldElement,
  Fi as autoRenderMathInElement,
  ph as convertLatexToMarkup,
  gh as convertLatexToMathMl,
  yh as convertLatexToSpeakableText,
  wh as debug,
  $l as getVars,
  va as isEnvironmentEntry,
  pa as isFunctionEntry,
  ga as isInfixEntry,
  fa as isMatchfixEntry,
  ba as isPostfixEntry,
  ya as isPrefixEntry,
  ma as isSymbolEntry,
  mh as makeSharedVirtualKeyboard,
  xh as renderMathInDocument,
  kh as renderMathInElement,
  vh as serializeMathJsonToLatex,
  fh as validateLatex,
  _h as version
};
//# sourceMappingURL=mathlive.js.map
