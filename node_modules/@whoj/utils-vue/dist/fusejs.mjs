import Fuse from 'fuse.js';
import { ref, watch, computed } from 'vue-demi';

class FuseJS {
  loadItems(items, options) {
    this.fuse = ref(new Fuse(items, options));
    this.runSearch(this.search.value);
  }
  runSearch(search) {
    if (!this.fuse)
      return;
    if (!search) {
      this.resultsRaw.value = [];
      return;
    }
    this.resultsRaw.value = this.fuse.value.search(search);
  }
  constructor(list, options) {
    this.search = ref("");
    let locArr = [];
    if (Array.isArray(list)) {
      locArr = list;
    } else if (list) {
      locArr = list.value ?? [];
      watch(list, () => {
        this.loadItems(list.value ?? []);
      });
    }
    this.fuse = ref(new Fuse(locArr, options));
    this.resultsRaw = ref([]);
    this.noResults = computed(() => {
      return this.results.value.length === 0 && this.search.value.length > 0;
    });
    this.results = computed(() => this.resultsRaw.value.map((r) => r.item));
    watch(this.search, this.runSearch);
  }
}
function useFuseJs(list, options) {
  return new FuseJS(list, options);
}

export { FuseJS, useFuseJs };
