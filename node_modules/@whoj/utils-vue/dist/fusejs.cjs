'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const Fuse = require('fuse.js');
const vueDemi = require('vue-demi');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e["default"] : e; }

const Fuse__default = /*#__PURE__*/_interopDefaultLegacy(Fuse);

class FuseJS {
  loadItems(items, options) {
    this.fuse = vueDemi.ref(new Fuse__default(items, options));
    this.runSearch(this.search.value);
  }
  runSearch(search) {
    if (!this.fuse)
      return;
    if (!search) {
      this.resultsRaw.value = [];
      return;
    }
    this.resultsRaw.value = this.fuse.value.search(search);
  }
  constructor(list, options) {
    this.search = vueDemi.ref("");
    let locArr = [];
    if (Array.isArray(list)) {
      locArr = list;
    } else if (list) {
      locArr = list.value ?? [];
      vueDemi.watch(list, () => {
        this.loadItems(list.value ?? []);
      });
    }
    this.fuse = vueDemi.ref(new Fuse__default(locArr, options));
    this.resultsRaw = vueDemi.ref([]);
    this.noResults = vueDemi.computed(() => {
      return this.results.value.length === 0 && this.search.value.length > 0;
    });
    this.results = vueDemi.computed(() => this.resultsRaw.value.map((r) => r.item));
    vueDemi.watch(this.search, this.runSearch);
  }
}
function useFuseJs(list, options) {
  return new FuseJS(list, options);
}

exports.FuseJS = FuseJS;
exports.useFuseJs = useFuseJs;
